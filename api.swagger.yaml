openapi: 3.0.1
info:
  contact:
    email: api@fulfillmenttools.com
    name: fulfillmenttools
    url: https://fulfillmenttools.com/
  description: >-
    This is the fulfillmenttools API documentation. Visit
    https://docs.fulfillmenttools.com/ for first steps.
  termsOfService: http://swagger.io/terms/
  title: fulfillmenttools - simplifying retail complexity
  version: VERSIONLESS
servers:
  - url: https://{tenant}.api.fulfillmenttools.com
    variables:
      tenant:
        default: your-tenant-name
paths:
  /api/articles:
    get:
      deprecated: true
      description: >-
        This part of the API is deprecated. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Search articles tenant-wide based on title or tenantArticleId
      operationId: getArticles
      parameters:
        - in: query
          name: size
          required: false
          schema:
            default: 25
            maximum: 100
            minimum: 1
            type: number
        - in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - in: query
          name: facilityRef
          required: false
          schema:
            type: string
        - in: query
          name: searchTerm
          required: false
          schema:
            minLength: 1
            type: string
        - in: query
          name: locale
          required: false
          schema:
            $ref: '#/components/schemas/SupportedLocale'
        - in: query
          name: tenantArticleId
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryArticlePaginatedResult'
          description: >-
            Articles search result according to the request. The result is in
            the body.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: List articles
      tags:
        - Stocks (Inventory)
  /api/articles/{tenantArticleId}/forecasts:
    get:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />Get
        the forecast for a specific tenantArticleId
      operationId: getForecastsForArticle
      parameters:
        - in: path
          name: tenantArticleId
          required: true
          schema:
            type: string
        - in: query
          name: period
          required: false
          schema:
            enum:
              - DAILY
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ArticleStockForecast'
                type: array
          description: >-
            Forecast for the specified tenantArticleId. The result is in the
            body.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: The requested entity was not found
      summary: Get article forecast
      tags:
        - Stocks (Inventory)
      x-badges:
        - color: red
          label: ALPHA
  /api/articles/{tenantArticleId}/stockdistribution:
    get:
      deprecated: false
      description: >-
        Stock per Facility for a specific tenantArticleId, also includes the
        Tenant-Wide Summary
      operationId: getStockDistribution
      parameters:
        - in: path
          name: tenantArticleId
          required: true
          schema:
            minLength: 1
            type: string
        - explode: false
          in: query
          name: facilityServiceTypes
          required: false
          schema:
            items:
              enum:
                - SHIP_FROM_STORE
                - PICKUP
              type: string
            type: array
        - explode: false
          in: query
          name: facilityStatus
          required: false
          schema:
            items:
              enum:
                - ONLINE
                - SUSPENDED
                - OFFLINE
              type: string
            type: array
        - in: query
          name: facilityName
          required: false
          schema:
            minLength: 1
            type: string
        - explode: true
          in: query
          name: facilityIds
          required: false
          schema:
            items:
              type: string
            type: array
        - description: >-
            The channels to included under "channelAdjusted" in each summary and
            facility stock. Provide up to 50 channelRefs, specify "UNALLOCATED
            for unallocated stock."
          explode: true
          in: query
          name: channelRefs
          required: false
          schema:
            items:
              type: string
            maxItems: 50
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StockDistribution'
          description: >-
            Stock distribution was loaded & you were allowed to access it. The
            result is in the body.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: Get article stock distribution
      tags:
        - Stocks (Inventory)
  /api/audits:
    get:
      deprecated: false
      description: ''
      operationId: getAudits
      parameters:
        - in: query
          name: size
          required: false
          schema:
            type: number
        - in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - in: query
          name: entityRef
          required: false
          schema:
            type: string
        - explode: false
          in: query
          name: entityType
          required: false
          schema:
            enum:
              - PACK_JOB
              - PICK_JOB
              - PICK_RUN
              - HANDOVER_JOB
              - SHIPMENT
              - PARCEL
              - CUSTOM_SERVICE
              - SERVICE_JOB
              - LINKED_SERVICE_JOBS
              - ORDER
              - ROUTING_PLAN
              - FACILITY
              - FACILITY_GROUP
              - FACILITY_CARRIER_CONNECTION
              - FACILITY_CUSTOM_SERVICE
              - ROUTING_STRATEGY
              - STOW_JOB
            type: string
        - in: query
          name: trace
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditsResult'
          description: Paginated result containing the matching Audit entities
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: List audits
      tags:
        - Audits (Core)
  /api/availabilitychannels:
    get:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getAvailabilityChannels
      parameters:
        - in: query
          name: searchTerm
          required: false
          schema:
            type: string
        - in: query
          name: searchTermExact
          required: false
          schema:
            type: string
        - in: query
          name: strategy
          required: false
          schema:
            enum:
              - REGULAR
              - IRON_RESERVE
              - RESTRICT
            type: string
        - in: query
          name: size
          required: false
          schema:
            default: 25
            maximum: 100
            minimum: 1
            type: number
        - in: query
          name: startAfterId
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilityChannelPaginatedResult'
          description: Available Availability Channels
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: List availability channels
      tags:
        - Channel Availability (Inventory)
      x-badges:
        - color: red
          label: ALPHA
    post:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: createAvailabilityChannel
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AvailabilityChannelForCreation'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilityChannel'
          description: The created Availability Channel
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: Create availability channel
      tags:
        - Channel Availability (Inventory)
      x-badges:
        - color: red
          label: ALPHA
  /api/availabilitychannels/{availabilityChannelId}:
    delete:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Delete an existing Availability Channel. PLEASE NOTE: This will also
        delete all groups and allocations under this channel.
      operationId: deleteAvailabilityChannel
      parameters:
        - in: path
          name: availabilityChannelId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The channel has been deleted
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: The requested entity was not found
      summary: Delete availability channel
      tags:
        - Channel Availability (Inventory)
      x-badges:
        - color: red
          label: ALPHA
    get:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getAvailabilityChannelById
      parameters:
        - in: path
          name: availabilityChannelId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilityChannel'
          description: The Availability Channel
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: The requested entity was not found
      summary: Get availability channel
      tags:
        - Channel Availability (Inventory)
      x-badges:
        - color: red
          label: ALPHA
    put:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: replaceAvailabilityChannel
      parameters:
        - in: path
          name: availabilityChannelId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AvailabilityChannelForReplacement'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilityChannel'
          description: The replaced Availability Channel
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: The requested entity was not found
      summary: Update availability channel
      tags:
        - Channel Availability (Inventory)
      x-badges:
        - color: red
          label: ALPHA
  /api/availabilitychannels/{availabilityChannelId}/groups:
    get:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getGroupsUnderChannel
      parameters:
        - in: path
          name: availabilityChannelId
          required: true
          schema:
            type: string
        - in: query
          name: searchTerm
          required: false
          schema:
            type: string
        - in: query
          name: searchTermExact
          required: false
          schema:
            type: string
        - in: query
          name: size
          required: false
          schema:
            default: 25
            maximum: 100
            minimum: 1
            type: number
        - in: query
          name: startAfterId
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AvailabilityAllocationGroupPaginatedResult
          description: Available Groups
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: The requested entity was not found
      summary: List channel groups
      tags:
        - Channel Availability (Inventory)
      x-badges:
        - color: red
          label: ALPHA
    post:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: createGroupUnderChannel
      parameters:
        - in: path
          name: availabilityChannelId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/AvailabilityAllocationGroupForCreationUnderChannel
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilityAllocationGroup'
          description: The created Group
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: The requested entity was not found
      summary: Create channel group
      tags:
        - Channel Availability (Inventory)
      x-badges:
        - color: red
          label: ALPHA
  /api/availabilitychannels/{availabilityChannelId}/groups/{groupId}:
    delete:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Delete an existing Group and all its allocations under Channel
      operationId: deleteGroupUnderChannel
      parameters:
        - in: path
          name: groupId
          required: true
          schema:
            type: string
        - in: path
          name: availabilityChannelId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The Group has been deleted.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: The requested entity was not found
      summary: Delete channel group
      tags:
        - Channel Availability (Inventory)
      x-badges:
        - color: red
          label: ALPHA
    get:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />Get
        Groups under Channel by its ID
      operationId: getGroupUnderChannelById
      parameters:
        - in: path
          name: availabilityChannelId
          required: true
          schema:
            type: string
        - in: path
          name: groupId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AvailabilityAllocationGroupPaginatedResult
          description: The Group
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: The requested entity was not found
      summary: Get channel group
      tags:
        - Channel Availability (Inventory)
      x-badges:
        - color: red
          label: ALPHA
    put:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: replaceGroupUnderChannel
      parameters:
        - in: path
          name: availabilityChannelId
          required: true
          schema:
            type: string
        - in: path
          name: groupId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AvailabilityAllocationGroupForReplacement'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilityAllocationGroup'
          description: The replaced Group
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: The requested entity was not found
      summary: Update channel group
      tags:
        - Channel Availability (Inventory)
      x-badges:
        - color: red
          label: ALPHA
  /api/availabilitychannels/{availabilityChannelId}/groups/{groupId}/allocations:
    get:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getAllocationsUnderGroup
      parameters:
        - in: path
          name: groupId
          required: true
          schema:
            type: string
        - in: path
          name: availabilityChannelId
          required: true
          schema:
            type: string
        - in: query
          name: searchTerm
          required: false
          schema:
            type: string
        - in: query
          name: searchTermExact
          required: false
          schema:
            type: string
        - in: query
          name: size
          required: false
          schema:
            default: 25
            maximum: 100
            minimum: 1
            type: number
        - in: query
          name: startAfterId
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilityAllocationPaginatedResult'
          description: Available Allocations
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: The requested entity was not found
      summary: List group allocations
      tags:
        - Channel Availability (Inventory)
      x-badges:
        - color: red
          label: ALPHA
    post:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: createAllocationUnderGroup
      parameters:
        - in: path
          name: groupId
          required: true
          schema:
            type: string
        - in: path
          name: availabilityChannelId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AvailabilityAllocationForCreationUnderGroup'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilityAllocation'
          description: The created Allocation
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: The requested entity was not found
      summary: Create group allocation
      tags:
        - Channel Availability (Inventory)
      x-badges:
        - color: red
          label: ALPHA
  /api/availabilitychannels/{availabilityChannelId}/groups/{groupId}/allocations/{allocationId}:
    delete:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: deleteAllocationUnderGroup
      parameters:
        - in: path
          name: allocationId
          required: true
          schema:
            type: string
        - in: path
          name: groupId
          required: true
          schema:
            type: string
        - in: path
          name: availabilityChannelId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The Allocation has been deleted
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: The requested entity was not found
      summary: Delete group allocation
      tags:
        - Channel Availability (Inventory)
      x-badges:
        - color: red
          label: ALPHA
    get:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getAllocationUnderGroupById
      parameters:
        - in: path
          name: groupId
          required: true
          schema:
            type: string
        - in: path
          name: allocationId
          required: true
          schema:
            type: string
        - in: path
          name: availabilityChannelId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilityAllocation'
          description: The Allocation
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: The requested entity was not found
      summary: List group allocations
      tags:
        - Channel Availability (Inventory)
      x-badges:
        - color: red
          label: ALPHA
    put:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: replaceAllocationUnderGroup
      parameters:
        - in: path
          name: groupId
          required: true
          schema:
            type: string
        - in: path
          name: allocationId
          required: true
          schema:
            type: string
        - in: path
          name: availabilityChannelId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AvailabilityAllocationForReplacement'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilityAllocation'
          description: The replaced Allocation
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: The requested entity was not found
      summary: Update group allocation
      tags:
        - Channel Availability (Inventory)
      x-badges:
        - color: red
          label: ALPHA
  /api/brands:
    get:
      description: ''
      operationId: getAllBrands
      parameters:
        - description: all entities after given Id
          in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - description: number of entities to show
          in: query
          name: size
          required: false
          schema:
            default: 25
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StrippedBrands'
          description: All brands on listings for this tenant
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: List brands
      tags:
        - Processes (Core)
  /api/cancelationreasons:
    get:
      description: ''
      operationId: getCancelationReasons
      parameters:
        - description: all entities after given Id
          in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - description: number of entities to show
          in: query
          name: size
          required: false
          schema:
            default: 25
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelationReasons'
          description: >-
            Cancelation reasons were found & you were allowed to access them.
            The result is in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Cancelation reason not found
      summary: List cancelation reasons
      tags:
        - Orders Configuration (DOMS)
    post:
      operationId: postCancelationReason
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelationReasonForCreation'
        description: Create new cancelation reason
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelationReason'
          description: >-
            The cancelation reason has been successfully created. The Location
            header includes the URL of the document.
        '303':
          description: >-
            The Cancelation Reason already exists. The Location header contains
            the URL of the document.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: Create cancelation reason
      tags:
        - Orders Configuration (DOMS)
  /api/cancelationreasons/{cancelationReasonId}:
    delete:
      description: ''
      operationId: deleteCancelationReason
      parameters:
        - description: ID of the cancelation reason you intend to delete
          in: path
          name: cancelationReasonId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >-
            The cancelation reason was found, and you have been granted
            permission to delete it.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Cancelation reason not found
      summary: Delete cancelation reason
      tags:
        - Orders Configuration (DOMS)
    get:
      description: ''
      operationId: getCancelationReasonById
      parameters:
        - description: Id of the cancelation reason you wish to retrieve
          in: path
          name: cancelationReasonId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelationReason'
          description: >-
            Cancelation reason was found & you were allowed to access it. The
            result is in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Cancelation reason not found
      summary: Get cancelation reason
      tags:
        - Orders Configuration (DOMS)
    put:
      description: ''
      operationId: putCancelationReason
      parameters:
        - description: ID of the cancelation reason you intend to modify
          in: path
          name: cancelationReasonId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelationReasonForModification'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelationReason'
          description: >-
            Cancelation reason was found & you were allowed to access it. The
            result is in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Cancelation reason not found
      summary: Update cancelation reason
      tags:
        - Orders Configuration (DOMS)
  /api/carriers:
    get:
      description: ''
      operationId: getCarriers
      parameters:
        - description: all entities after given Id
          in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - description: number of entities to show
          in: query
          name: size
          required: false
          schema:
            default: 25
            type: integer
        - description: >-
            Provide the localized names and descriptions for the parcel label
            classifications. If not provided the default locale is used., for
            example de_DE.
          in: query
          name: locale
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StrippedCarriers'
          description: The current list of available carriers
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: No more elements available
      summary: List carriers
      tags:
        - Carriers (Operations)
    post:
      description: ''
      operationId: addCarrier
      parameters:
        - description: >-
            Provide the localized names and descriptions for the parcel label
            classifications. If not provided the default locale is used., for
            example de_DE.
          in: query
          name: locale
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CarrierForCreation'
        description: Carrier object
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Carrier'
          description: >-
            The carrier was successfully created. The Location header contains
            the URL of the carrier.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: Create carrier
      tags:
        - Carriers (Operations)
  /api/carriers/{carrierId}:
    get:
      description: ''
      operationId: getCarrier
      parameters:
        - description: ID of the carrier you want to get
          in: path
          name: carrierId
          required: true
          schema:
            type: string
        - description: >-
            Provide the localized names and descriptions for the parcel label
            classifications. If not provided the default locale is used., for
            example de_DE.
          in: query
          name: locale
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Carrier'
          description: >-
            Carrier was found & you were allowed to access it. The result is in
            the body.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: User not found
      summary: Get carrier
      tags:
        - Carriers (Operations)
    patch:
      description: ''
      operationId: patchCarrier
      parameters:
        - description: ID of carrier you want to patch
          in: path
          name: carrierId
          required: true
          schema:
            type: string
        - description: >-
            Provide the localized names and descriptions for the parcel label
            classifications. If not provided the default locale is used., for
            example de_DE.
          in: query
          name: locale
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CarrierPatchActions'
        description: Patch set
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Carrier'
          description: >-
            Carrier was found & patch-set has been applied. The patched entity
            is in the body.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Entity not found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Entity version conflict
      summary: Update carrier
      tags:
        - Carriers (Operations)
  /api/carriers/{carrierId}/configuration:
    get:
      description: ''
      operationId: getCarrierConfiguration
      parameters:
        - description: ID of the carrier you want to get the configuration
          in: path
          name: carrierId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/CarrierConfiguration'
                  - $ref: '#/components/schemas/GlsCarrierConfiguration'
                  - $ref: '#/components/schemas/FedexCarrierConfiguration'
                  - $ref: '#/components/schemas/BringCarrierConfiguration'
                  - $ref: '#/components/schemas/DpdChCarrierConfiguration'
                  - $ref: '#/components/schemas/DhlV2CarrierConfiguration'
                  - $ref: '#/components/schemas/VceCarrierConfiguration'
                  - $ref: '#/components/schemas/PostNlCarrierConfiguration'
                  - $ref: '#/components/schemas/SevenSendersCarrierConfiguration'
                  - $ref: '#/components/schemas/UBSendCarrierConfiguration'
          description: >-
            Carrier Configuration was found & you were allowed to access it. The
            result is in the body.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Carrier Configuration not found
      summary: Get carrier config
      tags:
        - Carriers Configuration (Operations)
    put:
      description: ''
      operationId: putCarrierConfiguration
      parameters:
        - description: ID of the carrier you want to update the configuration
          in: path
          name: carrierId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              anyOf:
                - $ref: '#/components/schemas/CarrierConfiguration'
                - $ref: '#/components/schemas/GlsCarrierConfiguration'
                - $ref: '#/components/schemas/FedexCarrierConfiguration'
                - $ref: '#/components/schemas/BringCarrierConfiguration'
                - $ref: '#/components/schemas/DpdChCarrierConfiguration'
                - $ref: '#/components/schemas/DhlV2CarrierConfiguration'
                - $ref: '#/components/schemas/VceCarrierConfiguration'
                - $ref: '#/components/schemas/PostNlCarrierConfiguration'
                - $ref: '#/components/schemas/SevenSendersCarrierConfiguration'
                - $ref: '#/components/schemas/UBSendCarrierConfiguration'
        description: Carrier Configuration
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/CarrierConfiguration'
                  - $ref: '#/components/schemas/GlsCarrierConfiguration'
                  - $ref: '#/components/schemas/FedexCarrierConfiguration'
                  - $ref: '#/components/schemas/BringCarrierConfiguration'
                  - $ref: '#/components/schemas/DpdChCarrierConfiguration'
                  - $ref: '#/components/schemas/DhlV2CarrierConfiguration'
                  - $ref: '#/components/schemas/VceCarrierConfiguration'
                  - $ref: '#/components/schemas/PostNlCarrierConfiguration'
                  - $ref: '#/components/schemas/SevenSendersCarrierConfiguration'
                  - $ref: '#/components/schemas/UBSendCarrierConfiguration'
          description: >-
            Carrier Configuration was found & you were allowed to access it. The
            result is in the body.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Carrier Configuration not found
      summary: Update carrier config
      tags:
        - Carriers Configuration (Operations)
  /api/carriers/{carrierId}/configuration/countryservicemappings:
    get:
      description: ''
      operationId: getCarrierCountryServiceMappings
      parameters:
        - description: ID of the carrier you want to get the countryservicemappings for
          in: path
          name: carrierId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CarrierCountryServiceMapping'
          description: >-
            Carrier's countryservicemappings found & you are allowed to access
            it. The result is in the body.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Carrier's countryservicemappings Configuration not found
      summary: List country service mappings
      tags:
        - Carriers Configuration (Operations)
    post:
      description: ''
      operationId: createCarrierCountryServiceMapping
      parameters:
        - description: ID of the carrier you want to create a countryservicemapping for
          in: path
          name: carrierId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CarrierCountryServiceMappingForCreation'
        description: Carrier Configuration
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CarrierCountryServiceMapping'
          description: >-
            CarrierCountryServiceMapping successfully created. The result is in
            the body.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Carrier not found
      summary: Create country service mapping
      tags:
        - Carriers Configuration (Operations)
  /api/carriers/{carrierId}/configuration/countryservicemappings/{countryServiceMappingId}:
    delete:
      description: ''
      operationId: deleteCarrierCountryServiceMapping
      parameters:
        - description: ID of the carrier you want to delete a countryservicemapping from
          in: path
          name: carrierId
          required: true
          schema:
            type: string
        - description: ID of the countryservicemapping
          in: path
          name: countryServiceMappingId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: CarrierCountryServiceMapping successfully deleted.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Carrier or CarrierCountryServiceMapping not found
      summary: Delete country service mapping
      tags:
        - Carriers Configuration (Operations)
    get:
      description: ''
      operationId: getCarrierCountryServiceMapping
      parameters:
        - description: ID of the carrier you want to get a countryservicemapping for
          in: path
          name: carrierId
          required: true
          schema:
            type: string
        - description: ID of the countryservicemapping
          in: path
          name: countryServiceMappingId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CarrierCountryServiceMapping'
          description: >-
            Carrier's countryservicemapping found & you are allowed to access
            it. The result is in the body.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Carrier's countryservicemappings Configuration not found
      summary: Get country service mapping
      tags:
        - Carriers Configuration (Operations)
    patch:
      description: ''
      operationId: updateCarrierCountryServiceMapping
      parameters:
        - description: ID of the carrier you want to update a countryservicemapping of
          in: path
          name: carrierId
          required: true
          schema:
            type: string
        - description: ID of the countryservicemapping
          in: path
          name: countryServiceMappingId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CarrierCountryServiceMappingForUpdate'
        description: Carrier Mapping for update
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CarrierCountryServiceMapping'
          description: >-
            CarrierCountryServiceMapping successfully updated. The result is in
            the body.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Carrier or CarrierCountryServiceMapping not found
      summary: Update country service mapping
      tags:
        - Carriers Configuration (Operations)
  /api/categories:
    get:
      deprecated: false
      description: ''
      operationId: getCategories
      parameters:
        - in: query
          name: size
          required: false
          schema:
            default: 25
            maximum: 100
            minimum: 1
            type: number
        - in: query
          name: startAfterId
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Category'
                type: array
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: List categories
      tags:
        - Categories (Inventory)
    post:
      deprecated: false
      description: ''
      operationId: createCategory
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryForCreation'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: Create category
      tags:
        - Categories (Inventory)
  /api/categories/{categoryId}:
    delete:
      deprecated: false
      description: ''
      operationId: deleteCategory
      parameters:
        - in: path
          name: categoryId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: Delete category
      tags:
        - Categories (Inventory)
    get:
      deprecated: false
      description: ''
      operationId: getCategory
      parameters:
        - in: path
          name: categoryId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: Get category
      tags:
        - Categories (Inventory)
    put:
      deprecated: false
      description: ''
      operationId: replaceCategory
      parameters:
        - in: path
          name: categoryId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryForUpdate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: Replace category
      tags:
        - Categories (Inventory)
  /api/categories/search:
    post:
      deprecated: false
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Search for Category
      operationId: searchCategory
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategorySearchPayload'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryPaginatedResult'
          description: Your search result
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: List categories (search)
      tags:
        - Categories (Inventory)
      x-badges:
        - color: orange
          label: BETA
  /api/configurations/capacityplanningtimeframe:
    get:
      description: ''
      operationId: getCapacityPlanningTimeframeConfiguration
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CapacityPlanningTimeframeConfiguration'
          description: >-
            Configuration was found & you were allowed to access it. The result
            is in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Configuration not found
      summary: Get capacity planning timeframe
      tags:
        - Routing Plans Configuration (DOMS)
    put:
      description: ''
      operationId: putCapacityPlanningTimeframeConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CapacityPlanningTimeframeConfiguration'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CapacityPlanningTimeframeConfiguration'
          description: Configuration was written successfully
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Configuration not found
      summary: Update capacity planning timeframe
      tags:
        - Routing Plans Configuration (DOMS)
  /api/configurations/cutofftime:
    get:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getCutoffTimeConfiguration
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CutoffTimeConfiguration'
          description: >-
            Cutoff time configuration was found & you were allowed to access it.
            The result is in the body.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Cutoff time configuration not found
      summary: Get cutoff time
      tags:
        - Picking Configuration (Operations)
      x-badges:
        - color: orange
          label: BETA
    put:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: putCutoffTimeConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CutoffTimeConfiguration'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CutoffTimeConfiguration'
          description: Cutoff time configuration was written successfully
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Cutoff time configuration not found
      summary: Update cutoff time
      tags:
        - Picking Configuration (Operations)
      x-badges:
        - color: orange
          label: BETA
  /api/configurations/deliverynote:
    get:
      operationId: getDeliveryNoteConfiguration
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryNoteConfiguration'
          description: >-
            Delivery note configuration was found & you were allowed to access
            it. The result is in the body.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Delivery note configuration not found
      summary: Get delivery note config
      tags:
        - Shipments Configuration (Operations)
    put:
      operationId: putDeliveryNoteConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeliveryNoteConfigurationForUpsert'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryNoteConfiguration'
          description: Delivery note configuration was successfully updated
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryNoteConfiguration'
          description: Delivery note configuration was successfully created
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: Update delivery note config
      tags:
        - Shipments Configuration (Operations)
  /api/configurations/domain:
    get:
      description: Returns the authentication domain.
      operationId: getDomainConfiguration
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainConfiguration'
          description: Domain config could be found in response body.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: Get domain
      tags:
        - Artifacts (Infrastructure)
    put:
      description: Updates the authentication domain.
      operationId: putDomainConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DomainConfiguration'
        description: Desired domain note configuration to create/update
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainConfiguration'
          description: The domain configuration was successfully updated.
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainConfiguration'
          description: The domain configuration was successfully created.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: Update domain
      tags:
        - Artifacts (Infrastructure)
  /api/configurations/expiry:
    get:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getExpiryConfiguration
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpiryConfiguration'
          description: config found.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: Get expiry config
      tags:
        - Expiries Configuration (Core)
      x-badges:
        - color: orange
          label: BETA
    put:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: upsertExpiryConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExpiryConfiguration'
        description: Desired configuration to create/update
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpiryConfiguration'
          description: The configuration was successfully updated.
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpiryConfiguration'
          description: The configuration was successfully created.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '409':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity version conflict
      summary: Update expiry config
      tags:
        - Expiries Configuration (Core)
      x-badges:
        - color: orange
          label: BETA
  /api/configurations/fulfillmentprocessbuffer:
    get:
      description: ''
      operationId: getFulfillmentProcessBufferConfiguration
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FulfillmentProcessBufferConfiguration'
          description: >-
            Configuration was found & you were allowed to access it. The result
            is in the body.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Configuration not found
      summary: Get fulfillment process buffer
      tags:
        - Picking Configuration (Operations)
    put:
      description: ''
      operationId: putFulfillmentProcessBufferConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FulfillmentProcessBufferConfiguration'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FulfillmentProcessBufferConfiguration'
          description: Configuration was written successfully
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Configuration not found
      summary: Update fulfillment process buffer
      tags:
        - Picking Configuration (Operations)
  /api/configurations/gdpr:
    get:
      description: ''
      operationId: getGdprConfiguration
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GdprConfiguration'
          description: >-
            Gdpr configuration was found & you were allowed to access it. The
            result is in the body.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Gdpr configuration not found
      summary: Get GDPR config
      tags:
        - Configurations (Core)
    put:
      description: ''
      operationId: putGdprConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GdprConfiguration'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GdprConfiguration'
          description: Gdpr configuration was written successfully
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Gdpr configuration not found
      summary: Update GDPR config
      tags:
        - Configurations (Core)
  /api/configurations/handover:
    get:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Returns the handover configuration for the tenant
      operationId: getHandoverConfiguration
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HandoverConfiguration'
          description: >-
            Handover configuration was found & you were allowed to access it.
            The result is in the body.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: Get handover config
      tags:
        - Handovers Configuration (Operations)
      x-badges:
        - color: orange
          label: BETA
    put:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Updates the handover configuration for the tenant. If the
        configuration does not exist, it will be created.
      operationId: upsertHandoverConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HandoverConfigurationForCreate'
        description: Desired HandoverConfiguration
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HandoverConfiguration'
          description: The handover configuration was successfully updated.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: Update handover configuration
      tags:
        - Handovers Configuration (Operations)
      x-badges:
        - color: orange
          label: BETA
  /api/configurations/handover/refusereasons:
    get:
      description: ''
      operationId: getAllRefuseReasons
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AvailableRefusedReason'
                type: array
          description: Existing refuse reasons
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: List refuse reasons
      tags:
        - Handovers Configuration (Operations)
  /api/configurations/inventory:
    get:
      deprecated: false
      description: ''
      operationId: getInventoryConfigurations
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryConfiguration'
          description: Requested Inventory Configuration
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: Get inventory config
      tags:
        - Stocks Configuration (Inventory)
    patch:
      deprecated: false
      description: ''
      operationId: upsertInventoryConfigurations
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InventoryConfigurationForPatch'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryConfiguration'
          description: Requested Inventory Configuration
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: Update inventory config
      tags:
        - Stocks Configuration (Inventory)
  /api/configurations/loadunit:
    get:
      operationId: getLoadUnitConfiguration
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoadUnitConfiguration'
          description: The load unit configuration can be found in the body.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: Get load unit config
      tags:
        - Picking Configuration (Operations)
    put:
      description: ''
      operationId: putLoadUnitConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoadUnitConfiguration'
        description: Desired load unit configuration to create/update
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoadUnitConfiguration'
          description: The load unit configuration was successfully updated.
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoadUnitConfiguration'
          description: The load unit configuration was successfully created.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: Update load unit config
      tags:
        - Picking Configuration (Operations)
  /api/configurations/locale:
    get:
      description: ''
      operationId: getLocaleConfiguration
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocaleConfiguration'
          description: The locale Configuration can be found in the body.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: Get locale config
      tags:
        - Configurations (Core)
    put:
      description: ''
      operationId: putLocaleConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocaleConfiguration'
        description: Desired default locale configuration to put
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocaleConfiguration'
          description: The locale Configuration was successfully set.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: Update locale config
      tags:
        - Configurations (Core)
  /api/configurations/notifications:
    get:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Returns the notification center configuration.
      operationId: getNotificationCenterConfig
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationCenterConfig'
          description: The notification center configuration was successfully returned.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: The requested entity was not found
      summary: Get notification config
      tags:
        - Notification Center Configuration (Core)
      x-badges:
        - color: red
          label: ALPHA
    put:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Update the notification center configuration.
      operationId: upsertNotificationCenterConfig
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/NotificationCenterConfigForUpdate'
                - allOf:
                    - $ref: '#/components/schemas/NotificationCenterConfigForCreation'
                  not:
                    required:
                      - version
                  type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationCenterConfig'
          description: Notification center configuration was successfully updated.
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationCenterConfig'
          description: Notification center configuration was successfully created.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: A version conflict occurred.
      summary: Update notification config
      tags:
        - Notification Center Configuration (Core)
      x-badges:
        - color: red
          label: ALPHA
  /api/configurations/notifications/actions:
    post:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Executes an action to manipulate the notification center
        configuration.
      operationId: executeNotificationCenterConfigAction
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/AddChannelAction'
                - $ref: '#/components/schemas/UpdateChannelByIdAction'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationCenterConfig'
          description: Notification center configuration action was successfully executed.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: A version conflict occurred.
      summary: Call notification action
      tags:
        - Notification Center Configuration (Core)
      x-badges:
        - color: red
          label: ALPHA
  /api/configurations/notifications/channels/{channelId}:
    delete:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Delete the notification channel.
      operationId: deleteNotificationCenterConfigChannel
      parameters:
        - in: path
          name: channelId
          required: true
          schema:
            type: string
        - in: query
          name: version
          required: true
          schema:
            type: number
      responses:
        '200':
          description: Notification center config channel was successfully deleted.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: The requested entity was not found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: A version conflict occurred.
      summary: Delete notification channel
      tags:
        - Notification Center Configuration (Core)
      x-badges:
        - color: red
          label: ALPHA
  /api/configurations/oidcproviders:
    get:
      deprecated: false
      description: Return a complete list of all configured OIDC providers.
      operationId: getOidcProviders
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OidcProviders'
          description: Existing oidc providers.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: Get OIDC providers
      tags:
        - OIDC Configuration (Infrastructure)
    post:
      deprecated: false
      description: >-
        Registers an external OIDC provider so the platform can interact with it
        for user authentication.
      operationId: createOidcProvider
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OidcProviderForCreation'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StrippedOidcProvider'
          description: Provider was found.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: The requested entity was not found
      summary: Create OIDC provider
      tags:
        - OIDC Configuration (Infrastructure)
  /api/configurations/oidcproviders/{oidcProviderId}:
    delete:
      deprecated: false
      description: >-
        Removes an OIDC provider configuration, disabling the platform’s ability
        to authenticate via that provider.
      operationId: deleteOidcProvider
      parameters:
        - in: path
          name: oidcProviderId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OIDC Provider was found & you were allowed to delete it.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: The requested entity was not found
      summary: Delete OIDC provider
      tags:
        - OIDC Configuration (Infrastructure)
    get:
      deprecated: false
      description: Get the configuration of a configured OIDC provider.
      operationId: getOidcProvider
      parameters:
        - in: path
          name: oidcProviderId
          required: true
          schema:
            type: string
      responses:
        '201':
          description: The users was successfully created.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: The requested entity was not found
      summary: Get OIDC provider
      tags:
        - OIDC Configuration (Infrastructure)
    patch:
      deprecated: false
      description: >-
        Change the configuration of an already configured OIDC provider. Only
        the specified values are changed.
      operationId: patchOidcProvider
      parameters:
        - in: path
          name: oidcProviderId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OidcProviderForPatch'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StrippedOidcProvider'
          description: Provider was patched successfully
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: The requested entity was not found
      summary: Update OIDC provider
      tags:
        - OIDC Configuration (Infrastructure)
    put:
      deprecated: false
      description: >-
        Change the configuration of an already configured OIDC provider. The
        configuration has to contain all necessary values.
      operationId: updateOidcProvider
      parameters:
        - in: path
          name: oidcProviderId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OidcProviderForUpdate'
        required: true
      responses:
        '200':
          description: Provider was updated successfully
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: The requested entity was not found
      summary: Update OIDC provider
      tags:
        - OIDC Configuration (Infrastructure)
  /api/configurations/operativerestowing:
    get:
      operationId: getOperationalRestowingConfigurations
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationalRestowingConfigurations'
          description: Configuration of all restow item related things
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: Get restow config
      tags:
        - Restowing Configuration (Operations)
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      x-badges:
        - color: red
          label: ALPHA
    patch:
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: putOperationalRestowingConfigurations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OperationalRestowingConfigurations'
        description: create/update operational restowing configurations
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationalRestowingConfigurations'
          description: The restowing configurations were successfully updated.
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationalRestowingConfigurations'
          description: The restowing configurations were successfully created.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: Update restow config
      tags:
        - Restowing Configuration (Operations)
      x-badges:
        - color: red
          label: ALPHA
  /api/configurations/operativeservice:
    get:
      operationId: getOperativeServiceConfiguration
      parameters:
        - description: >-
            Provide the localized names and descriptions for operative service
            configuration.
             If not provided the default locale is used. for
             example de_DE.
          in: query
          name: locale
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperativeServiceConfiguration'
          description: Central Configuration of all Service related operations
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: Get operative service config
      tags:
        - Services Configuration (Operations)
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      x-badges:
        - color: red
          label: ALPHA
    put:
      operationId: upsertOperativeServiceConfigurations
      parameters:
        - description: >-
            Provide the localized names and descriptions for the operative
            service configuration.
             If not provided the default locale is used. for
             example de_DE.
          in: query
          name: locale
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OperativeServiceConfigurationForUpsert'
        description: create/update operative service configuration
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperativeServiceConfiguration'
          description: The operative service configuration was successfully updated.
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperativeServiceConfiguration'
          description: The operative service configuration was successfully created.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: Update operative service config
      tags:
        - Services Configuration (Operations)
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      x-badges:
        - color: red
          label: ALPHA
  /api/configurations/ordercancelation:
    get:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getOrderCancelationConfiguration
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderCancelationConfiguration'
          description: The Order Cancelation Configuration can be found in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: Get order cancelation config
      tags:
        - Routing Plans Configuration (DOMS)
      x-badges:
        - color: orange
          label: BETA
    put:
      description: ''
      operationId: putOrderCancelationConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderCancelationConfiguration'
        description: Desired order cancelation configuration to create/update
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderCancelationConfiguration'
          description: The order cancelation configuration was successfully updated.
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderCancelationConfiguration'
          description: The order cancelation configuration was successfully created.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: Update order cancelation config
      tags:
        - Routing Plans Configuration (DOMS)
  /api/configurations/orderrouting:
    get:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getOrderRoutingConfiguration
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderRoutingConfiguration'
          description: The Order Routing Configuration can be found in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: Get order routing config
      tags:
        - Routing Plans Configuration (DOMS)
      x-badges:
        - color: orange
          label: BETA
    put:
      description: ''
      operationId: putOrderRoutingConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderRoutingConfiguration'
        description: Desired order routing configuration to create/update
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderRoutingConfiguration'
          description: The order routing configuration was successfully updated.
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderRoutingConfiguration'
          description: The order routing configuration was successfully created.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: Update order routing config
      tags:
        - Routing Plans Configuration (DOMS)
  /api/configurations/packing:
    get:
      operationId: getPackingConfigurations
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PackingConfigurations'
          description: Central Configuration of all packing related things
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: Get packing config
      tags:
        - Packing Configuration (Operations)
    patch:
      description: ''
      operationId: upsertPackingConfigurations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PackingConfigurations'
        description: create/update packing central configuration
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PackingConfigurations'
          description: The packing central configuration was successfully updated.
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PackingConfigurations'
          description: The packing central configuration was successfully created.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: Update packing config
      tags:
        - Packing Configuration (Operations)
  /api/configurations/packing/containerrequired:
    get:
      deprecated: true
      description: >-
        This part of the API is deprecated. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Deprecated, will be replaced with /api/configurations/packing
      operationId: getPackingContainerRequirement
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PackingContainerRequiredConfiguration'
          description: The requirement of containers in packing can be found in the body.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: Get packing container requiremed config
      tags:
        - Packing Configuration (Operations)
    put:
      deprecated: true
      description: >-
        This part of the API is deprecated. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Deprecated, will be replaced with /api/configurations/packing
      operationId: putPackingContainerRequirement
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PackingContainerRequiredConfiguration'
        description: Validation picking scan code to activate/deactivate
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PackingContainerRequiredConfiguration'
          description: >-
            The packing container requirement configuration was successfully
            updated.
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PackingContainerRequiredConfiguration'
          description: >-
            The packing container requirement configuration was successfully
            created.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: Update packing container required config
      tags:
        - Packing Configuration (Operations)
  /api/configurations/picking:
    get:
      operationId: getPickingConfigurations
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PickingConfigurations'
          description: Central Configuration of all picking related things
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: Get picking config
      tags:
        - Picking Configuration (Operations)
    patch:
      description: ''
      operationId: putPickingConfigurations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PickingConfigurations'
        description: Update picking central configuration
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PickingConfigurations'
          description: The picking central configuration was successfully updated.
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PickingConfigurations'
          description: The picking central configuration was successfully created.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: Update picking config
      tags:
        - Picking Configuration (Operations)
  /api/configurations/pickingtimes:
    get:
      description: ''
      operationId: getDefaultPickingTimesConfiguration
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultPickingTimesConfiguration'
          description: Picking Times config found.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: Get picking times
      tags:
        - Picking Configuration (Operations)
    put:
      description: ''
      operationId: putDefaultPickingTimesConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DefaultPickingTimesConfiguration'
        description: Desired default picking times configuration to create/update
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultPickingTimesConfiguration'
          description: The default picking times configuration was successfully updated.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Configuration version conflict
      summary: Update picking times
      tags:
        - Picking Configuration (Operations)
  /api/configurations/promises:
    get:
      description: ''
      operationId: getPromisesConfiguration
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PromisesConfiguration'
          description: >-
            Promises configuration was found & you were allowed to access it.
            The result is in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Promises configuration not found
      summary: List promises
      tags:
        - Orders Configuration (DOMS)
    put:
      description: ''
      operationId: putPromisesConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PromisesConfiguration'
        description: Desired promises configuration to put
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PromisesConfiguration'
          description: The promisesConfiguration was successfully put.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: Change promises config
      tags:
        - Orders Configuration (DOMS)
  /api/configurations/return:
    get:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Returns the current return configuration for the tenant.
      operationId: getReturnConfiguration
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocalizedReturnConfiguration'
          description: Return config found.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: Get returns config
      tags:
        - Returns Configuration (Operations)
      x-badges:
        - color: orange
          label: BETA
    put:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Updates the return configuration for the tenant. If no configuration
        exists, it will be created.
      operationId: upsertReturnConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReturnConfiguration'
        description: Desired return configuration to create/update
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocalizedReturnConfiguration'
          description: The return configuration was successfully updated.
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocalizedReturnConfiguration'
          description: The return configuration was successfully created.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '409':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity version conflict
      summary: Update returns config
      tags:
        - Returns Configuration (Operations)
      x-badges:
        - color: orange
          label: BETA
  /api/configurations/returnnote:
    get:
      operationId: getReturnNoteConfiguration
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReturnNoteConfiguration'
          description: Return note config could be found in response body.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: Get return note config
      tags:
        - Shipments Configuration (Operations)
    put:
      description: ''
      operationId: putReturnNoteConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReturnNoteConfigurationForUpsert'
        description: Desired return note configuration to create/update
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReturnNoteConfiguration'
          description: The return note configuration was successfully updated.
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReturnNoteConfiguration'
          description: The return note configuration was successfully created.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: Update return note config
      tags:
        - Shipments Configuration (Operations)
  /api/configurations/routing:
    get:
      description: ''
      operationId: getRoutingConfiguration
      parameters:
        - description: Provide  to get an older version of the configuration
          in: query
          name: version
          schema:
            type: number
        - description: >-
            Provide the localized names and descriptions for the routing
            configuration. If not provided the default locale is used., for
            example de_DE.
          in: query
          name: locale
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingConfiguration'
          description: >-
            Routing configuration was found & you were allowed to access it. The
            result is in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Routing configuration not found
      summary: Get routing config
      tags:
        - Routing Plans Configuration (DOMS)
    patch:
      description: >-
        Important: You can only change the name and the description for fences,
        ratings and prioritizations of type CUSTOM. For Fences and Ratings
        provided by fulfillmenttools you can not change the fields 'name' and
        'description'.
      operationId: patchRoutingConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutingConfigurationsPatchActions'
        description: Patch set
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingConfiguration'
          description: Routing configuration was found & patch-set has been applied.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found, for more information please look at details.
        '409':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity version conflict
      summary: Update routing config
      tags:
        - Routing Plans Configuration (DOMS)
    put:
      description: >-
        Important: You can only change the name and the description for fences,
        ratings and prioritizations of type CUSTOM. For Fences and Ratings
        provided by fulfillmenttools you can not change the fields 'name' and
        'description'. <br> Also you can not delete an existing fulfillmenttools
        Fence or Rating by calling this endpoint.
      operationId: putRoutingConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutingConfiguration'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingConfiguration'
          description: Routing configuration was written successfully
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Routing configuration not found
      summary: Update routing config
      tags:
        - Routing Plans Configuration (DOMS)
  /api/configurations/routing/manualreroute:
    get:
      deprecated: true
      description: >-
        This part of the API is deprecated. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Deprecated, use GlobalManualRerouteConfiguration in
        /api/configurations/routing
      operationId: getManualRerouteConfiguration
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManualRerouteConfiguration'
          description: >-
            Manual reroute configuration was found & you were allowed to access
            it. The result is in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Manual reroute configuration not found
      summary: Get manual reroute config
      tags:
        - Routing Plans Configuration (DOMS)
    put:
      deprecated: true
      description: >-
        This part of the API is deprecated. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Deprecated, use GlobalManualRerouteConfiguration in
        /api/configurations/routing
      operationId: putManualRerouteConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManualRerouteConfiguration'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManualRerouteConfiguration'
          description: Manual order reroute configuration was written successfully
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Reroute configuration not found
      summary: Update manual reroute config
      tags:
        - Routing Plans Configuration (DOMS)
  /api/configurations/routing/rerouteshortpick:
    get:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getRerouteShortPickConfiguration
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RerouteShortPickConfiguration'
          description: >-
            Reroute short pick configuration was found & you were allowed to
            access it. The result is in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Reroute configuration not found
      summary: Get reroute short pick config
      tags:
        - Routing Plans Configuration (DOMS)
      x-badges:
        - color: orange
          label: BETA
    put:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: putRerouteShortPickConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RerouteShortPickConfiguration'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RerouteShortPickConfiguration'
          description: Reroute short pick configuration was written successfully
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Reroute short pick configuration not found
      summary: Update reroute short pick config
      tags:
        - Routing Plans Configuration (DOMS)
      x-badges:
        - color: orange
          label: BETA
  /api/configurations/routing/reroutetimetriggered:
    get:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getRerouteTimeTriggeredConfiguration
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RerouteTimeTriggeredConfiguration'
          description: >-
            Reroute time triggered configuration was found & you were allowed to
            access it. The result is in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Reroute configuration not found
      summary: Get reroute time triggered config
      tags:
        - Routing Plans Configuration (DOMS)
      x-badges:
        - color: orange
          label: BETA
    put:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: putRerouteTimeTriggeredConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RerouteTimeTriggeredConfiguration'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RerouteTimeTriggeredConfiguration'
          description: Reroute time triggered configuration was written successfully
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Reroute configuration not found
      summary: Update reroute time triggered config
      tags:
        - Routing Plans Configuration (DOMS)
      x-badges:
        - color: orange
          label: BETA
  /api/configurations/routing/toolkit/fences:
    get:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getToolkitFences
      parameters:
        - description: all entities
          in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - description: number of entities to show
          in: query
          name: size
          required: false
          schema:
            default: 25
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToolkitFencesTransporter'
          description: The current list of available toolkit fences
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: No more elements available
      summary: List toolkit fences
      tags:
        - Routing Plans Configuration (DOMS)
      x-badges:
        - color: orange
          label: BETA
    post:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: postToolkitFence
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ToolkitFenceForCreation'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ToolkitFence'
          description: Toolkit Fence was created successfully.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: Create toolkit fence
      tags:
        - Routing Plans Configuration (DOMS)
      x-badges:
        - color: orange
          label: BETA
  /api/configurations/routing/toolkit/fences/{toolkitFenceId}:
    delete:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: deleteToolkitFence
      parameters:
        - description: ID of the toolkit fence you want to delete
          in: path
          name: toolkitFenceId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Toolkit fence was found & you were allowed to delete it.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Toolkit fence not found
      summary: Delete toolkit fence
      tags:
        - Routing Plans Configuration (DOMS)
      x-badges:
        - color: orange
          label: BETA
    get:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getToolkitFenceById
      parameters:
        - description: Id of the toolkit fence you want to get
          in: path
          name: toolkitFenceId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToolkitFence'
          description: >-
            ToolkitFence was found & you were allowed to access it. The result
            is in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: User not found
      summary: Get toolkit fence
      tags:
        - Routing Plans Configuration (DOMS)
      x-badges:
        - color: orange
          label: BETA
    put:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: putToolkitFence
      parameters:
        - description: ID of the toolkit fence you want to update
          in: path
          name: toolkitFenceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ToolkitFenceForModification'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToolkitFence'
          description: >-
            Toolkit fence was found & you were allowed to access it. The result
            is in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Toolkit fence not found
      summary: Update toolkit fence
      tags:
        - Routing Plans Configuration (DOMS)
      x-badges:
        - color: orange
          label: BETA
  /api/configurations/routing/toolkit/ratings:
    get:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getToolkitRatings
      parameters:
        - description: all entities
          in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - description: number of entities to show
          in: query
          name: size
          required: false
          schema:
            default: 25
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToolkitRatingTransporter'
          description: The current list of available toolkit fences
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: No more elements available
      summary: List toolkit ratings
      tags:
        - Routing Plans Configuration (DOMS)
      x-badges:
        - color: orange
          label: BETA
    post:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: postToolkitRating
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ToolkitRatingForCreation'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ToolkitRating'
          description: Toolkit Rating was created successfully.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: Creates toolkit rating
      tags:
        - Routing Plans Configuration (DOMS)
      x-badges:
        - color: orange
          label: BETA
  /api/configurations/routing/toolkit/ratings/{toolkitRatingId}:
    delete:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: deleteToolkitRating
      parameters:
        - description: ID of the toolkit rating you want to delete
          in: path
          name: toolkitRatingId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Toolkit rating was found & you were allowed to delete it.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Toolkit rating not found
      summary: Delete toolkit rating
      tags:
        - Routing Plans Configuration (DOMS)
      x-badges:
        - color: orange
          label: BETA
    get:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getToolkitRatingById
      parameters:
        - description: Id of the tag you want to get
          in: path
          name: toolkitRatingId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToolkitRating'
          description: >-
            ToolkitRating was found & you were allowed to access it. The result
            is in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: User not found
      summary: Get toolkit rating
      tags:
        - Routing Plans Configuration (DOMS)
      x-badges:
        - color: orange
          label: BETA
    put:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: putToolkitRating
      parameters:
        - description: ID of the toolkit rating you want to update
          in: path
          name: toolkitRatingId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ToolkitRatingForModification'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToolkitRating'
          description: >-
            Toolkit rating was found & you were allowed to access it. The result
            is in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Toolkit rating not found
      summary: Update toolkit rating
      tags:
        - Routing Plans Configuration (DOMS)
      x-badges:
        - color: orange
          label: BETA
  /api/configurations/stock:
    get:
      description: ''
      operationId: getStockConfiguration
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StockConfiguration'
          description: StockConfiguration config found.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: Get stock config
      tags:
        - Stocks Configuration (Inventory)
    put:
      description: ''
      operationId: putStockConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StockConfiguration'
        description: Desired stock configuration to put
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StockConfiguration'
          description: The stockConfiguration was successfully created.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: Update stock config
      tags:
        - Stocks Configuration (Inventory)
  /api/configurations/substitution:
    get:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getSubstitutionConfiguration
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubstitutionConfiguration'
          description: Substitution config found.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: Get substitution config
      tags:
        - Picking Configuration (Operations)
      x-badges:
        - color: orange
          label: BETA
    put:
      description: ''
      operationId: putSubstitutionConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubstitutionConfiguration'
        description: Desired substitution configuration to create/update
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubstitutionConfiguration'
          description: The substitution configuration was successfully updated.
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubstitutionConfiguration'
          description: The substitution configuration was successfully created.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Facility version conflict
      summary: Update substitution config
      tags:
        - Picking Configuration (Operations)
  /api/configurations/supportedlocales:
    get:
      description: ''
      operationId: getLocales
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupportedLocales'
          description: The supported locales can be found in the body.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: List supported locales
      tags:
        - Configurations (Core)
  /api/configurations/tags/handoverjob:
    get:
      description: ''
      operationId: getHandoverJobTagConfiguration
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HandoverJobTagConfiguration'
          description: handoverJob tag config is in response body.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: Get handover jobs tag config
      tags:
        - Handovers Configuration (Operations)
    put:
      description: ''
      operationId: putHandoverTagConfigurations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HandoverJobTagConfiguration'
        description: Desired Tag Configuration for HandoverJobs
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HandoverJobTagConfiguration'
          description: The handoverjob tag configuration was successfully updated.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: Update handover jobs tag config
      tags:
        - Handovers Configuration (Operations)
  /api/configurations/tags/order:
    get:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getOrderTagConfiguration
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderTagConfiguration'
          description: order tag config is in response body.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: Get order tag configuration
      tags:
        - Orders Configuration (DOMS)
      x-badges:
        - color: orange
          label: BETA
    put:
      description: ''
      operationId: putOrderTagConfigurations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderTagConfiguration'
        description: Desired Tag Configuration for orders
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderTagConfiguration'
          description: The order tag configuration was successfully updated.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: Update order tag configuration
      tags:
        - Orders Configuration (DOMS)
  /api/configurations/tags/packjob:
    get:
      description: ''
      operationId: getPackJobTagConfiguration
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PackJobTagConfiguration'
          description: Packjob tag config is in response body.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: Get pack jobs tag config
      tags:
        - Packing Configuration (Operations)
    put:
      description: ''
      operationId: putPackJobTagConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PackJobTagConfiguration'
        description: Desired PackJobTagConfiguration
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PackJobTagConfiguration'
          description: The packing configuration was successfully updated.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: Update pack jobs tag config
      tags:
        - Packing Configuration (Operations)
  /api/configurations/tags/parcel:
    get:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Returns the tag configuration for parcels
      operationId: getParcelTagConfiguration
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParcelTagConfiguration'
          description: tag config is in response body.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: Get parcel tag config
      tags:
        - Shipments Configuration (Operations)
      x-badges:
        - color: orange
          label: BETA
    put:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Updates the tag configuration for parcels.
      operationId: putParcelTagConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ParcelTagConfigurationForUpsert'
        description: Desired Tag Configuration for Parcels
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParcelTagConfiguration'
          description: The tag configuration was successfully updated.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: Update parcel tag config
      tags:
        - Shipments Configuration (Operations)
      x-badges:
        - color: orange
          label: BETA
  /api/configurations/tags/pickjob:
    get:
      description: ''
      operationId: getPickJobTagConfiguration
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PickJobTagConfiguration'
          description: pickjob tag config is in response body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: Get pick job tag config
      tags:
        - Picking Configuration (Operations)
    put:
      description: ''
      operationId: putPickJobTagConfigurations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PickJobTagConfiguration'
        description: Desired Tag Configuration for Pickjobs
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PickJobTagConfiguration'
          description: The packing configuration was successfully updated.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: Update pick job tag config
      tags:
        - Picking Configuration (Operations)
  /api/configurations/tenant:
    get:
      description: ''
      operationId: getTenantConfiguration
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantConfiguration'
          description: >-
            Tenant configuration was found & you were allowed to access it. The
            result is in the body.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Tenant configuration not found
      summary: Get tenant config
      tags:
        - Configurations (Core)
    put:
      description: Upsert tenant configuration
      operationId: putTenantConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TenantConfigurationForUpsert'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantConfiguration'
          description: Tenant configuration was written successfully
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Tenant configuration not found
      summary: Update tenant config
      tags:
        - Configurations (Core)
  /api/configurations/tenantconnector:
    get:
      deprecated: false
      description: ''
      operationId: getTenantConnectorConfigurations
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantConnectorConfigurations'
          description: >-
            Configuration was found & you were allowed to access it. The result
            is in the body.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: configuration not found
      summary: Get tenant connector config
      tags:
        - Artifacts (Infrastructure)
  /api/configurations/transittime:
    get:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getTransitTimeConfiguration
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransitTimeConfiguration'
          description: >-
            Transit time configuration was found & you were allowed to access
            it. The result is in the body.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Cutoff time configuration not found
      summary: Get transit time config
      tags:
        - Carriers Configuration (Operations)
      x-badges:
        - color: orange
          label: BETA
    put:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: putTransitTimeConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransitTimeConfigurationForUpsert'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransitTimeConfiguration'
          description: Transit time configuration was written successfully
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Transit time configuration not found
      summary: Update transit time config
      tags:
        - Carriers (Operations)
      x-badges:
        - color: orange
          label: BETA
  /api/customservices:
    get:
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getCustomServices
      parameters:
        - description: all entities after given Id
          in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - description: number of entities to show
          in: query
          name: size
          required: false
          schema:
            default: 25
            type: integer
        - description: tenantCustomServiceId to filter for
          in: query
          name: tenantCustomServiceId
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StrippedCustomServices'
          description: Custom service config could be found in response body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: List custom services
      tags:
        - Custom Services (Core)
      x-badges:
        - color: red
          label: ALPHA
    post:
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: createCustomService
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomServiceForCreation'
        description: Desired custom service to create
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomService'
          description: The custom service was successfully updated.
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomService'
          description: The custom service was successfully created.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: Create custom service
      tags:
        - Custom Services (Core)
      x-badges:
        - color: red
          label: ALPHA
  /api/customservices/{customServiceId}:
    get:
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getCustomService
      parameters:
        - description: ID of custom service you want to get
          in: path
          name: customServiceId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomService'
          description: Custom service config could be found in response body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: Get custom service
      tags:
        - Custom Services (Core)
      x-badges:
        - color: red
          label: ALPHA
    patch:
      operationId: patchCustomService
      parameters:
        - description: ID of custom service you want to patch
          in: path
          name: customServiceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomServicePatchActions'
        description: Patch set
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomService'
          description: >-
            custom service was found & patch-set has been applied. The patched
            custom service is in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: custom service not found
        '409':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: custom service version conflict
      summary: Update custom service
      tags:
        - Custom Services (Core)
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      x-badges:
        - color: red
          label: ALPHA
  /api/customservices/{customServiceId}/additionalinformation:
    post:
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: createCustomServiceAdditionalInformation
      parameters:
        - description: ID of custom service you want to create service job for
          in: path
          name: customServiceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdditionalInformationForCreation'
        description: Desired custom service to create
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomService'
          description: The custom service was successfully updated.
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomService'
          description: The custom service was successfully created.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: Create additional information
      tags:
        - Custom Services (Core)
      x-badges:
        - color: red
          label: ALPHA
  /api/customservices/{customServiceId}/additionalinformation/{additionalInformationId}:
    delete:
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: deleteAdditionalInfo
      parameters:
        - description: ID of custom service
          in: path
          name: customServiceId
          required: true
          schema:
            type: string
        - description: ID of additional information you want to delete
          in: path
          name: additionalInformationId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomService'
          description: The custom service was successfully updated.
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomService'
          description: The custom service was successfully created.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: Delete additional information
      tags:
        - Custom Services (Core)
      x-badges:
        - color: red
          label: ALPHA
    put:
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: updateCustomServiceAdditionalInformation
      parameters:
        - description: ID of custom service
          in: path
          name: customServiceId
          required: true
          schema:
            type: string
        - description: ID of additional information you want to put
          in: path
          name: additionalInformationId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdditionalInformationForCreation'
        description: Desired custom service to create
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomService'
          description: The custom service was successfully updated.
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomService'
          description: The custom service was successfully created.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: Update additional information
      tags:
        - Custom Services (Core)
      x-badges:
        - color: red
          label: ALPHA
  /api/deliverynotes:
    post:
      operationId: createDeliveryNote
      parameters:
        - description: >-
            Provide the localized values for the delivery note. If not provided
            the default locale is used. For example de_DE
          in: query
          name: locale
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeliveryNote'
        required: true
      responses:
        '201':
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/DeliveryNote'
          description: Successfully created the delivery note.
        '401':
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: Create delivery note
      tags:
        - Shipments (Operations)
  /api/documents/{documentId}/file:
    get:
      description: ''
      operationId: downloadProcessDocument
      parameters:
        - in: path
          name: documentId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The document with given id
      summary: Get file
      tags:
        - Processes (Core)
  /api/documentSet/{documentSetRef}:
    get:
      deprecated: true
      description: Deprecated, use /api/documentsets/{documentSetRef} instead
      operationId: getDocumentSetDeprecated
      parameters:
        - description: Reference to the entity you want to get
          in: path
          name: documentSetRef
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentSet'
          description: Documents were found. The results are in the body.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: Get document set
      tags:
        - Document Sets (Core)
  /api/documentSet/{documentSetRef}/documents:
    post:
      deprecated: true
      description: Deprecated, use /api/documentsets/{documentSetRef}/documents instead
      operationId: addDocumentDeprecated
      parameters:
        - description: Reference to the documentSet you want to add a file to
          in: path
          name: documentSetRef
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExternalPrintableDocumentForCreation'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrintableDocument'
          description: Document was found. The results are in the body.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: Create document
      tags:
        - Document Sets (Core)
  /api/documentSet/{documentSetRef}/documents/{documentRef}:
    patch:
      deprecated: true
      description: >-
        Deprecated, use
        /api/documentsets/{documentSetRef}/documents/{documentRef} instead
      operationId: updateDocumentDeprecated
      parameters:
        - description: Reference to the documentSet you want to update
          in: path
          name: documentSetRef
          required: true
          schema:
            type: string
        - description: Reference to the single document you want to update
          in: path
          name: documentRef
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrintableDocumentForUpdate'
        description: PartialDocument
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrintableDocument'
          description: Document was found. The results are in the body.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: Update document
      tags:
        - Document Sets (Core)
  /api/documentSet/{documentSetRef}/documents/{documentRef}/file:
    get:
      description: ''
      operationId: downloadDocumentDeprecated
      parameters:
        - description: Reference to the documentSet you want to download a file from
          in: path
          name: documentSetRef
          required: true
          schema:
            type: string
        - description: Reference to the single document you want to download
          in: path
          name: documentRef
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The document as a stream
      summary: Get file
      tags:
        - Document Sets (Core)
    put:
      deprecated: true
      description: >-
        Deprecated, use
        /api/documentsets/{documentSetRef}/documents/{documentRef}/file instead
      operationId: addContentToDocumentDeprecated
      parameters:
        - description: Reference to the documentSet you want to update
          in: path
          name: documentSetRef
          required: true
          schema:
            type: string
        - description: Reference to the single document you want to update
          in: path
          name: documentRef
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExternalDocumentContentForUpdate'
        description: Document Content with id and version
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrintableDocument'
          description: Changed Document
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: Update file
      tags:
        - Document Sets (Core)
  /api/documentsets/{documentSetRef}:
    get:
      description: ''
      operationId: getDocumentSet
      parameters:
        - description: Reference to the entity you want to get
          in: path
          name: documentSetRef
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentSet'
          description: Documents were found. The results are in the body.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: Get document set
      tags:
        - Document Sets (Core)
  /api/documentsets/{documentSetRef}/documents:
    post:
      operationId: addDocument
      parameters:
        - description: Reference to the documentSet you want to add a file to
          in: path
          name: documentSetRef
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExternalPrintableDocumentForCreation'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrintableDocument'
          description: Document was found. The results are in the body.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: Create document
      tags:
        - Document Sets (Core)
  /api/documentsets/{documentSetRef}/documents/{documentRef}:
    patch:
      operationId: updateDocument
      parameters:
        - description: Reference to the documentSet you want to update
          in: path
          name: documentSetRef
          required: true
          schema:
            type: string
        - description: Reference to the single document you want to update
          in: path
          name: documentRef
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrintableDocumentForUpdate'
        description: PartialDocument
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrintableDocument'
          description: Document was found. The results are in the body.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: Update document
      tags:
        - Document Sets (Core)
  /api/documentsets/{documentSetRef}/documents/{documentRef}/file:
    get:
      description: ''
      operationId: downloadDocument
      parameters:
        - description: Reference to the documentSet you want to download a file from
          in: path
          name: documentSetRef
          required: true
          schema:
            type: string
        - description: Reference to the single document you want to download
          in: path
          name: documentRef
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The document as a stream
      summary: Get file
      tags:
        - Document Sets (Core)
    put:
      operationId: addContentToDocument
      parameters:
        - description: Reference to the documentSet you want to update
          in: path
          name: documentSetRef
          required: true
          schema:
            type: string
        - description: Reference to the single document you want to update
          in: path
          name: documentRef
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExternalDocumentContentForUpdate'
        description: Document Content with id and version
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrintableDocument'
          description: Changed Document
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: Update file
      tags:
        - Document Sets (Core)
  /api/expiries:
    get:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getExpiries
      parameters:
        - description: Status to filter the results
          in: query
          name: status
          required: false
          schema:
            $ref: '#/components/schemas/ExpiryEntityStatus'
        - description: ProcessRef to filter the results
          in: query
          name: processRef
          required: false
          schema:
            type: string
        - description: >-
            StartDate to filter the results. Expiry Date of results is after or
            equals the given value
          in: query
          name: startDate
          required: false
          schema:
            example: 2020-02-03T08:45:51.525Z
            format: date-time
            type: string
        - description: >-
            EndDate to filter the results. Expiry Date of results is before or
            equals the given value
          in: query
          name: endDate
          required: false
          schema:
            type: string
        - description: entity to start after
          in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - description: number of entities to show
          in: query
          name: size
          required: false
          schema:
            default: 25
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ExpiryEntity'
                type: array
          description: found entities in the result.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: Get expiries
      tags:
        - Expiries (Core)
      x-badges:
        - color: orange
          label: BETA
    post:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: createExpiry
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExpiryEntityForCreation'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpiryEntity'
          description: created entity in the result.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: Create expiry
      tags:
        - Expiries (Core)
      x-badges:
        - color: orange
          label: BETA
  /api/expiries/{expiryId}:
    get:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getExpiry
      parameters:
        - description: id for the searched entity
          in: path
          name: expiryId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpiryEntity'
          description: found entity in the result.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: Get expiry
      tags:
        - Expiries (Core)
      x-badges:
        - color: orange
          label: BETA
    patch:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: updateExpiry
      parameters:
        - description: id of the entity to be changed
          in: path
          name: expiryId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExpiryEntityForUpdate'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpiryEntity'
          description: changed entity in the result.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: Update expiry
      tags:
        - Expiries (Core)
      x-badges:
        - color: orange
          label: BETA
  /api/externalactions:
    get:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Returns a list with all external actions.
      operationId: getExternalActions
      parameters:
        - description: all entities after given Id.
          in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - description: number of entities to show
          in: query
          name: size
          required: false
          schema:
            default: 25
            type: integer
        - description: Filter by the given group or groups
          explode: true
          in: query
          name: groups
          required: false
          schema:
            items:
              type: string
            type: array
        - description: Filter by the given processRef
          in: query
          name: processRef
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ExternalAction'
                type: array
          description: Returning the list of external actions available.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: External action not found
      summary: List external actions
      tags:
        - External Actions (Core)
      x-badges:
        - color: orange
          label: BETA
    post:
      description: Creates a new external action for a process.
      operationId: postExternalAction
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExternalActionForCreation'
        description: The external action to be created
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalAction'
          description: The external action was successfully created.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: External action not found
      summary: Create external action
      tags:
        - External Actions (Core)
  /api/externalactions/{externalActionId}:
    delete:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: deleteExternalAction
      parameters:
        - description: ID of the external action that you want delete
          in: path
          name: externalActionId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: External action was found & you were allowed to delete it.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: External action not found
      summary: Delete external action
      tags:
        - External Actions (Core)
      x-badges:
        - color: orange
          label: BETA
    get:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Returns an external action with the given id if found.
      operationId: getExternalAction
      parameters:
        - description: Id of the external action you want to get
          in: path
          name: externalActionId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ExternalAction'
                type: array
          description: >-
            External action was found & you are allowed to get it. The result is
            in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: External action not found
      summary: Get external action
      tags:
        - External Actions (Core)
      x-badges:
        - color: orange
          label: BETA
    put:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Replaces the external action with the provided in the body.
      operationId: putExternalAction
      parameters:
        - description: ID of the external action that you want update
          in: path
          name: externalActionId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExternalActionForReplacement'
        description: Update external action
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ExternalAction'
          description: External action was found & you are allowed to update it.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Facility not found
      summary: Replace an external action
      tags:
        - External Actions (Core)
      x-badges:
        - color: orange
          label: BETA
  /api/externalactions/{externalActionId}/logs:
    get:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Returns the logs related with the given external action.
      operationId: getExternalActionLogs
      parameters:
        - description: all entities after given Id
          in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - description: number of entities to show
          in: query
          name: size
          required: false
          schema:
            default: 25
            type: integer
        - description: Id of the external action you want to get the logs from
          in: path
          name: externalActionId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ExternalActionLogs'
                type: array
          description: >-
            Logs were found & you are allowed to get it. The result is in the
            body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: External action logs not found
      summary: List external action logs
      tags:
        - External Actions (Core)
      x-badges:
        - color: orange
          label: BETA
    post:
      description: Creates a new external action log.
      operationId: postExternalActionLog
      parameters:
        - description: ID of the external action you want to create the log for
          in: path
          name: externalActionId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExternalActionLogForCreation'
        description: The external action log to be created
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalActionLog'
          description: The log for the external action was successfully created.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: External action not found
      summary: Create external action logs
      tags:
        - External Actions (Core)
  /api/externalstockchangereasons:
    get:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />Get
        external stock change reasons
      operationId: getExternalStockChangeReasons
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalStockChangeReason'
          description: List of external stock change reasons
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: List stock change reasons
      tags:
        - Stocks Configuration (Inventory)
      x-badges:
        - color: red
          label: ALPHA
    post:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Post external stock change reason.
      operationId: postExternalStockChangeReason
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExternalStockChangeReasonForCreation'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalStockChangeReason'
          description: The created external stock change reason
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: Create stock change reason
      tags:
        - Stocks Configuration (Inventory)
      x-badges:
        - color: red
          label: ALPHA
  /api/externalstockchangereasons/{externalStockChangeReasonId}:
    get:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />Get
        external stock change reason.
      operationId: getExternalStockChangeReason
      parameters:
        - in: path
          name: externalStockChangeReasonId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalStockChangeReason'
          description: The external stock change reason
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: Get stock change reason
      tags:
        - Stocks Configuration (Inventory)
      x-badges:
        - color: red
          label: ALPHA
    put:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Update external stock change reason.
      operationId: putExternalStockChangeReason
      parameters:
        - in: path
          name: externalStockChangeReasonId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExternalStockChangeReasonForUpdate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalStockChangeReason'
          description: The updated external stock change reason
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: Update stock change reason
      tags:
        - Stocks Configuration (Inventory)
      x-badges:
        - color: red
          label: ALPHA
  /api/facilities:
    get:
      description: ''
      operationId: getAllFacilities
      parameters:
        - description: all entities after given Id
          in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - description: Reference to the status you want to get the corresponding facilities
          explode: true
          in: query
          name: status
          required: false
          schema:
            items:
              type: string
            type: array
        - description: number of facilities to show
          in: query
          name: size
          required: false
          schema:
            default: 25
            type: integer
        - description: query facilities with the given tenantFacilityId
          in: query
          name: tenantFacilityId
          required: false
          schema:
            type: string
        - description: query facilities orderBy
          in: query
          name: orderBy
          required: false
          schema:
            $ref: '#/components/schemas/FacilityOrderBy'
        - description: Filters the facilities by type
          explode: true
          in: query
          name: type
          required: false
          schema:
            items:
              $ref: '#/components/schemas/FacilityType'
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StrippedFacilities'
          description: Facilities are found.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: List facilities
      tags:
        - Facilities (Core)
    post:
      description: ''
      operationId: addFacility
      requestBody:
        content:
          application/json:
            schema:
              anyOf:
                - $ref: '#/components/schemas/ManagedFacilityForCreation'
                - $ref: '#/components/schemas/SupplierForCreation'
        description: Representation that describes the facility
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ManagedFacility'
                  - $ref: '#/components/schemas/Supplier'
          description: >-
            The facility was successfully created. The Location header contains
            the URL of the facility.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: Create facility
      tags:
        - Facilities (Core)
  /api/facilities/{facilityId}:
    delete:
      description: ''
      operationId: deleteFacility
      parameters:
        - description: >-
            ID of facility you want to delete. Also accepts tenantFacilityId in
            urn format (e.g.
            urn:fft:facility:tenantFacilityId:{your-tenant-facility-id}).
          in: path
          name: facilityId
          required: true
          schema:
            type: string
        - description: cascading deletion without pre condition check
          in: query
          name: forceDeletion
          required: false
          schema:
            default: false
            type: boolean
      responses:
        '200':
          description: Facility was found & you were allowed to delete it.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Facility not found
      summary: Delete facility
      tags:
        - Facilities (Core)
    get:
      description: ''
      operationId: getFacility
      parameters:
        - description: >-
            ID of facility you want to get. Also accepts tenantFacilityId in urn
            format (e.g.
            urn:fft:facility:tenantFacilityId:{your-tenant-facility-id}).
          in: path
          name: facilityId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/ManagedFacility'
                  - $ref: '#/components/schemas/Supplier'
          description: >-
            Facility was found & you were allowed to access it. The result is in
            the body.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Facility not found
      summary: Get facility
      tags:
        - Facilities (Core)
    patch:
      description: ''
      operationId: patchFacility
      parameters:
        - description: >-
            ID of facility you want to patch. Also accepts tenantFacilityId in
            urn format (e.g.
            urn:fft:facility:tenantFacilityId:{your-tenant-facility-id}).
          in: path
          name: facilityId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              anyOf:
                - $ref: '#/components/schemas/FacilityPatchActions'
                - $ref: '#/components/schemas/ManagedFacilityForModification'
                - $ref: '#/components/schemas/SupplierForModification'
        description: Patch set
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/ManagedFacility'
                  - $ref: '#/components/schemas/Supplier'
          description: >-
            Facility was found & patch-set has been applied. The patched
            facility is in the body.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Facility not found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Facility version conflict
      summary: Update facility
      tags:
        - Facilities (Core)
    put:
      operationId: replaceFacility
      parameters:
        - description: >-
            ID of facility you want to replace. Also accepts tenantFacilityId in
            urn format (e.g.
            urn:fft:facility:tenantFacilityId:{your-tenant-facility-id}).
          in: path
          name: facilityId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/ManagedFacilityForReplacement'
                - $ref: '#/components/schemas/SupplierForReplacement'
              discriminator:
                propertyName: type
                mapping:
                  MANAGED_FACILITY: '#/components/schemas/ManagedFacilityForReplacement'
                  SUPPLIER: '#/components/schemas/SupplierForReplacement'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ManagedFacility'
                  - $ref: '#/components/schemas/Supplier'
          description: Facility was replaced. The replaced facility is in the body.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Facility not found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Facility version conflict
      summary: Update facility
      tags:
        - Facilities (Core)
  /api/facilities/{facilityId}/actions:
    post:
      operationId: facilityAction
      parameters:
        - description: >-
            Reference to the facility you want to call the action for. Also
            accepts tenantFacilityId in urn format (e.g.
            urn:fft:facility:tenantFacilityId:{your-tenant-facility-id}).
          in: path
          name: facilityId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FacilityActionsParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedFacility'
          description: Updated Facility in the body.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: Call facility action
      tags:
        - Facilities (Core)
  /api/facilities/{facilityId}/carriers:
    get:
      deprecated: false
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />List all carrier connections configured for the given facility
      operationId: listFacilityCarriers
      parameters:
        - in: path
          name: facilityId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  carriers:
                    items:
                      properties:
                        deliveryType:
                          type: string
                        id:
                          type: string
                        key:
                          type: string
                        name:
                          type: string
                        status:
                          type: string
                        version:
                          type: number
                      required:
                        - id
                        - key
                        - status
                        - version
                      type: object
                    type: array
                  total:
                    description: Total number of carrier connections
                    type: number
                required:
                  - total
                  - carriers
                type: object
          description: Listing returned successfully.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: List facility carrier connections
      tags:
        - Facilities (Core)
      x-badges:
        - color: orange
          label: BETA
  /api/facilities/{facilityId}/carriers/{carrierRef}:
    get:
      deprecated: false
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />Get
        the details for a carrier related to the facility with the given ID
      operationId: getFacilityCarrier
      parameters:
        - in: path
          name: facilityId
          required: true
          schema:
            type: string
        - in: path
          name: carrierRef
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacilityCarrierConnection'
          description: >-
            Carrier to facility connections was found & you were allowed to
            access it. The result is in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: The requested entity was not found
      summary: Get facility carrier connection
      tags:
        - Facilities (Core)
      x-badges:
        - color: orange
          label: BETA
    post:
      deprecated: false
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Create a connection of a configured carrier to the facility with given
        ID
      operationId: createCarrierToFacility
      parameters:
        - in: path
          name: facilityId
          required: true
          schema:
            type: string
        - in: path
          name: carrierRef
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FacilityCarrierConnectionForCreation'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacilityCarrierConnection'
          description: Creation was successful.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: The requested entity was not found
      summary: Create facility carrier connection
      tags:
        - Facilities (Core)
      x-badges:
        - color: orange
          label: BETA
    put:
      deprecated: false
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Connect a configured carrier to the facility with given ID
      operationId: connectCarrierToFacility
      parameters:
        - in: path
          name: facilityId
          required: true
          schema:
            type: string
        - in: path
          name: carrierRef
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FacilityCarrierConnectionForModification'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacilityCarrierConnection'
          description: Modification was successful.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: The requested entity was not found
      summary: Update facility carrier connection
      tags:
        - Facilities (Core)
      x-badges:
        - color: orange
          label: BETA
  /api/facilities/{facilityId}/carriers/prioritization:
    post:
      deprecated: false
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Calculate prioritized list of recommended carriers for the given
        facility and input parameters
      operationId: calculateBestCarrier
      parameters:
        - in: path
          name: facilityId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CarrierPriorityCalculationRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CarrierPriorityResult'
          description: Calculated carrier prioritization result.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: Calculate best carriers
      tags:
        - Facilities (Core)
      x-badges:
        - color: orange
          label: BETA
  /api/facilities/{facilityId}/configurations/inventory:
    get:
      deprecated: false
      description: Get the Inventory Configuration for a specific Facility.
      operationId: getInventoryFacilityConfigurations
      parameters:
        - description: >-
            ID of the facility you want to get the config for. Also accepts
            tenantFacilityId in urn format (e.g.
            urn:fft:facility:tenantFacilityId:{your-tenant-facility-id}) for the
            path parameter facilityId.
          in: path
          name: facilityId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryFacilityConfiguration'
          description: Requested Inventory Facility Configuration
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: Get facility inventory config
      tags:
        - Stocks Configuration (Inventory)
    patch:
      deprecated: false
      description: >-
        This endpoint allows you to update the inventory configuration for a
        specific facility. It is used to set or modify the inventory management
        settings at the facility level.
      operationId: upsertInventoryFacilityConfigurations
      parameters:
        - description: >-
            ID of the facility you want to set the config to. Also accepts
            tenantFacilityId in urn format (e.g.
            urn:fft:facility:tenantFacilityId:{your-tenant-facility-id}) for the
            path parameter facilityId.
          in: path
          name: facilityId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InventoryFacilityConfigurationForPatch'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryFacilityConfiguration'
          description: Requested Inventory Facility Configuration
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: Update facility inventory config
      tags:
        - Stocks Configuration (Inventory)
  /api/facilities/{facilityId}/configurations/stock:
    get:
      operationId: getFacilityStockConfiguration
      parameters:
        - description: >-
            ID of facility you want to retrieve the configurations for. Also
            accepts tenantFacilityId in urn format (e.g.
            urn:fft:facility:tenantFacilityId:{your-tenant-facility-id}).
          in: path
          name: facilityId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacilityStockConfiguration'
          description: Configuration for stock routing was found.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: No active configurations found for this facility
      summary: Get facility stock config
      tags:
        - Stocks Configuration (Inventory)
    patch:
      description: ''
      operationId: patchFacilityConfiguration
      parameters:
        - description: >-
            ID of facility you want to update the stock configuration for. Also
            accepts tenantFacilityId in urn format (e.g.
            urn:fft:facility:tenantFacilityId:{your-tenant-facility-id}).
          in: path
          name: facilityId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StockConfigurationPatchActions'
        description: Patch set
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacilityStockConfiguration'
          description: >-
            Facility was found & patch-set has been applied. The patched
            facility configuration is in the body.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Facility Configuration not found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Facility version conflict
      summary: Update facility stock config
      tags:
        - Stocks Configuration (Inventory)
  /api/facilities/{facilityId}/connections:
    get:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />Get
        the details for all connections related to the facility with the given
        ID.
      operationId: getFacilityConnections
      parameters:
        - description: ID of facility you want to get connections
          in: path
          name: facilityId
          required: true
          schema:
            type: string
        - description: The targetFacilityRef of the connection
          in: query
          name: targetFacilityRef
          required: false
          schema:
            type: string
        - description: all entities
          in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - description: number of entities to show
          in: query
          name: size
          required: false
          schema:
            default: 25
            type: integer
        - description: >-
            Provide the localized names and descriptions for the parcel label
            classifications. If not provided the default locale is used., for
            example de_DE.
          in: query
          name: locale
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InterFacilityConnections'
          description: >-
            Facility connections was found & you were allowed to access it. The
            result is in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: List facility connections
      tags:
        - Facilities (Core)
      x-badges:
        - color: orange
          label: BETA
    post:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Create a connections for a supplier facility with given ID.
      operationId: createConnectionToFacility
      parameters:
        - description: ID of facility you want to create a connection for
          in: path
          name: facilityId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: >-
                    #/components/schemas/InterFacilityConnectionToSupplierForCreation
                - $ref: >-
                    #/components/schemas/InterFacilityConnectionToManagedFacilityForCreation
                - $ref: >-
                    #/components/schemas/InterFacilityConnectionToCustomerForCreation
              discriminator:
                propertyName: type
                mapping:
                  CUSTOMER: >-
                    #/components/schemas/InterFacilityConnectionToCustomerForCreation
                  MANAGED_FACILITY: >-
                    #/components/schemas/InterFacilityConnectionToManagedFacilityForCreation
                  SUPPLIER: >-
                    #/components/schemas/InterFacilityConnectionToSupplierForCreation
        description: Representation that the connection
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InterFacilityConnection'
          description: Creation was successful.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: Create facility connection
      tags:
        - Facilities (Core)
      x-badges:
        - color: orange
          label: BETA
  /api/facilities/{facilityId}/connections/{connectionId}:
    delete:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Delete the connection for facility with the given ID
      operationId: deleteFacilityConnection
      parameters:
        - description: ID of facility you want to delete a connection
          in: path
          name: facilityId
          required: true
          schema:
            type: string
        - description: The ID of the connection you want to delete
          in: path
          name: connectionId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Deletion was successful
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: There is no connection for the facility and the provided id
      summary: Delete facility connection
      tags:
        - Facilities (Core)
      x-badges:
        - color: orange
          label: BETA
    get:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />Get
        the details for a facility connection related to the facility with the
        given ID.
      operationId: getFacilityConnection
      parameters:
        - description: ID of facility you want to get connections
          in: path
          name: facilityId
          required: true
          schema:
            type: string
        - description: >-
            The ID that describes the connection of this facility to the its
            connections
          in: path
          name: connectionId
          required: true
          schema:
            type: string
        - description: >-
            Provide the localized names and descriptions for the parcel label
            classifications. If not provided the default locale is used., for
            example de_DE.
          in: query
          name: locale
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InterFacilityConnection'
          description: >-
            Facility connections was found & you were allowed to access it. The
            result is in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            There is no connection for this facility referenced by the provided
            connectionId
      summary: Get facility connection
      tags:
        - Facilities (Core)
      x-badges:
        - color: orange
          label: BETA
    put:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Update the given connection for a facility
      operationId: updateFacilityConnection
      parameters:
        - description: ID of facility you want to get
          in: path
          name: facilityId
          required: true
          schema:
            type: string
        - description: The referenced connection ID
          in: path
          name: connectionId
          required: true
          schema:
            type: string
        - description: >-
            Provide the localized names and descriptions for the parcel label
            classifications. If not provided the default locale is used., for
            example de_DE.
          in: query
          name: locale
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: >-
                    #/components/schemas/InterFacilityConnectionToSupplierForUpdate
                - $ref: >-
                    #/components/schemas/InterFacilityConnectionToManagedFacilityForUpdate
                - $ref: >-
                    #/components/schemas/InterFacilityConnectionToCustomerForUpdate
              discriminator:
                propertyName: type
                mapping:
                  CUSTOMER: >-
                    #/components/schemas/InterFacilityConnectionToCustomerForUpdate
                  MANAGED_FACILITY: >-
                    #/components/schemas/InterFacilityConnectionToManagedFacilityForUpdate
                  SUPPLIER: >-
                    #/components/schemas/InterFacilityConnectionToSupplierForUpdate
        description: Representation that describes the facility
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InterFacilityConnection'
          description: Modification was successful.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            There is no connection with this facility referenced by the provided
            cnnectionId.
      summary: Update facility connection
      tags:
        - Facilities (Core)
      x-badges:
        - color: orange
          label: BETA
  /api/facilities/{facilityId}/customservices:
    get:
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getFacilityCustomServiceConnections
      parameters:
        - description: >-
            ID of facility. Also accepts tenantFacilityId in urn format (e.g.
            urn:fft:facility:tenantFacilityId:{your-tenant-facility-id}).
          in: path
          name: facilityId
          required: true
          schema:
            type: string
        - description: all entities after given Id
          in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - description: number of entities to show
          in: query
          name: size
          required: false
          schema:
            default: 25
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StrippedFacilityCustomServiceConnections'
          description: Custom service connections could be found in response body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: List facility custom services
      tags:
        - Custom Services (Core)
      x-badges:
        - color: red
          label: ALPHA
  /api/facilities/{facilityId}/customservices/{customServiceId}:
    delete:
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: deleteFacilityCustomServiceConnection
      parameters:
        - description: >-
            ID of facility. Also accepts tenantFacilityId in urn format (e.g.
            urn:fft:facility:tenantFacilityId:{your-tenant-facility-id}).
          in: path
          name: facilityId
          required: true
          schema:
            type: string
        - description: ID of the custom service
          in: path
          name: customServiceId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The custom service connection was successfully deleted.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: Delete facility custom service
      tags:
        - Custom Services (Core)
      x-badges:
        - color: red
          label: ALPHA
    get:
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getFacilityCustomService
      parameters:
        - description: >-
            ID of facility. Also accepts tenantFacilityId in urn format (e.g.
            urn:fft:facility:tenantFacilityId:{your-tenant-facility-id}).
          in: path
          name: facilityId
          required: true
          schema:
            type: string
        - description: ID of the custom service
          in: path
          name: customServiceId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacilityCustomServiceConnection'
          description: Custom service connection could be found in response body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: Get facility custom service
      tags:
        - Custom Services (Core)
      x-badges:
        - color: red
          label: ALPHA
    patch:
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: updateFacilityCustomServiceConnction
      parameters:
        - description: >-
            ID of facility. Also accepts tenantFacilityId in urn format (e.g.
            urn:fft:facility:tenantFacilityId:{your-tenant-facility-id}).
          in: path
          name: facilityId
          required: true
          schema:
            type: string
        - description: ID of the custom service
          in: path
          name: customServiceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FacilityCustomServiceConnectionForUpdate'
        description: Desired custom service connection to create/update
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacilityCustomServiceConnection'
          description: The custom service connection was successfully created.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: Update facility custom service
      tags:
        - Custom Services (Core)
      x-badges:
        - color: red
          label: ALPHA
    post:
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: createFacilityCustomServiceConnection
      parameters:
        - description: >-
            ID of facility. Also accepts tenantFacilityId in urn format (e.g.
            urn:fft:facility:tenantFacilityId:{your-tenant-facility-id}).
          in: path
          name: facilityId
          required: true
          schema:
            type: string
        - description: ID of the custom service
          in: path
          name: customServiceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FacilityCustomServiceConnectionForCreation'
        description: Desired custom service connection to create/update
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacilityCustomServiceConnection'
          description: The custom service connection was successfully created.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: Create facility custom service
      tags:
        - Custom Services (Core)
      x-badges:
        - color: red
          label: ALPHA
  /api/facilities/{facilityId}/listings:
    delete:
      description: ''
      operationId: deleteListingsOfFacility
      parameters:
        - description: >-
            ID of facility you want to delete all listings of. Also accepts
            tenantFacilityId in urn format (e.g.
            urn:fft:facility:tenantFacilityId:{your-tenant-facility-id}).
          in: path
          name: facilityId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Facility listings were found and successfully deleted
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Facility listing not found
      summary: Delete listings
      tags:
        - Listings (Core)
    get:
      description: ''
      operationId: getFacilityListing
      parameters:
        - description: >-
            ID of facility you want to get listing for. Also accepts
            tenantFacilityId in urn format (e.g.
            urn:fft:facility:tenantFacilityId:{your-tenant-facility-id}).
          in: path
          name: facilityId
          required: true
          schema:
            type: string
        - description: all entities after given Id
          in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - description: number of facilities to show
          in: query
          name: size
          required: false
          schema:
            default: 25
            type: integer
        - description: Array of tenantArticleIds
          explode: false
          in: query
          name: tenantArticleIds
          required: false
          schema:
            items:
              type: string
            maxItems: 500
            type: array
        - description: limit results to this scannableCode
          in: query
          name: scannableCode
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StrippedListings'
          description: >-
            Facility was found & you were allowed to access it. The results are
            in the body.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Facility not found
      summary: List listings
      tags:
        - Listings (Core)
    put:
      description: >-
        Bulk PUT for Listings. Please note: This endpoint has legacy behaviour,
        i.e. all PUTs fail if a single PUT fails.
      operationId: putFacilityListing
      parameters:
        - description: >-
            ID of facility you want to put listings for. Also accepts
            tenantFacilityId in urn format (e.g.
            urn:fft:facility:tenantFacilityId:{your-tenant-facility-id}).
          in: path
          name: facilityId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListingsForReplacement'
        description: listings for put
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ListingBulkOperationResult'
                type: array
          description: >-
            Facility listing was found & you were allowed to access it. The
            result is in the body.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Facility listing not found
      summary: Update listings
      tags:
        - Listings (Core)
  /api/facilities/{facilityId}/listings/{tenantArticleId}:
    delete:
      description: ''
      operationId: deleteFacilityListing
      parameters:
        - description: >-
            ID of facility you want to delete a listing of. Also accepts
            tenantFacilityId in urn format (e.g.
            urn:fft:facility:tenantFacilityId:{your-tenant-facility-id}).
          in: path
          name: facilityId
          required: true
          schema:
            type: string
        - description: tenant ID of the articles listing you want to delete
          in: path
          name: tenantArticleId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Facility listing was found and successfully deleted
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Facility listing not found
      summary: Delete listing
      tags:
        - Listings (Core)
    get:
      description: ''
      operationId: getListing
      parameters:
        - description: >-
            ID of facility you want to get listing. Also accepts
            tenantFacilityId in urn format (e.g.
            urn:fft:facility:tenantFacilityId:{your-tenant-facility-id}).
          in: path
          name: facilityId
          required: true
          schema:
            type: string
        - description: tenantArticleId of listing you want to get
          in: path
          name: tenantArticleId
          required: true
          schema:
            type: string
        - description: >-
            Provide the localized names and descriptions for the listing. If not
            provided the default locale is used., for example de_DE.
          in: query
          name: locale
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Listing'
          description: >-
            Listing is found & you were allowed to access it. The result is in
            the body.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Listings not found
      summary: Get listing
      tags:
        - Listings (Core)
    patch:
      description: ''
      operationId: patchFacilityListing
      parameters:
        - description: >-
            ID of facility you want to patch a listing of. Also accepts
            tenantFacilityId in urn format (e.g.
            urn:fft:facility:tenantFacilityId:{your-tenant-facility-id}).
          in: path
          name: facilityId
          required: true
          schema:
            type: string
        - description: tenant ID of the articles listing you want to patch
          in: path
          name: tenantArticleId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListingPatchActions'
        description: listings for put
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Listing'
                type: array
          description: Facility listing was found and successfully patched
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Facility listing not found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Listing version conflict
      summary: Update listing
      tags:
        - Listings (Core)
  /api/facilities/{facilityId}/listings/{tenantArticleId}/partialstocks:
    delete:
      deprecated: true
      description: >-
        This part of the API is deprecated. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />This endpoint is deprecated. Use /api/stocks endpoints instead.
      operationId: deleteFacilityListingPartialStock
      parameters:
        - description: >-
            ID of facility from whom you want to delete the partial stock. Also
            accepts tenantFacilityId in urn format (e.g.
            urn:fft:facility:tenantFacilityId:{your-tenant-facility-id}).
          in: path
          name: facilityId
          required: true
          schema:
            type: string
        - description: ID of listing you want to get partial stocks
          in: path
          name: tenantArticleId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >-
            Facility listing was found & you were allowed to delete the partial
            stock.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Facility listing not found
      summary: Delete listing partial stocks
      tags:
        - Listings (Core)
    get:
      deprecated: true
      description: >-
        This part of the API is deprecated. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />This endpoint is deprecated. Use /api/stocks endpoints instead.
      operationId: getFacilityListingPartialStock
      parameters:
        - description: >-
            ID of facility you want to get the partial stocks. Also accepts
            tenantFacilityId in urn format (e.g.
            urn:fft:facility:tenantFacilityId:{your-tenant-facility-id}).
          in: path
          name: facilityId
          required: true
          schema:
            type: string
        - description: ID of listing you want to get partial stocks
          in: path
          name: tenantArticleId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PartialStock'
                type: array
          description: >-
            Facility and listing were found & you are allowed to access it. The
            result is in the body.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Facility or Listing not found
      summary: List listing partial stocks
      tags:
        - Listings (Core)
    patch:
      deprecated: true
      description: >
        This part of the API is deprecated. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />This endpoint is deprecated. Use /api/stocks endpoints instead.

        Adds new partial stocks, updates existing partial stocks and keeps
        stocks that are previously present in the database.


        1. If a stock exists in the patch action but not in the database it is
        added.

        2. If a stock exists both in the patch action and in the database it is
        updated and the contents are merged.

        3. If a stock exists only in the database, it is left untouched.
      operationId: patchFacilityListingPartialStock
      parameters:
        - description: >-
            ID of facility you want to patch the partial stocks. Also accepts
            tenantFacilityId in urn format (e.g.
            urn:fft:facility:tenantFacilityId:{your-tenant-facility-id}).
          in: path
          name: facilityId
          required: true
          schema:
            type: string
        - description: ID of listing you want to get partial stocks
          in: path
          name: tenantArticleId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartialStockPatchActions'
        description: Patch set
        required: true
      responses:
        '200':
          description: Facility listing was found & you were allowed to update it.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Facility listing not found
      summary: Update listing partial stocks
      tags:
        - Listings (Core)
    put:
      deprecated: true
      description: >
        This part of the API is deprecated. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />This endpoint is deprecated. Use /api/stocks endpoints instead.

        Replaces the current partial stock object related to its listing
      operationId: putFacilityListingPartialStock
      parameters:
        - description: >-
            ID of facility you want to get listing. Also accepts
            tenantFacilityId in urn format (e.g.
            urn:fft:facility:tenantFacilityId:{your-tenant-facility-id}).
          in: path
          name: facilityId
          required: true
          schema:
            type: string
        - description: ID of listing you want to get partial stocks
          in: path
          name: tenantArticleId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartialStocksForReplacement'
        description: Patch set
        required: true
      responses:
        '200':
          description: Facility listing was found & you were allowed to update it.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Facility listing not found
      summary: Update listing partial stocks
      tags:
        - Listings (Core)
  /api/facilities/{facilityId}/stocks:
    get:
      deprecated: true
      description: >-
        This part of the API is deprecated. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />Use
        <a
        href="https://docs.fulfillmenttools.com/api-docs/use-cases/inventory-management/entities#stock">Inventory
        Stock</a> instead
      operationId: getFacilityStocks
      parameters:
        - in: query
          name: size
          required: false
          schema:
            default: 25
            maximum: 100
            minimum: 1
            type: number
        - in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - in: path
          name: facilityId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FacilityStock'
                type: array
          description: Stock was loaded and you were allowed to access it.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: List facility stocks
      tags:
        - Stocks (Inventory)
    put:
      deprecated: true
      description: >-
        This part of the API is deprecated. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />Use
        <a
        href="https://docs.fulfillmenttools.com/api-docs/use-cases/inventory-management/entities#stock">Inventory
        Stock</a> instead
      operationId: bulkUpdateFacilityStock
      parameters:
        - in: path
          name: facilityId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FacilityStockBulkOperations'
        required: true
      responses:
        '207':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FacilityStockBulkResult'
                type: array
          description: Update Result of each targeted tenantArticleId
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: Update facility stocks
      tags:
        - Stocks (Inventory)
  /api/facilities/{facilityId}/storagelocations:
    get:
      description: ''
      operationId: getFacilityStorageLocations
      parameters:
        - description: >-
            ID of facility from which you want to get the storage locations.
            Also accepts tenantFacilityId in urn format (e.g.
            urn:fft:facility:tenantFacilityId:{your-tenant-facility-id})
          in: path
          name: facilityId
          required: true
          schema:
            type: string
        - description: all entities after given Id
          in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - description: number of entities to show
          in: query
          name: size
          required: false
          schema:
            default: 25
            type: integer
        - description: limit result to storage locations with scannable code
          in: query
          name: scannableCode
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/StorageLocation'
                type: array
          description: >-
            Facility was found & you are allowed to get the storage locations.
            The result is in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Facility not found
      summary: List facility storage locations
      tags:
        - Storage Locations (Inventory)
    post:
      description: Creates a new storage location in this facility.
      operationId: postFacilityStorageLocations
      parameters:
        - description: ID of facility from whom you want to create the storage location
          in: path
          name: facilityId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorageLocationForCreation'
        description: Patch set
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageLocation'
          description: The storage location was successfully created.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Facility not found
      summary: Create facility storage location
      tags:
        - Storage Locations (Inventory)
  /api/facilities/{facilityId}/storagelocations/{storageLocationId}:
    delete:
      description: ''
      operationId: deleteFacilityStorageLocation
      parameters:
        - description: ID of facility from whom you want to delete the storage location
          in: path
          name: facilityId
          required: true
          schema:
            type: string
        - description: ID of the storageLocation you want to delete
          in: path
          name: storageLocationId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Storage location was found & you were allowed to delete it.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Facility or storage location not found
      summary: Delete facility storage location
      tags:
        - Storage Locations (Inventory)
    get:
      description: ''
      operationId: getFacilityStorageLocation
      parameters:
        - description: >-
            ID of facility from which you want to get the storage locations.
            Also accepts tenantFacilityId in urn format (e.g.
            urn:fft:facility:tenantFacilityId:{your-tenant-facility-id})
          in: path
          name: facilityId
          required: true
          schema:
            type: string
        - description: the ID of the storageLocation
          in: path
          name: storageLocationId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/StorageLocation'
                type: array
          description: >-
            Facility was found & you are allowed to get the storage locations.
            The result is in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Facility not found
      summary: Get facility storage location
      tags:
        - Storage Locations (Inventory)
    patch:
      description: >
        Adds new storage locations, updates existing ones and keeps the
        previously present ones in the database.


        1. If a storage location exists in the patch action but not in the
        database it is added.

        2. If a storage location exists both in the patch action and in the
        database it is updated and the contents merged.

        3. If a storage location exists only in the database, it is left
        untouched.
      operationId: patchFacilityStorageLocation
      parameters:
        - description: ID of facility you want to patch the storage locations
          in: path
          name: facilityId
          required: true
          schema:
            type: string
        - description: the ID of the storageLocation
          in: path
          name: storageLocationId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorageLocationPatchActions'
        description: Patch set
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageLocation'
          description: Storage location was found & you were allowed to update it.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Facility or Storage location not found
      summary: Update facility storage location
      tags:
        - Storage Locations (Inventory)
    put:
      description: >-
        Replaces the current storage locations of this Facility with the
        provided in the body.
      operationId: putFacilityStorageLocation
      parameters:
        - description: ID of facility from whom you want to put the storage locations
          in: path
          name: facilityId
          required: true
          schema:
            type: string
        - description: the ID of the storageLocation
          in: path
          name: storageLocationId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorageLocationForReplacement'
        description: Patch set
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageLocation'
          description: Storage location was found & you were allowed to update it.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Facility or Storage Location not found
      summary: Update facility storage location
      tags:
        - Storage Locations (Inventory)
  /api/facilities/{facilityId}/zones:
    get:
      description: ''
      operationId: getFacilityZones
      parameters:
        - description: >-
            ID of facility from which you want to get the zones. Also accepts
            tenantFacilityId in urn format (e.g.
            urn:fft:facility:tenantFacilityId:{your-tenant-facility-id})
          in: path
          name: facilityId
          required: true
          schema:
            type: string
        - description: all entities after given Id
          in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - description: number of entities to show
          in: query
          name: size
          required: false
          schema:
            default: 25
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Zone'
                type: array
          description: >-
            Facility was found & you are allowed to get the zones. The result is
            in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Facility not found
      summary: List facility zones
      tags:
        - Storage Locations (Inventory)
    post:
      description: Creates a new zone in this facility.
      operationId: postFacilityZone
      parameters:
        - description: >-
            ID of facility at which you want to create the zones. Also accepts
            tenantFacilityId in urn format (e.g.
            urn:fft:facility:tenantFacilityId:{your-tenant-facility-id})
          in: path
          name: facilityId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ZoneForCreation'
        description: The zone to be created
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Zone'
          description: The zone was successfully created.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Zone not found
      summary: Create facility zone
      tags:
        - Storage Locations (Inventory)
  /api/facilities/{facilityId}/zones/{zoneId}:
    delete:
      description: ''
      operationId: deleteFacilityZone
      parameters:
        - description: >-
            ID of facility from which you want to delete the zone. Also accepts
            tenantFacilityId in urn format (e.g.
            urn:fft:facility:tenantFacilityId:{your-tenant-facility-id})
          in: path
          name: facilityId
          required: true
          schema:
            type: string
        - description: ID of the zone you want to delete
          in: path
          name: zoneId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Zone was found & you were allowed to delete it.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Facility or storage location not found
      summary: Delete facility zone
      tags:
        - Storage Locations (Inventory)
    get:
      description: ''
      operationId: getFacilityZone
      parameters:
        - description: >-
            ID of facility from which you want to get the zone. Also accepts
            tenantFacilityId in urn format (e.g.
            urn:fft:facility:tenantFacilityId:{your-tenant-facility-id})
          in: path
          name: facilityId
          required: true
          schema:
            type: string
        - description: the ID of the zone
          in: path
          name: zoneId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Zone'
                type: array
          description: >-
            Zone was found & you are allowed to get it. The result is in the
            body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Facility not found
      summary: Get facility zone
      tags:
        - Storage Locations (Inventory)
    put:
      description: >-
        Replaces the current zone of this Facility with the provided in the
        body.
      operationId: putFacilityZone
      parameters:
        - description: >-
            ID of facility from which you want to put the zone. Also accepts
            tenantFacilityId in urn format (e.g.
            urn:fft:facility:tenantFacilityId:{your-tenant-facility-id})
          in: path
          name: facilityId
          required: true
          schema:
            type: string
        - description: the ID of the zone
          in: path
          name: zoneId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ZoneForReplacement'
        description: Patch set
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Zone'
          description: Zone was found & you are allowed to update it.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Facility not found
      summary: Update facility zone
      tags:
        - Storage Locations (Inventory)
  /api/facilities/{facilityRef}/configurations/notifications:
    get:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Returns the notification center facility configuration.
      operationId: getNotificationCenterFacilityConfig
      parameters:
        - in: path
          name: facilityRef
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationCenterConfig'
          description: >-
            The notification center facility configuration was successfully
            returned.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: The requested entity was not found
      summary: Get facility notification config
      tags:
        - Notification Center Configuration (Core)
      x-badges:
        - color: red
          label: ALPHA
    put:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Update the notification center facility configuration.
      operationId: upsertNotificationCenterFacilityConfig
      parameters:
        - in: path
          name: facilityRef
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/NotificationCenterConfigForUpdate'
                - allOf:
                    - $ref: '#/components/schemas/NotificationCenterConfigForCreation'
                  not:
                    required:
                      - version
                  type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationCenterConfig'
          description: Notification center facility configuration was successfully updated.
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationCenterConfig'
          description: Notification center facility configuration was successfully created.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: The requested entity was not found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: A version conflict occurred.
      summary: Update facility notification config
      tags:
        - Notification Center Configuration (Core)
      x-badges:
        - color: red
          label: ALPHA
  /api/facilities/{facilityRef}/configurations/notifications/actions:
    post:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Executes an action to manipulate the notification center facility
        configuration.
      operationId: executeNotificationCenterFacilityConfigAction
      parameters:
        - in: path
          name: facilityRef
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/AddChannelAction'
                - $ref: '#/components/schemas/UpdateChannelByIdAction'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationCenterConfig'
          description: >-
            Notification center facility configuration action was successfully
            executed.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: The requested entity was not found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: A version conflict occurred.
      summary: Call facility notification action
      tags:
        - Notification Center Configuration (Core)
      x-badges:
        - color: red
          label: ALPHA
  /api/facilities/{facilityRef}/configurations/notifications/channels/{channelId}:
    delete:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Delete the notification facility channel.
      operationId: deleteNotificationCenterFacilityConfigChannel
      parameters:
        - in: path
          name: facilityRef
          required: true
          schema:
            type: string
        - in: path
          name: channelId
          required: true
          schema:
            type: string
        - in: query
          name: version
          required: true
          schema:
            type: number
      responses:
        '200':
          description: >-
            Notification center facility config channel was successfully
            deleted.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: The requested entity was not found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: A version conflict occurred.
      summary: Delete facility notification channel
      tags:
        - Notification Center Configuration (Core)
      x-badges:
        - color: red
          label: ALPHA
  /api/facilities/{facilityRef}/discounts:
    get:
      description: ''
      operationId: getDiscountsForFacility
      parameters:
        - description: >-
            ID of the facility you want to get the discounts for. Also accepts
            tenantFacilityId in urn format (e.g.
            urn:fft:facility:tenantFacilityId:{your-tenant-facility-id}).
          in: path
          name: facilityRef
          required: true
          schema:
            type: string
        - description: all entities after given Id
          in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - description: number of facilities to show
          in: query
          name: size
          required: false
          schema:
            default: 25
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FacilityDiscountPaginatedResult'
          description: >-
            The discounts were successfully retrieved. The result is in the
            body.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Facility not found
      summary: List facility discounts
      tags:
        - Facilities (Core)
    post:
      description: ''
      operationId: addDiscountToFacility
      parameters:
        - description: >-
            ID of the facility you want to add the discount to. Also accepts
            tenantFacilityId in urn format (e.g.
            urn:fft:facility:tenantFacilityId:{your-tenant-facility-id}).
          in: path
          name: facilityRef
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FacilityDiscountForCreation'
        description: Representation that describes the discount
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacilityDiscount'
          description: >-
            The discount was successfully created. The Location header contains
            the URL of the discount.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Facility not found
      summary: Create facility discount
      tags:
        - Facilities (Core)
  /api/facilities/{facilityRef}/discounts/{facilityDiscountRef}:
    delete:
      description: ''
      operationId: deleteDiscountForFacility
      parameters:
        - description: >-
            ID of the facility you want to delete the discount from. Also
            accepts tenantFacilityId in urn format (e.g.
            urn:fft:facility:tenantFacilityId:{your-tenant-facility-id}).
          in: path
          name: facilityRef
          required: true
          schema:
            type: string
        - description: ID of the discount you want to delete
          in: path
          name: facilityDiscountRef
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The discount was successfully deleted. The result is in the body.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Facility or discount not found
      summary: Delete facility discount
      tags:
        - Facilities (Core)
    get:
      description: ''
      operationId: getDiscountForFacility
      parameters:
        - description: >-
            ID of the facility you want to get the discount for. Also accepts
            tenantFacilityId in urn format (e.g.
            urn:fft:facility:tenantFacilityId:{your-tenant-facility-id}).
          in: path
          name: facilityRef
          required: true
          schema:
            type: string
        - description: ID of the discount you want to get
          in: path
          name: facilityDiscountRef
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacilityDiscount'
          description: The discount was successfully retrieved. The result is in the body.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Facility or discount not found
      summary: Get facility discount
      tags:
        - Facilities (Core)
    patch:
      description: ''
      operationId: updateDiscountForFacility
      parameters:
        - description: >-
            ID of the facility you want to update the discount for. Also accepts
            tenantFacilityId in urn format (e.g.
            urn:fft:facility:tenantFacilityId:{your-tenant-facility-id}).
          in: path
          name: facilityRef
          required: true
          schema:
            type: string
        - description: ID of the discount you want to update
          in: path
          name: facilityDiscountRef
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FacilityDiscountForUpdate'
        description: Representation that describes the discount
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacilityDiscount'
          description: The discount was successfully updated. The result is in the body.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Facility or discount not found
      summary: Update facility discount
      tags:
        - Facilities (Core)
  /api/facilities/search:
    post:
      deprecated: false
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Search for Facility
      operationId: searchFacility
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FacilitySearchPayload'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacilityPaginatedResult'
          description: Your search result
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: List facilities (search)
      tags:
        - Facilities (Core)
      x-badges:
        - color: orange
          label: BETA
  /api/facilitygroups:
    get:
      description: ''
      operationId: getAllFacilityGroups
      parameters:
        - description: Returns all entries that were created after the entry with this ID.
          in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - description: Specifies the number of facility groups to return.
          in: query
          name: size
          required: false
          schema:
            default: 25
            maximum: 100
            type: integer
        - description: Filters facility groups by the given tenant facility group ID.
          in: query
          name: tenantFacilityGroupId
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacilityGroups'
          description: The facility groups that were found based on the given filters.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            The user is not authenticated or not allowed to operate against this
            API instance.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: The user is not authorized to access this API instance.
      summary: List facility groups
      tags:
        - Facility Groups (Core)
    post:
      description: ''
      operationId: addFacilityGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FacilityGroupForCreation'
        description: >-
          Representation of a facility group, including relevant details such as
          ID, name, description, and associated data.
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacilityGroup'
          description: The facility group was successfully created.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Invalid input. Please refer to the response for more details.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            The user is not authenticated or not allowed to operate against this
            API instance.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: The user is not authorized to access this API instance.
      summary: Create facility group
      tags:
        - Facility Groups (Core)
  /api/facilitygroups/{facilityGroupId}:
    delete:
      description: ''
      operationId: deleteFacilityGroup
      parameters:
        - description: The ID of the facility to be deleted.
          in: path
          name: facilityGroupId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Facility group was found and deleted.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            The user is not authenticated or not allowed to operate against this
            API instance.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: The user is not authorized to access this API instance.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Facility group not found.
      summary: Delete facility group
      tags:
        - Facility Groups (Core)
    get:
      description: ''
      operationId: getFacilityGroup
      parameters:
        - description: The ID of the requested facility group.
          in: path
          name: facilityGroupId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacilityGroup'
          description: Facility group was found. The result is in the body.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            The user is not authenticated or not allowed to operate against this
            API instance.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: The user is not authorized to access this API instance.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Facility group not found.
      summary: Get facility group
      tags:
        - Facility Groups (Core)
    patch:
      operationId: replaceFacilityGroup
      parameters:
        - description: The ID of the facility group to update.
          in: path
          name: facilityGroupId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FacilityGroupForUpdate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacilityGroup'
          description: >-
            Facility group was replaced. The replaced facility group is in the
            body.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            The user is not authenticated or not allowed to operate against this
            API instance.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: The user is not authorized to access this API instance.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Facility group not found.
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Facility group version conflict.
      summary: Update facility group
      tags:
        - Facility Groups (Core)
  /api/facilitygroups/{facilityGroupId}/actions:
    post:
      operationId: facilityGroupAction
      parameters:
        - description: Reference to the facility group you want to call the action for.
          in: path
          name: facilityGroupId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FacilityGroupActionsParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacilityGroup'
          description: Updated facility group in the body.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: Call facility group action
      tags:
        - Facility Groups (Core)
  /api/facilitygroups/search:
    post:
      deprecated: false
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Search for FacilityGroup
      operationId: searchFacilityGroup
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FacilityGroupSearchPayload'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacilityGroupPaginatedResult'
          description: Your search result
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: List facility groups (search)
      tags:
        - Facility Groups (Core)
      x-badges:
        - color: orange
          label: BETA
  /api/features:
    get:
      description: ''
      operationId: getFeatures
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Feature'
          description: The available feature for all active modules
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: List features
      tags:
        - Features (Infrastructure)
  /api/features/{featureName}:
    get:
      description: ''
      operationId: getFeature
      parameters:
        - description: Name of the feature requested
          in: path
          name: featureName
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feature'
          description: The requested feature
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: Get feature
      tags:
        - Features (Infrastructure)
    patch:
      description: ''
      operationId: patchFeature
      parameters:
        - description: Name of the feature requested
          in: path
          name: featureName
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeaturePatchActions'
        description: Patch set
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feature'
          description: >-
            Module was found & patch-set has been applied. The patched entity is
            in the body.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Entity not found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Entity version conflict
      summary: Update feature
      tags:
        - Features (Infrastructure)
  /api/fulfillability:
    post:
      deprecated: true
      description: >-
        This part of the API is deprecated. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Deprecated: Use /api/promises instead.
      operationId: queryFulfillability
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FulfillabilityQuery'
        description: Representation that describes the fulfillability query
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fulfillability'
          description: The result of the fulfillability .
        '204':
          description: >-
            There was no result of the fulfillability request. Please make sure
            to provide at least one of the attributes shipping or collect.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: Create fulfillability
      tags:
        - Checkout Options (DOMS)
  /api/fulfillability/clickandcollect:
    post:
      deprecated: true
      description: >-
        This part of the API is deprecated. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Deprecated: Use /api/promises instead.
      operationId: queryFulfillabilityClickAndCollect
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FulfillabilityClickAndCollectQuery'
        description: Representation that describes the fulfillability query
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FulfillabilityResult'
          description: The result of the fulfillability for click and collect.
        '204':
          description: >-
            There was no result of the fulfillability request. Please make sure
            to provide at least one of the attributes shipping or collect.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: Create click and collect fulfillability
      tags:
        - Checkout Options (DOMS)
  /api/fulfillability/shipfromstore:
    post:
      deprecated: true
      description: >-
        This part of the API is deprecated. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Deprecated: Use /api/promises instead.
      operationId: queryFulfillabilityShipFromStore
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FulfillabilityShipFromStoreQuery'
        description: Representation that describes the fulfillability query
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FulfillabilityResult'
          description: The result of the fulfillability for ship from store.
        '204':
          description: There was no result of the fulfillability request.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: Create ship from store fulfillability
      tags:
        - Checkout Options (DOMS)
  /api/handovercontainers:
    get:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />Get
        all Handover Container respecting the given filter
      operationId: getHandoverContainer
      parameters:
        - description: entity to start after
          in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - description: number of entities to show
          in: query
          name: size
          required: false
          schema:
            default: 25
            type: integer
        - description: facilities to filter the results
          in: query
          name: facilityRefs
          required: false
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/StrippedHandoverContainer'
          description: All HandoverContainer matching the given parameters.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: List handover container
      tags:
        - Handovers (Operations)
      x-badges:
        - color: orange
          label: BETA
    post:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Create new Handover Container
      operationId: createHandoverContainer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HandoverContainerForCreation'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/HandoverContainer'
          description: Created Handover Container.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: Create handover container
      tags:
        - Handovers (Operations)
      x-badges:
        - color: orange
          label: BETA
  /api/handovercontainers/{handoverContainerId}:
    delete:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Delete handover container
      operationId: deleteHandoverContainerById
      parameters:
        - description: id of the handover container
          in: path
          name: handoverContainerId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: HandoverContainer successfully deleted.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: Delete handover container
      tags:
        - Handovers (Operations)
      x-badges:
        - color: orange
          label: BETA
    get:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />Get
        handover container
      operationId: getHandoverContainerById
      parameters:
        - description: id of the handover container
          in: path
          name: handoverContainerId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HandoverContainer'
          description: HandoverContainer matching the given id.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: Get handover container
      tags:
        - Handovers (Operations)
      x-badges:
        - color: orange
          label: BETA
  /api/handovercontainers/{handoverContainerId}/stack:
    get:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />Get
        handover container stack
      operationId: getStackForHandoverContainer
      parameters:
        - description: id of the handover container
          in: path
          name: handoverContainerId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stack'
          description: Stack for the given handoverContainer matching the given id.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: Get handover container stack
      tags:
        - Handovers (Operations)
      x-badges:
        - color: orange
          label: BETA
  /api/handoverjobs:
    get:
      description: ''
      operationId: getAllHandoverjobs
      parameters:
        - description: all entities after given Id
          in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - description: number of entities to show
          in: query
          name: size
          required: false
          schema:
            default: 25
            type: integer
        - description: This query can be used to find handoverjobs for a referenced pickjob
          in: query
          name: pickJobRef
          required: false
          schema:
            type: string
        - description: >-
            This query can be used to find handoverjobs for a referenced
            shipment
          in: query
          name: shipmentRef
          required: false
          schema:
            type: string
        - description: Reference the assigned user on this entity - id or username
          in: query
          name: assignedUser
          required: false
          schema:
            type: string
        - description: >-
            Reference to the facility you want to get the corresponding
            handoverJobs
          in: query
          name: facilityRef
          required: false
          schema:
            type: string
        - description: >-
            Reference to the status you want to get the corresponding
            handoverJobs
          explode: true
          in: query
          name: status
          required: false
          schema:
            items:
              type: string
            type: array
        - description: >-
            Reference to the carriers you want to get the corresponding
            handoverJobs
          in: query
          name: carrierRefs
          required: false
          schema:
            items:
              type: string
            type: array
        - description: >-
            Reference to the channel you want to get the corresponding
            handoverJobs
          in: query
          name: channel
          required: false
          schema:
            type: string
        - description: Parameter to filter anonymized handover jobs
          in: query
          name: anonymized
          required: false
          schema:
            type: boolean
        - description: >-
            This query can be used to find handoverjobs with the given
            tenantOrderId
          in: query
          name: tenantOrderId
          required: false
          schema:
            type: string
        - description: Perform full text search over all searchable attributes
          in: query
          name: searchTerm
          required: false
          schema:
            type: string
        - description: Start date range for pick jobs
          in: query
          name: startTargetTime
          required: false
          schema:
            example: 2020-02-03T08:45:50.525Z
            format: date-time
            type: string
        - description: End date range for pick jobs
          in: query
          name: endTargetTime
          required: false
          schema:
            example: 2020-02-03T08:45:50.525Z
            format: date-time
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StrippedHandoverjobs'
          description: Handoverjobs are found.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: List handover jobs
      tags:
        - Handovers (Operations)
    post:
      operationId: addHandoverjob
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HandoverjobForCreation'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Handoverjob'
          description: >-
            The handoverjob was successfully created. The Location header
            contains the URL of it.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: Create handover job
      tags:
        - Handovers (Operations)
  /api/handoverjobs/{handoverjobId}:
    get:
      description: ''
      operationId: getHandoverjob
      parameters:
        - description: ID of the handoverjob you want to get
          in: path
          name: handoverjobId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Handoverjob'
          description: >-
            Handoverjob was found & you were allowed to access it. The result is
            in the body.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: Get handover job
      tags:
        - Handovers (Operations)
    patch:
      description: ''
      operationId: patchHandoverjob
      parameters:
        - description: ID of handoverjob you want to patch
          in: path
          name: handoverjobId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HandoverjobPatchActions'
        description: Patch set
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Handoverjob'
          description: >-
            Handoverjob was found & patch-set has been applied. The patched
            entity is in the body.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Entity not found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Entity version conflict
      summary: Update handover job
      tags:
        - Handovers (Operations)
  /api/handoverjobs/{handoverJobId}/actions:
    post:
      operationId: handoverJobAction
      parameters:
        - description: Reference to the handover job you want to call the action for
          in: path
          name: handoverJobId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HandoverJobActionsParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Handoverjob'
          description: Updated Handover job in the body.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: Call handover job action
      tags:
        - Handovers (Operations)
  /api/handoverjobs/search:
    post:
      deprecated: false
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Search for HandoverJob
      operationId: searchHandoverJob
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HandoverJobSearchPayload'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HandoverJobPaginatedResult'
          description: Your search result
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: List handover job (search)
      tags:
        - Handovers (Operations)
      x-badges:
        - color: orange
          label: BETA
  /api/health:
    get:
      description: ''
      operationId: healthCheck
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResult'
          description: Result of all tested dependencies for their health status
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Manual reroute configuration not found
      summary: Health check
      tags:
        - Health (Infrastructure)
  /api/inboundprocesses:
    get:
      deprecated: false
      description: ''
      operationId: getInboundProcesses
      parameters:
        - in: query
          name: size
          required: false
          schema:
            default: 25
            maximum: 100
            minimum: 1
            type: number
        - in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - in: query
          name: sort
          required: false
          schema:
            enum:
              - ORIGIN_NAME_ASC
              - REQUESTED_DATE_ASC
              - LAST_MODIFIED_ASC
              - ORIGIN_NAME_DESC
              - REQUESTED_DATE_DESC
              - LAST_MODIFIED_DESC
            type: string
        - in: query
          name: facilityRef
          required: false
          schema:
            items:
              type: string
            type: array
        - in: query
          name: scannableCode
          required: false
          schema:
            type: string
        - explode: false
          in: query
          name: status
          required: false
          schema:
            items:
              enum:
                - OPEN
                - PARTIAL_DELIVERY
                - ON_HOLD
                - CLOSED
              type: string
            type: array
        - description: >
            Matches partial values; The queries terms and therefore the result
            set of the query can change in the future:

            - tenantInboundProcessId

            - scannableCodes

            - receipts.receivedItems.tenantArticleId

            - purchaseOrder.requestedItems.tenantArticleId

            - purchaseOrder.supplier.name

            - values of related listings
              - listing.title
              - listing.scannableCodes
          in: query
          name: searchTerm
          required: false
          schema:
            type: string
        - description: >
            Only matches complete values; The queries terms and therefore the
            result set of the query can change in the future:

            - tenantInboundProcessId

            - scannableCodes

            - receipts.receivedItems.tenantArticleId

            - purchaseOrder.requestedItems.tenantArticleId

            - purchaseOrder.supplier.name

            - values of related listings
              - listing.title
              - listing.scannableCodes
          in: query
          name: searchTermExact
          required: false
          schema:
            type: string
        - in: query
          name: purchaseOrder_cancelled
          required: false
          schema:
            type: boolean
        - explode: false
          in: query
          name: receipt_status
          required: false
          schema:
            items:
              enum:
                - OPEN
                - IN_PROGRESS
                - FINISHED
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InboundProcessPaginatedResult'
          description: Paginated result containing the matching Inbound Process entities
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: List inbound processes
      tags:
        - Inbound (Inventory)
    post:
      deprecated: false
      description: ''
      operationId: createInboundProcess
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InboundProcessForCreation'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InboundProcess'
          description: Created Inbound Process entity
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: Create inbound process
      tags:
        - Inbound (Inventory)
  /api/inboundprocesses/{inboundProcessId}:
    delete:
      deprecated: false
      description: ''
      operationId: deleteInboundProcess
      parameters:
        - in: path
          name: inboundProcessId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Inbound Process successfully deleted
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: Delete inbound process
      tags:
        - Inbound (Inventory)
    get:
      deprecated: false
      description: ''
      operationId: getInboundProcess
      parameters:
        - in: path
          name: inboundProcessId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InboundProcess'
          description: Requested Inbound Process entity
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: Get inbound process
      tags:
        - Inbound (Inventory)
    patch:
      deprecated: false
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: Patch InboundProcess
      parameters:
        - in: path
          name: inboundProcessId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InboundProcessForPatch'
        required: true
      responses:
        '200':
          description: Inbound Process successfully patched
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: Update inbound process
      tags:
        - Inbound (Inventory)
      x-badges:
        - color: orange
          label: BETA
  /api/inboundprocesses/{inboundProcessId}/purchaseorder:
    put:
      deprecated: false
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Creates or updates the specific purchase order of an existing inbound
        process.
      operationId: upsertInboundProcessPurchaseOrder
      parameters:
        - in: path
          name: inboundProcessId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InboundProcessPurchaseOrderForUpsert'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InboundProcessPurchaseOrder'
          description: Purchase order successfully updated on inbound process
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InboundProcessPurchaseOrder'
          description: Purchase order successfully created on inbound process
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: Update purchase order
      tags:
        - Inbound (Inventory)
      x-badges:
        - color: orange
          label: BETA
  /api/inboundprocesses/{inboundProcessId}/receipts:
    post:
      deprecated: false
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Adds a receipt to an inbound process.
      operationId: addReceiptToInboundProcess
      parameters:
        - in: path
          name: inboundProcessId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InboundReceiptForCreation'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InboundReceipt'
          description: Receipt was added to the inbound process
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: Create inbound process receipt
      tags:
        - Inbound (Inventory)
      x-badges:
        - color: orange
          label: BETA
  /api/inboundprocesses/attachments:
    post:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: createAttachment
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InboundAttachmentForCreation'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InboundAttachment'
          description: Created attachment
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: Create attachment
      tags:
        - Inbound (Inventory)
      x-badges:
        - color: red
          label: ALPHA
  /api/inboundprocesses/attachments/{attachmentId}/signedurl:
    get:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getSignedAttachmentUrl
      parameters:
        - in: path
          name: attachmentId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: Signed url
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: Get signed attachment url
      tags:
        - Inbound (Inventory)
      x-badges:
        - color: red
          label: ALPHA
  /api/inboundprocesses/search:
    post:
      deprecated: false
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Search for InboundProcess
      operationId: searchInboundProcess
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InboundProcessSearchPayload'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InboundProcessPaginatedResult'
          description: Your search result
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: List inbound processes (search)
      tags:
        - Inbound (Inventory)
      x-badges:
        - color: orange
          label: BETA
  /api/inboundreceiptjobs:
    get:
      deprecated: false
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getInboundReceiptJobs
      parameters:
        - in: query
          name: size
          required: false
          schema:
            default: 25
            maximum: 100
            minimum: 1
            type: number
        - in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - in: query
          name: facilityRef
          required: false
          schema:
            items:
              type: string
            type: array
        - explode: false
          in: query
          name: status
          required: false
          schema:
            items:
              enum:
                - OPEN
                - PARTIAL_DELIVERY
                - ON_HOLD
                - CLOSED
              type: string
            type: array
        - in: query
          name: searchTerm
          required: false
          schema:
            minLength: 1
            type: string
        - in: query
          name: searchTermExact
          required: false
          schema:
            minLength: 1
            type: string
        - in: query
          name: fromDate
          required: false
          schema:
            format: date-time
            type: string
        - in: query
          name: toDate
          required: false
          schema:
            format: date-time
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InboundReceiptJobPaginatedResult'
          description: Paginated Inbound Receipt Jobs
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: List inbound receipt jobs
      tags:
        - Inbound (Inventory)
      x-badges:
        - color: orange
          label: BETA
  /api/inboundreceiptjobs/{inboundEntryId}:
    get:
      deprecated: false
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getInboundReceiptJob
      parameters:
        - in: path
          name: inboundEntryId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InboundReceiptJob'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: Get inbound receipt job
      tags:
        - Inbound (Inventory)
      x-badges:
        - color: orange
          label: BETA
  /api/inventory/stocks/summaries:
    get:
      deprecated: true
      description: >-
        This part of the API is deprecated. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />This endpoint is deprecated. Please use /api/stocks/summaries instead.
      operationId: getStockSummariesDeprecated
      parameters:
        - in: query
          name: size
          required: false
          schema:
            default: 25
            maximum: 100
            minimum: 1
            type: number
        - description: >-
            The stockSummaries.article.tenantArticleId value should be used for
            pagination.
          in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - explode: false
          in: query
          name: facilityServiceTypes
          required: false
          schema:
            items:
              enum:
                - SHIP_FROM_STORE
                - PICKUP
              type: string
            type: array
        - explode: false
          in: query
          name: facilityStatus
          required: false
          schema:
            items:
              enum:
                - ONLINE
                - SUSPENDED
                - OFFLINE
              type: string
            type: array
        - explode: true
          in: query
          name: facilityRefs
          required: false
          schema:
            items:
              type: string
            type: array
        - in: query
          name: allowStale
          required: false
          schema:
            type: boolean
        - explode: true
          in: query
          name: tenantArticleIds
          required: false
          schema:
            items:
              type: string
            type: array
        - description: >-
            Returns stock summaries using adaptive batching to reduce latency
            spikes, as a consequence response time will have a more consistent
            upper bound but page size may be reduced below the maximum - This
            overrides `size` argument.
          in: query
          name: maxPageSize
          required: false
          schema:
            maximum: 100
            minimum: 1
            type: number
        - description: >-
            The channels to included under "channelAdjusted" in the stock
            summary. Provide up to 50 channelRefs, specify "UNALLOCATED for
            unallocated stock."
          explode: true
          in: query
          name: channelRefs
          required: false
          schema:
            items:
              type: string
            maxItems: 50
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StockSummaries'
          description: >-
            Stock summaries was loaded & you were allowed to access it. The
            result is in the body.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: List stock summaries
      tags:
        - Stocks (Inventory)
  /api/itemreturnjobs:
    get:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Returns the item return jobs matching the given parameters.
      operationId: getItemReturnJobs
      parameters:
        - description: facility to filter the results
          in: query
          name: facilityId
          required: false
          schema:
            type: string
        - description: scannableCodes of the item return job to filter the results
          in: query
          name: itemReturnJobScannableCodes
          required: false
          schema:
            items:
              type: string
            type: array
        - description: scannableCodes of the item return to filter the results
          in: query
          name: itemReturnScannableCodes
          required: false
          schema:
            items:
              type: string
            type: array
        - description: ItemReturnJobStatus to filter the results
          in: query
          name: itemReturnJobStatus
          required: false
          schema:
            items:
              type: string
            type: array
        - description: ItemReturnStatus of an included ItemReturn to filter the results
          in: query
          name: itemReturnStatus
          required: false
          schema:
            items:
              type: string
            type: array
        - description: Term by which to search through the fields
          in: query
          name: searchTerm
          required: false
          schema:
            type: string
        - description: entity to start after
          in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - description: number of entities to show
          in: query
          name: size
          required: false
          schema:
            default: 25
            type: integer
        - description: show anonymized entities or not
          in: query
          name: anonymized
          required: false
          schema:
            default: false
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ItemReturnJob'
          description: All Item Return Jobs matching the given parameters
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: List item return jobs
      tags:
        - Returns (Operations)
      x-badges:
        - color: orange
          label: BETA
    post:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Creates a new item return job.
      operationId: createItemReturnJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemReturnJobForCreation'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemReturnJob'
          description: Created entity
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: Create item return job
      tags:
        - Returns (Operations)
      x-badges:
        - color: orange
          label: BETA
  /api/itemreturnjobs/{itemReturnJobId}:
    get:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Returns an item return job with the provided id.
      operationId: getItemReturnJob
      parameters:
        - description: id of the item return job
          in: path
          name: itemReturnJobId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemReturnJob'
          description: Returns Item Return Job with the provided id
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: Get item return job
      tags:
        - Returns (Operations)
      x-badges:
        - color: orange
          label: BETA
  /api/itemreturnjobs/{itemReturnJobId}/actions:
    post:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Applies an action to an Item Return Job. Check
        ItemReturnJobActionsParameters for available actions.
      operationId: updateItemReturnJob
      parameters:
        - description: id of the Item Return Job
          in: path
          name: itemReturnJobId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemReturnJobActionsParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemReturnJob'
          description: Updated entity
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: Call item return job action
      tags:
        - Returns (Operations)
      x-badges:
        - color: orange
          label: BETA
  /api/itemreturnjobs/{itemReturnJobId}/itemreturns:
    get:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Returns the item returns for a given item return job.
      operationId: getItemReturns
      parameters:
        - description: item return job to read the item return for
          in: path
          name: itemReturnJobId
          required: true
          schema:
            type: string
        - description: entity to start after
          in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - description: number of entities to show
          in: query
          name: size
          required: false
          schema:
            default: 25
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ItemReturn'
          description: Get all item returns for a given item return job
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: List item returns
      tags:
        - Returns (Operations)
      x-badges:
        - color: orange
          label: BETA
    post:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Create a new item return for an item return job
      operationId: createItemReturn
      parameters:
        - description: Id of the item return job to create the item return for
          in: path
          name: itemReturnJobId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddItemReturnToItemReturnJob'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemReturnJob'
          description: ItemReturnJob containing the newly created item return
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: Create item return
      tags:
        - Returns (Operations)
      x-badges:
        - color: orange
          label: BETA
  /api/itemreturnjobs/{itemReturnJobId}/itemreturns/{itemReturnId}:
    delete:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Delete an item return from an item return job
      operationId: deleteItemReturn
      parameters:
        - description: id of the item return job to delete the item return for
          in: path
          name: itemReturnJobId
          required: true
          schema:
            type: string
        - description: id of the item return you want to delete
          in: path
          name: itemReturnId
          required: true
          schema:
            type: string
        - description: version of the item return job to delete the item return for
          in: query
          name: itemReturnJobVersion
          required: true
          schema:
            type: number
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemReturn'
          description: >-
            item return was found and successfully deleted. Updated item return
            job is returned.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: Delete item return
      tags:
        - Returns (Operations)
      x-badges:
        - color: orange
          label: BETA
    get:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Returns a specific item return for a given item return job.
      operationId: getItemReturn
      parameters:
        - description: item return job to read the item return for
          in: path
          name: itemReturnJobId
          required: true
          schema:
            type: string
        - description: id of the item return you want to read
          in: path
          name: itemReturnId
          required: true
          schema:
            type: string
        - description: entity to start after
          in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - description: number of entities to show
          in: query
          name: size
          required: false
          schema:
            default: 25
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemReturn'
          description: Get a specific item return
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: Get item return
      tags:
        - Returns (Operations)
      x-badges:
        - color: orange
          label: BETA
  /api/itemreturnjobs/{itemReturnJobId}/itemreturns/{itemReturnId}/actions:
    post:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Applies an action to an Item Return. Check ItemReturnActionsParameters
        for available actions.
      operationId: itemReturnActions
      parameters:
        - description: id of the Item Return Job
          in: path
          name: itemReturnJobId
          required: true
          schema:
            type: string
        - description: id of the Item Return
          in: path
          name: itemReturnId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemReturnActionsParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemReturnJob'
          description: Updated entity
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: Call item return action
      tags:
        - Returns (Operations)
      x-badges:
        - color: orange
          label: BETA
  /api/itemreturnjobs/{itemReturnJobId}/itemreturns/{itemReturnId}/parcels:
    post:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Returns all parcels for an itemReturn.
      operationId: createItemReturnParcel
      parameters:
        - description: itemReturnJobId
          in: path
          name: itemReturnJobId
          required: true
          schema:
            type: string
        - description: id of the itemReturn to create a parcel for
          in: path
          name: itemReturnId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ParcelForCreation'
        description: Payload of the parcel you want to create
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Parcel'
          description: Create a parcel for an itemReturn
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: Create item return parcel
      tags:
        - Returns (Operations)
      x-badges:
        - color: orange
          label: BETA
  /api/itemreturnjobs/{itemReturnJobId}/itemreturns/{itemReturnId}/returnedlineitems:
    put:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Replace returned line items of an item return of an item return job.
      operationId: replaceReturnedLineItems
      parameters:
        - description: id of the item return job the item return belongs to
          in: path
          name: itemReturnJobId
          required: true
          schema:
            type: string
        - description: id of the item return the returned line items belong to
          in: path
          name: itemReturnId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReplaceReturnedLineItems'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemReturnJob'
          description: >-
            The returned line items were successfully updated. Updated item
            return job is returned.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '409':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity version conflict
      summary: Update returned line items
      tags:
        - Returns (Operations)
      x-badges:
        - color: orange
          label: BETA
  /api/itemreturnjobs/{itemReturnJobId}/itemreturns/{itemReturnId}/returnedlineitems/{returnedLineItemId}:
    patch:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Patch for a ItemReturn LineItem. This is used to update the returned
        line item.
      operationId: updateItemReturnLineItem
      parameters:
        - description: id of the Item Return Job
          in: path
          name: itemReturnJobId
          required: true
          schema:
            type: string
        - description: id of the Item Return
          in: path
          name: itemReturnId
          required: true
          schema:
            type: string
        - description: id of the returnedLineItem
          in: path
          name: returnedLineItemId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemReturnLineItemForUpdate'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemReturnJob'
          description: Updated ItemReturnJob
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: Update returned line item
      tags:
        - Returns (Operations)
      x-badges:
        - color: orange
          label: BETA
  /api/itemreturns:
    get:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Returns the item returns matching the given parameters.
      operationId: findItemReturns
      parameters:
        - description: >-
            Search term you want to get the corresponding item returns. Search
            will be performed on multiple fields, including return id, tenant
            order id, customer name, tenant article ids, artile titles
          in: query
          name: searchTerm
          required: false
          schema:
            type: string
        - description: facilities to filter the results
          in: query
          name: facilityRefs
          required: false
          schema:
            items:
              type: string
            type: array
        - description: ItemReturnStatus of an included ItemReturn to filter the results
          in: query
          name: itemReturnStatus
          required: false
          schema:
            items:
              type: string
            type: array
        - description: >-
            ItemReturnLineItemStatus of an included itemReturnLineItem to filter
            the results
          in: query
          name: itemReturnLineItemStatus
          required: false
          schema:
            items:
              type: string
            type: array
        - description: entity to start after
          in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - description: number of entities to show
          in: query
          name: size
          required: false
          schema:
            default: 25
            type: integer
        - description: show anonymized entities or not
          in: query
          name: anonymized
          required: false
          schema:
            default: false
            type: boolean
        - description: sorting for the results
          in: query
          name: orderBy
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ItemReturn'
          description: All Item Returns matching the given parameters
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: Get item returns
      tags:
        - Returns (Operations)
      x-badges:
        - color: orange
          label: BETA
  /api/linkedservicejobs:
    get:
      operationId: getLinkedServiceJobs
      parameters:
        - description: all entities after given Id
          in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - description: number of entities to show
          in: query
          name: size
          required: false
          schema:
            default: 25
            type: integer
        - description: facilities to filter to
          in: query
          name: facilityIds
          required: false
          schema:
            items:
              type: string
            type: array
        - description: >-
            Reference to the statuses you want to get the corresponding linked
            service jobs
          in: query
          name: status
          required: false
          schema:
            items:
              type: string
            type: array
        - description: sort order
          in: query
          name: orderBy
          required: false
          schema:
            $ref: '#/components/schemas/LinkedServiceJobsOrderBy'
        - description: type of channel you want to filter for
          in: query
          name: channel
          required: false
          schema:
            $ref: '#/components/schemas/LinkedServiceJobsFilterChannel'
        - description: Start target date range for linked service jobs
          in: query
          name: startTargetTime
          required: false
          schema:
            example: 2020-02-03T08:45:50.525Z
            format: date-time
            type: string
        - description: End target date range for linked service jobs
          in: query
          name: endTargetTime
          required: false
          schema:
            example: 2020-02-03T08:45:50.525Z
            format: date-time
            type: string
        - description: >-
            Search term you want to get the corresponding linked service jobs.
            Search will be performed on multiple fields, like tenantOrderId,
            consumerName, tenantArticleId and more
          in: query
          name: searchTerm
          required: false
          schema:
            type: string
        - description: >-
            Reference to the username you want to get the corresponding
            linkedServiceJobs for
          in: query
          name: modifiedByUsername
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkedServiceJobsResult'
          description: LinkedServiceJobs could be found in response body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: List linked service jobs
      tags:
        - Services (Operations)
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      x-badges:
        - color: red
          label: ALPHA
  /api/linkedservicejobs/{linkedServiceJobsId}:
    get:
      operationId: getLinkedServiceJobsById
      parameters:
        - description: ID of LinkedServiceJobs you want to get
          in: path
          name: linkedServiceJobsId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkedServiceJobs'
          description: LinkedServiceJobs could be found in response body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: Get linked service jobs
      tags:
        - Services (Operations)
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      x-badges:
        - color: red
          label: ALPHA
  /api/linkedservicejobs/{linkedServiceJobsId}/servicejoblinks:
    post:
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />Add
        a ServiceJobLink to a LinkedServiceJob on root level.
      operationId: addServiceJobLink
      parameters:
        - description: ID of LinkedServiceJobs you want to alter
          in: path
          name: linkedServiceJobsId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceJobLinkForAdding'
        description: Desired ServiceJobLink to add
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkedServiceJobs'
          description: The ServiceJobLink was successfully added to the LinkedServiceJobs.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: Create service job link
      tags:
        - Services (Operations)
      x-badges:
        - color: red
          label: ALPHA
  /api/linkedservicejobs/{linkedServiceJobsId}/servicejoblinks/{serviceJobLinkId}:
    post:
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />Add
        a ServiceJobLink to a ServiceJobLink inside the LinkedServiceJob.
      operationId: addNestedServiceJobLink
      parameters:
        - description: ID of LinkedServiceJobs you want to alter
          in: path
          name: linkedServiceJobsId
          required: true
          schema:
            type: string
        - description: >-
            ID of ServiceJobLink you want to add the new ServiceJobLink
            underneath
          in: path
          name: serviceJobLinkId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceJobLinkForAdding'
        description: Desired ServiceJobLink to add
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkedServiceJobs'
          description: >-
            The ServiceJobLink was successfully added nested inside the
            LinkedServiceJobs.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: Create service job link
      tags:
        - Services (Operations)
      x-badges:
        - color: red
          label: ALPHA
  /api/linkedservicejobs/search:
    post:
      deprecated: false
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Search for LinkedServiceJobs
      operationId: searchLinkedServiceJobs
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LinkedServiceJobsSearchPayload'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkedServiceJobsPaginatedResult'
          description: Your search result
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: List linked service jobs (search)
      tags:
        - Services (Operations)
      x-badges:
        - color: orange
          label: BETA
  /api/listings:
    put:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Bulk upsert listings independently of their facility
      operationId: bulkUpsertListings
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListingBulkUpsertPayload'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListingBulkUpsertResponse'
          description: Result of the bulk upsert operation
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: The requested entity was not found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: A version conflict occurred.
      summary: Update listings
      tags:
        - Listings (Core)
      x-badges:
        - color: red
          label: ALPHA
  /api/listings/search:
    post:
      deprecated: false
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Search for Listing
      operationId: searchListing
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListingSearchPayload'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListingPaginatedResult'
          description: Your search result
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: List listings (search)
      tags:
        - Listings (Core)
      x-badges:
        - color: orange
          label: BETA
  /api/loadunits:
    delete:
      operationId: deleteLoadUnits
      parameters:
        - description: Reference to the pickJob of which you want to delete the loadUnits
          in: query
          name: pickJobRef
          required: false
          schema:
            type: string
        - description: Load unit ids
          explode: true
          in: query
          name: id
          required: false
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoadUnits'
          description: Load units are successfully deleted.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Entity not found
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: LoadUnits could not be removed due to failing conditions
      summary: Delete load units
      tags:
        - Picking (Operations)
    get:
      operationId: getAllLoadUnits
      parameters:
        - description: all entities after given Id
          in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - description: number of loadUnits to show
          in: query
          name: size
          required: false
          schema:
            default: 25
            type: integer
        - description: query load units with the given pickJobRef
          in: query
          name: pickJobRef
          required: false
          schema:
            type: string
        - description: >-
            Provide the localized names and descriptions for the routing
            configuration. If not provided the default locale is used., for
            example de_DE
          in: query
          name: locale
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoadUnits'
          description: Load units are found.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: List load units
      tags:
        - Picking (Operations)
    post:
      operationId: addLoadUnit
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoadUnitsForCreation'
        description: Representation that describes the unit load
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoadUnits'
          description: Load units are successfully created.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: Create load units
      tags:
        - Picking (Operations)
  /api/loadunits/{loadUnitId}:
    delete:
      operationId: deleteLoadUnit
      parameters:
        - in: path
          name: loadUnitId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoadUnit'
          description: Successfully deleted load unit.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: Delete load unit
      tags:
        - Picking (Operations)
    get:
      operationId: getLoadUnitByID
      parameters:
        - in: path
          name: loadUnitId
          required: true
          schema:
            type: string
        - description: >-
            Provide the localized names and descriptions for the routing
            configuration. If not provided the default locale is used., for
            example de_DE
          in: query
          name: locale
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoadUnit'
          description: The found load unit.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: Get load unit
      tags:
        - Picking (Operations)
    patch:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />LoadUnitPatchActions: Deprecated - For future usage please use the
        /actions endpoints mentioned in the corresponding PatchActions LoadUnit:
        Partial Patch on this entity.
      operationId: patchLoadUnitByID
      parameters:
        - in: path
          name: loadUnitId
          required: true
          schema:
            type: string
        - description: >-
            Provide the localized names and descriptions for the routing
            configuration. If not provided the default locale is used., for
            example de_DE
          in: query
          name: locale
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              anyOf:
                - $ref: '#/components/schemas/LoadUnitPatchActions'
                - $ref: '#/components/schemas/LoadUnit'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoadUnit'
          description: The found load unit.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: Update load unit
      tags:
        - Picking (Operations)
      x-badges:
        - color: orange
          label: BETA
  /api/loadunits/{loadUnitId}/actions:
    post:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Applies actions to a load unit. Check LoadUnitActionsParameter for
        available actions.
      operationId: updateLoadUnit
      parameters:
        - description: id of the load unit
          in: path
          name: loadUnitId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoadUnitActionsParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoadUnit'
          description: Updated entity
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: Call load unit action
      tags:
        - Picking (Operations)
      x-badges:
        - color: orange
          label: BETA
  /api/loadunits/{loadUnitId}/stack:
    get:
      operationId: getStackForLoadUnit
      parameters:
        - in: path
          name: loadUnitId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stack'
          description: The found stack for this load unit.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: Get load unit stack
      tags:
        - Picking (Operations)
  /api/loadunittypes:
    get:
      deprecated: true
      operationId: getLoadUnitTypes
      parameters:
        - description: all entities after given Id
          in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - description: number of entities to show
          in: query
          name: size
          required: false
          schema:
            default: 25
            type: integer
        - description: >-
            Provide the localized names and descriptions for the routing
            configuration. If not provided the default locale is used., for
            example de_DE
          in: query
          name: locale
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoadUnitTypes'
          description: All load unit types.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: List load unit types
      tags:
        - Picking (Operations)
    post:
      deprecated: true
      operationId: createLoadUnitTypes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoadUnitTypeForCreation'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoadUnitType'
          description: Successfully created resource.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: Create load unit type
      tags:
        - Picking (Operations)
  /api/loadunittypes/{loadUnitTypeId}:
    get:
      deprecated: true
      operationId: getLoadUnitTypeByID
      parameters:
        - in: path
          name: loadUnitTypeId
          required: true
          schema:
            type: string
        - description: >-
            Provide the localized names and descriptions for the routing
            configuration. If not provided the default locale is used., for
            example de_DE
          in: query
          name: locale
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoadUnitType'
          description: The found load unit type.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: Get load unit type
      tags:
        - Picking (Operations)
    patch:
      deprecated: true
      operationId: updateLoadUnitType
      parameters:
        - in: path
          name: loadUnitTypeId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoadUnitTypePatchActions'
        description: Patch set
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoadUnitType'
          description: Successfully updated load unit type.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: Update load unit type
      tags:
        - Picking (Operations)
  /api/loadunittypes/{loadUnitTypeId}/icon:
    put:
      deprecated: true
      operationId: uploadLoadUnitTypeIcon
      parameters:
        - in: path
          name: loadUnitTypeId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NamedFile'
        description: Base64 encoded icon to upload
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoadUnitType'
          description: Successfully updated load unit type icon.
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoadUnitType'
          description: Successfully created load unit type icon.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: Update load unit type icon
      tags:
        - Picking (Operations)
  /api/measurementunits:
    get:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getAllMeasurementUnits
      parameters:
        - description: all entities after given Id
          in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - description: number of measurementUnits to show
          in: query
          name: size
          required: false
          schema:
            default: 25
            type: integer
        - description: key of the measurementUnit
          in: query
          name: key
          required: false
          schema:
            type: string
        - description: >-
            Provide the localized names for the measurementUnit. If not provided
            the default locale is used., for example de_DE.
          in: query
          name: locale
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeasurementUnits'
          description: The found measurementUnit.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: List measurement units
      tags:
        - Measurement Units (Core)
      x-badges:
        - color: orange
          label: BETA
    post:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: createMeasurementUnit
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeasurementUnitForCreation'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeasurementUnit'
          description: Successfully created the measurementUnit.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: Create measurement unit
      tags:
        - Measurement Units (Core)
      x-badges:
        - color: orange
          label: BETA
  /api/measurementunits/{measurementUnitId}:
    delete:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: deleteMeasurementUnit
      parameters:
        - in: path
          name: measurementUnitId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully deleted the measurementUnit.
        '401':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: Delete measurement unit
      tags:
        - Measurement Units (Core)
      x-badges:
        - color: orange
          label: BETA
    get:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getMeasurementUnitByID
      parameters:
        - in: path
          name: measurementUnitId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeasurementUnit'
          description: The found measurementUnit.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: Get measurement unit
      tags:
        - Measurement Units (Core)
      x-badges:
        - color: orange
          label: BETA
    put:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: updateMeasurementUnit
      parameters:
        - in: path
          name: measurementUnitId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeasurementUnitForCreation'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeasurementUnit'
          description: Successfully updated the measurementUnit.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: Update measurement unit
      tags:
        - Measurement Units (Core)
      x-badges:
        - color: orange
          label: BETA
  /api/operativecontainertypes:
    get:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Returns all operativeContainerTypes that match the given query
        parameters.
      operationId: getOperativeContainerTypes
      parameters:
        - description: entity to start after
          in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - description: number of entities to show
          in: query
          name: size
          required: false
          schema:
            default: 25
            maximum: 500
            minimum: 1
            type: integer
        - description: OperativeType you want to filter by
          in: query
          name: operativeType
          required: false
          schema:
            type: string
        - description: ScannableIdentifier you want to filter by
          in: query
          name: scannableIdentifier
          required: false
          schema:
            type: string
        - description: >-
            Provide the localized names and descriptions for the
            operativContainerType. If not provided the default locale is used.,
            for example de_DE.
          in: query
          name: locale
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperativeContainerTypesResponse'
          description: Found operativeProcess by given ID
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: List operative container types
      tags:
        - Operative Container (Operations)
      x-badges:
        - color: orange
          label: BETA
    post:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Creates a new operativeContainerType.
      operationId: createOperativeContainerType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OperativeContainerTypeForCreation'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperativeContainerType'
          description: Successfully created resource.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: Create operative container type
      tags:
        - Operative Container (Operations)
      x-badges:
        - color: orange
          label: BETA
  /api/operativecontainertypes/{operativeContainerTypeId}:
    get:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Returns the operativeContainerType with the given ID.
      operationId: getOperativeContainerTypeById
      parameters:
        - description: id of the operativeContainer you want to retrieve
          in: path
          name: operativeContainerTypeId
          required: true
          schema:
            type: string
        - description: >-
            Provide the localized names and descriptions for the
            operativeContainerTypes. If not provided the default locale is
            used., for example de_DE.
          in: query
          name: locale
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperativeContainerType'
          description: Found operativeContainerType by given ID
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: Get operative container type
      tags:
        - Operative Container (Operations)
      x-badges:
        - color: orange
          label: BETA
    patch:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Updates the operativeContainerType with the given ID.
      operationId: updateOperativeContainerTypeById
      parameters:
        - description: id of the operativeContainer you want to update
          in: path
          name: operativeContainerTypeId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OperativeContainerTypeForUpdate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperativeContainerType'
          description: Found operativeContainerType by given ID
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: Update operative container type
      tags:
        - Operative Container (Operations)
      x-badges:
        - color: orange
          label: BETA
  /api/operativecontainertypes/{operativeContainerTypeId}/icon:
    put:
      operationId: uploadOperativeContainerTypeIcon
      parameters:
        - in: path
          name: operativeContainerTypeId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NamedFile'
        description: Base64 encoded icon to upload
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperativeContainerType'
          description: Successfully updated operative container type icon.
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperativeContainerType'
          description: Successfully created operative container type icon.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: Update operative container type icon
      tags:
        - Operative Container (Operations)
  /api/operativeprocesses:
    get:
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getOperativeProcesses
      parameters:
        - description: facility to filter the results
          in: query
          name: facilityId
          required: true
          schema:
            type: string
        - description: entity to start after
          in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - description: number of entities to show
          in: query
          name: size
          required: false
          schema:
            default: 25
            maximum: 500
            minimum: 1
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/OperativeProcess'
          description: All operative processes matching the given parameters
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: List operative processes
      tags:
        - Operative Process (Operations)
      x-badges:
        - color: red
          label: ALPHA
  /api/operativeprocesses/{operativeProcessId}:
    get:
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getOperativeProcessById
      parameters:
        - description: id of the operativeProcess you want to retrieve
          in: path
          name: operativeProcessId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperativeProcess'
          description: Found operativeProcess by given ID
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: Get operative process
      tags:
        - Operative Process (Operations)
      x-badges:
        - color: red
          label: ALPHA
  /api/orders:
    get:
      description: ''
      operationId: getAllOrders
      parameters:
        - description: all entities after given Id
          in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - description: number of entities to show
          in: query
          name: size
          required: false
          schema:
            default: 25
            type: integer
        - description: filter orders by tenantOrderId
          in: query
          name: tenantOrderId
          required: false
          schema:
            type: string
        - description: filter orders by consumerId
          in: query
          name: consumerId
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StrippedOrders'
          description: Orders are found.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: List orders
      tags:
        - Orders (DOMS)
    post:
      description: ''
      operationId: addOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderForCreation'
        description: Order object supplied by your shop instance.
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: >-
            The order was successfully created. The Location header contains the
            URL of the order.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: Create order
      tags:
        - Orders (DOMS)
  /api/orders/{orderId}:
    get:
      description: ''
      operationId: getOrder
      parameters:
        - description: ID of order you want to get
          in: path
          name: orderId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: >-
            Order was found & you were allowed to access it. The result is in
            the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: Get order
      tags:
        - Orders (DOMS)
    patch:
      description: ''
      operationId: updateOrder
      parameters:
        - description: ID of Order you want to patch
          in: path
          name: orderId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderForUpdate'
        description: Request body for updating an order
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: >-
            Order was found & patch-set has been applied. The patched entity is
            in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found, for more information please look at details.
      summary: Update order
      tags:
        - Orders (DOMS)
  /api/orders/{orderId}/actions:
    post:
      operationId: orderAction
      parameters:
        - description: Reference to the order you want to call the action for
          in: path
          name: orderId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderActionsParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: Updated Order in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Order not found or expired
      summary: Call order action
      tags:
        - Orders (DOMS)
  /api/orders/{orderId}/cancel:
    post:
      deprecated: true
      description: >-
        This part of the API is deprecated. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />Use
        /actions with "CANCEL" instead.
      operationId: cancelOrder
      parameters:
        - description: ID of order you want to cancel
          in: path
          name: orderId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                cancelationReasonId:
                  description: ID of the cancelation reason
                  type: string
              type: object
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: Order was cancelled sucessfully
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: Cancel order
      tags:
        - Orders (DOMS)
  /api/orders/{orderId}/orderlineitems/{orderLineItemId}/actions:
    post:
      operationId: orderLineItemAction
      parameters:
        - description: Reference to the order you want to call the action for
          in: path
          name: orderId
          required: true
          schema:
            type: string
        - description: Reference to the order line item you want to call the action for
          in: path
          name: orderLineItemId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderLineItemActionsParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: Updated Order in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: Call order line item action
      tags:
        - Orders (DOMS)
  /api/orders/search:
    post:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Search for Order
      operationId: searchOrder
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderSearchPayload'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderPaginatedResult'
          description: Your search result
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: List orders (search)
      tags:
        - Orders (DOMS)
      x-badges:
        - color: red
          label: ALPHA
  /api/packingcontainertypes:
    get:
      deprecated: true
      description: Get all packing container types, use operative container types
      operationId: getPackingContainerTypes
      parameters:
        - description: >-
            Provide the localized values for the entity. If not provided the
            default locale is used. For example de_DE.
          in: query
          name: locale
          schema:
            type: string
        - description: all entities after given id
          in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - description: number of entities to show
          in: query
          name: size
          required: false
          schema:
            default: 25
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PackingContainerType'
                type: array
          description: Found PackingContainerTypes
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: List packing container types
      tags:
        - Packing (Operations)
    post:
      deprecated: true
      description: Add a new packing container type, use operative container types.
      operationId: addPackingContainerType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PackingContainerTypeForCreation'
        description: Packing type object
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PackingContainerType'
          description: >-
            The packing container type was successfully created. The Location
            header contains the URL of the packing container type.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: Create packing container type
      tags:
        - Packing (Operations)
  /api/packingcontainertypes/{packingContainerTypeId}:
    get:
      deprecated: true
      description: ''
      operationId: getPackingContainerType
      parameters:
        - description: >-
            Provide the localized values for the entity. If not provided the
            default locale is used. For example de_DE.
          in: query
          name: locale
          schema:
            type: string
        - description: id of entity
          in: path
          name: packingContainerTypeId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PackingContainerType'
          description: Found PackingContainerType
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: Get packing container type
      tags:
        - Packing (Operations)
    patch:
      deprecated: true
      description: >-
        Patches a PackingContainerType with the given ID, use operative
        container types
      operationId: updatePackingContainerType
      parameters:
        - description: ID of the packingcontainertype you want to change
          in: path
          name: packingContainerTypeId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PackingContainerTypePatchActions'
        description: Patch set
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PackingContainerType'
          description: >-
            PackingContainerType was found & patch-set has been applied. The
            patched PackingContainerType is in the body.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: PackingContainerType not found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: PackingContainerType version conflict
      summary: Update packing container type
      tags:
        - Packing (Operations)
  /api/packingsourcecontainers:
    get:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Listing packingSourceContainer.
      operationId: getPackingSourceContainers
      parameters:
        - description: >-
            Provide the localized values for the entity. If not provided the
            default locale is used. For example de_DE.
          in: query
          name: locale
          schema:
            type: string
        - description: all entities after given id
          in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - description: number of entities to show
          in: query
          name: size
          required: false
          schema:
            default: 25
            maximum: 500
            type: integer
        - description: filter by packJobRef
          in: query
          name: packJobRef
          required: false
          schema:
            type: string
        - description: filter by facilityRef
          in: query
          name: facilityRef
          required: true
          schema:
            type: string
        - description: filter by scannablecodes
          in: query
          name: codes
          required: false
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PaginatedPackingSourceContainers'
                type: array
          description: Found Packing Source Container
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: List packing source containers
      tags:
        - Packing (Operations)
      x-badges:
        - color: orange
          label: BETA
    post:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Creating new packingSourceContainer.
      operationId: addPackingSourceContainer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PackingSourceContainerForCreation'
        description: Packing type object
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PackingSourceContainer'
          description: >-
            The packing source container  was successfully created. The Location
            header contains the URL of the packing source container.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: Create packing source container
      tags:
        - Packing (Operations)
      x-badges:
        - color: orange
          label: BETA
  /api/packingsourcecontainers/{packingSourceContainerId}:
    get:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />Get
        PackingSourceContainer by ID.
      operationId: getPackingSourceContainerById
      parameters:
        - description: ID of the packingSourceContainer
          in: path
          name: packingSourceContainerId
          required: true
          schema:
            type: string
        - description: >-
            Provide the localized values for the entity. If not provided the
            default locale is used. For example de_DE.
          in: query
          name: locale
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PackingSourceContainer'
                type: array
          description: Found packingSourceContainer
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: Get packing source container
      tags:
        - Packing (Operations)
      x-badges:
        - color: orange
          label: BETA
  /api/packjobs:
    get:
      description: ''
      operationId: getPackJobs
      parameters:
        - description: number of entities to show
          in: query
          name: size
          required: false
          schema:
            default: 25
            type: integer
        - description: all entities after given Id
          in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - description: Parameter to filter anonymized pack jobs
          in: query
          name: anonymized
          required: false
          schema:
            type: boolean
        - description: Reference the assigned user on this entity - id or username
          in: query
          name: assignedUser
          required: false
          schema:
            type: string
        - description: Reference to the status you want to get the corresponding packJobs
          explode: false
          in: query
          name: status
          required: false
          schema:
            items:
              type: string
            type: array
        - description: Reference to the facility you want to get the corresponding packJobs
          in: query
          name: facilityRef
          required: false
          schema:
            type: string
        - description: Term by which to search through the fields
          in: query
          name: searchTerm
          required: false
          schema:
            type: string
        - description: Reference to the channel you want to get the corresponding packJobs
          in: query
          name: channel
          required: false
          schema:
            enum:
              - COLLECT
              - SHIPPING
            type: string
        - description: filter by packingsourcecontainer containing codes
          in: query
          name: sourceContainerCodes
          required: false
          schema:
            items:
              type: string
            type: array
        - description: query packjobs orderBy
          in: query
          name: orderBy
          required: false
          schema:
            $ref: '#/components/schemas/PackJobOrderBy'
        - description: Start date range for pack jobs
          in: query
          name: startTargetTime
          required: false
          schema:
            example: 2020-02-03T08:45:50.525Z
            format: date-time
            type: string
        - description: End date range for pack jobs
          in: query
          name: endTargetTime
          required: false
          schema:
            example: 2020-02-03T08:45:50.525Z
            format: date-time
            type: string
        - description: Reference to the order you want to get the corresponding packJobs
          in: query
          name: orderRef
          required: false
          schema:
            type: string
        - description: Reference to the packJobs you want to get
          in: query
          name: packJobIds
          required: false
          schema:
            items:
              type: string
            type: array
        - description: Reference to the process you want to get the corresponding packJobs
          in: query
          name: processId
          required: false
          schema:
            type: string
        - description: >-
            Reference to the pickJobRef you want to get the corresponding
            packJobs
          in: query
          name: pickJobRef
          required: false
          schema:
            type: string
        - description: Reference to the shortId you want to get the corresponding packJobs
          in: query
          name: shortId
          required: false
          schema:
            type: string
        - description: >-
            Reference to the articleTitle you want to get the corresponding
            packJobs
          in: query
          name: articleTitle
          required: false
          schema:
            type: string
        - description: Start date range of the order for the corresponding pack jobs
          in: query
          name: startOrderDate
          required: false
          schema:
            example: 2020-02-03T08:45:50.525Z
            format: date-time
            type: string
        - description: End date range of the order for the corresponding pack jobs
          in: query
          name: endOrderDate
          required: false
          schema:
            example: 2020-02-03T08:45:50.525Z
            format: date-time
            type: string
        - description: >-
            Reference to the username you want to get the corresponding pack
            jobs
          in: query
          name: modifiedByUsername
          required: false
          schema:
            type: string
        - description: >-
            Reference to the tenantOrderId you want to get the corresponding
            packJobs
          in: query
          name: tenantOrderId
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PackJobs'
          description: >-
            Pack jobs was loaded & you were allowed to access it. The result is
            in the body.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: List pack jobs
      tags:
        - Packing (Operations)
    post:
      description: ''
      operationId: addPackJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PackJobForCreation'
        description: Pack job object
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PackJob'
          description: >-
            The pack job was successfully created. The Location header contains
            the URL of the pack job.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: Create pack job
      tags:
        - Packing (Operations)
  /api/packjobs/{packJobId}:
    get:
      description: ''
      operationId: getPackJob
      parameters:
        - description: ID of the pack job you want to get
          in: path
          name: packJobId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PackJob'
          description: >-
            Pack job was found & you were allowed to access it. The result is in
            the body.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: Get pack job
      tags:
        - Packing (Operations)
    patch:
      description: ''
      operationId: patchPackJob
      parameters:
        - description: ID of the packjob you want to get
          in: path
          name: packJobId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PackJobPatchActions'
        description: Patch set
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PackJob'
          description: >-
            PackJob was found & patch-set has been applied. The patched pack job
            is in the body.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: PackJob not found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: PackJob version conflict
      summary: Update pack job
      tags:
        - Packing (Operations)
  /api/packjobs/{packJobId}/actions:
    post:
      operationId: packJobAction
      parameters:
        - description: Reference to the pack job you want to call an action for
          in: path
          name: packJobId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PackJobActionsParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PackJob'
          description: Updated PackJob in the body.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Enitity not found
      summary: Call pack job action
      tags:
        - Packing (Operations)
  /api/packjobs/{packJobId}/deliverynote:
    get:
      description: ''
      operationId: getPackJobDeliveryNote
      parameters:
        - description: ID of the pack job for which you want to get a deliverynote
          in: path
          name: packJobId
          required: true
          schema:
            type: string
        - description: >-
            Provide the localized values for the delivery note. If not provided
            the default locale is used. For example de_DE.
          in: query
          name: locale
          schema:
            type: string
      responses:
        '200':
          content:
            application/pdf: {}
          description: The deliverynote for the given packjob
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: Get pack job delivery note
      tags:
        - Packing (Operations)
  /api/packjobs/{packJobId}/documenthandling:
    get:
      description: ''
      operationId: getPackJobDocumentHandling
      parameters:
        - description: ID of the pack job you want to get document handling information
          in: path
          name: packJobId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentHandling'
          description: >-
            Pack job document handling was found & you were allowed to access
            it. The result is in the body.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: Get pack job document handling
      tags:
        - Packing (Operations)
  /api/packjobs/{packJobId}/returnnote:
    get:
      description: ''
      operationId: getReturnNotesForPackJob
      parameters:
        - description: ID of the PackJob
          in: path
          name: packJobId
          required: true
          schema:
            type: string
        - description: >-
            Provide the localized values for the delivery note. If not provided
            the default locale is used. For example de_DE.
          in: query
          name: locale
          schema:
            type: string
      responses:
        '200':
          content:
            application/pdf: {}
          description: Returns a return note for the packjob.
        '401':
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: Get pack job return note
      tags:
        - Packing (Operations)
  /api/packjobs/{packJobId}/targetcontainers:
    get:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Returns all packing containers on given packJob
      operationId: getAllTargetcontainers
      parameters:
        - description: ID of the pack job you want to get
          in: path
          name: packJobId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PackingTargetContainer'
          description: >-
            Entity was found & you were allowed to access it. The result is in
            the body.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: List pack job target containers
      tags:
        - Packing (Operations)
      x-badges:
        - color: orange
          label: BETA
    post:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Creates a new packing target container on given packJob
      operationId: addTargetContainers
      parameters:
        - description: ID of the pack job you want to get
          in: path
          name: packJobId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PackingTargetContainerForCreation'
        description: Packing Container object
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PackingTargetContainer'
          description: The packing container was successfully created.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: Create pack job target container
      tags:
        - Packing (Operations)
      x-badges:
        - color: orange
          label: BETA
  /api/packjobs/{packJobId}/targetcontainers/{targetcontainerId}:
    delete:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Deletes a packing target container
      operationId: deletePackingTargetContainer
      parameters:
        - description: ID of corresponding packJob you want to patch
          in: path
          name: packJobId
          required: true
          schema:
            type: string
        - description: ID of container you want to delete
          in: path
          name: targetcontainerId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Container was found & you were allowed to delete it.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: Delete pack job target container
      tags:
        - Packing (Operations)
      x-badges:
        - color: orange
          label: BETA
    get:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Returns a packing target container with the given ID on given packJob
      operationId: getTargetcontainer
      parameters:
        - description: >-
            Provide the localized values for the entity. If not provided the
            default locale is used. For example de_DE.
          in: query
          name: locale
          schema:
            type: string
        - description: ID of the pack job you want to get
          in: path
          name: packJobId
          required: true
          schema:
            type: string
        - description: ID of the target container you want to get
          in: path
          name: targetcontainerId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PackingTargetContainer'
          description: >-
            Entity was found & you were allowed to access it. The result is in
            the body.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: Get pack job target container
      tags:
        - Packing (Operations)
      x-badges:
        - color: orange
          label: BETA
    patch:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Patches a packing target container
      operationId: patchTargetcontainer
      parameters:
        - description: ID of corresponding packJob you want to patch
          in: path
          name: packJobId
          required: true
          schema:
            type: string
        - description: ID of container you want to patch
          in: path
          name: targetcontainerId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PackingTargetContainerPatchActions'
        description: Patch set
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PackingTargetContainer'
          description: >-
            Container was found & patch-set has been applied. The patched entity
            is in the body.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Entity not found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Entity version conflict
      summary: Update pack job target container
      tags:
        - Packing (Operations)
      x-badges:
        - color: orange
          label: BETA
    post:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Adds a new line item to a packing target container
      operationId: addTargetcontainer
      parameters:
        - description: ID of the pack job you want to get
          in: path
          name: packJobId
          required: true
          schema:
            type: string
        - description: ID of the container you want to add new line item to it
          in: path
          name: targetcontainerId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PackingTargetContainerLineItemForCreation'
        description: Packing Container line item object
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PackingTargetContainer'
          description: The packing container was successfully created.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: Add pack job target container line item
      tags:
        - Packing (Operations)
      x-badges:
        - color: orange
          label: BETA
  /api/packjobs/{packJobId}/targetcontainers/{targetcontainerId}/deliverynote:
    get:
      description: ''
      operationId: getPackingTargetContainerDeliveryNote
      parameters:
        - description: ID of the pack job for which you want to get a deliverynote
          in: path
          name: packJobId
          required: true
          schema:
            type: string
        - description: >-
            ID of the packingTargetContainer for which you want to get a
            deliverynote
          in: path
          name: targetcontainerId
          required: true
          schema:
            type: string
        - description: >-
            Provide the localized values for the delivery note. If not provided
            the default locale is used. For example de_DE.
          in: query
          name: locale
          schema:
            type: string
      responses:
        '200':
          content:
            application/pdf: {}
          description: The deliverynote for the given packingTargetContainer
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: Get target container delivery note
      tags:
        - Packing (Operations)
  /api/packjobs/{packJobId}/targetcontainers/{targetcontainerId}/lineitems/{lineItemId}:
    delete:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Deletes a line item of a packing container
      operationId: deleteLineItemTargetContainers
      parameters:
        - description: ID of corresponding packJob you want to patch
          in: path
          name: packJobId
          required: true
          schema:
            type: string
        - description: ID of container you want to patch
          in: path
          name: targetcontainerId
          required: true
          schema:
            type: string
        - description: ID of line item you want to patch
          in: path
          name: lineItemId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: LineItem was found & you were allowed to delete it.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Facility not found
      summary: Delete target container line item
      tags:
        - Packing (Operations)
      x-badges:
        - color: orange
          label: BETA
    patch:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Patch line item of a packing container
      operationId: patchTargetContainerLineItem
      parameters:
        - description: ID of corresponding packJob you want to patch
          in: path
          name: packJobId
          required: true
          schema:
            type: string
        - description: ID of container you want to patch
          in: path
          name: targetcontainerId
          required: true
          schema:
            type: string
        - description: ID of line item you want to patch
          in: path
          name: lineItemId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PackingTargetContainerActionsParameter'
        description: Patch set
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PackingTargetContainer'
          description: >-
            Container was found & patch-set has been applied. The patched entity
            is in the body.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Entity not found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Entity version conflict
      summary: Update target container line item
      tags:
        - Packing (Operations)
      x-badges:
        - color: orange
          label: BETA
  /api/packjobs/{packJobId}/targetcontainers/{targetcontainerId}/returnnote:
    get:
      description: ''
      operationId: getReturnNotesForPackingTargetContainer
      parameters:
        - description: ID of the pack job for which you want to get a deliverynote
          in: path
          name: packJobId
          required: true
          schema:
            type: string
        - description: ID of the PackingTargetContainer
          in: path
          name: targetcontainerId
          required: true
          schema:
            type: string
        - description: >-
            Provide the localized values for the return note. If not provided
            the default locale is used. For example de_DE.
          in: query
          name: locale
          schema:
            type: string
      responses:
        '200':
          content:
            application/pdf: {}
          description: Returns a return note for the PackingTargetContainer.
        '401':
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: Get target container return note
      tags:
        - Packing (Operations)
  /api/packjobs/{packJobId}/targetcontainers/{targetcontainerId}/transferlabel:
    get:
      description: ''
      operationId: getPackingTargetContainerTransferLabel
      parameters:
        - description: ID of the pack job for which you want to get a transfer label
          in: path
          name: packJobId
          required: true
          schema:
            type: string
        - description: >-
            ID of the packingTargetContainer for which you want to get a
            transfer label
          in: path
          name: targetcontainerId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/pdf: {}
          description: The transfer label for the given packingTargetContainer
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: Get target container transfer label
      tags:
        - Packing (Operations)
  /api/packjobs/{packJobId}/transferlabel:
    get:
      description: ''
      operationId: getPackJobTransferLabel
      parameters:
        - description: ID of the pack job for which you want to get a transfer label
          in: path
          name: packJobId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/pdf: {}
          description: The transfer label for the given packjob
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: Get pack job transfer label
      tags:
        - Packing (Operations)
  /api/packjobs/search:
    post:
      deprecated: false
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Search for PackJob
      operationId: searchPackJob
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PackJobSearchPayload'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PackJobPaginatedResult'
          description: Your search result
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: List pack jobs (search)
      tags:
        - Packing (Operations)
      x-badges:
        - color: orange
          label: BETA
  /api/parcels:
    get:
      description: ''
      operationId: getAllParcels
      parameters:
        - description: all entities after given Id
          in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - description: number of entities to show
          in: query
          name: size
          required: false
          schema:
            default: 25
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StrippedParcels'
          description: Parcels are found.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: List parcels
      tags:
        - Shipments (Operations)
  /api/parcels/{parcelId}:
    delete:
      description: ''
      operationId: deleteParcel
      parameters:
        - description: ID of the parcel you want to delete
          in: path
          name: parcelId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Parcel was successfully deleted
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: Delete parcel
      tags:
        - Shipments (Operations)
    get:
      description: ''
      operationId: getParcel
      parameters:
        - description: ID of the parcel you want to get
          in: path
          name: parcelId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Parcel'
          description: >-
            Parcel was found & you were allowed to access it. The result is in
            the body.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: Get parcel
      tags:
        - Shipments (Operations)
    patch:
      description: ''
      operationId: patchParcel
      parameters:
        - description: ID of the parcel you want to get
          in: path
          name: parcelId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ParcelPatchActions'
        description: Patch set
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Parcel'
          description: Successfully updated the parcel.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: Update parcel
      tags:
        - Shipments (Operations)
  /api/parcels/{parcelId}/actions:
    post:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Applies actions to a parcel. Check ParcelActionsParameter for
        available actions.
      operationId: parcelAction
      parameters:
        - description: Reference to the parcel you want to call an action for
          in: path
          name: parcelId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ParcelActionsParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Parcel'
          description: Updated Parcel in the body.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: Call parcel action
      tags:
        - Shipments (Operations)
      x-badges:
        - color: orange
          label: BETA
  /api/parcels/{parcelId}/deliverynote:
    get:
      operationId: getParcelDeliveryNote
      parameters:
        - description: ID of parcel you want to retrieve deliveryNote for
          in: path
          name: parcelId
          required: true
          schema:
            type: string
        - description: >-
            Provide the localized values for the delivery note. If not provided
            the default locale is used. For example de_DE.
          in: query
          name: locale
          schema:
            type: string
      responses:
        '200':
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/DeliveryNote'
          description: Get delivery note as pdf.
        '401':
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Parcel not found
      summary: Get parcel delivery note
      tags:
        - Shipments (Operations)
  /api/parcels/{parcelId}/labels/{labelDocument}:
    get:
      description: ''
      operationId: getLabelForParcel
      parameters:
        - description: ID of the parcel you want to get a label for
          in: path
          name: parcelId
          required: true
          schema:
            type: string
        - description: >-
            Within a parcel different labels can be created. The following types
            of labels are currently supported: all.pdf, send.pdf and return.pdf
            = Parcel label plus (if configured) retoure label.
          in: path
          name: labelDocument
          required: true
          schema:
            $ref: '#/components/schemas/ParcelLabelTypeEnum'
      responses:
        '200':
          content:
            application/pdf: {}
          description: >-
            Parcel was found & you were allowed to access it. The label is in
            the body.
        '401':
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: Get parcel label
      tags:
        - Shipments (Operations)
  /api/parcels/{parcelId}/returnnote:
    get:
      operationId: getParcelReturnNote
      parameters:
        - description: ID of parcel you want to retrieve returnNote for
          in: path
          name: parcelId
          required: true
          schema:
            type: string
        - description: >-
            Provide the localized values for the returnNote. If not provided the
            default locale is used. For example de_DE.
          in: query
          name: locale
          schema:
            type: string
      responses:
        '200':
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/ReturnNote'
          description: Get delivery note as pdf.
        '401':
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Parcel not found
      summary: Get parcel return note
      tags:
        - Shipments (Operations)
  /api/parcels/{parcelId}/transferlabel:
    get:
      description: ''
      operationId: getParcelTransferLabel
      parameters:
        - description: ID of the parcel for which you want to get a transfer label
          in: path
          name: parcelId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/pdf: {}
          description: The transfer label for the given parcel
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: Get parcel transfer label
      tags:
        - Shipments (Operations)
  /api/parcels/search:
    post:
      deprecated: false
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Search for Parcel
      operationId: searchParcel
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ParcelSearchPayload'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParcelPaginatedResult'
          description: Your search result
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: List parcels (search)
      tags:
        - Shipments (Operations)
      x-badges:
        - color: orange
          label: BETA
  /api/permissions:
    get:
      deprecated: false
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />This endpoint returns all available permissions in the FFT platform.
      operationId: getPermissions
      parameters:
        - in: query
          name: size
          required: false
          schema:
            default: 25
            maximum: 100
            minimum: 1
            type: number
        - in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - description: The key of the permission to filter by
          in: query
          name: key
          required: false
          schema:
            enum:
              - USER_READ
              - USERS_READ
              - USER_WRITE
              - USER_MODIFY
              - CURRENT_USER_READ
              - CURRENT_USER_MODIFY
              - ROLE_READ
              - ROLE_WRITE
              - FACILITY_READ
              - FACILITY_WRITE
              - FACILITY_CREATE
              - FACILITY_DELETE
              - FACILITY_GROUP_READ
              - FACILITY_GROUP_WRITE
              - ORDER_READ
              - ORDER_WRITE
              - ORDER_FORCE_CANCEL
              - ORDER_UNLOCK
              - ORDER_CANCEL
              - ORDER_CONSUMER_WRITE
              - ORDER_CUSTOM_ATTRIBUTES_WRITE
              - AUDIT_READ
              - NOTIFICATION_READ
              - NOTIFICATION_WRITE
              - EXPIRIES_READ
              - EXPIRIES_WRITE
              - CONFIG_READ
              - CONFIG_WRITE
              - ROUTING_CONFIG_READ
              - ROUTING_CONFIG_WRITE
              - PROMISES_CONFIG_READ
              - PROMISES_CONFIG_WRITE
              - OIDC_PROVIDERS_CONFIG_READ
              - OIDC_PROVIDERS_CONFIG_WRITE
              - LOCALE_WRITE
              - CARRIER_READ
              - CARRIER_WRITE
              - RETURN_WRITE
              - RETURN_READ
              - ROUTING_READ
              - ROUTING_WRITE
              - PARCEL_READ
              - PARCEL_WRITE
              - SHIPMENT_READ
              - SHIPMENT_WRITE
              - HANDOVERJOB_READ
              - HANDOVERJOB_WRITE
              - PICKJOB_READ
              - PICKJOB_WRITE
              - PICKJOB_REROUTE
              - REMOTE_CONFIG_READ
              - REMOTE_CONFIG_WRITE
              - PICKRUN_READ
              - PICKRUN_WRITE
              - LOADUNITTYPE_READ
              - LOADUNITTYPE_WRITE
              - LOADUNIT_READ
              - LOADUNIT_WRITE
              - MEASUREMENTUNIT_READ
              - MEASUREMENTUNIT_WRITE
              - EVENT_READ
              - SUBSCRIPTION_READ
              - SUBSCRIPTION_WRITE
              - SUBSTITUTE_READ
              - SUBSTITUTE_WRITE
              - PROCESS_READ
              - PROCESS_WRITE
              - PROCESS_REROUTE
              - EXTERNAL_ACTIONS_READ
              - EXTERNAL_ACTIONS_WRITE
              - OPERATIVE_PROCESS_READ
              - OPERATIVE_PROCESS_WRITE
              - DELIVERYNOTE_WRITE
              - PACKJOB_READ
              - PACKJOB_WRITE
              - PACKINGCONTAINER_TYPE_WRITE
              - PACKING_SOURCE_CONTAINER_READ
              - PACKING_SOURCE_CONTAINER_WRITE
              - RESTOW_ITEM_READ
              - RESTOW_ITEM_WRITE
              - TAG_READ
              - TAG_WRITE
              - STOCK_READ
              - STOCK_WRITE
              - EXTERNAL_STOCK_CHANGE_REASONS_READ
              - EXTERNAL_STOCK_CHANGE_REASONS_WRITE
              - STORAGE_LOCATION_READ
              - STORAGE_LOCATION_WRITE
              - STOW_JOB_READ
              - STOW_JOB_OPERATIVE_WRITE
              - STOW_JOB_FULL_WRITE
              - NOTIFICATION_CENTER_CONFIG_READ
              - NOTIFICATION_CENTER_CONFIG_WRITE
              - DOMS_TOOLKIT_READ
              - DOMS_TOOLKIT_WRITE
              - ANALYTICS_DASHBOARD_READ
              - DOCUMENT_SET_READ
              - DOCUMENT_SET_WRITE
              - INBOUND_PROCESS_READ
              - INBOUND_PROCESS_WRITE
              - ADMIN_DATA_RESET
              - ADMIN_MODULES_READ
              - ADMIN_MODULES_WRITE
              - TENANT_CONNECTOR_CONFIG_READ
              - CUSTOM_SERVICE_WRITE
              - CUSTOM_SERVICE_READ
              - VALIDATIONS_READ
              - SERVICE_JOB_READ
              - SERVICE_JOB_WRITE
              - LINKED_SERVICE_JOBS_READ
              - LINKED_SERVICE_JOBS_WRITE
              - OPERATION_STATISTICS_READ
              - DOMS_STATISTICS_READ
              - AVAILABILITY_CHANNEL_READ
              - AVAILABILITY_CHANNEL_WRITE
              - HANDOVER_CONTAINER_READ
              - HANDOVER_CONTAINER_WRITE
              - STACKS_READ
              - STACKS_WRITE
              - CATEGORY_READ
              - CATEGORY_WRITE
              - PERMISSION_READ
              - RESERVATION_WRITE
              - RESERVATION_READ
              - FILTER_ENTITY_READ
              - BRAND_READ
              - STOCK_AVAILABILITIES_READ
              - LISTING_READ
              - LISTING_WRITE
              - LISTING_DELETE
              - PURCHASE_PRICE_READ
              - ZONE_READ
              - ZONE_WRITE
              - SAFETY_STOCK_READ
              - SAFETY_STOCK_WRITE
            type: string
        - description: The group of the permission to filter by
          in: query
          name: group
          required: false
          schema:
            enum:
              - INVENTORY
              - ORDER_MANAGEMENT
              - ADMIN
              - CORE
              - USER_MANAGEMENT
              - OPERATIONS
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionsResponse'
          description: The Permissions
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: List permissions
      tags:
        - User Management (Core)
      x-badges:
        - color: orange
          label: BETA
  /api/pickjobs:
    get:
      operationId: queryPickJobs
      parameters:
        - description: >-
            Search term you want to get the corresponding pickjobs. Search will
            be performed on multiple fields, like tenantOrderId, consumerName,
            tenantArticleId and more
          in: query
          name: searchTerm
          required: false
          schema:
            type: string
        - description: Reference to the carrier you want to get the corresponding pickjobs
          explode: false
          in: query
          name: carrierKeys
          required: false
          schema:
            items:
              maxItems: 100
              type: string
            type: array
        - description: >-
            Reference to the orderDate you want to get the corresponding
            pickjobs
          in: query
          name: startOrderDate
          required: false
          schema:
            type: string
        - description: >-
            Reference to the orderDate you want to get the corresponding
            pickjobs
          in: query
          name: endOrderDate
          required: false
          schema:
            type: string
        - description: Reference to the order you want to get the corresponding pickjobs
          in: query
          name: orderRef
          required: false
          schema:
            type: string
        - description: Reference to the facility you want to get the corresponding pickjobs
          in: query
          name: facilityRef
          required: false
          schema:
            type: string
        - description: Reference the assigned user on this entity - id or username
          in: query
          name: assignedUser
          required: false
          schema:
            type: string
        - description: Reference to the status you want to get the corresponding pickjobs
          explode: false
          in: query
          name: status
          required: false
          schema:
            items:
              type: string
            type: array
        - description: Reference to the zones you want to get the corresponding pickjobs
          explode: false
          in: query
          name: zoneRefs
          required: false
          schema:
            items:
              type: string
            type: array
        - description: >-
            Reference to the tenantOrderId you want to get the corresponding
            pickjobs
          in: query
          name: tenantOrderId
          required: false
          schema:
            type: string
        - description: The channel of the pickJob you want to filter by
          in: query
          name: channel
          required: false
          schema:
            enum:
              - COLLECT
              - SHIPPING
            type: string
        - description: >-
            Reference to the consumer name you want to get the corresponding
            pickjobs
          in: query
          name: consumerName
          required: false
          schema:
            type: string
        - description: Reference to the shortId you want to get the corresponding pickjobs
          in: query
          name: shortId
          required: false
          schema:
            type: string
        - description: >-
            Reference to the articleTitle you want to get the corresponding
            pickjobs
          in: query
          name: articleTitle
          required: false
          schema:
            type: string
        - description: >-
            Reference to the anonymized you want to get the corresponding
            pickjobs
          in: query
          name: anonymized
          required: false
          schema:
            type: boolean
        - description: all entities after given Id
          in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - description: number of entities to show
          in: query
          name: size
          required: false
          schema:
            default: 25
            type: integer
        - description: query pickjobs orderBy
          in: query
          name: orderBy
          required: false
          schema:
            type: string
        - description: Start date range for pick jobs
          in: query
          name: startTargetTime
          required: false
          schema:
            example: 2020-02-03T08:45:50.525Z
            format: date-time
            type: string
        - description: End date range for pick jobs
          in: query
          name: endTargetTime
          required: false
          schema:
            example: 2020-02-03T08:45:50.525Z
            format: date-time
            type: string
        - description: Reference to pickjobs
          explode: false
          in: query
          name: pickJobRefs
          required: false
          schema:
            items:
              maxItems: 100
              type: string
            type: array
        - description: Reference to the user ID you want to get the corresponding pickjobs
          in: query
          name: modifiedByUsername
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StrippedPickJobs'
          description: PickJobs were found. The results are in the body.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: List pick jobs
      tags:
        - Picking (Operations)
    post:
      description: ''
      operationId: addPickJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PickJobForCreation'
        description: Pick job object
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PickJob'
          description: >-
            The pick job was successfully created. The Location header contains
            the URL of the pickjob.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: Create pick job
      tags:
        - Picking (Operations)
  /api/pickjobs/{pickJobId}:
    get:
      description: ''
      operationId: getPickJob
      parameters:
        - description: ID of the pickjob you want to get
          in: path
          name: pickJobId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PickJob'
          description: >-
            PickJob was found & you were allowed to access it. The result is in
            the body.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: Get pick job
      tags:
        - Picking (Operations)
    patch:
      description: ''
      operationId: patchPickJob
      parameters:
        - description: ID of the pickjob you want to get
          in: path
          name: pickJobId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PickingPatchActions'
        description: Patch set
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PickJob'
          description: >-
            PickJob was found & patch-set has been applied. The patched pick job
            is in the body.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: PickJob not found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: PickJob version conflict
      summary: Update pick job
      tags:
        - Picking (Operations)
  /api/pickjobs/{pickJobId}/actions:
    post:
      operationId: pickJobAction
      parameters:
        - description: Reference to the pick job you want to call an action for
          in: path
          name: pickJobId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PickJobActionsParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PickJob'
          description: Updated PickJob in the body.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: Call pick job action
      tags:
        - Picking (Operations)
  /api/pickjobs/{pickJobId}/deliverynote:
    get:
      description: ''
      operationId: getPickJobDeliveryNote
      parameters:
        - description: ID of the pick job for which you want to get a deliverynote
          in: path
          name: pickJobId
          required: true
          schema:
            type: string
        - description: >-
            Provide the localized values for the delivery note. If not provided
            the default locale is used. For example de_DE
          in: query
          name: locale
          schema:
            type: string
      responses:
        '200':
          content:
            application/pdf: {}
          description: The deliverynote for the given pickjob
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: Get pick job delivery note
      tags:
        - Picking (Operations)
  /api/pickjobs/{pickJobId}/documenthandling:
    get:
      description: ''
      operationId: getPickJobDocumentHandling
      parameters:
        - description: ID of the pick job you want to get document handling information
          in: path
          name: pickJobId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentHandling'
          description: >-
            Pick job document handling was found & you were allowed to access
            it. The result is in the body.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: Get pick job document handling
      tags:
        - Picking Configuration (Operations)
  /api/pickjobs/{pickJobId}/loadunits:
    get:
      operationId: queryPickJobLoadUnits
      parameters:
        - description: >-
            Reference to the pick job you want to get the corresponding
            loadunits
          in: path
          name: pickJobId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoadUnits'
          description: Loadunits were found. The results are in the body.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: List pick job load units
      tags:
        - Picking (Operations)
    post:
      description: ''
      operationId: addPickJobLoadUnits
      parameters:
        - description: >-
            Reference to the pick job you want to get the corresponding
            loadunits
          in: path
          name: pickJobId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PickingLoadUnitForCreation'
        description: Pick job load unit object
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PickingLoadUnit'
          description: The load units was successfully created.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: Create pick job load unit
      tags:
        - Picking (Operations)
  /api/pickjobs/{pickJobId}/picklineitems/{pickLineItemId}/availablesubstitutes:
    get:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Returns all available substitutes for a given pickLineItem.
      operationId: queryPickLineItemsSubstitutes
      parameters:
        - description: Reference to the pick job you to get the available substitutes for
          in: path
          name: pickJobId
          required: true
          schema:
            type: string
        - description: >-
            Reference to the pickLineItem you to get the available substitutes
            for
          in: path
          name: pickLineItemId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResolvedSubstitutes'
          description: Available substitutes for given pickLineItem
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: List available line item substitutes
      tags:
        - Picking (Operations)
      x-badges:
        - color: orange
          label: BETA
  /api/pickjobs/{pickjobId}/returnnote:
    get:
      description: ''
      operationId: getReturnNotesForPickjob
      parameters:
        - description: ID of the Pickjob
          in: path
          name: pickjobId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/pdf: {}
          description: Returns a return note for the pickjob.
        '401':
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: Get pick job return note
      tags:
        - Picking (Operations)
  /api/pickjobs/{pickJobId}/transferlabel:
    get:
      description: ''
      operationId: getPickJobTransferLabel
      parameters:
        - description: ID of the pick job for which you want to get a transfer label
          in: path
          name: pickJobId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/pdf: {}
          description: The transfer label for the given pickjob
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: Get pick job transfer label
      tags:
        - Picking (Operations)
  /api/pickjobs/search:
    post:
      deprecated: false
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Search for PickJob
      operationId: searchPickJob
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PickJobSearchPayload'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PickJobPaginatedResult'
          description: Your search result
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: List pick jobs (search)
      tags:
        - Picking (Operations)
      x-badges:
        - color: orange
          label: BETA
  /api/pickruns:
    post:
      description: ''
      operationId: addPickRun
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PickRunForCreation'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PickRun'
          description: >-
            The PickRun was successfully created. The Location header contains
            the URL of it.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
      summary: Create pick run
      tags:
        - Picking (Operations)
  /api/pickruns/{pickRunId}:
    get:
      description: ''
      operationId: getPickRun
      parameters:
        - description: id of pickRun
          in: path
          name: pickRunId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PickRun'
          description: PickRun is found.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: Get pick run
      tags:
        - Picking (Operations)
    patch:
      description: ''
      operationId: patchPickRun
      parameters:
        - description: id of pickRun
          in: path
          name: pickRunId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PickRunPatchAction'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PickRun'
          description: The updated PickRun.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Version conflict
      summary: Update pick run
      tags:
        - Picking (Operations)
  /api/pickruns/{pickRunId}/actions:
    post:
      operationId: pickRunAction
      parameters:
        - description: Reference to the pick run you want to call the action for
          in: path
          name: pickRunId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PickRunActionsParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PickRun'
          description: Updated Pick Run in the body.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: Call pick run action
      tags:
        - Picking (Operations)
  /api/pickruns/{pickRunId}/pickjobs:
    patch:
      description: ''
      operationId: patchPickRunPickJobs
      parameters:
        - description: id of pickRun
          in: path
          name: pickRunId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PickRunPickJobsPatchAction'
      responses:
        '200':
          description: Pick job was successfully from pick run removed.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: Update pick run pick jobs
      tags:
        - Picking (Operations)
  /api/process:
    get:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getProcesses
      parameters:
        - in: query
          name: tenantOrderId
          required: false
          schema:
            type: string
        - in: query
          name: orderRef
          required: false
          schema:
            type: string
        - in: query
          name: pickJobRef
          required: false
          schema:
            type: string
        - in: query
          name: shipmentRef
          required: false
          schema:
            type: string
        - in: query
          name: handoverJobRef
          required: false
          schema:
            type: string
        - in: query
          name: returnRef
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Process'
          description: Process belonging to the given parameters
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: The given parameters are invalid
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: Get process
      tags:
        - Processes (Core)
      x-badges:
        - color: orange
          label: BETA
  /api/processes:
    get:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getAllProcesses
      parameters:
        - description: all entities after given Id
          in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - description: number of entities to show
          in: query
          name: size
          required: false
          schema:
            default: 25
            type: integer
        - description: Reference to the status you want to get the corresponding processes
          explode: true
          in: query
          name: status
          required: false
          schema:
            items:
              type: string
            type: array
        - description: >-
            Reference to the operativeStatus you want to get the corresponding
            processes
          explode: true
          in: query
          name: operativeStatus
          required: false
          schema:
            items:
              type: string
            type: array
        - description: >-
            Reference to the trackingStatus you want to get the corresponding
            processes
          explode: true
          in: query
          name: trackingStatus
          required: false
          schema:
            items:
              type: string
            type: array
        - description: Perform full text search based on the tenantOrderId
          in: query
          name: tenantOrderId
          required: false
          schema:
            type: string
        - description: Perform full text search based on the consumerId
          in: query
          name: consumerId
          required: false
          schema:
            type: string
        - description: >-
            Return the Processes which have related pickjobs with a targettime
            on or after this date
          in: query
          name: startTargetTime
          required: false
          schema:
            example: 2020-02-03T08:45:50.525Z
            format: date-time
            type: string
        - description: >-
            Return the Processes which have related pickjobs with a targettime
            on or before this date
          in: query
          name: endTargetTime
          required: false
          schema:
            example: 2020-02-03T08:45:50.525Z
            format: date-time
            type: string
        - description: >-
            Return the Processes created on or after this date. If no start date
            is specified, the default is last 30 days.
          in: query
          name: startDate
          required: false
          schema:
            example: 2020-02-03T08:45:50.525Z
            format: date-time
            type: string
        - description: Return the Processes created on or before this date
          in: query
          name: endDate
          required: false
          schema:
            example: 2020-02-03T08:45:50.525Z
            format: date-time
            type: string
        - description: Id's of the facilities from which you want to get the processes
          explode: true
          in: query
          name: facilityRefs
          required: false
          schema:
            items:
              type: string
            type: array
        - description: >-
            Id's of the active facilities based on processes from which you want
            to get the processes
          explode: true
          in: query
          name: facilityRefsWithActiveOperations
          required: false
          schema:
            items:
              type: string
            type: array
        - description: Consumer country codes from which you want to get the processes
          explode: true
          in: query
          name: countries
          required: false
          schema:
            items:
              type: string
            type: array
        - description: Facility country codes from which you want to get the processes
          explode: true
          in: query
          name: facilityCountries
          required: false
          schema:
            items:
              type: string
            type: array
        - description: Brand ids for which you want to get the processes
          explode: true
          in: query
          name: brandRefs
          required: false
          schema:
            items:
              type: string
            type: array
        - description: Order delivery preferences service level
          explode: true
          in: query
          name: serviceLevels
          required: false
          schema:
            items:
              enum:
                - DELIVERY
                - SAMEDAY
              type: string
            type: array
        - description: Whether an order is click and collect or delivery
          explode: true
          in: query
          name: serviceTypes
          required: false
          schema:
            items:
              enum:
                - COLLECT
                - SHIPPING
              type: string
            type: array
        - description: >-
            Reference to the orderDomainStatus you want to get the corresponding
            processes
          explode: true
          in: query
          name: orderDomainStatus
          required: false
          schema:
            items:
              type: string
            type: array
        - description: >-
            Reference to the routingDomainStatus you want to get the
            corresponding processes
          explode: true
          in: query
          name: routingDomainStatus
          required: false
          schema:
            items:
              type: string
            type: array
        - description: >-
            Reference to the pickingDomainStatus you want to get the
            corresponding processes
          explode: true
          in: query
          name: pickingDomainStatus
          required: false
          schema:
            items:
              type: string
            type: array
        - description: >-
            Reference to the packingDomainStatus you want to get the
            corresponding processes
          explode: true
          in: query
          name: packingDomainStatus
          required: false
          schema:
            items:
              type: string
            type: array
        - description: >-
            Reference to the shippingDomainStatus you want to get the
            corresponding processes
          explode: true
          in: query
          name: shippingDomainStatus
          required: false
          schema:
            items:
              type: string
            type: array
        - description: >-
            Reference to the handoverDomainStatus you want to get the
            corresponding processes
          explode: true
          in: query
          name: handoverDomainStatus
          required: false
          schema:
            items:
              type: string
            type: array
        - description: >-
            Reference to the returnDomainStatus you want to get the
            corresponding processes
          explode: true
          in: query
          name: returnDomainStatus
          required: false
          schema:
            items:
              type: string
            type: array
        - description: Stickers attached to a order
          explode: true
          in: query
          name: stickers
          required: false
          schema:
            items:
              type: string
            type: array
        - description: Perform full text search over all searchable attributes
          in: query
          name: searchTerm
          required: false
          schema:
            type: string
        - description: SortingParameter name for the query
          in: query
          name: sortBy
          required: false
          schema:
            $ref: '#/components/schemas/SortParameterName'
        - description: Sorting direction for the query
          in: query
          name: sortByDirection
          required: false
          schema:
            $ref: '#/components/schemas/SortDirection'
        - description: '@deprecated Use orderStatus instead'
          in: query
          name: locked
          required: false
          schema:
            type: boolean
        - description: Order status for the query
          in: query
          name: orderStatus
          required: false
          schema:
            $ref: '#/components/schemas/OrderStatus'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Processes'
          description: Process are found.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: List processes
      tags:
        - Processes (Core)
      x-badges:
        - color: orange
          label: BETA
  /api/processes/{processId}:
    get:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getProcessByID
      parameters:
        - in: path
          name: processId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Process'
          description: The found process.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: Get process
      tags:
        - Processes (Core)
      x-badges:
        - color: orange
          label: BETA
    patch:
      description: ''
      operationId: patchProcess
      parameters:
        - description: ID of process you want to patch
          in: path
          name: processId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProcessPatchActions'
        description: Patch set
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Process'
          description: >-
            Process was found & patch-set has been applied. The patched process
            is in the body.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Process not found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Process version conflict
      summary: Update process
      tags:
        - Processes (Core)
  /api/processes/{processId}/documents:
    post:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: addDocumentToProcess
      parameters:
        - in: path
          name: processId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExternalDocumentForCreation'
        description: ''
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalDocument'
          description: The document was successfully created
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
      summary: Create process document
      tags:
        - Processes (Core)
      x-badges:
        - color: orange
          label: BETA
  /api/processes/{processId}/documents/{documentId}:
    get:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: readDocumentMetaInProcess
      parameters:
        - in: path
          name: processId
          required: true
          schema:
            type: string
        - in: path
          name: documentId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalDocument'
          description: >-
            The document meta information with given id attached to the selected
            process
      summary: Get process document
      tags:
        - Processes (Core)
      x-badges:
        - color: orange
          label: BETA
  /api/processes/{processId}/documents/{documentId}/file:
    get:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: downloadDocumentInProcess
      parameters:
        - in: path
          name: processId
          required: true
          schema:
            type: string
        - in: path
          name: documentId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/pdf: {}
          description: The document with given id attached to the selected process
      summary: Download process file
      tags:
        - Processes (Core)
      x-badges:
        - color: orange
          label: BETA
    put:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: updateDocumentInProcess
      parameters:
        - in: path
          name: processId
          required: true
          schema:
            type: string
        - in: path
          name: documentId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExternalDocumentForUpdate'
        description: ''
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalDocument'
          description: The document was successfully updated
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
      summary: Update process file
      tags:
        - Processes (Core)
      x-badges:
        - color: orange
          label: BETA
  /api/processes/{processId}/reroute:
    post:
      description: ''
      operationId: postProcess
      parameters:
        - description: ID of process you want to reroute
          in: path
          name: processId
          required: true
          schema:
            type: string
        - description: Version of process you want to reroute
          in: query
          name: version
          required: true
          schema:
            type: number
        - description: The id of the rerouteDescription
          in: query
          name: rerouteDescriptionId
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Process'
          description: >-
            Process was found the corresponding reroute operations have been
            triggered.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Process not found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Process version conflict
      summary: Create process reroute
      tags:
        - Processes (Core)
  /api/processes/retrynotroutable:
    post:
      description: ''
      operationId: triggerRetryNotRoutable
      responses:
        '204':
          description: >-
            The retry for all not routable proceses has been succesfully
            triggered
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: The retry task can not be triggered due to a conflicting operation
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: Create retry not routable
      tags:
        - Processes (Core)
  /api/processes/search:
    post:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Search for Process
      operationId: searchProcess
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProcessSearchPayload'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProcessPaginatedResult'
          description: Your search result
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: List processes (search)
      tags:
        - Processes (Core)
      x-badges:
        - color: red
          label: ALPHA
  /api/promises/checkoutoptions:
    post:
      deprecated: true
      description: >-
        This part of the API is deprecated. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Evaluate a checkout options input against the DOMS.
      operationId: postCheckoutOptions
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckoutOptionsInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ResponseForCNCCheckoutOptions'
                  - $ref: '#/components/schemas/ResponseForSFSCheckoutOptions'
          description: The request could be evaluated
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: The requested entity was not found
        '409':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: A version conflict occurred.
      summary: Create checkout options
      tags:
        - Checkout Options (DOMS)
  /api/promises/checkoutoptions/collect/earliest:
    post:
      deprecated: false
      description: Get earliest collect timepoint for a given checkoutOption
      operationId: checkoutoptionCollectEarliest
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckoutOptionsCollectEarliestRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckoutOptionsDeliveryEarliestResponse'
          description: The request could be evaluated
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: The requested entity was not found
        '409':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: A version conflict occurred.
      summary: Get earliest collect
      tags:
        - Checkout Options (DOMS)
  /api/promises/checkoutoptions/delivery/earliest:
    post:
      deprecated: false
      description: Get earliest delivery timepoint for a given checkoutOption
      operationId: checkoutoptionDeliveryEarliest
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckoutOptionsDeliveryEarliestRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckoutOptionsDeliveryEarliestResponse'
          description: The request could be evaluated
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: The requested entity was not found
        '409':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: A version conflict occurred.
      summary: Get earliest delivery
      tags:
        - Checkout Options (DOMS)
  /api/promises/checkoutoptions/delivery/timeperiod:
    post:
      deprecated: false
      description: ''
      operationId: checkoutoptionDeliveryTimePeriod
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckoutOptionsDeliveryTimePeriodRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckoutOptionsDeliveryTimePeriodResponse'
          description: The request could be evaluated
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: The requested entity was not found
        '409':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: A version conflict occurred.
      summary: Get delivery time period
      tags:
        - Checkout Options (DOMS)
  /api/promises/checkoutoptions/delivery/timepoint:
    post:
      deprecated: false
      description: >-
        This endpoint is to be used to get information about the possible
        delivery of items.
      operationId: checkoutOptionsTimepoint
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckoutOptionsDeliveryTimePointRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckoutOptionsDeliveryTimePointResponse'
          description: The request could be evaluated
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: The requested entity was not found
        '409':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: A version conflict occurred.
      summary: Get delivery timepoint
      tags:
        - Checkout Options (DOMS)
  /api/promises/deliverypromise:
    post:
      description: ''
      operationId: postDeliveryPromise
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderForCreation'
        description: Order object supplied by your shop instance
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseForDeliveryPromise'
          description: The order promise was created URL of the order promse.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: Create promise order
      tags:
        - Orders (DOMS)
  /api/purchaseorders:
    post:
      deprecated: false
      description: ''
      operationId: createPurchaseOrder
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseOrderForCreation'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrder'
          description: Created Purchase Order entity
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: Create purchase order
      tags:
        - Inbound (Inventory)
  /api/purchaseorders/{purchaseOrderId}:
    get:
      deprecated: false
      description: ''
      operationId: getPurchaseOrder
      parameters:
        - in: path
          name: purchaseOrderId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrder'
          description: Purchase Order entity
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: Get purchase order
      tags:
        - Inbound (Inventory)
    patch:
      deprecated: false
      description: Partially updates a Purchase Order using a selection of fields
      operationId: patchPurchaseOrder
      parameters:
        - in: path
          name: purchaseOrderId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseOrderForPartialUpdate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrder'
          description: Updated Purchase Order entity
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: Updates purchase order
      tags:
        - Inbound (Inventory)
    put:
      deprecated: false
      description: ''
      operationId: upsertPurchaseOrder
      parameters:
        - in: path
          name: purchaseOrderId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseOrderForUpdate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrder'
          description: Updated/created Purchase Order entity
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: Update purchase order
      tags:
        - Inbound (Inventory)
  /api/receipts:
    post:
      deprecated: false
      description: ''
      operationId: createReceipt
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReceiptForCreation'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Receipt'
          description: Created inbound receipt
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: Create receipt
      tags:
        - Inbound (Inventory)
  /api/receipts/{receiptId}:
    delete:
      deprecated: false
      description: ''
      operationId: deleteReceipt
      parameters:
        - in: path
          name: receiptId
          required: true
          schema:
            type: string
        - in: query
          name: version
          required: true
          schema:
            type: number
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Receipt'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: The requested entity was not found
      summary: Delete receipt
      tags:
        - Inbound (Inventory)
    get:
      deprecated: false
      description: ''
      operationId: getReceipt
      parameters:
        - in: path
          name: receiptId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Receipt'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: The requested entity was not found
      summary: Get receipt
      tags:
        - Inbound (Inventory)
    patch:
      deprecated: false
      description: ''
      operationId: patchReceipt
      parameters:
        - in: path
          name: receiptId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InboundReceiptForPatch'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Receipt'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: The requested entity was not found
      summary: Update receipt
      tags:
        - Inbound (Inventory)
    put:
      deprecated: false
      description: ''
      operationId: putReceipt
      parameters:
        - in: path
          name: receiptId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InboundReceiptForUpdate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Receipt'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: The requested entity was not found
      summary: Update receipt
      tags:
        - Inbound (Inventory)
  /api/remoteconfigs:
    get:
      description: ''
      operationId: getAllRemoteConfigurations
      parameters:
        - description: all entities after given Id
          in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - description: number of entities to show
          in: query
          name: size
          required: false
          schema:
            default: 25
            type: integer
        - description: facility to filter to
          in: query
          name: facilityId
          required: false
          schema:
            type: string
        - description: groups to filter to
          in: query
          name: groups
          required: false
          schema:
            items:
              type: string
            type: array
        - description: userId to filter to
          in: query
          name: userId
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteConfigurations'
          description: Central RemoteConfiguration
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: List remote configs
      tags:
        - Remote Configs (Core)
    post:
      description: ''
      operationId: createRemoteConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoteConfigurationForCreation'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteConfiguration'
          description: Created entity in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: Create remote config
      tags:
        - Remote Configs (Core)
  /api/remoteconfigs/{id}:
    delete:
      description: ''
      operationId: deleteRemoteConfiguration
      parameters:
        - description: Reference to the remote config you want to delete
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully Deleted
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: Delete remote config
      tags:
        - Remote Configs (Core)
    get:
      description: ''
      operationId: getRemoteConfiguration
      parameters:
        - description: Reference to the remote config you want to get
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteConfiguration'
          description: Central RemoteConfiguration
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: Get remote config
      tags:
        - Remote Configs (Core)
    patch:
      description: ''
      operationId: updateRemoteConfiguration
      parameters:
        - description: Reference to the remote config you want to change
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoteConfigurationForUpdate'
      responses:
        '200':
          description: Successfully Changed
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: Update remote config
      tags:
        - Remote Configs (Core)
    put:
      description: ''
      operationId: putRemoteConfiguration
      parameters:
        - description: Reference to the remote config you want to change
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoteConfigurationForPut'
      responses:
        '200':
          description: Successfully Changed
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: Update remote config
      tags:
        - Remote Configs (Core)
  /api/remoteconfigs/{id}/scopes:
    post:
      description: ''
      operationId: addRemoteConfigurationScope
      parameters:
        - description: Reference to the remote config you want to change
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddRemoteConfigurationScopeParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteConfiguration'
          description: Updated RemoteConfiguration in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: Create remote config scope
      tags:
        - Remote Configs (Core)
  /api/remoteconfigs/{id}/scopes/{scopeId}:
    delete:
      description: ''
      operationId: deleteScopeFromRemoteConfiguration
      parameters:
        - description: Reference to the remote config you want to alter
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: Reference to the remote config scope you want to delete
          in: path
          name: scopeId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteConfiguration'
          description: Successfully Deleted
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: Delete remote config scope
      tags:
        - Remote Configs (Core)
  /api/reroutedescriptions:
    get:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getRerouteDescriptions
      parameters:
        - description: all entities after given Id
          in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - description: number of entities to show
          in: query
          name: size
          required: false
          schema:
            default: 25
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RerouteDescriptions'
          description: >-
            RerouteDescription were found & you were allowed to access it. The
            result is in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: User not found
      summary: List reroute descriptions
      tags:
        - Routing Plans (DOMS)
      x-badges:
        - color: orange
          label: BETA
    post:
      operationId: postRerouteDescription
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RerouteDescriptionForCreation'
        description: The RerouteDescription
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RerouteDescription'
          description: >-
            The RerouteDescription has been successfully created. The Location
            header includes the URL of the document.
        '303':
          description: >-
            The RerouteDescription already exists. The Location header contains
            the URL of the document.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: Create reroute description
      tags:
        - Routing Plans (DOMS)
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      x-badges:
        - color: orange
          label: BETA
  /api/reroutedescriptions/{rerouteDescriptionId}:
    delete:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: deleteRerouteDescription
      parameters:
        - description: ID of the reroute description you intend to delete
          in: path
          name: rerouteDescriptionId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >-
            The reroute description was found, and you have been granted
            permission to delete it.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: RerouteDescription not found
      summary: Delete reroute description
      tags:
        - Routing Plans Configuration (DOMS)
      x-badges:
        - color: orange
          label: BETA
    get:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getRerouteDescriptionById
      parameters:
        - description: Id of the reroute description you wish to retrieve
          in: path
          name: rerouteDescriptionId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RerouteDescription'
          description: >-
            RerouteDescription was found & you were allowed to access it. The
            result is in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: User not found
      summary: Get reroute description
      tags:
        - Routing Plans Configuration (DOMS)
      x-badges:
        - color: orange
          label: BETA
    put:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: putRerouteDescription
      parameters:
        - description: ID of the reroute description you intend to modify
          in: path
          name: rerouteDescriptionId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RerouteDescriptionForModification'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RerouteDescription'
          description: >-
            RerouteDescription rating was found & you were allowed to access it.
            The result is in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: RerouteDescription not found
      summary: Update reroute description
      tags:
        - Routing Plans Configuration (DOMS)
      x-badges:
        - color: orange
          label: BETA
  /api/reservations:
    get:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getPaginatedReservations
      parameters:
        - in: query
          name: size
          required: false
          schema:
            default: 25
            maximum: 100
            minimum: 1
            type: number
        - description: >-
            The cursor to start after. The value is provided in the
            `pageInfo.endCursor` field of the response.
          in: query
          name: after
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReservationsPaginatedResult'
          description: Reservation details
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: List reservations
      tags:
        - Reservations (Inventory)
      x-badges:
        - color: red
          label: ALPHA
  /api/reservations/{reservationId}:
    get:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getReservation
      parameters:
        - in: path
          name: reservationId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'
          description: Reservation details
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: Get reservation
      tags:
        - Reservations (Inventory)
      x-badges:
        - color: red
          label: ALPHA
  /api/reservations/actions:
    post:
      deprecated: false
      description: >
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />REMOVE_RESERVATIONS_KEEP_STOCKS: Removes reservations without
        modifying stock levels.

              REMOVE_RESERVATIONS_AND_REDUCE_STOCKS:  Removes reservations and reduces stock levels accordingly.
      operationId: performReservationActions
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReservationAction'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ReservationActionResult'
                type: array
          description: List of reservation removal results with stock operations
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: Call reservations action
      tags:
        - Reservations (Inventory)
      x-badges:
        - color: red
          label: ALPHA
  /api/reservations/search:
    post:
      deprecated: false
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Search for Reservation
      operationId: searchReservation
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReservationSearchPayload'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReservationPaginatedResult'
          description: Your search result
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: List reservations (search)
      tags:
        - Reservations (Inventory)
      x-badges:
        - color: orange
          label: BETA
  /api/restowitems:
    get:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: queryRestowItems
      parameters:
        - description: Reference to the facility you want to get the corresponding restows
          in: query
          name: facilityRef
          required: false
          schema:
            type: string
        - description: Reference restowed status of the restow items
          in: query
          name: restowed
          required: false
          schema:
            type: boolean
        - description: Reference status of the restow items
          in: query
          name: status
          required: false
          schema:
            items:
              type: string
            type: array
        - description: all entities after given Id
          in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - description: number of entities to show
          in: query
          name: size
          required: false
          schema:
            default: 25
            type: integer
        - description: query orderBy
          in: query
          name: orderBy
          required: false
          schema:
            $ref: '#/components/schemas/RestowItemsSortOptionsEnum'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestowedItems'
          description: Restow items were found. The results are in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: List restow items
      tags:
        - Restowing (Operations)
      x-badges:
        - color: orange
          label: BETA
  /api/restowitems/{restowItemId}:
    get:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getRestowItem
      parameters:
        - description: ID of the restow item you want to get
          in: path
          name: restowItemId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestowItem'
          description: >-
            RestowItem was found & you were allowed to access it. The result is
            in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: Get restow item
      tags:
        - Restowing (Operations)
      x-badges:
        - color: orange
          label: BETA
    patch:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Deprecated, please use /api/restowitems/{restowItemId}/actions
      operationId: patchRestowItem
      parameters:
        - description: ID of the restow item you want to update
          in: path
          name: restowItemId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestowItemPatchActions'
        description: Patch set
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestowItem'
          description: >-
            RestowItem was found & patch-set has been applied. The patched
            restow item is in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: RestowItem not found
        '409':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: RestowItem version conflict
      summary: Update restow item
      tags:
        - Restowing (Operations)
      x-badges:
        - color: orange
          label: BETA
  /api/restowitems/{restowItemId}/actions:
    post:
      operationId: restowItemAction
      parameters:
        - description: Reference to the restow item you want to call an action for
          in: path
          name: restowItemId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestowItemActionsParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestowItem'
          description: Updated RestowItem in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: The entity you want to call an action for was not found.
      summary: Call restow item action
      tags:
        - Restowing (Operations)
  /api/returnnotes:
    post:
      operationId: createReturnNote
      parameters:
        - description: >-
            Provide the localized values for the return note. If not provided
            the default locale is used. For example de_DE.
          in: query
          name: locale
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReturnNote'
        required: true
      responses:
        '201':
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/ReturnNote'
          description: Successfully created the return note.
        '401':
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: Create return note
      tags:
        - Shipments (Operations)
  /api/returns:
    get:
      deprecated: true
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />No
        longer supported legacy return. Please use /itemreturnjobs instead.
      operationId: getReturnJobs
      parameters:
        - description: all entities after given Id
          in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - description: number of entities to show (max 500 per request)
          in: query
          name: size
          required: false
          schema:
            default: 25
            type: integer
        - description: Reference to the facility you want to filter for
          in: query
          name: facilityRef
          required: false
          schema:
            type: string
        - description: >-
            Reference to the status you want to get the corresponding return
            jobs to
          in: query
          name: status
          required: false
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReturnJobs'
          description: Return Jobs that were found in response body.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: List return jobs
      tags:
        - Returns (Operations)
      x-badges:
        - color: orange
          label: BETA
    post:
      deprecated: true
      description: >-
        This part of the API is deprecated. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />No
        longer supported legacy return. Please use /itemreturnjobs instead.
      operationId: addReturn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReturnJobForCreation'
        description: 'ReturnJob object '
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReturnJob'
          description: The return was successfully created
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: Create return job
      tags:
        - Returns (Operations)
  /api/returns/{returnId}:
    get:
      deprecated: true
      description: >-
        This part of the API is deprecated. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />No
        longer supported legacy return. Please use /itemreturnjobs instead.
      operationId: getReturnLines
      parameters:
        - description: ID of the return you want to get
          in: path
          name: returnId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReturnJob'
          description: >-
            Return was found & you were allowed to access it. The result is in
            the body.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: User not found
      summary: Get return job
      tags:
        - Returns (Operations)
    patch:
      deprecated: true
      description: >-
        This part of the API is deprecated. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />No
        longer supported legacy return. Please use /itemreturnjobs instead.
      operationId: patchReturn
      parameters:
        - description: ID of return you want to patch
          in: path
          name: returnId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReturnPatchActions'
        description: Patch set
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReturnJob'
          description: >-
            Return was found & patch-set has been applied. The patched entity is
            in the body.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Entity not found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Entity version conflict
      summary: Update return job
      tags:
        - Returns (Operations)
  /api/roles:
    get:
      deprecated: false
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Returns all existing roles, including their permissions and context
        ceilings.
      operationId: getAllRoles
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Role'
                type: array
          description: The requested roles.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: List roles
      tags:
        - User Management (Core)
      x-badges:
        - color: orange
          label: BETA
    post:
      deprecated: false
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Creates a new custom role.
      operationId: createRole
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleForCreation'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: The created role.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: Create role
      tags:
        - User Management (Core)
      x-badges:
        - color: orange
          label: BETA
  /api/roles/{name}:
    delete:
      deprecated: false
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: deleteRole
      parameters:
        - in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: The deleted role.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: The requested entity was not found
      summary: Delete role
      tags:
        - User Management (Core)
      x-badges:
        - color: orange
          label: BETA
    get:
      deprecated: false
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Returns a role requested by its name.
      operationId: getRole
      parameters:
        - in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: The requested role.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: The requested entity was not found
      summary: Return role
      tags:
        - User Management (Core)
      x-badges:
        - color: orange
          label: BETA
    patch:
      deprecated: false
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: patchRole
      parameters:
        - in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleForPatch'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: The patched role, including all the updates made.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: The requested entity was not found
      summary: Update role
      tags:
        - User Management (Core)
      x-badges:
        - color: orange
          label: BETA
    put:
      deprecated: false
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: updateRole
      parameters:
        - in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleForUpdate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: The updated role, including all the updates made.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: The requested entity was not found
      summary: Update role
      tags:
        - User Management (Core)
      x-badges:
        - color: orange
          label: BETA
  /api/roles/search:
    post:
      deprecated: false
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Search for Role
      operationId: searchRole
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleSearchPayload'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolePaginatedResult'
          description: Your search result
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: List roles (search)
      tags:
        - User Management (Core)
      x-badges:
        - color: orange
          label: BETA
  /api/routing/commands/reroute:
    post:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: reRoute
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RerouteRoutingPlan'
        description: >-
          An object, that can contain either lists of identifiers for which a
          reroute should be executed or an option to reroute every reroutable
          plan.
        required: true
      responses:
        '200':
          description: Rerouting was successfully triggered
        '401':
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: Trigger reroute
      tags:
        - Routing Plans (DOMS)
      x-badges:
        - color: orange
          label: BETA
  /api/routing/decisionlogs:
    get:
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getRoutingDecisionLogs
      parameters:
        - description: >-
            Filter decision logs by only one of the following references:
            processRef, orderRef, tenantOrderId, routingPlanRef or
            sourcingOptionsRef.
          explode: true
          in: query
          name: relatedRefs
          required: false
          schema:
            additionalProperties: false
            maxProperties: 1
            minProperties: 1
            properties:
              orderRef:
                type: string
              processRef:
                type: string
              routingPlanRef:
                type: string
              sourcingOptionsRef:
                type: string
              tenantOrderId:
                type: string
            type: object
          style: form
        - description: All decision logs after given Id
          in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - description: Number of decision logs to show
          in: query
          name: size
          required: false
          schema:
            default: 25
            maximum: 500
            minimum: 1
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingDecisionLogs'
          description: >-
            Decision logs were found & you were allowed to access them. The
            result is in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: Get routing decision logs
      tags:
        - Routing Strategy (DOMS)
      x-badges:
        - color: red
          label: ALPHA
  /api/routing/nodeconfigcategories:
    get:
      description: ''
      operationId: getRoutingStrategyNodeConfigCategories
      parameters:
        - description: all entities
          in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - description: number of entities to show
          in: query
          name: size
          required: false
          schema:
            default: 25
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/RoutingStrategyNodeConfigCategoryTransporter
          description: The current list of available categories
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: No more elements available
      summary: List category node configuration
      tags:
        - Routing Strategy (DOMS)
    post:
      description: Creates a new category for a routing strategies node config.
      operationId: postRoutingStrategyNodeConfigCategory
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/RoutingStrategyNodeConfigCategoryForCreation
        description: The desired category
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/RoutingStrategyNodeConfigCategoryForResponse
          description: The created routing strategy.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: Create category node configuration
      tags:
        - Routing Strategy (DOMS)
  /api/routing/nodeconfigcategories/{categoryId}:
    delete:
      description: deletes the category
      operationId: deleteRoutingStrategyNodeConfigCategory
      parameters:
        - description: Id of the category you want to delete
          in: path
          name: categoryId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The category has been deleted.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: Delete category node configuration
      tags:
        - Routing Strategy (DOMS)
    get:
      description: returns the category
      operationId: getRoutingStrategyNodeConfigCategory
      parameters:
        - description: Id of the category you wish to retrieve
          in: path
          name: categoryId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/RoutingStrategyNodeConfigCategoryForResponse
          description: The returned category.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: Returns category node configuration
      tags:
        - Routing Strategy (DOMS)
    put:
      description: Updates a category
      operationId: putRoutingStrategyNodeConfigCategory
      parameters:
        - description: Id of the category you wish to update
          in: path
          name: categoryId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/RoutingStrategyNodeConfigCategoryForModification
        description: The updated category
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/RoutingStrategyNodeConfigCategoryForResponse
          description: The updated category.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: Updates category node configuration
      tags:
        - Routing Strategy (DOMS)
  /api/routing/sourcingoptions:
    post:
      operationId: createSourcingOptionsRequest
      parameters:
        - description: >-
            This part of the API is in Alpha status. For details please check
            the <a
            href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
            target="_blank">api-release-life-cycle documentation</a>.<br /><br
            />respond with mock
          in: query
          name: returnMockResponse
          required: false
          schema:
            type: boolean
          x-badges:
            - color: red
              label: ALPHA
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourcingOptionsRequest'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourcingOptionsResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/SourcingOptionsResponse'
          description: Sourcing Option successfully created
        '400':
          description: Validation exception
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: Create sourcing option
      tags:
        - Sourcing Options (DOMS)
  /api/routing/sourcingoptions/{sourcingOptionsRequestId}:
    get:
      operationId: getSourcingOption
      parameters:
        - description: Id of the sourcing option request
          in: path
          name: sourcingOptionsRequestId
          required: true
          schema:
            type: string
        - description: >-
            This part of the API is in Alpha status. For details please check
            the <a
            href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
            target="_blank">api-release-life-cycle documentation</a>.<br /><br
            />respond with mock
          in: query
          name: returnMockResponse
          required: false
          schema:
            type: boolean
          x-badges:
            - color: red
              label: ALPHA
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourcingOptionsResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/SourcingOptionsResponse'
          description: Sourcing Options successfully created
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: Get sourcing option
      tags:
        - Sourcing Options (DOMS)
  /api/routing/strategies:
    get:
      description: ''
      operationId: getRoutingStrategies
      parameters:
        - description: all entities
          in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - description: number of entities to show
          in: query
          name: size
          required: false
          schema:
            default: 25
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingStrategyTransporter'
          description: The current list of available routing strategies
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: No more elements available
      summary: List routing strategies
      tags:
        - Routing Strategy (DOMS)
    post:
      description: Creates a new revision of the routing strategy.
      operationId: postRoutingStrategy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutingStrategyForCreation'
        description: The desired routing strategy
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingStrategy'
          description: The created routing strategy.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: Create routing strategy
      tags:
        - Routing Strategy (DOMS)
  /api/routing/strategies/{strategyId}:
    get:
      description: Returns the routing strategy.
      operationId: getRoutingStrategy
      parameters:
        - description: Id of the routing strategy you wish to retrieve
          in: path
          name: strategyId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingStrategy'
          description: The returned routing strategy.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: Get routing strategy
      tags:
        - Routing Strategy (DOMS)
    put:
      description: Updates a routing strategy
      operationId: putRoutingStrategy
      parameters:
        - description: Id of the routing strategy you wish to update
          in: path
          name: strategyId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutingStrategyForModification'
        description: The updated routing strategy
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingStrategy'
          description: The updated routing strategy.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: Update routing strategy
      tags:
        - Routing Strategy (DOMS)
  /api/routing/strategies/{strategyId}/actions:
    post:
      description: Performs an action on a routing strategy.
      operationId: actionsRoutingStrategy
      parameters:
        - description: Id of the routing strategy
          in: path
          name: strategyId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutingStrategyActionsParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingStrategy'
          description: The updated routing strategy.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: Call routing strategy action
      tags:
        - Routing Strategy (DOMS)
  /api/routing/strategies/{strategyId}/evaluation:
    post:
      description: Evaluates a routing strategy against a given order
      operationId: evaluateRoutingStrategy
      parameters:
        - description: Id of the routing strategy
          in: path
          name: strategyId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderForCreation'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingStrategyEvaluationResult'
          description: The result of the evaluation of the routing strategy.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: The routing strategy does not exist
      summary: Evaluate routing strategy
      tags:
        - Routing Strategy (DOMS)
  /api/routing/strategies/{strategyId}/nodes/{nodeId}/evaluation:
    post:
      description: Evaluates a routing strategy node and return the path.
      operationId: evaluateRoutingStrategyNode
      parameters:
        - description: Id of the routing strategy
          in: path
          name: strategyId
          required: true
          schema:
            type: string
        - description: Id of the node
          in: path
          name: nodeId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingStrategyEvaluationResult'
          description: The result of the evaluation of this routing strategy node.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: The routing strategy node does not exist
      summary: Evaluate routing strategy node
      tags:
        - Routing Strategy (DOMS)
  /api/routingplans:
    get:
      description: ''
      operationId: getRoutingPlanBaseOnOrderRef
      parameters:
        - description: >-
            Reference to the order you want to get the corresponding routing
            plan.
          in: query
          name: orderRef
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingPlans'
          description: >-
            Routing plan was found & you were allowed to access it. The result
            is in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found, please look at details.
      summary: List routing plans
      tags:
        - Routing Plans (DOMS)
  /api/routingplans/{routingplanId}:
    get:
      description: ''
      operationId: getRoutingPlan
      parameters:
        - description: ID of the routing plan want to get
          in: path
          name: routingplanId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingPlan'
          description: >-
            Routing plan was found & you were allowed to access it. The result
            is in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Not found, please look at details.
      summary: Get routing plan
      tags:
        - Routing Plans (DOMS)
    patch:
      description: ''
      operationId: patchRoutingPlan
      parameters:
        - description: ID of routing plan you want to patch
          in: path
          name: routingplanId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutingPlanPatchActions'
        description: Patch set
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingPlan'
          description: >-
            Routing plan was found & patch-set has been applied. The patched
            entity is in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found, for more information please look at details.
        '409':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity version conflict
      summary: Update routing plan
      tags:
        - Routing Plans (DOMS)
  /api/routingplans/{routingplanId}/decisionlogs/{routingRun}:
    get:
      description: ''
      operationId: getDecisionlog
      parameters:
        - description: ID of the routing plan you want to get it's decision log
          in: path
          name: routingplanId
          required: true
          schema:
            type: string
        - description: ID of the decision log you want to get
          in: path
          name: routingRun
          required: true
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DecisionLog'
          description: Decision log was found.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Decision log not found
      summary: List routing plan decision log
      tags:
        - Routing Plans (DOMS)
  /api/routingplans/search:
    post:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Search for RoutingPlan
      operationId: searchRoutingPlan
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutingPlanSearchPayload'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingPlanPaginatedResult'
          description: Your search result
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: List routing plans (search)
      tags:
        - Routing Plans (DOMS)
      x-badges:
        - color: red
          label: ALPHA
  /api/routingplansgraph:
    get:
      description: ''
      operationId: getRoutingPlansGraphBaseOnProcessRef
      parameters:
        - description: >-
            Reference to the process you want to get the corresponding routing
            plans graph.
          in: query
          name: processRef
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingPlansGraph'
          description: >-
            Routing plans graph was found & you were allowed to access it. The
            result is in the body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found, please look at details.
      summary: List routing plans graphs
      tags:
        - Routing Plans (DOMS)
  /api/safetystocks:
    get:
      deprecated: false
      description: ''
      operationId: getSafetyStocks
      parameters:
        - in: query
          name: size
          required: false
          schema:
            default: 25
            maximum: 100
            minimum: 1
            type: number
        - in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - in: query
          name: tenantArticleId
          required: false
          schema:
            type: string
        - in: query
          name: facilityRef
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SafetyStocksPaginatedResult'
          description: Available Safety Stocks
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: List safety stocks
      tags:
        - Stocks (Inventory)
    put:
      deprecated: false
      description: ''
      operationId: bulkUpdateSafetyStock
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SafetyStockBulkOperations'
        required: true
      responses:
        '207':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SafetyStockBulkOperationResult'
          description: Result of the bulk operations
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: Update safety stocks
      tags:
        - Stocks (Inventory)
  /api/safetystocks/{safetyStockId}:
    delete:
      deprecated: false
      description: ''
      operationId: deleteSafetyStock
      parameters:
        - in: path
          name: safetyStockId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Result of the bulk operations
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: The requested entity was not found
      summary: Delete safety stock
      tags:
        - Stocks (Inventory)
  /api/scopedcapabilities:
    get:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getCapabilities
      parameters:
        - description: id of the facility
          in: query
          name: facilityId
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ScopedCapability'
          description: All ScopedCapabilities which are at least inactive
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: List scoped capabilities
      tags:
        - Features (Infrastructure)
      x-badges:
        - color: orange
          label: BETA
  /api/servicejobs:
    get:
      operationId: getServiceJobs
      parameters:
        - description: all entities after given Id
          in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - description: number of entities to show
          in: query
          name: size
          required: false
          schema:
            default: 25
            type: integer
        - description: Reference of the facility you want to filter for
          in: query
          name: facilityRef
          required: false
          schema:
            type: string
        - description: Reference the assigned user on this entity - id or username
          in: query
          name: assignedUser
          required: false
          schema:
            type: string
        - description: >-
            Reference to the statuses you want to get the corresponding service
            job
          in: query
          name: status
          required: false
          schema:
            items:
              type: string
            type: array
        - description: Type of channel you want to filter for
          in: query
          name: channel
          required: false
          schema:
            $ref: '#/components/schemas/ServiceJobFilterChannel'
        - description: Start target date range for service jobs
          in: query
          name: startTargetTime
          required: false
          schema:
            example: 2020-02-03T08:45:50.525Z
            format: date-time
            type: string
        - description: End target date range for service jobs
          in: query
          name: endTargetTime
          required: false
          schema:
            example: 2020-02-03T08:45:50.525Z
            format: date-time
            type: string
        - description: >-
            Search term you want to get the corresponding service jobs. Search
            will be performed on multiple fields, like tenantOrderId,
            consumerName, tenantArticleId and more
          in: query
          name: searchTerm
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceJobs'
          description: Service Jobs could be found in response body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: List service jobs
      tags:
        - Services (Operations)
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      x-badges:
        - color: red
          label: ALPHA
    post:
      operationId: createServiceJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceJobForCreation'
        description: Desired service job to create
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceJob'
          description: The service job was successfully created.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: Create service job
      tags:
        - Services (Operations)
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      x-badges:
        - color: red
          label: ALPHA
  /api/servicejobs/{serviceJobId}:
    get:
      operationId: getServiceJob
      parameters:
        - description: ID of service job you want to get
          in: path
          name: serviceJobId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceJob'
          description: Service Job could be found in response body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: Get service job
      tags:
        - Services (Operations)
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      x-badges:
        - color: red
          label: ALPHA
  /api/servicejobs/{serviceJobId}/actions:
    post:
      operationId: updateServiceJob
      parameters:
        - description: ID of service job you want to update
          in: path
          name: serviceJobId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceJobActionsParameter'
        description: Desired change to a service job
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceJob'
          description: The service job was successfully updated.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: Call service job action
      tags:
        - Services (Operations)
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      x-badges:
        - color: red
          label: ALPHA
  /api/servicejobs/{serviceJobId}/servicedata:
    get:
      operationId: getServiceData
      parameters:
        - description: ID of service job referenced by the service data you want to get
          in: path
          name: serviceJobId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceData'
          description: Service Data could be found in response body.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: Get service data
      tags:
        - Services (Operations)
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      x-badges:
        - color: red
          label: ALPHA
  /api/servicejobs/{serviceJobId}/servicedata/actions:
    post:
      operationId: updateServiceData
      parameters:
        - description: ID of service job referenced by the service data you want to update
          in: path
          name: serviceJobId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceDataActionsParameter'
        description: Desired change to service data
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceData'
          description: The service data was successfully updated.
        '400':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: Call service data action
      tags:
        - Services (Operations)
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      x-badges:
        - color: red
          label: ALPHA
  /api/shipments:
    get:
      description: ''
      operationId: getAllShipments
      parameters:
        - description: all entities after given Id
          in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - description: number of entities to show
          in: query
          name: size
          required: false
          schema:
            default: 25
            type: integer
        - description: This query can be used to find shipments for a referenced pickjob
          in: query
          name: pickJobRef
          required: false
          schema:
            type: string
        - description: >-
            This query can be used to find shipments belonging to the referenced
            facility
          in: query
          name: facilityRef
          required: false
          schema:
            type: string
        - description: This query can be used to find shipments for a referenced carrier
          in: query
          name: carrierRef
          required: false
          schema:
            type: string
        - description: >-
            This query can be used to find shipments with the given
            tenantOrderId
          in: query
          name: tenantOrderId
          required: false
          schema:
            type: string
        - description: Find shipments with one the the given carriers
          explode: false
          in: query
          name: carrierKeys
          required: false
          schema:
            items:
              type: string
            type: array
        - description: Find shipments in one of the given status
          explode: false
          in: query
          name: status
          required: false
          schema:
            items:
              type: string
            type: array
        - description: Find shipments with parcels in one of the given status
          explode: false
          in: query
          name: parcelStatus
          required: false
          schema:
            items:
              type: string
            type: array
        - description: Start date range for shipments
          in: query
          name: startTargetTime
          required: false
          schema:
            example: 2020-02-03T08:45:50.525Z
            format: date-time
            type: string
        - description: End date range for shipments
          in: query
          name: endTargetTime
          required: false
          schema:
            example: 2020-02-03T08:45:50.525Z
            format: date-time
            type: string
        - description: Parameter to filter anonymized shipments
          in: query
          name: anonymized
          required: false
          schema:
            type: boolean
        - description: >-
            Fulltext search in shipment's tenantOrderId, shortId,
            parcels.carrierTrackingNumber, lineItems.article.tenantArticleId,
            lineItems.article.title, invoiceAddress, targetAddress and
            customerName
          in: query
          name: searchTerm
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StrippedShipments'
          description: Shipments are found.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: List shipments
      tags:
        - Shipments (Operations)
    post:
      operationId: addShipment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShipmentForCreation'
        description: Shipment object supplied by your picking app
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shipment'
          description: >-
            The Shipment was successfully created. The Location header contains
            the URL of the Shipment.
        '303':
          description: >-
            The Shipment already exists. The Location header contains the URL of
            the Shipment.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: Create shipment
      tags:
        - Shipments (Operations)
  /api/shipments/{shipmentId}:
    get:
      description: ''
      operationId: getShipment
      parameters:
        - description: ID of Shipment you want to get
          in: path
          name: shipmentId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shipment'
          description: >-
            Shipment was found & you were allowed to access it. The result is in
            the body.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Shipment not found
      summary: Get shipment
      tags:
        - Shipments (Operations)
    patch:
      description: ''
      operationId: patchShipment
      parameters:
        - description: ID of shipment you want to patch
          in: path
          name: shipmentId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShipmentPatchActions'
        description: Patch set
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shipment'
          description: >-
            Shipment was found & patch-set has been applied. The patched entity
            is in the body.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Entity not found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Entity version conflict
      summary: Update shipment
      tags:
        - Shipments (Operations)
  /api/shipments/{shipmentId}/actions:
    post:
      operationId: shipmentActions
      parameters:
        - description: Reference to the shipment you want to call an action for
          in: path
          name: shipmentId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShipmentActionsParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shipment'
          description: Updated Shipment in the body.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: Call shipment action
      tags:
        - Shipments (Operations)
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      x-badges:
        - color: orange
          label: BETA
  /api/shipments/{shipmentId}/deliverynote:
    get:
      operationId: getShipmentDeliveryNote
      parameters:
        - description: ID of shipment you want to retrieve delivery note for
          in: path
          name: shipmentId
          required: true
          schema:
            type: string
        - description: >-
            Provide the localized values for the delivery note. If not provided
            the default locale is used. For example de_DE.
          in: query
          name: locale
          schema:
            type: string
      responses:
        '200':
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/DeliveryNote'
          description: Get delivery note as pdf.
        '401':
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Shipment not found
      summary: Get shipment delivery note
      tags:
        - Shipments (Operations)
  /api/shipments/{shipmentId}/parcels:
    post:
      description: ''
      operationId: addParcel
      parameters:
        - description: ID of shipment you want to create parcel for
          in: path
          name: shipmentId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ParcelForCreation'
        description: Payload of the parcel you want to create
        required: false
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Parcel'
          description: >-
            The Parcel was successfully created. The Location header contains
            the URL of the Shipment.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Parcel could not be processed due to failing conditions
      summary: Create shipment parcel
      tags:
        - Shipments (Operations)
  /api/shipments/parcels:
    post:
      description: >-
        This endpoints directly creates a parcel. If no ShipmentRef was
        provided, a shipment will be created and linked to this parcel
      operationId: directCreateParcel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ParcelForDirectCreation'
        description: Representation that describes the parcel you want to create
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Parcel'
          description: Parcel was successfully created
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: Create parcel
      tags:
        - Shipments (Operations)
  /api/shipments/search:
    post:
      deprecated: false
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Search for Shipment
      operationId: searchShipment
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShipmentSearchPayload'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShipmentPaginatedResult'
          description: Your search result
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: List shipments (search)
      tags:
        - Shipments (Operations)
      x-badges:
        - color: orange
          label: BETA
  /api/stacks:
    get:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />Get
        all Stacks respecting the given filter
      operationId: getStacks
      parameters:
        - description: entity to start after
          in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - description: number of entities to show
          in: query
          name: size
          required: false
          schema:
            default: 25
            type: integer
        - description: facilities to filter the results
          in: query
          name: facilityRefs
          required: false
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/StacksResponse'
          description: All Stacks matching the given parameters.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: Get stacks
      tags:
        - Stacks (Operations)
      x-badges:
        - color: orange
          label: BETA
    post:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Create new Stack
      operationId: createStack
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StackForCreation'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Stack'
          description: Created Stack.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: Create stack
      tags:
        - Stacks (Operations)
      x-badges:
        - color: orange
          label: BETA
  /api/stacks/{stackId}:
    get:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />Get
        Stack respecting the given id
      operationId: getStackById
      parameters:
        - description: id of the stack
          in: path
          name: stackId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stack'
          description: Stack matching the given id.
        '401':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: Get stack
      tags:
        - Stacks (Operations)
      x-badges:
        - color: orange
          label: BETA
  /api/status:
    get:
      description: Returns the platform status.
      operationId: status
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: The status result
      summary: Get status
      tags:
        - Health (Infrastructure)
  /api/stocks:
    get:
      deprecated: false
      description: ''
      operationId: getStocks
      parameters:
        - in: query
          name: facilityRef
          required: false
          schema:
            type: string
        - in: query
          name: tenantFacilityId
          required: false
          schema:
            type: string
        - in: query
          name: tenantArticleId
          required: false
          schema:
            items:
              type: string
            maxItems: 500
            type: array
        - in: query
          name: locationRef
          required: false
          schema:
            items:
              type: string
            maxItems: 500
            type: array
        - in: query
          name: size
          required: false
          schema:
            default: 25
            maximum: 100
            minimum: 1
            type: number
        - in: query
          name: startAfterId
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StockPaginatedResult'
          description: Stocks
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: List stocks
      tags:
        - Stocks (Inventory)
    post:
      deprecated: false
      description: ''
      operationId: createStock
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StockForCreation'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stock'
          description: Stock was created.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: Create stock
      tags:
        - Stocks (Inventory)
    put:
      deprecated: false
      description: Update and create many stocks at once
      operationId: upsertStocks
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StocksForUpsert'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/StockUpsertOperationResult'
                type: array
          description: Stock upsert result
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: Update stocks
      tags:
        - Stocks (Inventory)
  /api/stocks/{stockId}:
    delete:
      deprecated: false
      description: ''
      operationId: deleteStock
      parameters:
        - in: path
          name: stockId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Stock was deleted.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: Delete stock
      tags:
        - Stocks (Inventory)
    get:
      deprecated: false
      description: ''
      operationId: getStock
      parameters:
        - in: path
          name: stockId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stock'
          description: Stock
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: Get stock
      tags:
        - Stocks (Inventory)
    put:
      deprecated: false
      description: ''
      operationId: updateStock
      parameters:
        - in: path
          name: stockId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/StockForUpdate'
                - not:
                    required:
                      - version
                  properties:
                    locationRef:
                      nullable: true
                      type: string
                    value:
                      format: int32
                      minimum: 0
                      type: integer
                  required:
                    - value
                  type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stock'
          description: Stock
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: Update stock
      tags:
        - Stocks (Inventory)
  /api/stocks/{stockId}/locationrecommendations:
    get:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />Get
        the Storage Location recommendations for a specific Stock.
      operationId: getStorageLocationRecommendations
      parameters:
        - in: path
          name: stockId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/StorageLocationRecommendation'
                type: array
          description: >-
            List of Storage Locations sorted by the stock sum ascending. The
            result is in the body.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: Get stock recommendations
      tags:
        - Stocks (Inventory)
      x-badges:
        - color: red
          label: ALPHA
  /api/stocks/actions:
    post:
      deprecated: false
      description: ''
      operationId: performStocksActions
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StockAction'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StockActionResult'
          description: Stock action result
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: Call stock action
      tags:
        - Stocks (Inventory)
  /api/stocks/search:
    post:
      deprecated: false
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Search for Stock
      operationId: searchStock
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StockSearchPayload'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StockPaginatedResult'
          description: Your search result
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: List stocks (search)
      tags:
        - Stocks (Inventory)
      x-badges:
        - color: orange
          label: BETA
  /api/stocks/summaries:
    get:
      deprecated: false
      description: Get the accumulated Stock for each Article
      operationId: getStockSummaries
      parameters:
        - in: query
          name: size
          required: false
          schema:
            default: 25
            maximum: 100
            minimum: 1
            type: number
        - description: >-
            The stockSummaries.article.tenantArticleId value should be used for
            pagination.
          in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - explode: false
          in: query
          name: facilityServiceTypes
          required: false
          schema:
            items:
              enum:
                - SHIP_FROM_STORE
                - PICKUP
              type: string
            type: array
        - explode: false
          in: query
          name: facilityStatus
          required: false
          schema:
            items:
              enum:
                - ONLINE
                - SUSPENDED
                - OFFLINE
              type: string
            type: array
        - explode: true
          in: query
          name: facilityRefs
          required: false
          schema:
            items:
              type: string
            type: array
        - in: query
          name: allowStale
          required: false
          schema:
            type: boolean
        - explode: true
          in: query
          name: tenantArticleIds
          required: false
          schema:
            items:
              type: string
            type: array
        - description: >-
            Returns stock summaries using adaptive batching to reduce latency
            spikes, as a consequence response time will have a more consistent
            upper bound but page size may be reduced below the maximum - This
            overrides `size` argument.
          in: query
          name: maxPageSize
          required: false
          schema:
            maximum: 100
            minimum: 1
            type: number
        - description: >-
            The channels to included under "channelAdjusted" in the stock
            summary. Provide up to 50 channelRefs, specify "UNALLOCATED for
            unallocated stock."
          explode: true
          in: query
          name: channelRefs
          required: false
          schema:
            items:
              type: string
            maxItems: 50
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StockSummaries'
          description: >-
            Stock summaries was loaded & you were allowed to access it. The
            result is in the body.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: List stock summaries
      tags:
        - Stocks (Inventory)
  /api/storagelocations/search:
    post:
      deprecated: false
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Search for StorageLocation
      operationId: searchStorageLocation
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorageLocationSearchPayload'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageLocationPaginatedResult'
          description: Your search result
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: List storage locations (search)
      tags:
        - Storage Locations (Inventory)
      x-badges:
        - color: orange
          label: BETA
  /api/stowjobs:
    get:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getStowJobs
      parameters:
        - in: query
          name: size
          required: false
          schema:
            default: 25
            maximum: 100
            minimum: 1
            type: number
        - in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - in: query
          name: sort
          required: false
          schema:
            enum:
              - LAST_MODIFIED_ASC
              - LAST_MODIFIED_DESC
            type: string
        - in: query
          name: facilityRef
          required: false
          schema:
            items:
              type: string
            type: array
        - in: query
          name: tenantArticleId
          required: false
          schema:
            items:
              type: string
            type: array
        - in: query
          name: locationRef
          required: false
          schema:
            items:
              type: string
            type: array
        - explode: false
          in: query
          name: status
          required: false
          schema:
            items:
              enum:
                - OPEN
                - IN_PROGRESS
                - CLOSED
                - CANCELED
                - PAUSED
              type: string
            type: array
        - in: query
          name: stockRef
          required: false
          schema:
            items:
              type: string
            type: array
        - in: query
          name: shortId
          required: false
          schema:
            items:
              type: string
            type: array
        - in: query
          name: priority
          required: false
          schema:
            items:
              type: number
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StowJobPaginatedResult'
          description: Paginated result containing the matching Stow Job entities
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: List stow jobs
      tags:
        - Stowing (Inventory)
      x-badges:
        - color: red
          label: ALPHA
    post:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: createStowJob
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StowJobForCreation'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StowJob'
          description: Created Stow Job entity
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            The syntax of the request content was correct, but it was unable to
            process the contained instructions, possibly due to semantic errors.
      summary: Create stow job
      tags:
        - Stowing (Inventory)
      x-badges:
        - color: red
          label: ALPHA
  /api/stowjobs/{stowJobId}:
    get:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getStowJob
      parameters:
        - in: path
          name: stowJobId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StowJob'
          description: Requested Stow Job entity
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: The requested entity was not found
      summary: Get stow job
      tags:
        - Stowing (Inventory)
      x-badges:
        - color: red
          label: ALPHA
    patch:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: Patch StowJob
      parameters:
        - in: path
          name: stowJobId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StowJobForPatch'
        required: true
      responses:
        '200':
          description: Stow Job successfully patched
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: A version conflict occurred.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            The syntax of the request content was correct, but it was unable to
            process the contained instructions, possibly due to semantic errors.
      summary: Update stow job
      tags:
        - Stowing (Inventory)
      x-badges:
        - color: red
          label: ALPHA
  /api/stowjobs/{stowJobId}/actions:
    post:
      deprecated: false
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: Post StowJob Actions
      parameters:
        - in: path
          name: stowJobId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/StartStowJobAction'
                - $ref: '#/components/schemas/PauseStowJobAction'
                - $ref: '#/components/schemas/CancelStowJobAction'
                - $ref: '#/components/schemas/ReopenStowJobAction'
                - $ref: '#/components/schemas/CloseStowJobAction'
                - $ref: '#/components/schemas/ModifyStowLineItemsAction'
                - $ref: '#/components/schemas/StowJobReplaceAssignedUsersAction'
        required: true
      responses:
        '200':
          description: Actions successfully performed
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: The requested entity was not found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: A version conflict occurred.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            The syntax of the request content was correct, but it was unable to
            process the contained instructions, possibly due to semantic errors.
      summary: Call stow job action
      tags:
        - Stowing (Inventory)
      x-badges:
        - color: red
          label: ALPHA
  /api/stowjobs/search:
    post:
      deprecated: false
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Search for StowJob
      operationId: searchStowJob
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StowJobSearchPayload'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StowJobPaginatedResult'
          description: Your search result
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: List stow jobs (search)
      tags:
        - Stowing (Inventory)
      x-badges:
        - color: orange
          label: BETA
  /api/subscriptions:
    get:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getSubscriptions
      parameters:
        - description: all entities after given Id
          in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - description: number of entities to show
          in: query
          name: size
          required: false
          schema:
            default: 25
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriptions'
          description: All subscriptions.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: List subscriptions
      tags:
        - Eventing (Core)
      x-badges:
        - color: orange
          label: BETA
    post:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />Add
        new Subscription. Please note: Currently it is only possible to add max.
        five subscriptions per event.
      operationId: addSubscription
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionForCreation'
        description: Representation that describes the subscription
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
          description: Subscription is successfully created.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: Create subscription
      tags:
        - Eventing (Core)
      x-badges:
        - color: orange
          label: BETA
  /api/subscriptions/{subscriptionId}:
    delete:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: deleteSubscription
      parameters:
        - description: ID of the subscription you want to delete
          in: path
          name: subscriptionId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
          description: Subscription is successfully deleted.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: Delete subscription
      tags:
        - Eventing (Core)
      x-badges:
        - color: orange
          label: BETA
  /api/substitutes:
    get:
      operationId: getResultingSubstitutesForTenantArticleId
      parameters:
        - description: the tenantArticleId substitutes are requested for
          in: query
          name: tenantArticleId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Substitutes'
          description: >-
            There are substitutes for the given tenantArticleId. The result can
            be found in the body.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Facility not found
      summary: List substitutes
      tags:
        - Picking (Operations)
  /api/substitutes/{tenantArticleId}:
    delete:
      description: ''
      operationId: deleteSubstitutesForTenantArticleId
      parameters:
        - description: the tenant article ID the subsitutes should be deleted for
          in: path
          name: tenantArticleId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: >-
            The substitutes for the given tenantArticleId were successfully
            deleted
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Facility listing not found
      summary: Delete substitutes
      tags:
        - Picking (Operations)
    get:
      description: Get the substitutes for a given tenant article id
      operationId: getSubstitutesForTenantArticleId
      parameters:
        - description: ''
          in: path
          name: tenantArticleId
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Substitutes'
          description: >-
            The substitutes for the given tenantArticleId can be found in the
            body.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Facility not found
      summary: Get substitutes
      tags:
        - Picking (Operations)
    put:
      description: ''
      operationId: putSubstitutesForTenantArticleID
      parameters:
        - description: Tenant article ID of the article the substitutes should be set for
          in: path
          name: tenantArticleId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubstitutesForUpsert'
        description: substitutes to set
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Substitutes'
          description: The substitutes for tenantArticleId were successfully updated
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Facility listing not found
      summary: Set substitutes
      tags:
        - Picking (Operations)
  /api/supportedevents:
    get:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: getEvents
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupportedEvents'
          description: All supported events.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: List supported events
      tags:
        - Eventing (Core)
      x-badges:
        - color: orange
          label: BETA
  /api/tags:
    get:
      description: ''
      operationId: getTags
      parameters:
        - description: all entities
          in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - description: number of entities to show
          in: query
          name: size
          required: false
          schema:
            default: 25
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StrippedTags'
          description: The current list of available tags
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: No more elements available
      summary: List tags
      tags:
        - Tags (Core)
    post:
      description: ''
      operationId: addTag
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagForCreation'
        description: Tag object
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: The tag was successfully created.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Invalid input. See response for details
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
      summary: Create tag
      tags:
        - Tags (Core)
  /api/tags/{tagRef}:
    get:
      description: ''
      operationId: getTag
      parameters:
        - description: Id of the tag you want to get
          in: path
          name: tagRef
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: >-
            Tag was found & you were allowed to access it. The result is in the
            body.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: User not found
      summary: Get tag
      tags:
        - Tags (Core)
    patch:
      description: ''
      operationId: putTag
      parameters:
        - description: Id of the tag you want to update
          in: path
          name: tagRef
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagPatchActions'
        description: Tag patch action
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: >-
            Tag was found & you were allowed to access it. The result is in the
            body.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Tag not found
      summary: Update tag
      tags:
        - Tags (Core)
  /api/tags/packing/needspacking:
    post:
      description: ''
      operationId: getNeedsPacking
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/TagReference'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/NeedsPacking'
          description: >-
            NeedsPacking information for this tag was found & you were allowed
            to access it. The result is in the body.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Entity not found
      summary: Get needs packing for tags
      tags:
        - Packing Configuration (Operations)
  /api/users:
    get:
      deprecated: false
      description: ''
      operationId: getAllUsers
      parameters:
        - in: query
          name: size
          required: false
          schema:
            default: 25
            maximum: 100
            minimum: 1
            type: number
        - in: query
          name: startAfterId
          required: false
          schema:
            type: string
        - description: Order the users by this field
          in: query
          name: orderBy
          required: false
          schema:
            type: string
        - description: Filter the users by this facility
          in: query
          name: facilityId
          required: false
          schema:
            type: string
        - description: >-
            Include all admins in the result (only applicable if facilityId is
            set)
          in: query
          name: includeAdminUsers
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: The users were successfully returned.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: The requested entity was not found
      summary: List users
      tags:
        - User Management (Core)
    post:
      deprecated: false
      description: ''
      operationId: createUser
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserForCreation'
        required: true
      responses:
        '201':
          description: The users was successfully created.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: The requested entity was not found
      summary: Creates user
      tags:
        - User Management (Core)
  /api/users/{userId}:
    delete:
      deprecated: false
      description: ''
      operationId: deleteUser
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The deleted user.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: The requested entity was not found
      summary: Delete user
      tags:
        - User Management (Core)
    get:
      deprecated: false
      description: ''
      operationId: getUser
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The user.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: The requested entity was not found
      summary: Return user
      tags:
        - User Management (Core)
    patch:
      deprecated: false
      description: ''
      operationId: changeUser
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPatchActions'
        required: true
      responses:
        '200':
          description: The modified user.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: The requested entity was not found
      summary: Update user
      tags:
        - User Management (Core)
  /api/users/{userId}/assignedFacilities:
    post:
      deprecated: false
      description: ''
      operationId: assignFacility
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserAssignedFacilityForCreation'
        required: true
      responses:
        '200':
          description: The facilities were successfully assigned to the user.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: The requested entity was not found
      summary: Create facility assignment
      tags:
        - User Management (Core)
  /api/users/{userId}/assignedFacilities/{assignedFacilityId}:
    delete:
      deprecated: true
      description: >-
        This part of the API is deprecated. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: deleteAssignedFacility
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
        - in: path
          name: assignedFacilityId
          required: true
          schema:
            type: string
      responses:
        '201':
          description: The facility was successfully removed from the user.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: The requested entity was not found
      summary: Delete facility assignment
      tags:
        - User Management (Core)
  /api/users/{userId}/permissions:
    get:
      deprecated: false
      description: Returns the roles of a user.
      operationId: getUserRoles
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The roles of the user.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: The requested entity was not found
      summary: Get user roles
      tags:
        - User Management (Core)
  /api/users/me:
    patch:
      deprecated: false
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Update my own data.
      operationId: updateMe
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyUserPersonalData'
        required: true
      responses:
        '200':
          description: Updating my data was successful.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
      summary: Update me user
      tags:
        - User Management (Core)
      x-badges:
        - color: orange
          label: BETA
  /api/users/me/effectivepermissions:
    get:
      deprecated: false
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Returns the effective permissions of the user.
      operationId: getEffectivePermissions
      parameters: []
      responses:
        '200':
          description: The effective permissions of the user.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
      summary: Return effective permissions
      tags:
        - User Management (Core)
      x-badges:
        - color: orange
          label: BETA
  /api/users/search:
    post:
      deprecated: false
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Search for User
      operationId: searchUser
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSearchPayload'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPaginatedResult'
          description: Your search result
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: List users (search)
      tags:
        - User Management (Core)
      x-badges:
        - color: orange
          label: BETA
  /api/validations/postalcodes:
    post:
      description: ''
      operationId: validatePostalCode
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostalCodeValidation'
        description: Branding object
        required: true
      responses:
        '200':
          description: The given postal code is valid for the given country
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: The given postal code is invalid for the given country
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: >-
            Your user, although recognized, is not authorized to use this
            endpoint
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: The given country can't be validated
      summary: Validate postal code
      tags:
        - Validations (Core)
  /api/zones/search:
    post:
      deprecated: false
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Search for Zone
      operationId: searchZone
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ZoneSearchPayload'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZonePaginatedResult'
          description: Your search result
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user is not allowed to operate against this API instance
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Your user, although recognized, is not authorized to use this
      summary: List zones (search)
      tags:
        - Storage Locations (Inventory)
      x-badges:
        - color: orange
          label: BETA
  /graphql:
    get:
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Returns the GraphQL playground.
      operationId: getGraphQLPlayground
      responses:
        '200':
          description: The GraphQL playground
      summary: Get GraphQL
      tags:
        - GraphQL (Infrastructure)
      x-badges:
        - color: red
          label: ALPHA
    post:
      description: >-
        This part of the API is in Alpha status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      operationId: executeGraphQLCommand
      responses:
        '200':
          description: The GraphQL command was successfully executed.
        '400':
          description: GraphQL validation error
      summary: Execute GraphQL command
      tags:
        - GraphQL (Infrastructure)
      x-badges:
        - color: red
          label: ALPHA
components:
  schemas:
    AbortPickJob:
      allOf:
        - $ref: '#/components/schemas/AbstractModificationAction'
        - additionalProperties: false
          properties:
            action:
              description: Use value 'AbortPickJob', because you want to cancel a pickjob
              enum:
                - AbortPickJob
              type: string
          required:
            - action
          type: object
      deprecated: true
      description: >-
        This part of the API is deprecated. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />@deprecated Use api/pickjobs/:id/actions instead
      title: AbortPickJob
      xml:
        name: AbortPickJob
    AbstractArticle:
      properties:
        titleLocalized:
          allOf:
            - $ref: '#/components/schemas/LocaleString'
          description: The translations for the title of the product
        customAttributes:
          description: >-
            Attributes that can be added to this entity. These attributes
            **cannot** be used within fulfillment processes, but enable you to
            attach custom data from your systems to fulfillmenttools entities.
          nullable: true
          type: object
        imageUrl:
          description: >-
            A web link to a picture of this article. Please make sure that no
            authentication is required to fetch the image!
          type: string
        tenantArticleId:
          description: This is a reference to an article number
          example: '4711'
          type: string
        title:
          description: The title of the product
          example: Cologne Water
          type: string
        weight:
          description: weight value is in gram
          minimum: 0
          type: number
      required:
        - tenantArticleId
        - title
      title: AbstractArticle
      type: object
      description: AbstractArticle
    AbstractCarrierCredentials:
      discriminator:
        propertyName: key
      properties:
        key:
          type: string
      required:
        - key
      type: object
      xml:
        name: AbstractCarrierCredentials
      title: AbstractCarrierCredentials
      description: AbstractCarrierCredentials
    AbstractFacilityActionsParameter:
      discriminator:
        propertyName: name
      properties:
        name:
          type: string
        version:
          description: Version of the entity to be changed
          minimum: 0
          type: integer
      required:
        - name
        - version
      title: AbstractFacilityActionsParameter
      description: AbstractFacilityActionsParameter
    AbstractFulfillabilityConstraintType:
      properties:
        type:
          description: >-
            Type of the constraint (must be supported by the fulfillmenttools
            platform).
          enum:
            - ITEMS
          example: ITEMS
          type: string
        value:
          description: Additional parameters needed for the referenced type of constraint.
          type: object
      type: object
      title: AbstractFulfillabilityConstraintType
      description: AbstractFulfillabilityConstraintType
    AbstractModificationAction:
      discriminator:
        propertyName: action
      properties:
        action:
          description: ''
          enum:
            - AddAllowedValueToTag
            - ModifyPickJob
            - ModifyPickJobLastEditor
            - RestartPickJob
            - ResetPickJob
            - CancelPickRun
            - CancelHandoverjob
            - AbortPickJob
            - FinishPickRun
            - StartPickRun
            - ModifyPickLineItem
            - ModifyPickRunLineItem
            - ModifyPackJob
            - PausePackJob
            - ModifyPackLineItem
            - SplitLineItemsPackJob
            - ModifyFacility
            - ModifyListing
            - ModifyRetainedOfflineStock
            - ModifyListingReactivationAfter
            - ModifyUser
            - ModifyShipment
            - ModifyHandoverjob
            - ModifyCarrier
            - ModifyShortpick
            - ModifyReturn
            - ModifyReturnLineItem
            - ModifyRoutingPlan
            - ModifyFence
            - ModifyRating
            - ModifyTimingMode
            - ModifyGlobalRoutingConfiguration
            - ModifyOrderSplit
            - ModifyPrioritization
            - ModifyLoadUnitType
            - ModifyFeature
            - ModifyParcel
            - ModifyParcelLoadUnit
            - ModifyRestowItem
            - RemovePickJobFromPickRun
            - ModifyPartialStock
            - AddTagsToProcess
            - AssignFacilityToProcess
            - UpdateGdprCleanupDateAction
            - ModifyStorageLocation
            - ModifyPackingContainerType
            - ModifyPackingContainerTypeIcon
            - ReplaceCodesInPackingTargetContainer
            - ReplaceLoadUnitLineItems
            - AddLineItemToPackingTargetContainer
            - RemoveLineItemFromPackingTargetContainer
            - UpdateLineItemOnPackingTargetContainer
            - UpdatePackingTargetContainerLineItemRecordableAttributes
            - ModifyCustomService
            - UnlockOrder
          example: <Use the corresponding action, see documentation>
          type: string
      required:
        - action
      type: object
      xml:
        name: AbstractModificationAction
      title: AbstractModificationAction
      description: AbstractModificationAction
    AbstractModifyCarrierCredentials:
      discriminator:
        propertyName: key
      properties:
        key:
          type: string
      required:
        - key
      type: object
      xml:
        name: AbstractModifyCarrierCredentials
      title: AbstractModifyCarrierCredentials
      description: AbstractModifyCarrierCredentials
    AbstractOrderActionsParameter:
      discriminator:
        propertyName: name
      properties:
        name:
          type: string
        version:
          description: Version of the entity to be changed
          minimum: 0
          type: integer
      required:
        - name
        - version
      title: AbstractOrderActionsParameter
      description: AbstractOrderActionsParameter
    AbstractOrderLineItemActionsParameter:
      discriminator:
        propertyName: name
      properties:
        name:
          type: string
        version:
          description: Version of the order to be changed
          minimum: 0
          type: integer
      required:
        - name
        - version
      title: AbstractOrderLineItemActionsParameter
      description: AbstractOrderLineItemActionsParameter
    AbstractRatingConfiguration:
      description: Base Configuration for Ratings. See documentation for Details.
      type: object
      xml:
        name: AbstractRatingConfiguration
      title: AbstractRatingConfiguration
    AbstractReason:
      allOf:
        - $ref: '#/components/schemas/AbstractReasonForCreation'
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        action:
          description: The action this reason can be attached to.
          type: string
        id:
          description: The id of the Reason
          type: string
      required:
        - id
        - action
      type: object
      xml:
        name: AbstractReason
      title: AbstractReason
      description: AbstractReason
    AbstractReasonForCreation:
      additionalProperties: false
      properties:
        reasonLocalized:
          $ref: '#/components/schemas/LocaleString'
        reason:
          description: Text explaining the reason for a supported action.
          example: Rerouted because of an issue in the Facility.
          type: string
      required:
        - reason
        - reasonLocalized
      type: object
      xml:
        name: AbstractReasonForCreation
      title: AbstractReasonForCreation
      description: AbstractReasonForCreation
    AbstractReasonForModification:
      additionalProperties: false
      properties:
        reasonLocalized:
          $ref: '#/components/schemas/LocaleString'
        reason:
          description: Text explaining the reason for a supported action.
          example: Rerouted because of an issue in the Facility.
          type: string
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          format: int64
          type: integer
      required:
        - version
        - reason
        - reasonLocalized
      type: object
      xml:
        name: AbstractReasonForModification
      title: AbstractReasonForModification
      description: AbstractReasonForModification
    AbstractReasons:
      properties:
        hasNextPage:
          description: True if there are more results after the current page
          type: boolean
        reasons:
          items:
            $ref: '#/components/schemas/AbstractReason'
          type: array
        total:
          description: Total number of found entities for this query
          type: integer
      required:
        - reasons
        - hasNextPage
        - total
      type: object
      xml:
        name: AbstractReasons
      title: AbstractReasons
      description: AbstractReasons
    AbstractRoutingStrategyActionsParameter:
      discriminator:
        propertyName: name
      properties:
        name:
          type: string
        version:
          description: Version of the entity to be changed
          minimum: 0
          type: integer
      required:
        - name
        - version
      title: AbstractRoutingStrategyActionsParameter
      description: AbstractRoutingStrategyActionsParameter
    ActivationTimeFrame:
      additionalProperties: false
      properties:
        activeFrom:
          description: >-
            Sets a date before which the associated entity does not become
            active
          format: date-time
          type: string
        activeUntil:
          description: Sets a date after which the associated entity becomes active
          format: date-time
          type: string
        recurrence:
          $ref: '#/components/schemas/ActivationTimeFrameRecurrenceType'
      required:
        - recurrence
      type: object
      title: ActivationTimeFrame
      description: ActivationTimeFrame
    ActivationTimeFrameRecurrenceType:
      enum:
        - YEARLY
        - NONRECURRING
      type: string
      title: ActivationTimeFrameRecurrenceType
      description: ActivationTimeFrameRecurrenceType
    AddAllowedValueToTag:
      allOf:
        - $ref: '#/components/schemas/AbstractModificationAction'
        - additionalProperties: false
          properties:
            action:
              description: >-
                Use value 'AddAllowedValueToTag', because you want to add an
                allowed value to a tag
              enum:
                - AddAllowedValueToTag
              type: string
            allowedValue:
              type: string
          required:
            - action
            - allowedValue
          type: object
      description: Action to add allowed values to a tag
      title: AddAllowedValueToTag
      xml:
        name: AddAllowedValueToTag
    AddChannelAction:
      properties:
        channel:
          oneOf:
            - $ref: '#/components/schemas/EmailNotificationChannelForCreation'
            - $ref: '#/components/schemas/ClientNotificationChannelForCreation'
        name:
          enum:
            - ADD_CHANNEL
          type: string
        version:
          type: number
      required:
        - name
        - channel
        - version
      title: AddChannelAction
      type: object
      description: AddChannelAction
    AddFacilitiesToGroupActionEnum:
      enum:
        - ADD_FACILITIES_TO_GROUP
        - VERSIONLESS_ADD_FACILITIES_TO_GROUP
      type: string
      title: AddFacilitiesToGroupActionEnum
      description: AddFacilitiesToGroupActionEnum
    AddFacilitiesToGroupActionParameter:
      description: Add facilitites to facility group.
      properties:
        facilitiesToAdd:
          items:
            type: string
          minItems: 1
          type: array
        name:
          $ref: '#/components/schemas/AddFacilitiesToGroupActionEnum'
        version:
          description: Version of the entity to be changed
          minimum: 0
          type: integer
      required:
        - name
        - facilitiesToAdd
      title: AddFacilitiesToGroupActionParameter
    AddItemReturnToItemReturnJob:
      additionalProperties: false
      properties:
        itemReturnForCreation:
          $ref: '#/components/schemas/ItemReturnForCreation'
        itemReturnJobVersion:
          description: Version of the itemReturnJob the itemReturn gets added to
          minimum: 0
          type: integer
      required:
        - itemReturnForCreation
        - itemReturnJobVersion
      title: AddItemReturnToItemReturnJob
      description: AddItemReturnToItemReturnJob
    AdditionalInformation:
      allOf:
        - $ref: '#/components/schemas/AdditionalInformationForCreation'
      properties:
        description:
          type: string
        id:
          type: string
        name:
          type: string
      required:
        - id
      type: object
      title: AdditionalInformation
      description: AdditionalInformation
    AdditionalInformationForCreation:
      additionalProperties: false
      properties:
        descriptionLocalized:
          $ref: '#/components/schemas/LocaleString'
        nameLocalized:
          $ref: '#/components/schemas/LocaleString'
        isMandatory:
          type: boolean
        tenantAdditionalInformationId:
          description: >-
            Id to identifiy the additional information on an external system.
            Must be unique per CustomService.
          example: AddInfoABC123
          minLength: 1
          type: string
        valueType:
          $ref: '#/components/schemas/AdditionalInformationValueType'
      required:
        - nameLocalized
        - valueType
      type: object
      title: AdditionalInformationForCreation
      description: AdditionalInformationForCreation
    AdditionalInformationValueType:
      enum:
        - STRING
        - BOOLEAN
        - NUMBER
        - NOVALUE
        - INPUT_MULTILINE_STRING
      type: string
      title: AdditionalInformationValueType
      description: AdditionalInformationValueType
    AdditionalShippingArticleAttribute:
      allOf:
        - $ref: '#/components/schemas/CountryServiceMappingShippingArticleAttribute'
      title: AdditionalShippingArticleAttribute
      description: AdditionalShippingArticleAttribute
    AdditionalShippingAttribute:
      allOf:
        - $ref: '#/components/schemas/CountryServiceMappingShippingAttribute'
      title: AdditionalShippingAttribute
      description: AdditionalShippingAttribute
    AddLineItemToPackingTargetContainer:
      allOf:
        - $ref: '#/components/schemas/AbstractModificationAction'
        - additionalProperties: false
          properties:
            action:
              description: >-
                Use AddLineItemToPackingTargetContainer to add a line item to an
                existing packing container
              enum:
                - AddLineItemToPackingTargetContainer
              type: string
            lineItem:
              $ref: '#/components/schemas/PackingTargetContainerLineItemForCreation'
          required:
            - action
            - lineItem
          type: object
      description: Action to a line item to a packing target container.
      title: AddLineItemToPackingTargetContainer
      xml:
        name: AddLineItemToPackingTargetContainer
    AddRefuseReasonParameter:
      additionalProperties: false
      properties:
        availableRefuseReasonForCreation:
          $ref: '#/components/schemas/AvailableRefuseReasonForCreation'
        handoverConfigurationVersion:
          type: number
      required:
        - handoverConfigurationVersion
        - availableRefuseReasonForCreation
      title: AddRefuseReasonParameter
      description: AddRefuseReasonParameter
    AddRemoteConfigurationScopeParameter:
      additionalProperties: false
      properties:
        remoteConfigVersion:
          minimum: 0
          type: number
        scope:
          $ref: '#/components/schemas/RemoteConfigurationScopeForCreation'
      required:
        - scope
        - remoteConfigVersion
      type: object
      title: AddRemoteConfigurationScopeParameter
      description: AddRemoteConfigurationScopeParameter
    Address:
      properties:
        additionalAddressInfo:
          example: 'to care of: Mrs. Müller'
          type: string
        city:
          example: Langenfeld
          pattern: ^.+$
          type: string
        country:
          description: A two-digit country code as per ISO 3166-1 alpha-2
          example: DE
          pattern: ^[A-Z]{2}$
          type: string
        customAttributes:
          description: >-
            Attributes that can be added to the address. These attributes cannot
            be used within fulfillment processes, but it could be useful to have
            the informations carried here.
          type: object
        houseNumber:
          example: 42a
          pattern: ^.+$
          type: string
        phoneNumbers:
          items:
            properties:
              customAttributes:
                description: >-
                  Attributes that can be added to the phonenumber. These
                  attributes cannot be used within fulfillment processes, but it
                  could be useful to have the informations carried here.
                type: object
              label:
                description: >-
                  Can be used to give a description for the number, like
                  "private", "business number", etc.
                type: string
              type:
                enum:
                  - MOBILE
                  - PHONE
                type: string
              value:
                description: The number itself. We do not enforce any format (yet).
                type: string
            required:
              - value
              - type
            type: object
          type: array
        postalCode:
          example: '40764'
          pattern: ^.+$
          type: string
        province:
          example: NRW
          pattern: ^.+$
          type: string
        street:
          example: Hauptstr.
          pattern: ^.+$
          type: string
      required:
        - street
        - city
        - postalCode
        - country
      type: object
      title: Address
      description: Address
    AddressType:
      description: >-
        Type of this address, used e.g. for communication with the carrier. Use
        POSTAL_ADDRESS for the address where the order should be shipped to,
        INVOICE_ADDRESS for the address where the invoice is sent to and
        PARCEL_LOCKER if a parcel locker is used for this order.
      enum:
        - POSTAL_ADDRESS
        - PARCEL_LOCKER
        - INVOICE_ADDRESS
      type: string
      title: AddressType
    AddServiceDataAvailableLineItemsActionEnum:
      enum:
        - ADD_SERVICE_DATA_AVAILABLE_LINE_ITEMS
      type: string
      title: AddServiceDataAvailableLineItemsActionEnum
      description: AddServiceDataAvailableLineItemsActionEnum
    AddServiceDataAvailableLineItemsActionParameter:
      additionalProperties: false
      properties:
        name:
          $ref: '#/components/schemas/AddServiceDataAvailableLineItemsActionEnum'
        serviceDataAvailableLineItems:
          description: Service data available line items to be added
          items:
            $ref: '#/components/schemas/ServiceDataAvailableLineItemForCreation'
          minItems: 1
          type: array
        serviceDataVersion:
          description: Version of the service data
          minimum: 0
          type: integer
      required:
        - name
        - serviceDataAvailableLineItems
        - serviceDataVersion
      title: AddServiceDataAvailableLineItemsActionParameter
      description: AddServiceDataAvailableLineItemsActionParameter
    AddTagsToProcess:
      allOf:
        - $ref: '#/components/schemas/AbstractModificationAction'
        - additionalProperties: false
          properties:
            action:
              description: >-
                Use value 'AddTagsToProcess', because you want to modify a
                process
              enum:
                - AddTagsToProcess
              type: string
            tags:
              items:
                $ref: '#/components/schemas/TagReference'
              minItems: 1
              type: array
          required:
            - action
          type: object
      description: Action to add tags to a Process
      title: AddTagsToProcessAction
      xml:
        name: AddTagsToProcess
    AlternativeReturnAddressConfiguration:
      additionalProperties: false
      properties:
        alternativeReturnAddressPerTag:
          items:
            $ref: '#/components/schemas/AlternativeReturnAddressPerTag'
          minItems: 0
          type: array
      required:
        - alternativeReturnAddressPerTag
      title: AlternativeReturnAddressConfiguration
      description: AlternativeReturnAddressConfiguration
    AlternativeReturnAddressPerTag:
      additionalProperties: false
      properties:
        alternativeReturnAddress:
          $ref: '#/components/schemas/FacilityAddress'
        matchingValues:
          items:
            type: string
          minItems: 1
          type: array
        tagRef:
          description: needs to be an existing tag id
          type: string
      required:
        - tagRef
        - matchingValues
        - alternativeReturnAddress
      title: AlternativeReturnAddressPerTag
      description: AlternativeReturnAddressPerTag
    AngelCarrierCredentials:
      allOf:
        - $ref: '#/components/schemas/AbstractCarrierCredentials'
        - properties:
            authToken:
              description: X-Auth-Token for callbacks from Angel
              type: string
            password:
              description: angel password
              type: string
            username:
              description: Angel username
              type: string
          required:
            - username
            - password
          type: object
      description: Angel Carrier Credentials
      title: AngelCarrierCredentials
      xml:
        name: AngelCarrierCredentials
    AnnounceItemReturnActionEnum:
      enum:
        - AnnounceItemReturn
      type: string
      title: AnnounceItemReturnActionEnum
      description: AnnounceItemReturnActionEnum
    AnnounceItemReturnActionParameter:
      additionalProperties: false
      description: Action to announce an ItemReturn.
      properties:
        itemReturnJobVersion:
          description: Version of the entity to be changed
          minimum: 0
          type: integer
        name:
          $ref: '#/components/schemas/AnnounceItemReturnActionEnum'
      required:
        - name
        - itemReturnJobVersion
      title: AnnounceItemReturnActionParameter
    ApiError:
      items:
        $ref: '#/components/schemas/ErrorInner'
      type: array
      xml:
        name: ApiError
      title: ApiError
      description: ApiError
    ArticleAttributeItem:
      properties:
        valueLocalized:
          allOf:
            - $ref: '#/components/schemas/LocaleString'
          description: >-
            The translations for the key of the attribute. This can be only
            filled with a descriptive category
        keyLocalized:
          allOf:
            - $ref: '#/components/schemas/LocaleString'
          description: >-
            The translations for the key of the attribute. This can be only
            filled with a descriptive category. Excluding for %%subtitle%%
        category:
          description: |-
            This category is used by OCFF to customize implemented processes.
            Categorized attributes are used by various processes and tools
            throughout our platform. For a complete list of possible categories
            and the correct use of those please refer to the documentation.
            Default value: miscellaneous
          enum:
            - descriptive
            - miscellaneous
            - pickingSequence
            - customs
            - insurance
            - shop
            - dimensions
            - carrierService
            - salesPrice
          type: string
        context:
          allOf:
            - $ref: '#/components/schemas/ArticleAttributeItemContext'
          description: >-
            Context for salesPrice category and valuePerUnit key. Can only be
            set via Listing endpoints.
        key:
          description: |-
            Providing the key %%subtitle%% (see example) here will cause the
            value to appear for example in the App directly under the title.
            With all other attributes also the key will be displayed in the
             clients.
          example: '%%subtitle%%'
          minLength: 1
          type: string
        priority:
          description: |-
            This value gives the priority in the respective attribute category.
            The lower the value the higher is the priority, e.g. priority 1 is
            higher than priority 10. Attributes that have the highest priority
            might be selected for display in different articles of OCFF. Default
            Value is 1001. For details please contact the product owners.
          example: 100
          format: int64
          maximum: 1001
          minimum: 1
          type: integer
        type:
          default: STRING
          description: The type of the attribute.
          enum:
            - STRING
            - NUMBER
            - CURRENCY
            - BOOLEAN
          type: string
        value:
          example: 585er Gold
          minLength: 1
          type: string
      required:
        - key
        - value
      title: ArticleAttributeItem
      type: object
      description: ArticleAttributeItem
    ArticleAttributeItemContext:
      properties:
        type:
          description: Indicates the entity type the value refers to.
          enum:
            - FACILITY_GROUP
            - FACILITY
          type: string
        value:
          description: Holds the reference to the entity the attribute refers to.
          minLength: 1
          type: string
      required:
        - type
        - value
      title: ArticleAttributeItemContext
      type: object
      description: ArticleAttributeItemContext
    ArticleAvailability:
      properties:
        availabilityTimeframe:
          $ref: '#/components/schemas/AvailabilityTimeframe'
        availableStock:
          type: number
        outOfStockBehaviour:
          $ref: '#/components/schemas/OutOfStockBehaviour'
        tenantArticleId:
          type: string
      required:
        - tenantArticleId
        - availableStock
      title: ArticleAvailability
      description: ArticleAvailability
    ArticleItem:
      additionalProperties: false
      properties:
        quantity:
          minimum: 1
          type: number
        tenantArticleRef:
          type: string
      required:
        - quantity
        - tenantArticleRef
      type: object
      title: ArticleItem
      description: ArticleItem
    ArticlePrice:
      additionalProperties: false
      properties:
        currency:
          allOf:
            - $ref: '#/components/schemas/CurrencyCode'
          description: The currency of the price as an ISO 4217 code.
          example: EUR
          nullable: true
        pricePerUnit:
          description: Price value for a given currency per unit
          example: 9.99
          minimum: 0
          type: number
      required:
        - pricePerUnit
        - currency
      type: object
      title: ArticlePrice
      description: ArticlePrice
    ArticleStockForecast:
      properties:
        created:
          format: date-time
          type: string
        cumulated:
          type: number
        cumulatedLowerBounds:
          items:
            type: number
          type: array
        cumulatedUpperBounds:
          items:
            type: number
          type: array
        id:
          type: string
        lastModified:
          format: date-time
          type: string
        loadTime:
          format: date-time
          type: string
        lowerBounds:
          items:
            type: number
          type: array
        period:
          enum:
            - DAILY
          type: string
        point:
          type: number
        sourceDate:
          format: date-time
          type: string
        targetDate:
          format: date-time
          type: string
        tenantArticleId:
          type: string
        upperBounds:
          items:
            type: number
          type: array
      required:
        - id
        - tenantArticleId
        - created
        - lastModified
        - sourceDate
        - targetDate
        - loadTime
        - cumulated
        - cumulatedLowerBounds
        - cumulatedUpperBounds
        - lowerBounds
        - upperBounds
        - period
        - point
      title: ArticleStockForecast
      type: object
      description: ArticleStockForecast
    ArtifactMetadataItem:
      properties:
        buildDate:
          description: Date of the build of the artifact
          example: 2020-02-03T08:45:50.525Z
          format: date-time
          type: string
        download:
          properties:
            expiration:
              description: Expiration date of the download link
              example: 2020-02-03T08:45:50.525Z
              format: date-time
              type: string
            url:
              description: URL for the download of the artifact
              type: string
          type: object
        versionCode:
          description: Version Code of the artifact
          example: 42
          type: number
        versionName:
          description: Version Name of the artifact
          example: 1.0.42
          type: string
      required:
        - download
        - versionCode
        - versionName
        - buildDate
      type: object
      title: ArtifactMetadataItem
      description: ArtifactMetadataItem
    ArtifactMetadataItems:
      properties:
        artifacts:
          items:
            $ref: '#/components/schemas/ArtifactMetadataItem'
          type: array
        platform:
          description: Platform name for which the artifact list is generated
          example: android
          type: string
      required:
        - artifacts
        - platform
      type: object
      title: ArtifactMetadataItems
      description: ArtifactMetadataItems
    AssignedGroup:
      properties:
        facilityRefs:
          items:
            type: string
          type: array
        group:
          type: string
      required:
        - facilityRefs
        - group
      title: AssignedGroup
      type: object
      description: AssignedGroup
    AssignedRequiredLineItem:
      additionalProperties: false
      properties:
        quantity:
          description: assigned quantity of the items
          example: 12
          minimum: 0
          type: integer
        serviceDataLineItemId:
          description: >-
            Id matching service data line item where this assigned required line
            item is assigned from
          example: 41d43211-g5a1-gg22-a716-ba095e30ds1d
          type: string
      required:
        - quantity
        - serviceDataLineItemId
      type: object
      title: AssignedRequiredLineItem
      description: AssignedRequiredLineItem
    AssignedRoles:
      properties:
        contextLimitations:
          description: The context limitations of the assigned role
          items:
            $ref: '#/components/schemas/ContextLimitation'
          type: array
        ref:
          description: The id of the assigned role
          type: string
      required:
        - ref
      title: AssignedRoles
      type: object
      description: AssignedRoles
    AssignedUser:
      properties:
        userId:
          description: ID of the user who is assigned
          type: string
        username:
          description: username of the user who is assigned
          type: string
      required:
        - username
        - userId
      type: object
      title: AssignedUser
      description: AssignedUser
    AssignedUserForCreationById:
      description: Create a assigned user by giving a valid id
      properties:
        userId:
          description: userId of the user should be assigned
          type: string
      required:
        - userId
      title: AssignedUserForCreationById
      type: object
    AssignedUserForCreationByName:
      description: Create a assigned user by giving a valid name
      properties:
        username:
          description: username of the user should be assigned
          type: string
      required:
        - username
      title: AssignedUserForCreationByName
      type: object
    AssignFacilityToProcess:
      allOf:
        - $ref: '#/components/schemas/AbstractModificationAction'
        - additionalProperties: false
          properties:
            action:
              description: Use value to manually assign a facility to a process
              enum:
                - AssignFacilityToProcess
              type: string
            facilityRef:
              type: string
            rerouteDescriptionId:
              type: string
          required:
            - action
            - facilityRef
          type: object
      description: Action to assign a process to a facility.
      title: AssignFacilityToProcessAction
      xml:
        name: AssignFacilityToProcess
    AssignmentItem:
      properties:
        articleTitle:
          type: string
        quantity:
          type: number
        tenantArticleId:
          type: string
      required:
        - tenantArticleId
        - quantity
      title: AssignmentItem
      description: AssignmentItem
    Audit:
      properties:
        actor:
          $ref: '#/components/schemas/AuditActor'
        anonymizationDate:
          format: date-time
          type: string
        client:
          $ref: '#/components/schemas/AuditClient'
        created:
          description: Creation date of the entity, auto-generated if not provided
          format: date-time
          type: string
        deletionDate:
          format: date-time
          type: string
        entityCreated:
          format: date-time
          type: string
        entityRef:
          type: string
        entityType:
          enum:
            - PACK_JOB
            - PICK_JOB
            - PICK_RUN
            - HANDOVER_JOB
            - SHIPMENT
            - PARCEL
            - CUSTOM_SERVICE
            - SERVICE_JOB
            - LINKED_SERVICE_JOBS
            - ORDER
            - ROUTING_PLAN
            - FACILITY
            - FACILITY_GROUP
            - FACILITY_CARRIER_CONNECTION
            - FACILITY_CUSTOM_SERVICE
            - ROUTING_STRATEGY
            - STOW_JOB
          type: string
        entityVersion:
          type: number
        eventId:
          type: string
        globalActor:
          $ref: '#/components/schemas/AuditActor'
        id:
          type: string
        isAnonymized:
          type: boolean
        lastModified:
          description: Service-generated last modification date of the entity
          format: date-time
          type: string
        operation:
          $ref: '#/components/schemas/AuditOperation'
        trace:
          type: string
        version:
          description: The version of the entity, used for optimistic locking mechanisms
          type: number
      required:
        - id
        - eventId
        - entityRef
        - entityType
        - entityVersion
        - isAnonymized
        - entityCreated
        - deletionDate
        - anonymizationDate
        - trace
        - actor
        - globalActor
        - client
        - operation
        - version
      title: Audit
      type: object
      description: Audit
    AuditActor:
      properties:
        details:
          $ref: '#/components/schemas/AuditActorDetails'
        id:
          type: string
      required:
        - id
        - details
      title: AuditActor
      type: object
      description: AuditActor
    AuditActorDetails:
      properties:
        topic:
          type: string
        username:
          type: string
      required:
        - topic
        - username
      title: AuditActorDetails
      type: object
      description: AuditActorDetails
    AuditClient:
      properties:
        api:
          type: string
        rawInfo:
          type: string
      required:
        - api
        - rawInfo
      title: AuditClient
      type: object
      description: AuditClient
    AuditOperation:
      properties:
        name:
          type: string
        start:
          format: date-time
          type: string
      required:
        - name
        - start
      title: AuditOperation
      type: object
      description: AuditOperation
    AuditsResult:
      properties:
        audits:
          description: The audits that match the filter criteria
          items:
            $ref: '#/components/schemas/Audit'
          type: array
        total:
          description: The total number of audits that match the filter criteria
          minimum: 0
          type: number
      required:
        - audits
        - total
      title: AuditsResult
      type: object
      description: AuditsResult
    AuthenticationProvider:
      properties:
        id:
          description: The id of the authentication provider
          type: string
        type:
          $ref: '#/components/schemas/AuthenticationProviderTypeEnum'
      required:
        - type
      title: AuthenticationProvider
      type: object
      description: AuthenticationProvider
    AuthenticationProviderTypeEnum:
      description: The type of the authentication provider
      enum:
        - EMAIL_PASSWORD
        - OIDC
      title: AuthenticationProviderTypeEnum
      type: string
    AvailabilityAllocation:
      properties:
        channelRef:
          type: string
        created:
          format: date-time
          type: string
        facilityRef:
          type: string
        groupRef:
          type: string
        id:
          type: string
        initialStockQuantity:
          type: number
        lastModified:
          format: date-time
          type: string
        version:
          type: number
      required:
        - facilityRef
        - initialStockQuantity
        - groupRef
        - channelRef
        - id
        - version
        - created
        - lastModified
      title: AvailabilityAllocation
      type: object
      description: AvailabilityAllocation
    AvailabilityAllocationForCreationUnderGroup:
      properties:
        facilityRef:
          type: string
        initialStockQuantity:
          type: number
      required:
        - facilityRef
        - initialStockQuantity
      title: AvailabilityAllocationForCreationUnderGroup
      type: object
      description: AvailabilityAllocationForCreationUnderGroup
    AvailabilityAllocationForReplacement:
      properties:
        groupId:
          type: string
        initialStockQuantity:
          type: number
        version:
          type: number
      required:
        - version
        - initialStockQuantity
      title: AvailabilityAllocationForReplacement
      type: object
      description: AvailabilityAllocationForReplacement
    AvailabilityAllocationGroup:
      properties:
        active:
          type: boolean
        activePeriod:
          $ref: '#/components/schemas/AvailabilityAllocationPeriod'
        channelRef:
          type: string
        created:
          format: date-time
          type: string
        id:
          type: string
        lastModified:
          format: date-time
          type: string
        tenantArticleIds:
          items:
            type: string
          maxItems: 1
          type: array
        version:
          type: number
      required:
        - tenantArticleIds
        - active
        - channelRef
        - id
        - version
        - created
        - lastModified
      title: AvailabilityAllocationGroup
      type: object
      description: AvailabilityAllocationGroup
    AvailabilityAllocationGroupForCreationUnderChannel:
      properties:
        active:
          type: boolean
        activePeriod:
          $ref: '#/components/schemas/AvailabilityAllocationPeriod'
        tenantArticleIds:
          items:
            type: string
          maxItems: 1
          type: array
      required:
        - tenantArticleIds
        - active
      title: AvailabilityAllocationGroupForCreationUnderChannel
      type: object
      description: AvailabilityAllocationGroupForCreationUnderChannel
    AvailabilityAllocationGroupForReplacement:
      properties:
        active:
          type: boolean
        activePeriod:
          $ref: '#/components/schemas/AvailabilityAllocationPeriod'
        version:
          type: number
      required:
        - version
        - active
      title: AvailabilityAllocationGroupForReplacement
      type: object
      description: AvailabilityAllocationGroupForReplacement
    AvailabilityAllocationGroupPaginatedResult:
      properties:
        groups:
          items:
            $ref: '#/components/schemas/AvailabilityAllocationGroup'
          type: array
        total:
          minimum: 0
          type: number
      required:
        - total
        - groups
      title: AvailabilityAllocationGroupPaginatedResult
      type: object
      description: AvailabilityAllocationGroupPaginatedResult
    AvailabilityAllocationPaginatedResult:
      properties:
        allocations:
          items:
            $ref: '#/components/schemas/AvailabilityChannel'
          type: array
        total:
          minimum: 0
          type: number
      required:
        - total
        - allocations
      title: AvailabilityAllocationPaginatedResult
      type: object
      description: AvailabilityAllocationPaginatedResult
    AvailabilityAllocationPeriod:
      properties:
        end:
          format: date-time
          type: string
        start:
          format: date-time
          type: string
      title: AvailabilityAllocationPeriod
      type: object
      description: AvailabilityAllocationPeriod
    AvailabilityChannel:
      properties:
        created:
          format: date-time
          type: string
        id:
          type: string
        lastModified:
          format: date-time
          type: string
        name:
          type: string
        strategy:
          enum:
            - REGULAR
            - IRON_RESERVE
            - RESTRICT
          type: string
        version:
          type: number
      required:
        - name
        - strategy
        - version
        - id
        - created
        - lastModified
      title: AvailabilityChannel
      type: object
      description: AvailabilityChannel
    AvailabilityChannelForCreation:
      properties:
        name:
          type: string
        strategy:
          enum:
            - REGULAR
            - IRON_RESERVE
            - RESTRICT
          type: string
      required:
        - name
        - strategy
      title: AvailabilityChannelForCreation
      type: object
      description: AvailabilityChannelForCreation
    AvailabilityChannelForReplacement:
      properties:
        name:
          type: string
        strategy:
          enum:
            - REGULAR
            - IRON_RESERVE
            - RESTRICT
          type: string
        version:
          type: number
      required:
        - name
        - strategy
        - version
      title: AvailabilityChannelForReplacement
      type: object
      description: AvailabilityChannelForReplacement
    AvailabilityChannelPaginatedResult:
      properties:
        channels:
          items:
            $ref: '#/components/schemas/AvailabilityChannel'
          type: array
        total:
          minimum: 0
          type: number
      required:
        - total
        - channels
      title: AvailabilityChannelPaginatedResult
      type: object
      description: AvailabilityChannelPaginatedResult
    AvailabilityDuringRerouteStock:
      properties:
        pickedQuantity:
          type: number
        rerouteReason:
          $ref: '#/components/schemas/RerouteReason'
      title: AvailabilityDuringRerouteStock
      description: AvailabilityDuringRerouteStock
    AvailabilityDuringRouting:
      properties:
        articleTitle:
          type: string
        available:
          type: number
        availablePostRerouteAdjustment:
          type: number
        bundleInformation:
          items:
            $ref: '#/components/schemas/BundleInformation'
          type: array
        isBackOrderable:
          default: false
          type: boolean
        preOrderDate:
          format: date-time
          type: string
        requestedQuantity:
          type: number
        rerouteInformation:
          $ref: '#/components/schemas/AvailabilityDuringRerouteStock'
        tenantArticleId:
          type: string
      required:
        - tenantArticleId
        - requestedQuantity
        - available
        - isBackOrderable
      title: AvailabilityDuringRouting
      description: AvailabilityDuringRouting
    AvailabilityTimeframe:
      properties:
        start:
          example: 2020-02-03T08:45:50.525Z
          format: date-time
          type: string
      type: object
      title: AvailabilityTimeframe
      description: AvailabilityTimeframe
    AvailableForPickingDetails:
      properties:
        total:
          type: number
      required:
        - total
      title: AvailableForPickingDetails
      type: object
      description: AvailableForPickingDetails
    AvailableItemCondition:
      additionalProperties: false
      properties:
        conditionLocalized:
          $ref: '#/components/schemas/LocaleString'
          description: Will be translated into 'condition' when requested
          example:
            de_DE: Beschädigt
            en_US: Damaged
      title: AvailableItemCondition
      description: AvailableItemCondition
    AvailableRefusedReason:
      additionalProperties: false
      properties:
        refusedReasonLocalized:
          $ref: '#/components/schemas/LocaleString'
        active:
          type: boolean
        refusedReason:
          description: translated refusedReason selected from refusedReasonLocalized
          example: Broken Item
          type: string
      required:
        - refusedReasonLocalized
        - active
      title: AvailableRefusedReason
      description: AvailableRefusedReason
    AvailableRefuseReasonForCreation:
      additionalProperties: false
      properties:
        refusedReasonLocalized:
          $ref: '#/components/schemas/LocaleString'
          description: Localized reason
          example: '{ en_US: ''SomeName'' }'
        active:
          example: true
          type: boolean
      required:
        - active
        - refusedReasonLocalized
      title: AvailableRefuseReasonForCreation
      description: AvailableRefuseReasonForCreation
    AvailableRefuseReasonForUpdate:
      additionalProperties: false
      properties:
        refusedReasonLocalized:
          $ref: '#/components/schemas/LocaleString'
          description: Localized reason
          example: '{ en_US: ''SomeName'' }'
        active:
          example: true
          type: boolean
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          format: int64
          type: number
      required:
        - active
        - refusedReasonLocalized
        - version
      title: AvailableRefuseReasonForUpdate
      description: AvailableRefuseReasonForUpdate
    AvailableReturnReason:
      additionalProperties: false
      properties:
        reasonLocalized:
          $ref: '#/components/schemas/LocaleString'
          description: Will be translated into 'reason' when requested
          example:
            de_DE: Beschädigt
            en_US: Damaged
        identifier:
          description: >-
            Small identifier to be displayed and printed. Allowed values are
            1-99 and A-Z. Needs to be unique respecting all other reasons. If
            not set, an ascending will be chosen automatically
          example: A
          type: string
      required:
        - reasonLocalized
      title: AvailableReturnReason
      description: AvailableReturnReason
    AvailableUntilCalculationBase:
      description: >-
        The base for the calculation of the available until date. If it can't be
        resolved into a valid date (i.e. missing expiry value), an undefined
        "availableUntil" is the result
      enum:
        - EXPIRY
        - CREATION
      type: string
      xml:
        name: AvailableUntilCalculationBase
      title: AvailableUntilCalculationBase
    AvailableUntilDefinition:
      properties:
        calculationBase:
          $ref: '#/components/schemas/AvailableUntilCalculationBase'
        modifier:
          description: >-
            Moves the calculated date by the given period, defined in ISO-8601
            duration notation. Use negative values to move the date backwards.
            Example: "-P30D" places the "availableUntil" value 30 days before
            the calculated date.
          example: '-P30D'
          pattern: ^-?P(?:(\d+W)|(\d+Y)?(\d+M)?(\d+D)?(?:T(\d+H)?(\d+M)?(\d+S)?)?)$
          type: string
      required:
        - calculationBase
      title: AvailableUntilDefinition
      description: AvailableUntilDefinition
    BackofficePickingConfiguration:
      description: Can this tenant use the backoffice for picking?
      properties:
        active:
          default: false
          type: boolean
      required:
        - active
      type: object
      title: BackofficePickingConfiguration
    Backordered:
      properties:
        lineItems:
          items:
            $ref: '#/components/schemas/DeliveryPromiseLineItem'
          type: array
      required:
        - lineItems
      type: object
      title: Backordered
      description: Backordered
    BaseDecisionDetail:
      properties:
        decisionType:
          $ref: '#/components/schemas/DecisionType'
      required:
        - decisionType
      title: BaseDecisionDetail
      description: BaseDecisionDetail
    BaseValidation:
      properties:
        validationType:
          enum:
            - STRING
            - FLOAT
            - INTEGER
          type: string
      required:
        - validationType
      type: object
      title: BaseValidation
      description: BaseValidation
    BasicDeliveryPromiseShipment:
      additionalProperties: false
      properties:
        facility:
          $ref: '#/components/schemas/BasicDeliveryPromiseShipmentFacility'
        lineItems:
          items:
            $ref: '#/components/schemas/DeliveryPromiseLineItem'
          type: array
      required:
        - lineItems
        - facility
      type: object
      xml:
        name: DeliveryPromiseShipment
      title: BasicDeliveryPromiseShipment
      description: BasicDeliveryPromiseShipment
    BasicDeliveryPromiseShipmentFacility:
      additionalProperties: false
      properties:
        facilityName:
          type: string
        facilityRef:
          type: string
        tenantFacilityId:
          type: string
      required:
        - facilityName
        - facilityRef
      title: BasicDeliveryPromiseShipmentFacility
      description: BasicDeliveryPromiseShipmentFacility
    BasketItem:
      properties:
        quantity:
          description: Quantity
          type: integer
        tenantArticleId:
          description: Tenant article ID
          type: string
      required:
        - tenantArticleId
        - quantity
      title: BasketItem
      type: object
      description: BasketItem
    BooleanFilter:
      properties:
        eq:
          type: boolean
        notEq:
          type: boolean
      title: BooleanFilter
      type: object
      description: BooleanFilter
    Brand:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
        - $ref: '#/components/schemas/BrandForCreation'
      properties:
        id:
          example: fsfdsf87fsd
          type: string
        name:
          description: The name of the brand for this listing
          example: Adidas
          type: string
      required:
        - name
        - id
      type: object
      xml:
        name: Brand
      title: Brand
      description: Brand
    BrandForCreation:
      properties:
        name:
          description: The name of the brand for this listing
          example: Adidas
          type: string
      required:
        - name
      type: object
      xml:
        name: BrandForCreation
      title: BrandForCreation
      description: BrandForCreation
    BringCarrierConfiguration:
      allOf:
        - $ref: '#/components/schemas/CarrierConfiguration'
      description: Configuration of Bring Carrier
      properties:
        customerId:
          description: Bring Carrier customer number.
          example: '12345'
          type: string
        returnProduct:
          description: Product that will be used for return
          example: '9300'
          type: string
        shipmentProduct:
          description: Product that will be used for the shipment booking
          example: '5600'
          type: string
        supportPhoneNumber:
          description: Bring Carrier support phone number.
          example: '0031121424242'
          type: string
        trackAndTraceUrl:
          type: string
        webhookFftHost:
          type: string
      required:
        - customerId
        - supportPhoneNumber
      title: BringCarrierConfiguration
    BringCarrierCredentials:
      allOf:
        - $ref: '#/components/schemas/AbstractCarrierCredentials'
        - properties:
            apiKey:
              description: Internal API Key to communicate with the CEP Api
              type: string
            apiUid:
              description: Internal API Uid to communicate with the CEP Api
              type: string
            authToken:
              description: Identifier for Track&Trace Webhook
              type: string
            clientUrl:
              description: Url of the requesting client, can be a static value
              type: string
          required:
            - apiUid
            - apiKey
            - clientUrl
          type: object
      description: Bring Credentials.
      title: BringCarrierCredentials
      xml:
        name: BringCarrierCredentials
    BulkOperationError:
      properties:
        message:
          type: string
        type:
          enum:
            - VALIDATION
            - UNKNOWN
          type: string
      required:
        - type
        - message
      title: BulkOperationError
      type: object
      description: BulkOperationError
    BulkOperationResultStatus:
      enum:
        - UPDATED
        - UNCHANGED
        - CREATED
        - FAILED
      type: string
      title: BulkOperationResultStatus
      description: BulkOperationResultStatus
    BulkUpsertSummary:
      properties:
        created:
          description: The number of operations that led to an insertion
          type: number
        unchanged:
          description: The number of operations that led to no change
          type: number
        updated:
          description: The number of operations that led to an update
          type: number
      required:
        - created
        - updated
        - unchanged
      title: BulkUpsertSummary
      type: object
      description: BulkUpsertSummary
    BundleInformation:
      properties:
        customServiceNodeId:
          type: string
        requestedQuantity:
          type: number
      required:
        - customServiceNodeId
        - requestedQuantity
      title: BundleInformation
      description: BundleInformation
    ByTrait:
      properties:
        ACCESSIBLE:
          type: number
        PICKABLE:
          type: number
      required:
        - PICKABLE
        - ACCESSIBLE
      title: ByTrait
      type: object
      description: ByTrait
    CalculatedPurchasePrice:
      properties:
        discount:
          description: The discount applied to the purchase price
          oneOf:
            - $ref: '#/components/schemas/FacilityDiscountRelative'
            - $ref: '#/components/schemas/FacilityDiscountAbsolute'
        discountedPurchasePrice:
          allOf:
            - $ref: '#/components/schemas/PurchasePrice'
          description: Discounted purchase price for the listing.
        purchasePrice:
          allOf:
            - $ref: '#/components/schemas/PurchasePrice'
          description: purchase price information for the listing.
        supplierFacilityRef:
          description: The reference of the supplier facility.
          type: string
      required:
        - supplierFacilityRef
        - purchasePrice
        - discountedPurchasePrice
      title: CalculatedPurchasePrice
      type: object
      description: CalculatedPurchasePrice
    CallbackHeader:
      description: Header for the Webhook call.
      properties:
        key:
          description: 'This is the key of the header. e.g.: `Authorization`'
          type: string
        value:
          description: >-
            This is the value for the header. e.g.: `Basic
            dXNlcm5hbWU6cGFzc3dvcmQ=`
          type: string
      required:
        - key
        - value
      title: CallbackHeader
      type: object
    CancelationReason:
      allOf:
        - $ref: '#/components/schemas/AbstractReason'
      properties:
        action:
          enum:
            - CANCELATION
          type: string
      required:
        - action
      type: object
      xml:
        name: CancelationReason
      title: CancelationReason
      description: CancelationReason
    CancelationReasonForCreation:
      allOf:
        - $ref: '#/components/schemas/AbstractReasonForCreation'
      type: object
      xml:
        name: CancelationReasonForCreation
      title: CancelationReasonForCreation
      description: CancelationReasonForCreation
    CancelationReasonForModification:
      allOf:
        - $ref: '#/components/schemas/AbstractReasonForModification'
      type: object
      xml:
        name: CancelationReasonForModification
      title: CancelationReasonForModification
      description: CancelationReasonForModification
    CancelationReasons:
      allOf:
        - $ref: '#/components/schemas/AbstractReasons'
      properties:
        reasons:
          items:
            $ref: '#/components/schemas/CancelationReason'
          type: array
      required:
        - reasons
      type: object
      xml:
        name: CancelationReasons
      title: CancelationReasons
      description: CancelationReasons
    CancelHandoverjob:
      allOf:
        - $ref: '#/components/schemas/AbstractModificationAction'
        - additionalProperties: false
          properties:
            action:
              description: >-
                Use value 'CancelHandoverjob', because you want to cancel a
                handover job
              enum:
                - CancelHandoverjob
              type: string
            handoverJobCancelReason:
              $ref: '#/components/schemas/HandoverJobCancelReason'
          required:
            - action
            - handoverJobCancelReason
          type: object
      deprecated: true
      description: >-
        This part of the API is deprecated. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />@deprecated Use api/handoverjobs/:id/actions instead
      title: CancelHandoverjob
      xml:
        name: CancelHandoverjob
    CancelPickRun:
      allOf:
        - $ref: '#/components/schemas/AbstractModificationAction'
        - additionalProperties: false
          properties:
            action:
              description: Use value 'CancelPickRun', because you want to cancel a pickrun
              enum:
                - CancelPickRun
              type: string
          required:
            - action
          type: object
      deprecated: true
      description: >-
        This part of the API is deprecated. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />@deprecated Use api/pickruns/:id/actions instead
      title: CancelPickRun
      xml:
        name: CancelPickRun
    CancelStowJobAction:
      description: Sets the status of the stowjob to CANCELED
      properties:
        name:
          description: The name of the action that should be performed
          enum:
            - CANCEL_STOW_JOB
          type: string
        version:
          description: The current version of the stow job that should be modified
          type: number
      required:
        - version
        - name
      title: CancelStowJobAction
      type: object
    CapabilityStatus:
      enum:
        - enabled
        - inactive
        - disabled
      type: string
      title: CapabilityStatus
      description: CapabilityStatus
    CapacityPlanningTimeframeConfiguration:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        days:
          default: 100
          description: >-
            The range in days per facility which defines how many days in the
            future the capacity of the facility can be planned
          example: '240'
          minimum: 1
          type: integer
        id:
          type: string
      required:
        - days
      type: object
      title: CapacityPlanningTimeframeConfiguration
      description: CapacityPlanningTimeframeConfiguration
    Carrier:
      additionalProperties: false
      allOf:
        - $ref: '#/components/schemas/CarrierForCreation'
        - $ref: '#/components/schemas/VersionedResource'
        - properties:
            defaultParcelHeightInCm:
              default: 10
              description: Default height in cm
              minimum: 1
              type: number
            defaultParcelLengthInCm:
              default: 25
              description: Default length in cm
              minimum: 1
              type: number
            defaultParcelWidthInCm:
              default: 35
              description: Default width in cm
              minimum: 1
              type: number
            deliveryType:
              $ref: '#/components/schemas/CarrierDeliveryType'
            id:
              description: The id of the carrier
              example: LGMl2DuvPnfPoSHhYFOm
              type: string
            lifecycle:
              $ref: '#/components/schemas/CarrierLifecycle'
            parcelLabelClassifications:
              items:
                $ref: '#/components/schemas/ParcelLabelClassification'
              type: array
          required:
            - id
            - status
            - defaultParcelWidthInCm
            - defaultParcelLengthInCm
            - defaultParcelHeightInCm
          type: object
      xml:
        name: Carrier
      title: Carrier
      description: Carrier
    CarrierConfiguration:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      description: Configuration of a Carrier
      properties:
        additionalWeightInPercent:
          description: >-
            It is an amount of percentage for packaging weight which will be
            added to the calculated shipping weight
          minimum: 0
          type: number
        alternativeReturnAddress:
          $ref: '#/components/schemas/FacilityAddress'
        alternativeSendAddress:
          $ref: '#/components/schemas/FacilityAddress'
        carrierRef:
          type: string
        countryServiceMappings:
          items:
            $ref: '#/components/schemas/CarrierCountryServiceMapping'
          type: array
        fallBackTrackAndTraceEmail:
          description: >-
            EmailAddress used to receive track and trace information when no
            other emailaddress was provided
          example: max@speedyboxales.com
          format: email
          minLength: 1
          type: string
        id:
          type: string
        mustBeWeighed:
          default: false
          description: >-
            Indicates if the content of a parcel must be weighed before ordering
            a label
          example: false
          type: boolean
        nonDeliveryDaysPerCountryAndProvince:
          items:
            $ref: '#/components/schemas/NonDeliveryDaysPerCountryAndProvince'
          type: array
        returnLabel:
          default: false
          description: >-
            When enabled, a return label will be created by creating a shipping
            label
          example: false
          type: boolean
        serviceUrl:
          type: string
        thresholdPriceValue:
          $ref: '#/components/schemas/ThresholdPriceValue'
      required:
        - returnLabel
        - carrierRef
      title: CarrierConfiguration
      type: object
    CarrierCountryServiceMapping:
      additionalProperties: false
      properties:
        additionalShippingArticleAttributes:
          description: >-
            Article Attributes that will be displayed in the client as
            additional. They are not mandatory but could benefit the process.
            Mandatory fields can not be additional. If duplicates found, the
            additional values will be removed on read.
          items:
            $ref: '#/components/schemas/AdditionalShippingArticleAttribute'
          minItems: 0
          type: array
        additionalShippingAttributes:
          description: >-
            Shipping Attributes that will be displayed in the client as
            additional. They are not mandatory but could benefit the process.
            Mandatory fields can not be additional If duplicates found, the
            additional values will be removed on read.
          items:
            $ref: '#/components/schemas/AdditionalShippingAttribute'
          minItems: 0
          type: array
        carrierProductCategory:
          $ref: '#/components/schemas/CarrierProductCategory'
        carrierServices:
          description: Services which can be provided by the carrier
          items:
            $ref: '#/components/schemas/CarrierServices'
          type: array
        countAsTransitDayBefore:
          type: string
        deliveryCosts:
          items:
            $ref: '#/components/schemas/DeliveryCost'
          maxItems: 1
          type: array
        destinationCountries:
          description: >-
            This part of the API is deprecated. For details please check the <a
            href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
            target="_blank">api-release-life-cycle documentation</a>.<br /><br
            />@deprecated - Use destination instead.
          items:
            $ref: '#/components/schemas/CountryCode'
          minItems: 1
          type: array
        destinations:
          description: The destination regions this mapping should be applied to.
          items:
            $ref: '#/components/schemas/RegionInformation'
          minItems: 1
          type: array
        id:
          description: unique identifier for a countryServiceMapping
          example: bc5b581a-8f65-45b0-9f81-6e0d4babbcb2
          type: string
        mandatoryShippingArticleAttributes:
          items:
            $ref: '#/components/schemas/MandatoryShippingArticleAttribute'
          minItems: 0
          type: array
        mandatoryShippingAttributes:
          items:
            $ref: '#/components/schemas/MandatoryShippingAttribute'
          minItems: 0
          type: array
        mandatoryShippingItemAttributes:
          deprecated: true
          description: Deprecated - use mandatoryShippingArticleAttributes instead
          items:
            $ref: '#/components/schemas/MandatoryShippingItemAttribute'
          minItems: 0
          type: array
        products:
          description: Array of products for the given mapping
          items:
            example: EXPRESS
            type: string
          type: array
        source:
          $ref: '#/components/schemas/RegionInformation'
        sourceCountry:
          description: >-
            This part of the API is deprecated. For details please check the <a
            href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
            target="_blank">api-release-life-cycle documentation</a>.<br /><br
            />@deprecated - Use source instead.
          example: DE
          maxLength: 2
          minLength: 2
          type: string
        staticCCSMRef:
          type: string
        transitTime:
          $ref: '#/components/schemas/CarrierTransitTime'
      required:
        - id
        - source
        - destinations
      type: object
      title: CarrierCountryServiceMapping
      description: CarrierCountryServiceMapping
    CarrierCountryServiceMappingForCreation:
      additionalProperties: false
      properties:
        additionalShippingArticleAttributes:
          description: >-
            Article Attributes that will be displayed in the client as
            additional. They are not mandatory but could benefit the process.
            Mandatory fields can not be additional. If duplicates found, the
            additional values will be removed on read.
          items:
            $ref: '#/components/schemas/AdditionalShippingArticleAttribute'
          minItems: 0
          type: array
        additionalShippingAttributes:
          description: >-
            Shipping Attributes that will be displayed in the client as
            additional. They are not mandatory but could benefit the process.
            Mandatory fields can not be additional If duplicates found, the
            additional values will be removed on read.
          items:
            $ref: '#/components/schemas/AdditionalShippingAttribute'
          minItems: 0
          type: array
        carrierConfigurationVersion:
          description: >-
            The version of the carrier configuration to be used in optimistic
            locking mechanisms.
          example: 42
          format: int64
          type: integer
        carrierProductCategory:
          $ref: '#/components/schemas/CarrierProductCategory'
        countAsTransitDayBefore:
          type: string
        deliveryCosts:
          items:
            $ref: '#/components/schemas/DeliveryCost'
          maxItems: 1
          minItems: 1
          type: array
        destinationCountries:
          deprecated: true
          description: >-
            This part of the API is deprecated. For details please check the <a
            href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
            target="_blank">api-release-life-cycle documentation</a>.<br /><br
            />@deprecated Use destination instead.
          items:
            $ref: '#/components/schemas/CountryCode'
          minItems: 1
          type: array
        destinations:
          description: The destination regions this mapping should be applied to.
          items:
            $ref: '#/components/schemas/RegionInformation'
          minItems: 1
          type: array
        mandatoryShippingArticleAttributes:
          items:
            $ref: '#/components/schemas/MandatoryShippingArticleAttribute'
          minItems: 0
          type: array
        mandatoryShippingAttributes:
          items:
            $ref: '#/components/schemas/MandatoryShippingAttribute'
          minItems: 0
          type: array
        mandatoryShippingItemAttributes:
          description: Deprecated - use mandatoryShippingArticleAttributes instead
          items:
            $ref: '#/components/schemas/MandatoryShippingItemAttribute'
          minItems: 0
          type: array
        products:
          items:
            example: EXPRESS
            type: string
          type: array
        source:
          $ref: '#/components/schemas/RegionInformation'
        sourceCountry:
          deprecated: true
          description: >-
            This part of the API is deprecated. For details please check the <a
            href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
            target="_blank">api-release-life-cycle documentation</a>.<br /><br
            />@deprecated Use source instead.
          example: DE
          maxLength: 2
          minLength: 2
          type: string
        transitTime:
          $ref: '#/components/schemas/CarrierTransitTime'
      required:
        - carrierConfigurationVersion
        - source
        - destinations
      type: object
      title: CarrierCountryServiceMappingForCreation
      description: CarrierCountryServiceMappingForCreation
    CarrierCountryServiceMappingForUpdate:
      additionalProperties: false
      properties:
        additionalShippingArticleAttributes:
          description: >-
            Article Attributes that will be displayed in the client as
            additional. They are not mandatory but could benefit the process.
            Mandatory fields can not be additional. If duplicates found, the
            additional values will be removed on read.
          items:
            $ref: '#/components/schemas/AdditionalShippingArticleAttribute'
          minItems: 0
          type: array
        additionalShippingAttributes:
          description: >-
            Shipping Attributes that will be displayed in the client as
            additional. They are not mandatory but could benefit the process.
            Mandatory fields can not be additional If duplicates found, the
            additional values will be removed on read.
          items:
            $ref: '#/components/schemas/AdditionalShippingAttribute'
          minItems: 0
          type: array
        carrierConfigurationVersion:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          format: int64
          type: integer
        carrierProductCategory:
          $ref: '#/components/schemas/CarrierProductCategory'
        countAsTransitDayBefore:
          type: string
        deliveryCosts:
          items:
            $ref: '#/components/schemas/DeliveryCost'
          maxItems: 1
          minItems: 1
          type: array
        destinationCountries:
          deprecated: true
          description: >-
            This part of the API is deprecated. For details please check the <a
            href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
            target="_blank">api-release-life-cycle documentation</a>.<br /><br
            />@deprecated Use destination instead.
          items:
            $ref: '#/components/schemas/CountryCode'
          minItems: 1
          type: array
        destinations:
          description: The destination regions this mapping should be applied to.
          items:
            $ref: '#/components/schemas/RegionInformation'
          minItems: 1
          type: array
        mandatoryShippingArticleAttributes:
          items:
            $ref: '#/components/schemas/MandatoryShippingArticleAttribute'
          minItems: 0
          type: array
        mandatoryShippingAttributes:
          items:
            $ref: '#/components/schemas/MandatoryShippingAttribute'
          minItems: 0
          type: array
        mandatoryShippingItemAttributes:
          description: Deprecated - use mandatoryShippingArticleAttributes instead
          items:
            $ref: '#/components/schemas/MandatoryShippingItemAttribute'
          minItems: 0
          type: array
        products:
          description: Array of products for the given mapping
          items:
            example: EXPRESS
            type: string
          type: array
        source:
          $ref: '#/components/schemas/RegionInformation'
        sourceCountry:
          deprecated: true
          description: >-
            This part of the API is deprecated. For details please check the <a
            href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
            target="_blank">api-release-life-cycle documentation</a>.<br /><br
            />@deprecated Use source instead.
          example: DE
          maxLength: 2
          minLength: 2
          type: string
        transitTime:
          $ref: '#/components/schemas/CarrierTransitTime'
      required:
        - carrierConfigurationVersion
      type: object
      title: CarrierCountryServiceMappingForUpdate
      description: CarrierCountryServiceMappingForUpdate
    CarrierCutoffConfiguration:
      properties:
        capacity:
          type: number
        time:
          example: '12:00'
          pattern: ^(2[0-3]|[01]?[0-9]):([0-5]?[0-9])$
          type: string
      required:
        - time
      type: object
      xml:
        name: CarrierCutoffTimes
      title: CarrierCutoffConfiguration
      description: CarrierCutoffConfiguration
    CarrierCutoffTimes:
      nullable: true
      properties:
        overwrites:
          items:
            $ref: '#/components/schemas/CarrierCutoffTimesOverwrite'
          type: array
        weekdays:
          items:
            $ref: '#/components/schemas/CarrierCutoffTimesWeekDay'
          type: array
      required:
        - weekdays
        - overwrites
      type: object
      xml:
        name: CarrierCutoffTimes
      title: CarrierCutoffTimes
      description: CarrierCutoffTimes
    CarrierCutoffTimesOverwrite:
      properties:
        cutoffConfigurations:
          items:
            $ref: '#/components/schemas/CarrierCutoffConfiguration'
          type: array
        date:
          example: 2020-02-03T00:00:00.000Z
          format: date
          pattern: ^\d{4}-\d{2}-\d{2}$
          type: string
      required:
        - date
        - cutoffConfigurations
      type: object
      xml:
        name: CarrierCutoffTimes
      title: CarrierCutoffTimesOverwrite
      description: CarrierCutoffTimesOverwrite
    CarrierCutoffTimesWeekDay:
      properties:
        cutoffConfigurations:
          items:
            $ref: '#/components/schemas/CarrierCutoffConfiguration'
          type: array
        day:
          $ref: '#/components/schemas/WeekDay'
      required:
        - day
        - cutoffConfigurations
      type: object
      xml:
        name: CarrierCutoffTimesWeekDay
      title: CarrierCutoffTimesWeekDay
      description: CarrierCutoffTimesWeekDay
    CarrierDeliveryType:
      description: 'Provided delivery of this CEP. Default: DELIVERY'
      enum:
        - SAMEDAY
        - DELIVERY
      type: string
      title: CarrierDeliveryType
    CarrierForCreation:
      additionalProperties: false
      properties:
        credentials:
          $ref: '#/components/schemas/AbstractCarrierCredentials'
        defaultParcelHeightInCm:
          default: 10
          description: Default height in cm
          minimum: 1
          type: number
        defaultParcelLengthInCm:
          default: 25
          description: Default length in cm
          minimum: 1
          type: number
        defaultParcelWeightInGram:
          default: 1000
          description: Default weight for a parcel in gram
          minimum: 1
          type: number
        defaultParcelWidthInCm:
          default: 35
          description: Default width in cm
          minimum: 1
          type: number
        key:
          description: >-
            References the KEP. Currently allowed values are DHL_V2, DPD_CH,
            DPD_CH_VCE, ANGEL, GLS, FEDEX, POSTNL, BRING, UPS, POST_NORD,
            DHL_EXPRESS,
             CUSTOM and to distinct between multiple custom carriers one can use CUSTOM_ combined with a unique name.
          example: DHL_V2
          type: string
        logoUrl:
          minLength: 1
          type: string
        name:
          description: >-
            This is the well known name for a supported CEP partner. Can be
            adapted to the clients needs.
          example: DHL Köln
          type: string
        parcelLabelClassifications:
          items:
            $ref: '#/components/schemas/ParcelLabelClassificationForCreation'
          type: array
        productValueNeeded:
          description: >-
            Setting to enable the Client to ask for the parcel product value
            while ordering a label. This information is mandatory for sending
            parcels between different countries (customs declaration)
          example: true
          type: boolean
        status:
          $ref: '#/components/schemas/CarrierStatus'
      required:
        - name
        - key
      type: object
      xml:
        name: CarrierForCreation
      title: CarrierForCreation
      description: CarrierForCreation
    CarrierLifecycle:
      description: >-
        Used to determine if a carrier is available for configuration. GA
        carriers are generally available and are covered by our SLA. BETA
        carriers are available, but subject to change and not covered by SLA.
        ALPHA carriers are not implemented completely, yet. Default: GA
      enum:
        - GA
        - BETA
        - ALPHA
      type: string
      title: CarrierLifecycle
    CarrierPatchActions:
      properties:
        actions:
          items:
            $ref: '#/components/schemas/ModifyCarrier'
          minItems: 1
          type: array
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          format: int64
          type: integer
      required:
        - version
        - actions
      type: object
      xml:
        name: ShipmentPatchActions
      title: CarrierPatchActions
      description: CarrierPatchActions
    CarrierPriorityCalculationRequest:
      properties:
        productValue:
          $ref: '#/components/schemas/ParcelProductValue'
          description: Product value information used to calculate carrier priority
      title: CarrierPriorityCalculationRequest
      type: object
      description: CarrierPriorityCalculationRequest
    CarrierPriorityResult:
      properties:
        otherCarriers:
          description: Other eligible carriers ordered by priority
          items:
            $ref: '#/components/schemas/CarrierRecommendationResult'
          type: array
        recommendedCarriers:
          description: Recommended carriers ordered by priority (best first)
          items:
            $ref: '#/components/schemas/CarrierRecommendationResult'
          type: array
      required:
        - recommendedCarriers
        - otherCarriers
      title: CarrierPriorityResult
      type: object
      description: CarrierPriorityResult
    CarrierProductCategory:
      description: >-
        Desired product class to choose when ordering a label, this is not a
        carrier specific value
      enum:
        - STANDARD
        - EXPRESS
        - VALUE
        - FORWARDING
      type: string
      title: CarrierProductCategory
    CarrierRecommendationResult:
      properties:
        carrier:
          $ref: '#/components/schemas/Carrier'
          description: Carrier that is recommended
        priority:
          description: Calculated priority value (lower typically indicates a better match)
          type: number
        threshold:
          $ref: '#/components/schemas/PriceRange'
          description: Applicable price threshold for this recommendation
      required:
        - priority
        - carrier
      title: CarrierRecommendationResult
      type: object
      description: CarrierRecommendationResult
    CarrierServices:
      description: Services which should be booked from carrier
      enum:
        - SIGNATURE
        - CUSTOMER_SIGNATURE
        - ADULT_SIGNATURE
        - SATURDAY_DELIVERY
        - IDENTITY_CHECK_COMPANY
        - IDENTITY_CHECK_PRIVATE
      example: SIGNATURE
      type: string
      title: CarrierServices
    CarrierStatus:
      description: 'It is taken into consideration for all carriers. Default: INACTIVE'
      enum:
        - ACTIVE
        - INACTIVE
      type: string
      title: CarrierStatus
    CarrierTrackingStatus:
      additionalProperties: false
      description: Native trackingStatus provided by carrier
      properties:
        description:
          description: Description of the status
          example: Parcel has been delivered
          type: string
        status:
          description: Status of the parcel as provided by carrier
          example: DELIVERED
          type: string
        timestamp:
          description: Timestamp this status was set by the carrier
          example: 2020-02-03T08:45:51.525Z
          format: date-time
          type: string
      required:
        - status
      type: object
      title: CarrierTrackingStatus
    CarrierTransitTime:
      properties:
        maxTransitDays:
          description: Maximum days a carrier needs for transit
          example: 3
          minimum: 0
          type: integer
        minTransitDays:
          description: Minimum days a carrier needs for transit
          example: 1
          minimum: 0
          type: integer
      required:
        - maxTransitDays
        - minTransitDays
      type: object
      title: CarrierTransitTime
      description: CarrierTransitTime
    Category:
      properties:
        nameLocalized:
          $ref: '#/components/schemas/LocaleStringConstrained'
        created:
          format: date-time
          type: string
        customAttributes:
          description: >-
            Attributes that can be added to this entity. These attributes
            **cannot** be used within fulfillment processes, but enable you to
            attach custom data from your systems to fulfillmenttools entities.
          nullable: true
          type: object
        id:
          type: string
        lastModified:
          format: date-time
          type: string
        tenantCategoryId:
          description: unique identifier for categories used in the customer systems
          maxLength: 256
          minLength: 2
          pattern: ^[A-Za-z0-9_-]+$
          type: string
        version:
          type: number
      required:
        - nameLocalized
        - version
        - created
        - lastModified
      title: Category
      type: object
      description: Category
    CategoryForCreation:
      properties:
        nameLocalized:
          $ref: '#/components/schemas/LocaleStringConstrained'
        customAttributes:
          description: >-
            Attributes that can be added to this entity. These attributes
            **cannot** be used within fulfillment processes, but enable you to
            attach custom data from your systems to fulfillmenttools entities.
          nullable: true
          type: object
        tenantCategoryId:
          description: unique identifier for categories used in the customer systems
          maxLength: 256
          minLength: 2
          pattern: ^[A-Za-z0-9_-]+$
          type: string
      required:
        - nameLocalized
      title: CategoryForCreation
      type: object
      description: CategoryForCreation
    CategoryForUpdate:
      properties:
        nameLocalized:
          $ref: '#/components/schemas/LocaleStringConstrained'
        customAttributes:
          description: >-
            Attributes that can be added to this entity. These attributes
            **cannot** be used within fulfillment processes, but enable you to
            attach custom data from your systems to fulfillmenttools entities.
          nullable: true
          type: object
        id:
          type: string
        tenantCategoryId:
          description: unique identifier for categories used in the customer systems
          maxLength: 256
          minLength: 2
          pattern: ^[A-Za-z0-9_-]+$
          type: string
        version:
          type: number
      required:
        - nameLocalized
        - version
      title: CategoryForUpdate
      type: object
      description: CategoryForUpdate
    CategoryPaginatedResult:
      properties:
        categories:
          items:
            $ref: '#/components/schemas/Category'
          type: array
        pageInfo:
          allOf:
            - $ref: '#/components/schemas/PageInfo'
          description: Pagination information for the search result.
        total:
          description: >-
            The total number of items matching the search criteria. Only filled,
            if withTotal is set to true in the search options.
          minimum: 0
          type: number
      required:
        - pageInfo
        - categories
      title: CategoryPaginatedResult
      type: object
      description: CategoryPaginatedResult
    CategorySearchPayload:
      properties:
        after:
          deprecated: false
          description: >-
            The cursor to start after. The value is provided in the
            `pageInfo.endCursor` field of the response.
          type: string
        options:
          $ref: '#/components/schemas/SearchOptions'
        query:
          $ref: '#/components/schemas/CategorySearchQuery'
        size:
          default: 20
          description: Number of items to return.
          maximum: 250
          minimum: 1
          type: number
        sort:
          description: Use for sorting the result.
          items:
            $ref: '#/components/schemas/CategorySort'
          maxItems: 1
          minItems: 1
          type: array
        startAfterId:
          deprecated: true
          description: >-
            The ID to start after. Deprecated, use `after` with the value
            provided in `pageInfo.endCursor` instead.
          type: string
      required:
        - query
      title: CategorySearchPayload
      type: object
      description: CategorySearchPayload
    CategorySearchQuery:
      properties:
        nameLocalized:
          additionalProperties:
            anyOf:
              - $ref: '#/components/schemas/StringFilter'
              - $ref: '#/components/schemas/KeyExistsFilter'
          description: Search by nameLocalized
          type: object
        and:
          items:
            $ref: '#/components/schemas/CategorySearchQuery'
          type: array
        customAttributes:
          additionalProperties:
            anyOf:
              - $ref: '#/components/schemas/BooleanFilter'
              - $ref: '#/components/schemas/StringEqFilter'
              - $ref: '#/components/schemas/NumberEqFilter'
              - $ref: '#/components/schemas/DateFilter'
          description: Search by custom attributes
          type: object
        id:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by id
        or:
          items:
            $ref: '#/components/schemas/CategorySearchQuery'
          type: array
        tenantCategoryId:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by tenantCategoryId
      title: CategorySearchQuery
      type: object
      description: CategorySearchQuery
    CategorySort:
      properties:
        created:
          enum:
            - ASC
            - DESC
          type: string
        customAttributes:
          additionalProperties: true
          maxProperties: 1
          minProperties: 1
          type: object
        id:
          enum:
            - ASC
            - DESC
          type: string
        lastModified:
          enum:
            - ASC
            - DESC
          type: string
        tenantCategoryId:
          enum:
            - ASC
            - DESC
          type: string
      title: CategorySort
      type: object
      description: CategorySort
    ChangeLineItemsToNotReturnableInItemReturnJobActionEnum:
      enum:
        - CHANGE_LINE_ITEMS_TO_NOT_RETURNABLE_IN_ITEM_RETURN_JOB
      type: string
      title: ChangeLineItemsToNotReturnableInItemReturnJobActionEnum
      description: ChangeLineItemsToNotReturnableInItemReturnJobActionEnum
    ChangeLineItemsToNotReturnableInItemReturnJobActionParameter:
      additionalProperties: false
      description: >-
        Action to move line items from returnableLineItems to
        notReturnableLineItems.
      properties:
        lineItemIds:
          items:
            type: string
          type: array
        name:
          $ref: >-
            #/components/schemas/ChangeLineItemsToNotReturnableInItemReturnJobActionEnum
        version:
          description: Version of the entity to be changed
          minimum: 0
          type: integer
      required:
        - name
        - version
        - lineItemIds
      title: ChangeLineItemsToNotReturnableInItemReturnJobActionParameter
    ChangeLineItemsToReturnableInItemReturnJobActionEnum:
      enum:
        - CHANGE_LINE_ITEMS_TO_RETURNABLE_IN_ITEM_RETURN_JOB
      type: string
      title: ChangeLineItemsToReturnableInItemReturnJobActionEnum
      description: ChangeLineItemsToReturnableInItemReturnJobActionEnum
    ChangeLineItemsToReturnableInItemReturnJobActionParameter:
      additionalProperties: false
      description: >-
        Action to move line items from notReturnableLineItems to
        returnableLineItems.
      properties:
        lineItemIds:
          items:
            type: string
          type: array
        name:
          $ref: >-
            #/components/schemas/ChangeLineItemsToReturnableInItemReturnJobActionEnum
        version:
          description: Version of the entity to be changed
          minimum: 0
          type: integer
      required:
        - name
        - version
        - lineItemIds
      title: ChangeLineItemsToReturnableInItemReturnJobActionParameter
    ChannelStockAvailability:
      properties:
        availableForPicking:
          type: number
        availableOnStock:
          type: number
        channelRef:
          type: string
      required:
        - channelRef
        - availableForPicking
        - availableOnStock
      title: ChannelStockAvailability
      type: object
      description: ChannelStockAvailability
    CheckoutOptionsAvailability:
      properties:
        available:
          description: Available quantity
          type: number
        carrier:
          allOf:
            - $ref: '#/components/schemas/CheckoutOptionsAvailabilityCarrier'
          description: Carrier details
        isBackOrderable:
          description: Is item back-orderable
          type: boolean
        latestPickingStart:
          description: Latest picking start
          format: date-time
          type: string
        preOrderReleaseDate:
          description: Pre-order release date
          format: date-time
          type: string
        tenantArticleId:
          description: Tenant article ID
          type: string
      required:
        - tenantArticleId
        - available
        - isBackOrderable
      title: CheckoutOptionsAvailability
      type: object
      description: CheckoutOptionsAvailability
    CheckoutOptionsAvailabilityCarrier:
      properties:
        carrierProductCategory:
          description: Carrier product category
          enum:
            - STANDARD
            - EXPRESS
            - VALUE
            - FORWARDING
          type: string
        carrierRef:
          description: Carrier reference
          type: string
      required:
        - carrierRef
      title: CheckoutOptionsAvailabilityCarrier
      type: object
      description: CheckoutOptionsAvailabilityCarrier
    CheckoutOptionsCollectEarliestRequest:
      properties:
        desiredCollectDate:
          description: Desired collection date
          format: date-time
          type: string
        facilities:
          description: >-
            List of facilities for collection. Each item must contain exactly
            one of facilityRef or tenantFacilityRef.
          items:
            oneOf:
              - $ref: >-
                  #/components/schemas/CheckoutOptionsCollectFacilitiesFacilityRef
              - $ref: >-
                  #/components/schemas/CheckoutOptionsCollectFacilitiesTenantFacilityRef
          type: array
        includeCalculationHints:
          description: Whether to include calculation hints in the response
          type: boolean
        tenantArticleIds:
          description: List of tenant article IDs
          items:
            type: string
          minItems: 1
          type: array
      required:
        - tenantArticleIds
      title: CheckoutOptionsCollectEarliestRequest
      type: object
      description: CheckoutOptionsCollectEarliestRequest
    CheckoutOptionsCollectFacilitiesFacilityRef:
      properties:
        facilityRef:
          description: Facility reference
          type: string
      required:
        - facilityRef
      title: CheckoutOptionsCollectFacilitiesFacilityRef
      type: object
      description: CheckoutOptionsCollectFacilitiesFacilityRef
    CheckoutOptionsCollectFacilitiesTenantFacilityRef:
      properties:
        tenantFacilityRef:
          description: Tenant facility reference
          type: string
      required:
        - tenantFacilityRef
      title: CheckoutOptionsCollectFacilitiesTenantFacilityRef
      type: object
      description: CheckoutOptionsCollectFacilitiesTenantFacilityRef
    CheckoutOptionsConsumerAddress:
      properties:
        addressType:
          description: Type of address
          enum:
            - POSTAL_ADDRESS
            - PARCEL_LOCKER
            - INVOICE_ADDRESS
          type: string
        city:
          description: City name
          type: string
        country:
          description: Country code
          example: DE
          type: string
        houseNumber:
          description: House number
          type: string
        postalCode:
          description: Postal code
          type: string
        province:
          description: Province or state
          type: string
        street:
          description: Street name
          type: string
      required:
        - country
      title: CheckoutOptionsConsumerAddress
      type: object
      description: CheckoutOptionsConsumerAddress
    CheckoutOptionsCustomServices:
      properties:
        customServiceRef:
          description: Custom service reference
          type: string
        name:
          description: Custom service name
          type: string
      required:
        - customServiceRef
        - name
      title: CheckoutOptionsCustomServices
      type: object
      description: CheckoutOptionsCustomServices
    CheckoutOptionsDeliveryEarliestRequest:
      properties:
        consumerAddress:
          allOf:
            - $ref: '#/components/schemas/CheckoutOptionsConsumerAddress'
          description: Consumer delivery address
        earliestDeliveryDate:
          description: Earliest delivery date
          format: date-time
          type: string
        filter:
          allOf:
            - $ref: '#/components/schemas/CheckoutOptionsFacilityFilter'
          description: Facility filter criteria
        includeCalculationHints:
          description: Whether to include calculation hints in the response
          type: boolean
        includeListingDetails:
          description: >-
            Indicates whether listing-related details should be included in the
            response. If set to `true`, the response contains additional listing
            details. Defaults to `false`.
          type: boolean
        tenantArticleIds:
          description: List of tenant article IDs
          items:
            type: string
          minItems: 1
          type: array
      required:
        - consumerAddress
        - tenantArticleIds
      title: CheckoutOptionsDeliveryEarliestRequest
      type: object
      description: CheckoutOptionsDeliveryEarliestRequest
    CheckoutOptionsDeliveryEarliestResponse:
      properties:
        calculationHints:
          description: Calculation hints for debugging
          items:
            type: string
          type: array
        checkoutOptions:
          description: List of checkout options for each article
          items:
            $ref: '#/components/schemas/CheckoutOptionsDeliveryEarliestResponseItem'
          type: array
      required:
        - checkoutOptions
      title: CheckoutOptionsDeliveryEarliestResponse
      type: object
      description: CheckoutOptionsDeliveryEarliestResponse
    CheckoutOptionsDeliveryEarliestResponseItem:
      properties:
        availableCarriers:
          description: Available carriers for delivery
          items:
            $ref: >-
              #/components/schemas/CheckoutOptionsDeliveryEarliestResponseItemAvailableCarrier
          type: array
        availableFacilityConnections:
          description: Available facility connections
          items:
            $ref: >-
              #/components/schemas/CheckoutOptionsDeliveryEarliestResponseItemAvailableConnection
          type: array
        earliestPredictedDeliveryDate:
          description: Earliest predicted delivery date
          format: date-time
          type: string
        listingDetails:
          description: Listing details
          items:
            $ref: '#/components/schemas/CheckoutOptionsListingDetails'
          type: array
        tenantArticleId:
          description: Tenant article ID
          type: string
      required:
        - tenantArticleId
      title: CheckoutOptionsDeliveryEarliestResponseItem
      type: object
      description: CheckoutOptionsDeliveryEarliestResponseItem
    CheckoutOptionsDeliveryEarliestResponseItemAvailableCarrier:
      properties:
        carrierRef:
          description: Carrier reference
          type: string
        latestPickingStartDate:
          description: Latest picking start date
          format: date-time
          type: string
        name:
          description: Carrier name
          type: string
        nonDeliveryDays:
          description: Non-delivery days
          items:
            type: string
          type: array
      required:
        - carrierRef
        - name
      title: CheckoutOptionsDeliveryEarliestResponseItemAvailableCarrier
      type: object
      description: CheckoutOptionsDeliveryEarliestResponseItemAvailableCarrier
    CheckoutOptionsDeliveryEarliestResponseItemAvailableConnection:
      properties:
        connectionRef:
          description: Connection reference
          type: string
        latestPickingStartDate:
          description: Latest picking start date
          format: date-time
          type: string
        nonDeliveryDays:
          description: Non-delivery days
          items:
            type: string
          type: array
      required:
        - connectionRef
      title: CheckoutOptionsDeliveryEarliestResponseItemAvailableConnection
      type: object
      description: CheckoutOptionsDeliveryEarliestResponseItemAvailableConnection
    CheckoutOptionsDeliveryTimePeriodRequest:
      properties:
        basket:
          description: Basket items
          items:
            $ref: '#/components/schemas/BasketItem'
          type: array
        consumerAddress:
          allOf:
            - $ref: '#/components/schemas/CheckoutOptionsConsumerAddress'
          description: Consumer delivery address
        deliveryPreferences:
          $ref: '#/components/schemas/DeliveryPreferencesShipping'
        endDate:
          description: End date-time of the period
          format: date-time
          type: string
        includeCalculationHints:
          description: Whether to include calculation hints in the response
          type: boolean
        startDate:
          description: Start date-time of the period
          format: date-time
          type: string
      required:
        - basket
        - consumerAddress
      title: CheckoutOptionsDeliveryTimePeriodRequest
      type: object
      description: CheckoutOptionsDeliveryTimePeriodRequest
    CheckoutOptionsDeliveryTimePeriodResponse:
      properties:
        calculationHints:
          description: Calculation hints
          items:
            type: string
          type: array
        checkoutOptions:
          description: Checkout options across the requested period
          items:
            $ref: '#/components/schemas/CheckoutOptionsDeliveryTimePeriodResponseItem'
          type: array
      required:
        - checkoutOptions
      title: CheckoutOptionsDeliveryTimePeriodResponse
      type: object
      description: CheckoutOptionsDeliveryTimePeriodResponse
    CheckoutOptionsDeliveryTimePeriodResponseItem:
      properties:
        availableCarriers:
          description: Available carriers for the date
          items:
            $ref: >-
              #/components/schemas/CheckoutOptionsDeliveryTimePeriodResponseItemAvailableCarrier
          type: array
        availableFacilityConnections:
          description: Available facility connections for the date
          items:
            $ref: >-
              #/components/schemas/CheckoutOptionsDeliveryTimePeriodResponseItemAvailableConnection
          type: array
        date:
          description: Date of the option
          format: date-time
          type: string
        overallStatus:
          description: Overall availability status for the date
          enum:
            - ALL
            - PARTIAL
            - NONE
          type: string
      required:
        - overallStatus
        - date
      title: CheckoutOptionsDeliveryTimePeriodResponseItem
      type: object
      description: CheckoutOptionsDeliveryTimePeriodResponseItem
    CheckoutOptionsDeliveryTimePeriodResponseItemAvailableCarrier:
      properties:
        carrierRef:
          description: Carrier reference
          type: string
        latestPickingStartDate:
          description: Latest picking start date
          format: date-time
          type: string
        name:
          description: Carrier name
          type: string
        nonDeliveryDays:
          description: Non-delivery days
          items:
            type: string
          type: array
      required:
        - carrierRef
        - name
      title: CheckoutOptionsDeliveryTimePeriodResponseItemAvailableCarrier
      type: object
      description: CheckoutOptionsDeliveryTimePeriodResponseItemAvailableCarrier
    CheckoutOptionsDeliveryTimePeriodResponseItemAvailableConnection:
      properties:
        connectionRef:
          description: Connection reference
          type: string
        latestPickingStartDate:
          description: Latest picking start date
          format: date-time
          type: string
        nonDeliveryDays:
          description: Non-delivery days
          items:
            type: string
          type: array
      required:
        - connectionRef
      title: CheckoutOptionsDeliveryTimePeriodResponseItemAvailableConnection
      type: object
      description: CheckoutOptionsDeliveryTimePeriodResponseItemAvailableConnection
    CheckoutOptionsDeliveryTimePointRequest:
      properties:
        desiredDeliveryDate:
          description: Desired delivery date-time
          format: date-time
          type: string
        facilities:
          description: Facilities with latest picking start constraints
          items:
            $ref: '#/components/schemas/FacilityRefLatestPickingStartPair'
          type: array
        tenantArticleIds:
          description: Tenant article IDs
          items:
            type: string
          type: array
      required:
        - desiredDeliveryDate
        - tenantArticleIds
        - facilities
      title: CheckoutOptionsDeliveryTimePointRequest
      type: object
      description: CheckoutOptionsDeliveryTimePointRequest
    CheckoutOptionsDeliveryTimePointResponse:
      properties:
        items:
          description: Availability per article and facility
          items:
            $ref: '#/components/schemas/CheckoutOptionsDeliveryTimePointResponseItem'
          type: array
      required:
        - items
      title: CheckoutOptionsDeliveryTimePointResponse
      type: object
      description: CheckoutOptionsDeliveryTimePointResponse
    CheckoutOptionsDeliveryTimePointResponseItem:
      properties:
        available:
          description: Available quantity
          type: number
        facilityRef:
          description: Facility reference
          type: string
        latestPickingStart:
          description: Latest picking start date-time
          format: date-time
          type: string
        tenantArticleId:
          description: Tenant article ID
          type: string
      required:
        - tenantArticleId
        - available
        - facilityRef
      title: CheckoutOptionsDeliveryTimePointResponseItem
      type: object
      description: CheckoutOptionsDeliveryTimePointResponseItem
    CheckoutOptionsFacilityFilter:
      properties:
        customAttributes:
          description: Custom attributes for facility filtering
          type: object
      title: CheckoutOptionsFacilityFilter
      type: object
      description: CheckoutOptionsFacilityFilter
    CheckoutOptionsFacilityForCNC:
      properties:
        address:
          $ref: '#/components/schemas/FacilityAddress'
        availabilities:
          description: Article availabilities
          items:
            $ref: '#/components/schemas/CheckoutOptionsAvailability'
          type: array
        closingDays:
          items:
            $ref: '#/components/schemas/ClosingDay'
          type: array
        customServices:
          description: Custom services
          items:
            $ref: '#/components/schemas/CheckoutOptionsCustomServices'
          type: array
        facilityRef:
          description: Facility reference
          type: string
        name:
          description: Facility name
          type: string
        pickingTimes:
          $ref: '#/components/schemas/PickingTimes'
        targetTime:
          description: Target time for collection
          format: date-time
          type: string
      required:
        - facilityRef
        - name
        - address
        - closingDays
        - pickingTimes
        - availabilities
        - customServices
        - targetTime
      title: CheckoutOptionsFacilityForCNC
      type: object
      description: CheckoutOptionsFacilityForCNC
    CheckoutOptionsFacilityForSFS:
      properties:
        availabilities:
          description: Article availabilities
          items:
            $ref: '#/components/schemas/CheckoutOptionsAvailability'
          type: array
        customServices:
          description: Custom services
          items:
            $ref: '#/components/schemas/CheckoutOptionsCustomServices'
          type: array
        deliveryOptions:
          items:
            $ref: '#/components/schemas/PromiseCarrier'
          type: array
        facilityRef:
          description: Facility reference
          type: string
        name:
          description: Facility name
          type: string
      required:
        - facilityRef
        - name
        - availabilities
        - deliveryOptions
        - customServices
      title: CheckoutOptionsFacilityForSFS
      type: object
      description: CheckoutOptionsFacilityForSFS
    CheckoutOptionsInput:
      properties:
        consumerAddress:
          allOf:
            - $ref: '#/components/schemas/CheckoutOptionsConsumerAddress'
          description: Consumer address
        customAttributes:
          description: Custom attributes for filtering
          type: object
        customServices:
          items:
            $ref: '#/components/schemas/CustomServiceReference'
          type: array
        deliveryPreferences:
          $ref: '#/components/schemas/DeliveryPreferences'
          description: Delivery preferences
        filterDuplicates:
          description: Filter duplicate facilities
          type: boolean
        geoFence:
          $ref: '#/components/schemas/GeoFence'
          description: Geofence restrictions
        orderLineItems:
          description: Order line items
          items:
            type: object
          type: array
        tags:
          description: Tags
          items:
            type: object
          type: array
      required:
        - deliveryPreferences
        - orderLineItems
      title: CheckoutOptionsInput
      type: object
      description: CheckoutOptionsInput
    CheckoutOptionsListingDetails:
      properties:
        customAttributes:
          description: Custom attributes associated with the listing
          type: object
        facilityRef:
          description: Facility reference of the listing
          type: string
        tenantFacilityId:
          description: Tenant facility id of the listing
          type: string
      required:
        - facilityRef
        - tenantFacilityId
      title: CheckoutOptionsListingDetails
      type: object
      description: CheckoutOptionsListingDetails
    ClickAndCollectRerouteConfiguration:
      properties:
        active:
          type: boolean
        rerouteType:
          $ref: '#/components/schemas/RerouteType'
      required:
        - active
      type: object
      title: ClickAndCollectRerouteConfiguration
      description: ClickAndCollectRerouteConfiguration
    ClientNotificationChannel:
      properties:
        enabled:
          type: boolean
        events:
          description: >-
            Supported events for triggering external notifications:
            PICK_JOB_CREATED, UPCOMING_TIME_TRIGGERED_REROUTE,
            ROUTING_PLAN_NOT_ROUTABLE, ROUTING_PLAN_WAITING.
          items:
            enum:
              - PICK_JOB_CREATED
              - UPCOMING_TIME_TRIGGERED_REROUTE
              - ROUTING_PLAN_NOT_ROUTABLE
              - ROUTING_PLAN_WAITING
            type: string
          type: array
          uniqueItems: true
        id:
          type: string
        type:
          enum:
            - CLIENT
          type: string
      required:
        - enabled
        - events
        - type
        - id
      title: ClientNotificationChannel
      type: object
      description: ClientNotificationChannel
    ClientNotificationChannelForCreation:
      properties:
        enabled:
          type: boolean
        events:
          description: >-
            Supported events for triggering external notifications:
            PICK_JOB_CREATED, UPCOMING_TIME_TRIGGERED_REROUTE,
            ROUTING_PLAN_NOT_ROUTABLE, ROUTING_PLAN_WAITING.
          items:
            enum:
              - PICK_JOB_CREATED
              - UPCOMING_TIME_TRIGGERED_REROUTE
              - ROUTING_PLAN_NOT_ROUTABLE
              - ROUTING_PLAN_WAITING
            type: string
          type: array
          uniqueItems: true
        type:
          enum:
            - CLIENT
          type: string
      required:
        - enabled
        - events
        - type
      title: ClientNotificationChannelForCreation
      type: object
      description: ClientNotificationChannelForCreation
    CloseStowJobAction:
      description: Sets the status of the stowjob to CLOSED
      properties:
        name:
          description: The name of the action that should be performed
          enum:
            - CLOSE_STOW_JOB
          type: string
        version:
          description: The current version of the stow job that should be modified
          type: number
      required:
        - version
        - name
      title: CloseStowJobAction
      type: object
    ClosingDay:
      description: At this day the facility is closed and does not do picking
      properties:
        date:
          description: The day at which the Facility is closed
          example: 2020-02-03T09:45:51.525Z
          format: date-time
          type: string
        reason:
          description: The reason why the Facility is closed on this day
          type: string
        recurrence:
          enum:
            - YEARLY
            - NONRECURRING
          type: string
      required:
        - reason
        - date
        - recurrence
      type: object
      title: ClosingDay
    CollectDelivery:
      anyOf:
        - required:
            - facilityRef
        - required:
            - tenantFacilityId
      properties:
        facilityRef:
          description: >-
            Reference to the facility where the consumer expects to collect the
            items
          type: string
        paid:
          default: false
          description: Indicates if the order is already paid.
          type: boolean
        provisioningTime:
          description: The point in time by which the order is supposed to be provisioned.
          example: 2020-02-03T08:45:50.525Z
          format: date-time
          type: string
        supplyingFacilities:
          deprecated: true
          description: '@deprecated Use supplyingFacilitiesConfigurations'
          items:
            description: Reference of a Facility.
            example: 928f3730-bc48-4d85-b83f-3fd86b776178
            type: string
          type: array
        supplyingFacilitiesConfigurations:
          description: >-
            References of facility that could supply contents of the order to
            another facility with specific configuration of its usage
          items:
            $ref: '#/components/schemas/SupplyingFacilityConfiguration'
          type: array
        tenantFacilityId:
          description: >-
            Reference to the facility where the consumer expects to collect the
            items.
          type: string
      type: object
      title: CollectDelivery
      description: CollectDelivery
    CombinedCostRatingConfiguration:
      allOf:
        - $ref: '#/components/schemas/AbstractRatingConfiguration'
      description: >-
        This rating configuration is used to calculate the rating based on the
        total sales prices and/or the total shipping costs of the order line
        items. At least one of the cost components must be selected.
      properties:
        totalSalesPrices:
          default: false
          description: >-
            >- If set to true, the total sales prices of the order line items
            are used for the calculation of the rating.
          type: boolean
        totalShippingCosts:
          default: false
          description: >-
            If set to true, the total shipping costs of the order line items are
            used for the calculation of the rating."
          type: boolean
      title: CombinedCostRatingConfiguration
    CompanyAddress:
      properties:
        city:
          example: Langenfeld
          pattern: ^.+$
          type: string
        country:
          example: Germany
          pattern: ^.+$
          type: string
        houseNumber:
          example: 42a
          pattern: ^.+$
          type: string
        name:
          example: OC fulfillment GmbH
          pattern: ^.+$
          type: string
        postalCode:
          example: '40764'
          pattern: ^.+$
          type: string
        street:
          example: Hauptstr.
          pattern: ^.+$
          type: string
      required:
        - name
        - street
        - postalCode
        - city
        - country
      type: object
      title: CompanyAddress
      description: CompanyAddress
    ConnectAppTypeEnum:
      description: The type of possible Apps
      enum:
        - PICKING
        - INVENTORY
        - OPERATIONS_ANDROID
        - OPERATIONS_IOS
      example: PICKING
      type: string
      title: ConnectAppTypeEnum
    ConnectionType:
      enum:
        - SUPPLIER
        - MANAGED_FACILITY
        - CUSTOMER
      type: string
      title: ConnectionType
      description: ConnectionType
    ConsolidatedRoutingPlanStatus:
      description: |-
        This status consolidates many of the RoutingPlanStatus and offers
        a more detailes explanation of what happened to the routing plan.
      enum:
        - REROUTED
        - MANUALLY_REROUTED
        - ROUTED
        - ROUTED_THEN_REROUTED
        - PROCESS_MANUAL_REROUTED_THEN_ROUTED
        - PROCESS_MANUAL_REROUTED_THEN_NOT_ROUTABLE
        - PROCESS_MANUAL_REROUTED_THEN_REROUTED_AND_SPLIT
        - ROUTING_PLAN_REROUTED_THEN_ROUTED_TO_SAME_FACILITY
        - ROUTING_PLAN_SHORTPICKED_THEN_ROUTED_TO_SAME_FACILITY
        - ROUTING_PLAN_CREATED_THEN_ROUTING
        - ROUTING_PLAN_CREATED_THEN_PLANNED
        - ROUTING_PLAN_REROUTED_THEN_FAILED
        - FACILITY_MANUALLY_ASSIGNED_TO_PICKJOB_THEN_ROUTED
        - FACILITY_MANUALLY_ASSIGNED_TO_PROCESS_THEN_ROUTED
        - STOCK_UPDATE_RECEIVED_THEN_REACTIVATED
        - ROUTING_PLAN_REROUTE_TIMETRIGGERED_THEN_REROUTED
        - ROUTING_PLAN_REROUTE_TIMETRIGGERED_THEN_REROUTED_AND_SPLIT
        - ROUTING_PLAN_SHORTPICKED_THEN_REROUTED
        - ROUTING_PLAN_SHORTPICKED_THEN_SPLIT
        - ROUTING_PLAN_SHORTPICKED_THEN_REROUTED_AND_SPLIT
        - ROUTING_PLAN_REROUTE_STOCK_ZERO_THEN_REROUTED
        - ROUTING_PLAN_REROUTE_STOCK_ZERO_THEN_REROUTED_AND_SPLIT
        - ROUTING_PLAN_REROUTE_STOCK_ZERO_THEN_REROUTED_TO_SAME_FACILITY
        - PICKJOB_REJECTED_THEN_REROUTED
        - PICKJOB_REJECTED_THEN_NOT_ROUTABLE
        - PICKJOB_REJECTED_THEN_ROUTED_AND_SPLIT
        - ROUTED_AND_SPLIT
        - OBSOLETE
        - OBSOLETE_WAS_MANUALLY_REROUTED
        - OBSOLETE_WAS_MANUALLY_ASSIGNED
        - OBSOLETE_WAS_SHORTPICKED
        - OBSOLETE_WAS_ROUTED
        - UNKNOWN
        - RETRYABLE
        - FAILED_REROUTE
        - ROUTED_THEN_CANCELED
        - ROUTED_AND_SPLIT_THEN_CANCELED
        - ROUTING_PLAN_SHORTPICKED_THEN_SPLIT_THEN_CANCELED
        - ROUTING_PLAN_SHORTPICKED_THEN_REROUTED_THEN_CANCELED
        - ROUTING_PLAN_SHORTPICKED_THEN_REROUTED_AND_SPLIT_THEN_CANCELED
        - ROUTING_PLAN_REROUTE_TIMETRIGGERED_THEN_REROUTED_THEN_CANCELED
        - >-
          ROUTING_PLAN_REROUTE_TIMETRIGGERED_THEN_REROUTED_AND_SPLIT_THEN_CANCELED
        - FACILITY_MANUALLY_ASSIGNED_TO_PICKJOB_THEN_ROUTED_THEN_CANCELED
        - FACILITY_MANUALLY_ASSIGNED_TO_PROCESS_THEN_ROUTED_THEN_CANCELED
        - PROCESS_MANUAL_REROUTED_THEN_ROUTED_THEN_CANCELED
        - PROCESS_MANUAL_REROUTED_THEN_REROUTED_AND_SPLIT_THEN_CANCELED
        - CANCELED
        - NOT_ROUTABLE
        - NOT_ROUTABLE_WAS_MANUALLY_REROUTED
        - NOT_ROUTABLE_WAS_MANUALLY_ASSIGNED
        - WAITING
        - WAITING_WAS_MANUALLY_REROUTED
        - WAITING_WAS_MANUALLY_ASSIGNED
        - WAITING_AND_SPLIT
        - WAITING_THEN_ROUTED
        - WAITING_THEN_ROUTED_AND_SPLIT
        - WAITING_THEN_NOT_ROUTABLE
        - WAITING_THEN_WAITING_AND_SPLIT
        - LOCKED
        - INITIAL
      type: string
      xml:
        name: RealRoutingPlanStatus
      title: ConsolidatedRoutingPlanStatus
    ConsumerAddress:
      allOf:
        - $ref: '#/components/schemas/Address'
      properties:
        addressType:
          $ref: '#/components/schemas/AddressType'
        companyName:
          example: Speedy Boxales Ltd.
          type: string
        coordinates:
          $ref: '#/components/schemas/Coordinates'
        email:
          example: test@try.de
          format: email
          minLength: 1
          type: string
        firstName:
          example: Maxine
          type: string
        lastName:
          example: Muller
          type: string
        personalTitle:
          example: Dr.
          type: string
        salutation:
          example: Frau
          type: string
      type: object
      title: ConsumerAddress
      description: ConsumerAddress
    ConsumerAddressesForSourcingOptions:
      properties:
        addresses:
          items:
            $ref: '#/components/schemas/ConsumerAddressForSourcingOptions'
          type: array
        consumerId:
          description: The id of the consumer.
          example: e4213a07-f563-46a3-b1ba-4dfeb6abe82a
          type: string
        customAttributes:
          description: >-
            Attributes that can be added to the consumer. These attributes
            cannot be used within fulfillment processes, but it could be useful
            to have the informations carried here.
          type: object
        facilityRef:
          type: string
        tenantFacilityId:
          type: string
      type: object
      title: ConsumerAddressesForSourcingOptions
      description: ConsumerAddressesForSourcingOptions
    ConsumerAddressForSourcingOptions:
      additionalProperties: false
      properties:
        additionalAddressInfo:
          example: 'to care of: Mrs. Müller'
          type: string
        addressType:
          $ref: '#/components/schemas/AddressType'
        city:
          description: The city of the address.
          example: Berlin
          type: string
        companyName:
          example: Speedy Boxales Ltd.
          type: string
        coordinates:
          $ref: '#/components/schemas/Coordinates'
        country:
          description: A two-digit country code as per ISO 3166-1 alpha-2
          example: DE
          pattern: ^[A-Z]{2}$
          type: string
        customAttributes:
          description: >-
            Attributes that can be added to the address. These attributes cannot
            be used within fulfillment processes, but it could be useful to have
            the informations carried here.
          type: object
        email:
          example: test@try.de
          format: email
          minLength: 1
          type: string
        firstName:
          example: Maxine
          type: string
        houseNumber:
          example: 42a
          pattern: ^.+$
          type: string
        lastName:
          example: Muller
          type: string
        personalTitle:
          example: Dr.
          type: string
        phoneNumbers:
          items:
            $ref: '#/components/schemas/ConsumerAddressForSourcingOptionsPhoneNumber'
          type: array
        postalCode:
          description: The postal code of the address.
          example: 10115
          type: string
        province:
          example: NRW
          pattern: ^.+$
          type: string
        salutation:
          example: Frau
          type: string
        street:
          description: The street of the address.
          example: Invalidenstraße 116
          type: string
      required:
        - country
      title: ConsumerAddressForSourcingOptions
      description: ConsumerAddressForSourcingOptions
    ConsumerAddressForSourcingOptionsPhoneNumber:
      additionalProperties: false
      properties:
        customAttributes:
          description: >-
            Attributes that can be added to the phonenumber. These attributes
            cannot be used within fulfillment processes, but it could be useful
            to have the informations carried here.
          type: object
        label:
          description: >-
            Can be used to give a description for the number, like "private",
            "business number", etc.
          type: string
        type:
          enum:
            - MOBILE
            - PHONE
          type: string
        value:
          description: The number itself. We do not enforce any format (yet).
          type: string
      required:
        - value
        - type
      type: object
      title: ConsumerAddressForSourcingOptionsPhoneNumber
      description: ConsumerAddressForSourcingOptionsPhoneNumber
    ContainerDimensions:
      additionalProperties: false
      properties:
        heightInCm:
          description: The height of the container (in cm)
          example: 50
          type: number
        lengthInCm:
          description: The length of the container (in cm)
          example: 100
          type: number
        weightInG:
          description: The weight of the container (in g)
          example: 1700
          type: number
        widthInCm:
          description: The width of the container (in cm)
          example: 25.5
          type: number
      type: object
      title: ContainerDimensions
      description: ContainerDimensions
    ContextLimitation:
      properties:
        type:
          description: The type of the context limitation.
          enum:
            - FACILITY
            - FACILITY_GROUP
            - ROLE
            - ZONE
          type: string
        values:
          description: The values of the context limitation.
          items:
            type: string
          type: array
      required:
        - type
        - values
      title: ContextLimitation
      type: object
      description: ContextLimitation
    ContextOperator:
      description: >-
        The operator used to define how the context values are evaluated or
        compared.
      enum:
        - NOT
      type: string
      title: ContextOperator
    ContextReference:
      properties:
        reference:
          type: string
        routingDecisionContext:
          $ref: '#/components/schemas/RoutingDecisionContext'
      required:
        - reference
        - routingDecisionContext
      title: ContextReference
      description: ContextReference
    Coordinates:
      description: >-
        Coordinates of the WGS84 geodetic reference system in Mercator
        projection, as used e.g. by the Google Maps API
      properties:
        lat:
          description: Latitude value
          example: 50.937531
          type: number
        lon:
          description: Longitude value
          example: 6.960279
          type: number
      required:
        - lat
        - lon
      type: object
      title: Coordinates
    CostCoefficientMeasurementUnit:
      description: The unit of measurement for the coefficient
      enum:
        - GRAM
      type: string
      title: CostCoefficientMeasurementUnit
    CountryCode:
      description: ISO 3166 ALPHA-2 of country
      example: DE
      maxLength: 2
      minLength: 2
      type: string
      title: CountryCode
    CountryLanguageMapping:
      additionalProperties:
        type: string
      example:
        DE: de_DE
        RU: ru_RU
        US: en_US
      type: object
      title: CountryLanguageMapping
      description: CountryLanguageMapping
    CountryServiceMappingShippingArticleAttribute:
      additionalProperties: false
      properties:
        descriptionLocalized:
          $ref: '#/components/schemas/LocaleString'
        category:
          $ref: '#/components/schemas/MandatoryShippingArticleAttributeCategory'
        dataType:
          $ref: '#/components/schemas/MandatoryShippingArticleAttributeDataType'
        description:
          type: string
        referencedField:
          $ref: >-
            #/components/schemas/MandatoryShippingArticleAttributeReferencedField
      required:
        - referencedField
        - dataType
        - category
        - descriptionLocalized
      type: object
      title: CountryServiceMappingShippingArticleAttribute
      description: CountryServiceMappingShippingArticleAttribute
    CountryServiceMappingShippingAttribute:
      additionalProperties: false
      properties:
        descriptionLocalized:
          $ref: '#/components/schemas/LocaleString'
        dataType:
          enum:
            - Number
            - String
            - Date
            - Boolean
          type: string
        description:
          type: string
        referencedField:
          description: >-
            - dimensions.weight: will be calculated from
            MandatoryShippingArticleAttribute.attributes.weightPerUnit if items
            with weightPerUnit is set on all items - productValue: will be
            calculated from
            MandatoryShippingArticleAttribute.attributes.pricePerUnit if items
            with pricePerUnit is set on all items
          enum:
            - dimensions.weight
            - productValue
            - pickUpInformation.startTime
            - pickUpInformation.endTime
            - services.BulkyGoods
            - services.Signature
            - services.AdultSignature
            - services.CustomerSignature
            - services.SaturdayDelivery
            - services.IdentityCheckPrivate
            - services.IdentityCheckCompany
          type: string
      type: object
      title: CountryServiceMappingShippingAttribute
      description: CountryServiceMappingShippingAttribute
    CurrencyCode:
      description: >-
        The currency code is a three-letter code that represents a currency in
        the ISO 4217 standard.
      enum:
        - AED
        - AFN
        - ALL
        - AMD
        - ANG
        - AOA
        - ARS
        - AUD
        - AWG
        - AZN
        - BAM
        - BBD
        - BDT
        - BGN
        - BHD
        - BIF
        - BMD
        - BND
        - BOB
        - BOV
        - BRL
        - BSD
        - BTN
        - BWP
        - BYN
        - BZD
        - CAD
        - CDF
        - CHE
        - CHF
        - CHW
        - CLF
        - CLP
        - CNY
        - COP
        - COU
        - CRC
        - CUC
        - CUP
        - CVE
        - CZK
        - DJF
        - DKK
        - DOP
        - DZD
        - EGP
        - ERN
        - ETB
        - EUR
        - FJD
        - FKP
        - GBP
        - GEL
        - GHS
        - GIP
        - GMD
        - GNF
        - GTQ
        - GYD
        - HKD
        - HNL
        - HTG
        - HUF
        - IDR
        - ILS
        - INR
        - IQD
        - IRR
        - ISK
        - JMD
        - JOD
        - JPY
        - KES
        - KGS
        - KHR
        - KMF
        - KPW
        - KRW
        - KWD
        - KYD
        - KZT
        - LAK
        - LBP
        - LKR
        - LRD
        - LSL
        - LYD
        - MAD
        - MDL
        - MGA
        - MKD
        - MMK
        - MNT
        - MOP
        - MRU
        - MUR
        - MVR
        - MWK
        - MXN
        - MXV
        - MYR
        - MZN
        - NAD
        - NGN
        - NIO
        - NOK
        - NPR
        - NZD
        - OMR
        - PAB
        - PEN
        - PGK
        - PHP
        - PKR
        - PLN
        - PYG
        - QAR
        - RON
        - RSD
        - RUB
        - RWF
        - SAR
        - SBD
        - SCR
        - SDG
        - SEK
        - SGD
        - SHP
        - SLE
        - SOS
        - SRD
        - SSP
        - STN
        - SVC
        - SYP
        - SZL
        - THB
        - TJS
        - TMT
        - TND
        - TOP
        - TRY
        - TTD
        - TWD
        - TZS
        - UAH
        - UGX
        - USD
        - USN
        - UYI
        - UYU
        - UYW
        - UZS
        - VED
        - VES
        - VND
        - VUV
        - WST
        - XAF
        - XAG
        - XAU
        - XBA
        - XBB
        - XBC
        - XBD
        - XCD
        - XDR
        - XOF
        - XPD
        - XPF
        - XPT
        - XSU
        - XTS
        - XUA
        - XXX
        - YER
        - ZAR
        - ZMW
        - ZWL
      type: string
      title: CurrencyCode
    CustomAttributableVersionedResource:
      properties:
        created:
          description: >-
            The date this entity was created at the platform. This value is
            generated by the service.
          example: 2020-02-03T08:45:51.525Z
          format: date-time
          type: string
        customAttributes:
          description: >-
            Attributes that can be added to this entity. These attributes
            **cannot** be used within fulfillment processes, but enable you to
            attach custom data from your systems to fulfillmenttools entities.
          nullable: true
          type: object
        lastModified:
          description: >-
            The date this entity was modified last. This value is generated by
            the service.
          example: 2020-02-03T09:45:51.525Z
          format: date-time
          type: string
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          format: int64
          type: integer
      required:
        - version
      title: CustomAttributableVersionedResource
      type: object
      description: CustomAttributableVersionedResource
    CustomAttributesResource:
      properties:
        customAttributes:
          description: >-
            Attributes that can be added to this entity. These attributes
            **cannot** be used within fulfillment processes, but enable you to
            attach custom data from your systems to fulfillmenttools entities.
          nullable: true
          type: object
      title: CustomAttributesResource
      type: object
      description: CustomAttributesResource
    CustomClaims:
      properties:
        roles:
          description: The roles of the user
          items:
            $ref: '#/components/schemas/UserRole'
          type: array
      required:
        - roles
      title: CustomClaims
      type: object
      description: CustomClaims
    CustomPrioritizationRule:
      allOf:
        - $ref: '#/components/schemas/PrioritizationRule'
      description: >-
        You can supply a CUSTOM Prioritization rule. In order to successfully
        supply such a rule you also need to provide an evaluatable Expression in
        vmExpression. This expression needs to return an integer value that adds
        additional priority to an order.
      properties:
        vmExpression:
          example: >-
            order.customAttributes && order.customAttributes.amazon === true ?
            100 : 0
          type: string
      required:
        - vmExpression
      type: object
      xml:
        name: CustomPrioritizationRule
      title: CustomPrioritizationRule
    CustomService:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
        - $ref: '#/components/schemas/CustomServiceForCreation'
      properties:
        additionalInformation:
          items:
            $ref: '#/components/schemas/AdditionalInformation'
          type: array
        description:
          type: string
        id:
          type: string
        name:
          type: string
        status:
          $ref: '#/components/schemas/CustomServiceStatus'
      required:
        - id
      type: object
      title: CustomService
      description: CustomService
    CustomServiceDefinition:
      properties:
        additionalInformation:
          description: Additional information necessary to fulfil the custom service
          items:
            properties:
              additionalInformationRef:
                description: >-
                  A reference to the specific additional information of the
                  custom service
                type: string
              tenantAdditionalInformationId:
                description: The id of the tenant specific additional information
                type: string
              value:
                anyOf:
                  - type: string
                  - type: integer
                  - type: number
                  - type: boolean
                description: The value of the additional information
            required:
              - additionalInformationRef
            type: object
          type: array
        customAttributes:
          description: >-
            Attributes that can be added to the consumer. These attributes
            cannot be used within fulfillment processes, but it could be useful
            to have the informations carried here.
          type: object
        customServiceRef:
          description: >-
            A reference to the custom service to be applied to the orderline
            items
          type: string
        isBundled:
          description: if true all articles below this service are intrpreted as a bundle
          type: boolean
        tenantCustomServiceId:
          description: The id of the tenant specific custom service
          type: string
      type: object
      title: CustomServiceDefinition
      description: CustomServiceDefinition
    CustomServiceForCreation:
      additionalProperties: false
      properties:
        descriptionLocalized:
          $ref: '#/components/schemas/LocaleString'
        nameLocalized:
          $ref: '#/components/schemas/LocaleString'
        additionalInformation:
          items:
            $ref: '#/components/schemas/AdditionalInformationForCreation'
          type: array
        customAttributes:
          description: >-
            Attributes that can be added to custom service. These attributes
            cannot be used within fulfillment processes, but it could be useful
            to have the information carried here.
          nullable: true
          type: object
        executionTimeInMin:
          example: 120
          type: integer
        itemsRequired:
          $ref: '#/components/schemas/ItemsRequiredEnum'
        itemsReturnable:
          type: boolean
        status:
          $ref: '#/components/schemas/CustomServiceStatus'
        tenantCustomServiceId:
          type: string
      required:
        - nameLocalized
        - itemsRequired
        - status
      type: object
      title: CustomServiceForCreation
      description: CustomServiceForCreation
    CustomServiceItem:
      allOf:
        - $ref: '#/components/schemas/CustomServiceItemForCreation'
      properties:
        customServiceItems:
          items:
            $ref: '#/components/schemas/CustomServiceItem'
          type: array
        id:
          type: string
      required:
        - id
        - customServiceItems
        - articleItems
        - customServiceDefinition
      type: object
      title: CustomServiceItem
      description: CustomServiceItem
    CustomServiceItemForCreation:
      additionalProperties: false
      properties:
        articleItems:
          items:
            $ref: '#/components/schemas/ArticleItem'
          type: array
        customServiceDefinition:
          $ref: '#/components/schemas/CustomServiceDefinition'
        customServiceItems:
          items:
            $ref: '#/components/schemas/CustomServiceItemForCreation'
          type: array
      required:
        - customServiceItems
        - articleItems
        - customServiceDefinition
      type: object
      title: CustomServiceItemForCreation
      description: CustomServiceItemForCreation
    CustomServicePatchActions:
      properties:
        actions:
          items:
            anyOf:
              - $ref: '#/components/schemas/ModifyCustomServiceAction'
          minItems: 1
          type: array
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          format: int64
          type: integer
      required:
        - version
        - actions
      type: object
      xml:
        name: CustomServicePatchActions
      title: CustomServicePatchActions
      description: CustomServicePatchActions
    CustomServiceReference:
      properties:
        articleItems:
          items:
            $ref: '#/components/schemas/ArticleItem'
          type: array
        customServiceDefinition:
          $ref: '#/components/schemas/CustomServiceDefinition'
        customServiceItems:
          items:
            $ref: '#/components/schemas/CustomServiceItem'
          type: array
        id:
          type: string
      required:
        - customServiceDefinition
        - articleItems
        - customServiceItems
        - id
      type: object
      title: CustomServiceReference
      description: CustomServiceReference
    CustomServiceReferenceForCreation:
      additionalProperties: false
      properties:
        articleItems:
          items:
            $ref: '#/components/schemas/ArticleItem'
          type: array
        customServiceDefinition:
          $ref: '#/components/schemas/CustomServiceDefinition'
        customServiceItems:
          items:
            $ref: '#/components/schemas/CustomServiceItemForCreation'
          type: array
      required:
        - customServiceDefinition
        - articleItems
        - customServiceItems
      type: object
      title: CustomServiceReferenceForCreation
      description: CustomServiceReferenceForCreation
    CustomServiceStatus:
      description: 'Deprecated values: ENABLED and DISABLED, use INACTIVE and ACTIVE instead'
      enum:
        - ENABLED
        - DISABLED
        - INACTIVE
        - ACTIVE
      type: string
      title: CustomServiceStatus
    CutoffTime:
      nullable: true
      properties:
        hour:
          default: 12
          example: 16
          type: number
        minute:
          default: 0
          example: 30
          type: number
      required:
        - hour
        - minute
      type: object
      title: CutoffTime
      description: CutoffTime
    CutoffTimeConfiguration:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        clickAndCollect:
          $ref: '#/components/schemas/CutoffTime'
        id:
          type: string
        shipFromStore:
          $ref: '#/components/schemas/CutoffTime'
      required:
        - shipFromStore
        - clickAndCollect
      type: object
      title: CutoffTimeConfiguration
      description: CutoffTimeConfiguration
    DateEqFilter:
      properties:
        eq:
          format: date-time
          type: string
        notEq:
          format: date-time
          type: string
      title: DateEqFilter
      type: object
      description: DateEqFilter
    DateFilter:
      properties:
        after:
          description: >-
            Search using ISO‑8601 dates relative to today. Prefix with “–” for
            past dates. Results include events after the specified date.
            Example: “–P1D” for yesterday, “P1W” for next week.
          maxLength: 256
          type: string
        before:
          description: >-
            Search using ISO‑8601 dates relative to today. Prefix with “–” for
            past dates. Results include events before the specified date.
            Example: “–P1D” for yesterday, “P1W” for next week.
          maxLength: 256
          type: string
        eq:
          format: date-time
          type: string
        gt:
          format: date-time
          type: string
        gte:
          format: date-time
          type: string
        lt:
          format: date-time
          type: string
        lte:
          format: date-time
          type: string
        notEq:
          format: date-time
          type: string
      title: DateFilter
      type: object
      description: DateFilter
    DateListFilter:
      properties:
        contains:
          $ref: '#/components/schemas/DateEqFilter'
      title: DateListFilter
      type: object
      description: DateListFilter
    DecisionLog:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        facilityDecisions:
          items:
            $ref: '#/components/schemas/FacilityDecision'
          type: array
        id:
          type: string
        latestPickingStartHints:
          description: >-
            This part of the API is in Alpha status. For details please check
            the <a
            href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
            target="_blank">api-release-life-cycle documentation</a>.<br /><br
            />In case no LPS could be calculated for this facility, the possible
            causes will be listed in this array. This property is an alpha
            property and still under development
          type: object
          x-badges:
            - color: red
              label: ALPHA
        orderSplitDecision:
          $ref: '#/components/schemas/OrderSplitDecision'
        results:
          $ref: '#/components/schemas/RoutingResults'
        routingPlanRef:
          type: string
        routingRun:
          type: number
        routingStrategyEvaluationResult:
          $ref: '#/components/schemas/RoutingStrategyEvaluationResult'
        statistics:
          $ref: '#/components/schemas/RoutingStatistics'
      required:
        - id
        - routingPlanRef
        - facilityDecisions
        - routingRun
        - statistics
        - results
        - created
        - lastModified
        - version
      type: object
      xml:
        name: DecisionLog
      title: DecisionLog
      description: DecisionLog
    DecisionLogFacilityInfo:
      properties:
        facilityRef:
          type: string
        name:
          type: string
      required:
        - name
        - facilityRef
      title: DecisionLogFacilityInfo
      description: DecisionLogFacilityInfo
    DecisionLogRef:
      properties:
        routingRun:
          type: number
        url:
          description: A reference to the finalizer decision log
          example: /api/routingplans/{routingPlanId}/decisionlogs/{routingRun}
          type: string
      required:
        - url
        - finalizeRun
      type: object
      xml:
        name: DecisionLogRef
      title: DecisionLogRef
      description: DecisionLogRef
    DecisionType:
      enum:
        - FENCE
        - TOOLKIT
        - TOOLKITCOMPARISON
        - RATING
      title: DecisionType
      description: DecisionType
    DefaultPickingTimesConfiguration:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        pickingTimes:
          $ref: '#/components/schemas/PickingTimes'
          description: The default picking times are Mo-Sa 09:00-17:00
      required:
        - pickingTimes
      type: object
      title: DefaultPickingTimesConfiguration
      description: DefaultPickingTimesConfiguration
    DeleteRefuseReasonParameter:
      additionalProperties: false
      properties:
        handoverConfigurationVersion:
          type: number
      required:
        - handoverConfigurationVersion
      title: DeleteRefuseReasonParameter
      description: DeleteRefuseReasonParameter
    DeliverCostCoefficient:
      additionalProperties: false
      properties:
        measurementUnit:
          $ref: '#/components/schemas/CostCoefficientMeasurementUnit'
        value:
          description: The coefficient value
          example: 1.5
          minimum: 0
          type: number
      required:
        - value
        - measurementUnit
      type: object
      title: DeliverCostCoefficient
      description: DeliverCostCoefficient
    DeliveryAddress:
      properties:
        city:
          example: Langenfeld
          pattern: ^.+$
          type: string
        companyName:
          example: OC Fulfillment GmbH
          pattern: ^.+$
          type: string
        firstName:
          example: Maxine
          pattern: ^.+$
          type: string
        houseNumber:
          example: 42a
          pattern: ^.+$
          type: string
        lastName:
          example: Muller
          pattern: ^.+$
          type: string
        personalTitle:
          example: Prof.
          pattern: ^.+$
          type: string
        postalCode:
          example: '40764'
          pattern: ^.+$
          type: string
        street:
          example: Hauptstr.
          pattern: ^.+$
          type: string
      required:
        - street
        - postalCode
        - city
      type: object
      title: DeliveryAddress
      description: DeliveryAddress
    DeliveryAddressWithType:
      allOf:
        - $ref: '#/components/schemas/DeliveryAddress'
      properties:
        addressType:
          $ref: '#/components/schemas/AddressType'
      required:
        - street
        - houseNumber
        - postalCode
        - city
        - addressType
      type: object
      title: DeliveryAddressWithType
      description: DeliveryAddressWithType
    DeliveryArea:
      properties:
        country:
          description: A two-digit country code as per ISO 3166-1 alpha-2
          example: DE
          pattern: ^[A-Z]{2}$
          type: string
        postalCode:
          example: '40764'
          pattern: ^.+$
          type: string
      required:
        - country
        - postalCode
      type: object
      title: DeliveryArea
      description: DeliveryArea
    DeliveryCost:
      additionalProperties: false
      properties:
        cost:
          description: The cost of sending with a carrier
          example: 10.99
          type: number
        currency:
          description: currency as 3 letter iso code
          example: EUR
          pattern: ^[A-Z]{3}$
          type: string
      required:
        - cost
        - currency
      type: object
      title: DeliveryCost
      description: DeliveryCost
    DeliveryEvent:
      properties:
        deliveryTarget:
          $ref: '#/components/schemas/DeliveryTarget'
        deliveryTrigger:
          enum:
            - DEFAULT
          type: string
      required:
        - deliveryTarget
        - deliveryTrigger
      title: DeliveryEvent
      description: DeliveryEvent
    DeliveryEventTargetAddress:
      properties:
        deliveryEvent:
          $ref: '#/components/schemas/DeliveryEvent'
        facilityRef:
          type: string
        targetAddress:
          $ref: '#/components/schemas/TargetAddress'
      required:
        - facilityRef
        - targetAddress
        - deliveryEvent
      type: object
      title: DeliveryEventTargetAddress
      description: DeliveryEventTargetAddress
    DeliveryNote:
      properties:
        companyAddress:
          $ref: '#/components/schemas/CompanyAddress'
        deliveryAddress:
          $ref: '#/components/schemas/DeliveryAddress'
          description: use this if no deliveryAddresses are passed.
        deliveryAddresses:
          description: >-
            if this field is filled, the delivery address will be taken from
            here according to this sorting: PARCEL_LOCKER > POSTAL_ADDRESS >
            INVOICE_ADDRESS. Each type is only allowed once.
          items:
            $ref: '#/components/schemas/DeliveryAddressWithType'
          type: array
        items:
          items:
            $ref: '#/components/schemas/DeliveryNoteItem'
          type: array
        orderInformation:
          $ref: '#/components/schemas/OrderInformation'
      required:
        - orderInformation
        - items
      type: object
      title: DeliveryNote
      description: DeliveryNote
    DeliveryNoteConfiguration:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        articleIdLabel:
          $ref: '#/components/schemas/LocaleString'
        articleTitleLabel:
          $ref: '#/components/schemas/LocaleString'
        companyAddress:
          $ref: '#/components/schemas/CompanyAddress'
        description:
          $ref: '#/components/schemas/LocaleString'
        disclaimer:
          $ref: '#/components/schemas/LocaleString'
        headline:
          $ref: '#/components/schemas/LocaleString'
        id:
          example: delivery-note
          type: string
        logoUrl:
          type: string
        orderDateLabel:
          $ref: '#/components/schemas/LocaleString'
        orderNumberLabel:
          $ref: '#/components/schemas/LocaleString'
        pageLabel:
          $ref: '#/components/schemas/LocaleString'
        pdfBackgroundConfiguration:
          $ref: '#/components/schemas/PdfBackgroundConfiguration'
        quantityLabel:
          $ref: '#/components/schemas/LocaleString'
        substituteText:
          $ref: '#/components/schemas/LocaleString'
      required:
        - id
        - orderNumberLabel
        - orderDateLabel
        - headline
        - quantityLabel
        - articleIdLabel
        - articleTitleLabel
        - pageLabel
      type: object
      title: DeliveryNoteConfiguration
      description: DeliveryNoteConfiguration
    DeliveryNoteConfigurationForUpsert:
      properties:
        articleIdLabel:
          $ref: '#/components/schemas/LocaleString'
        articleTitleLabel:
          $ref: '#/components/schemas/LocaleString'
        companyAddress:
          $ref: '#/components/schemas/CompanyAddress'
        description:
          $ref: '#/components/schemas/LocaleString'
        disclaimer:
          $ref: '#/components/schemas/LocaleString'
        headline:
          $ref: '#/components/schemas/LocaleString'
        logo:
          $ref: '#/components/schemas/NamedFile'
        orderDateLabel:
          $ref: '#/components/schemas/LocaleString'
        orderNumberLabel:
          $ref: '#/components/schemas/LocaleString'
        pageLabel:
          $ref: '#/components/schemas/LocaleString'
        pdfBackgroundConfiguration:
          $ref: '#/components/schemas/PdfBackgroundConfigurationForUpsert'
        quantityLabel:
          $ref: '#/components/schemas/LocaleString'
        substituteText:
          $ref: '#/components/schemas/LocaleString'
        version:
          description: >-
            Version field is used in the optimistic locking process. If the
            configuration doesn't exists, this field is ignored.
          example: 1
          type: number
      required:
        - version
        - orderNumberLabel
        - orderDateLabel
        - headline
        - quantityLabel
        - articleIdLabel
        - articleTitleLabel
        - pageLabel
      type: object
      title: DeliveryNoteConfigurationForUpsert
      description: DeliveryNoteConfigurationForUpsert
    DeliveryNoteItem:
      properties:
        id:
          type: string
        quantity:
          type: string
        substitutes:
          description: Titel of the item which is substituted through this item
          type: string
        title:
          type: string
      required:
        - id
        - title
        - quantity
      type: object
      title: DeliveryNoteItem
      description: DeliveryNoteItem
    DeliveryPreferences:
      additionalProperties: false
      properties:
        collect:
          items:
            $ref: '#/components/schemas/CollectDelivery'
          maxItems: 1
          type: array
        reservationPreferences:
          $ref: '#/components/schemas/DeliveryReservationPreferences'
        shipping:
          $ref: '#/components/schemas/DeliveryPreferencesShipping'
        sourcingOptionRefs:
          description: Id of the SourcingOptions
          items:
            description: Reference of a SourcingOptions
            example: 928f3730-bc48-4d85-b83f-3fd86b776178
            type: string
          type: array
        supplyingFacilities:
          description: '@deprecated Use supplyingFacilities under collect'
          items:
            description: Reference of a Facility
            example: 928f3730-bc48-4d85-b83f-3fd86b776178
            type: string
          type: array
        targetTime:
          description: At which time the result is expected.
          example: 2020-02-03T09:45:51.525Z
          format: date-time
          type: string
      type: object
      title: DeliveryPreferences
      description: DeliveryPreferences
    DeliveryPreferencesShipping:
      properties:
        carrierProductCategory:
          $ref: '#/components/schemas/CarrierProductCategory'
        desiredDeliveryTime:
          example: 2020-02-03T09:45:51.525Z
          format: date-time
          type: string
        preferredCarriers:
          items:
            $ref: '#/components/schemas/PreferredCarrier'
          type: array
        preferredCarriersWithProduct:
          items:
            $ref: '#/components/schemas/PreferredCarrierWithProduct'
          type: array
        preselectedFacilities:
          items:
            $ref: '#/components/schemas/PreselectedFacility'
          type: array
        serviceLevel:
          description: >-
            DELIVERY: The parcel will reach the recipient according to the cycle
            time of the carrier, typically 1-3 days when shipping nationaly.
            SAMEDAY: The parcel will reach the recipient the same day when
            ordering.
          enum:
            - DELIVERY
            - SAMEDAY
          type: string
      type: object
      title: DeliveryPreferencesShipping
      description: DeliveryPreferencesShipping
    DeliveryPromiseCollect:
      additionalProperties: false
      allOf:
        - $ref: '#/components/schemas/BasicDeliveryPromiseShipment'
      properties:
        targetTime:
          format: date-time
          type: string
      required:
        - targetTime
      type: object
      xml:
        name: DeliveryPromiseCollect
      title: DeliveryPromiseCollect
      description: DeliveryPromiseCollect
    DeliveryPromiseLineItem:
      properties:
        availabilityTimeframe:
          $ref: '#/components/schemas/AvailabilityTimeframe'
        available:
          type: number
        outOfStockBehaviour:
          $ref: '#/components/schemas/OutOfStockBehaviour'
        quantity:
          type: number
        tenantArticleId:
          type: string
        title:
          type: string
      type: object
      title: DeliveryPromiseLineItem
      description: DeliveryPromiseLineItem
    DeliveryPromiseShipment:
      additionalProperties: false
      allOf:
        - $ref: '#/components/schemas/BasicDeliveryPromiseShipment'
      properties:
        carriers:
          items:
            $ref: '#/components/schemas/PromiseCarrier'
          type: array
      required:
        - carriers
      type: object
      xml:
        name: DeliveryPromiseShipment
      title: DeliveryPromiseShipment
      description: DeliveryPromiseShipment
    DeliveryReservationMode:
      enum:
        - SCHEDULED
        - ASAP
        - ALAP
      title: DeliveryReservationMode
      description: DeliveryReservationMode
    DeliveryReservationPreferences:
      properties:
        mode:
          $ref: '#/components/schemas/DeliveryReservationMode'
        reservationTime:
          example: 2020-02-03T09:45:51.525Z
          format: date-time
          type: string
      required:
        - mode
      type: object
      title: DeliveryReservationPreferences
      description: DeliveryReservationPreferences
    DeliveryTarget:
      description: The destination for a delivery
      enum:
        - SHIP_TO_STORE
        - SHIP_TO_CUSTOMER
      type: string
      title: DeliveryTarget
    DhlTrackingLocation:
      additionalProperties: false
      description: Location information provided by DHL
      properties:
        address:
          properties:
            addressLocality:
              example: Germany
              type: string
          type: object
      title: DhlTrackingLocation
    DhlTrackingStatus:
      additionalProperties: false
      description: Native trackingStatus provided by carrier
      properties:
        description:
          description: Description of the status
          example: Parcel has been delivered
          type: string
        location:
          $ref: '#/components/schemas/DhlTrackingLocation'
        remark:
          description: Remark of the status
          example: Delivery successful
          type: string
        status:
          description: Status of the parcel as provided by carrier
          example: DELIVERED
          type: string
        statusCode:
          description: Status code of the parcel as provided by carrier
          example: delivered
          type: string
        statusDetailed:
          description: Second status description
          example: Parcel has been delivered
          type: string
        timestamp:
          description: Timestamp this status was set by the carrier
          example: 2020-02-03T08:45:51.525Z
          format: date-time
          type: string
      required:
        - status
      title: DhlTrackingStatus
      type: object
    DHLV2BusinessCredentials:
      allOf:
        - $ref: '#/components/schemas/AbstractCarrierCredentials'
        - properties:
            billingNumber:
              description: >-
                Abrechnungsnummer DHL Paket, displayed in the DHL
                Geschäftskundenportal under 'Vertragspositionen'
              example: 22222222220101
              minLength: 1
              type: string
            dhlBusinessPassword:
              description: Password you use to login to the DHL Geschäftskundenportal
              minLength: 1
              type: string
            dhlBusinessUsergroup:
              description: (optional) User group to use to obtain a label
              minLength: 1
              type: string
            dhlBusinessUsername:
              description: >-
                Username (Benutzername) you use to login to the DHL
                Geschäftskundenportal
              minLength: 1
              type: string
            internationalBillingNumber:
              description: >-
                Abrechnungsnummer DHL international shipping, displayed in the
                DHL Geschäftskundenportal under 'Vertragspositionen'
              example: 22222222220701
              minLength: 1
              type: string
            retoureBillingNumber:
              description: >-
                Abrechnungsnummer DHL Retoure, displayed in the DHL
                Geschäftskundenportal under 'Vertragspositionen'
              example: 22222222220701
              minLength: 1
              type: string
          required:
            - dhlBusinessUsername
            - dhlBusinessPassword
            - billingNumber
          type: object
          xml:
            name: DHLV2BusinessCredentials
      description: DHL Business Credentials.
      title: DHLV2BusinessCredentials
    DhlV2CarrierConfiguration:
      allOf:
        - $ref: '#/components/schemas/CarrierConfiguration'
      description: Configuration of DHL Carrier
      properties:
        alwaysDoTrackAndTrace:
          default: false
          description: >-
            If true, the track and trace will always be done, even if a parcel
            is directly created in DONE status
          type: boolean
        sftpConfiguration:
          $ref: '#/components/schemas/DhlV2SftpConfiguration'
        shipperRef:
          description: >-
            a shipperRef that can optionally be defined in the DHL business
            customer portal
          type: string
        trackAndTraceUrl:
          type: string
      title: DhlV2CarrierConfiguration
    DHLV2CarrierCredentials:
      allOf:
        - $ref: '#/components/schemas/AbstractCarrierCredentials'
        - properties:
            apiKey:
              description: Internal API Key to communicate with the DHL Api
              type: string
            fallback:
              $ref: '#/components/schemas/DHLV2BusinessCredentials'
            sftpCredentials:
              $ref: '#/components/schemas/DHLV2SftpCredentials'
          required:
            - apiKey
          type: object
      description: DHL Credentials.
      title: DHLV2CarrierCredentials
      xml:
        name: DhlV2CarrierCredentials
    DhlV2SftpConfiguration:
      additionalProperties: false
      properties:
        useSftpForTandT:
          default: false
          description: Indicates if the SFTP should be used for tracking and tracing
          example: true
          type: boolean
      required:
        - useSftpForTandT
      title: DhlV2SftpConfiguration
      description: DhlV2SftpConfiguration
    DHLV2SftpCredentials:
      additionalProperties: false
      description: Dhl V2 SFTP Credentials.
      properties:
        password:
          description: Password for the SFTP
          example: secretPassword
          maxLength: 80
          minLength: 1
          type: string
        username:
          description: Username for the SFTP
          example: username
          maxLength: 80
          minLength: 1
          type: string
      required:
        - username
        - password
      title: DHLV2SftpCredentials
    DocumentCategory:
      enum:
        - EXTERNAL
        - DELIVERYNOTE
        - RETURNNOTE
        - SENDLABEL
        - RETURNLABEL
        - TRANSFERLABEL
      type: string
      title: DocumentCategory
      description: DocumentCategory
    DocumentHandling:
      properties:
        sendLabel:
          properties:
            enabled:
              default: false
              type: boolean
          required:
            - enabled
          type: object
      required:
        - sendLabel
      type: object
      title: DocumentHandling
      description: DocumentHandling
    DocumentOperations:
      enum:
        - PRINT
        - VIEW
      type: string
      title: DocumentOperations
      description: DocumentOperations
    DocumentSet:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        documents:
          items:
            $ref: '#/components/schemas/PrintableDocument'
          type: array
        facilityRef:
          type: string
        id:
          type: string
      required:
        - id
      title: DocumentSet
      description: DocumentSet
    DocumentStatus:
      enum:
        - AVAILABLE
        - LOADING
        - REQUESTABLE
        - CANCELED
        - WAITING_FOR_INPUT
      type: string
      title: DocumentStatus
      description: DocumentStatus
    DocumentType:
      enum:
        - PDF
        - PNG
        - JPG
        - GIF
        - JPEG
        - XML
        - JSON
      type: string
      title: DocumentType
      description: DocumentType
    DomainConfiguration:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        id:
          type: string
        value:
          description: User's default domain for authentication
          example: yourDomain.com
          type: string
      required:
        - value
      type: object
      title: DomainConfiguration
      description: DomainConfiguration
    DomainStatus:
      enum:
        - PENDING
        - CREATED
        - IN_PROGRESS
        - STUCK
        - FINISHED
        - CANCELED
        - OBSOLETE
      type: string
      title: DomainStatus
      description: DomainStatus
    DomainStatusHistoryItem:
      description: >-
        This item represent a process status change triggered by a specific
        domain.
      properties:
        domain:
          $ref: '#/components/schemas/DomainType'
          description: The domain of the entity that caused the status change.
        domainEntityProcessStatus:
          $ref: '#/components/schemas/DomainStatus'
          description: The assigned status
        domainRef:
          description: The id of the domain entity that caused the status change.
          type: string
        statusChangeReasonKey:
          description: >-
            This property captures the reason for the entity’s status change.
            Each domain can define its own set of reasons, represented as an
            ENUM
          type: string
        timestamp:
          description: >-
            Timestamp of the moment at which the state was notified by the
            domain.
          example: 2020-02-03T08:45:50.525Z
          format: date-time
          type: string
      required:
        - timestamp
        - domain
        - domainEntityProcessStatus
        - domainRef
      type: object
      title: DomainStatusHistoryItem
    DomainType:
      enum:
        - ORDER
        - ROUTING_PLAN
        - PICKJOB
        - PACKJOB
        - SHIPMENT
        - HANDOVER
        - RETURN
        - SERVICE_JOB
        - ITEM_RETURN_JOB
        - PARCEL
        - RESERVATION
      type: string
      title: DomainType
      description: DomainType
    DpdChCarrierConfiguration:
      allOf:
        - $ref: '#/components/schemas/CarrierConfiguration'
      description: Configuration of DPD Switzerland Carrier
      properties:
        trackAndTraceUrl:
          type: string
      title: DpdChCarrierConfiguration
    DpdChCarrierCredentials:
      allOf:
        - $ref: '#/components/schemas/AbstractCarrierCredentials'
        - properties:
            delisId:
              description: Delis ID to create a DPD CH auth token
              type: string
            password:
              description: Password to create a DPD CH auth token
              type: string
          required:
            - delisId
            - password
          type: object
      description: DPD CH Carrier Credentials
      title: DpdChCarrierCredentials
      xml:
        name: DpdChCarrierCredentials
    EarliestPickingStart:
      allOf:
        - $ref: '#/components/schemas/PickingStartBase'
      properties:
        earliestPickingStartDate:
          example: 2020-02-03T08:45:50.525Z
          format: date-time
          type: string
      required:
        - earliestPickingStartDate
      type: object
      title: EarliestPickingStart
      description: EarliestPickingStart
    Editor:
      properties:
        userId:
          description: ID of the user who edits the pickjob
          type: string
        username:
          description: username of the user who edits the pickjob
          type: string
      required:
        - username
      type: object
      title: Editor
      description: Editor
    EmailNotificationChannel:
      properties:
        enabled:
          type: boolean
        events:
          description: >-
            Supported events for triggering external notifications:
            PICK_JOB_CREATED, UPCOMING_TIME_TRIGGERED_REROUTE,
            ROUTING_PLAN_NOT_ROUTABLE, ROUTING_PLAN_WAITING.
          items:
            enum:
              - PICK_JOB_CREATED
              - UPCOMING_TIME_TRIGGERED_REROUTE
              - ROUTING_PLAN_NOT_ROUTABLE
              - ROUTING_PLAN_WAITING
            type: string
          type: array
          uniqueItems: true
        id:
          type: string
        receiver:
          items:
            $ref: '#/components/schemas/EmailReceiver'
          type: array
          uniqueItems: true
        type:
          enum:
            - EMAIL
          type: string
      required:
        - enabled
        - events
        - type
        - id
        - receiver
      title: EmailNotificationChannel
      type: object
      description: EmailNotificationChannel
    EmailNotificationChannelForCreation:
      properties:
        enabled:
          type: boolean
        events:
          description: >-
            Supported events for triggering external notifications:
            PICK_JOB_CREATED, UPCOMING_TIME_TRIGGERED_REROUTE,
            ROUTING_PLAN_NOT_ROUTABLE, ROUTING_PLAN_WAITING.
          items:
            enum:
              - PICK_JOB_CREATED
              - UPCOMING_TIME_TRIGGERED_REROUTE
              - ROUTING_PLAN_NOT_ROUTABLE
              - ROUTING_PLAN_WAITING
            type: string
          type: array
          uniqueItems: true
        receiver:
          items:
            $ref: '#/components/schemas/EmailReceiver'
          type: array
          uniqueItems: true
        type:
          enum:
            - EMAIL
          type: string
      required:
        - enabled
        - events
        - type
        - receiver
      title: EmailNotificationChannelForCreation
      type: object
      description: EmailNotificationChannelForCreation
    EmailReceiver:
      properties:
        email:
          format: email
          type: string
        language:
          $ref: '#/components/schemas/SupportedLocale'
      required:
        - email
        - language
      title: EmailReceiver
      type: object
      description: EmailReceiver
    Entity:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        id:
          description: The id of the entity.
          type: string
      required:
        - id
      type: object
      title: Entity
      description: Entity
    EntityLink:
      properties:
        ref:
          description: The reference ID of the linked entity
          type: string
        type:
          description: The type of the linked entity
          enum:
            - ORDER
            - FACILITY
            - ROUTING_PLAN
            - PROCESS
            - PICK_JOB
          type: string
      required:
        - ref
        - type
      title: EntityLink
      type: object
      description: EntityLink
    ErrorInner:
      properties:
        description:
          example: Missing attributes were name, address, items
          type: string
        requestVersion:
          description: The version provided within an invalid request.
          example: 41
          format: int64
          type: integer
        summary:
          example: One or more mandatory attributes were not provided.
          type: string
        version:
          example: 42
          format: int64
          type: integer
      required:
        - summary
      type: object
      title: ErrorInner
      description: ErrorInner
    EstimatedDeliveryTime:
      properties:
        maxDeliveryDays:
          description: Maximum total delivery time in days
          example: 3
          minimum: 0
          type: integer
        minDeliveryDays:
          description: Minimum total delivery time in days
          example: 1
          minimum: 0
          type: integer
      required:
        - maxDeliveryDays
        - minDeliveryDays
      type: object
      title: EstimatedDeliveryTime
      description: EstimatedDeliveryTime
    ExpectedHandoverLineItem:
      additionalProperties: false
      allOf:
        - $ref: '#/components/schemas/ExpectedHandoverLineItemForCreation'
      properties:
        id:
          type: string
      required:
        - id
      type: object
      title: ExpectedHandoverLineItem
      description: ExpectedHandoverLineItem
    ExpectedHandoverLineItemForCreation:
      additionalProperties: false
      properties:
        article:
          $ref: '#/components/schemas/HandoverLineItemArticle'
        customAttributes:
          description: >-
            Attributes that can be added to the lineItem. These attributes
            cannot be used within fulfillment processes, but it could be useful
            to have the information carried here.
          type: object
        quantity:
          description: quantity of the specific item that has been provided for handover
          example: 21
          format: int64
          minimum: 1
          type: integer
        scannableCodes:
          description: Codes that can be used for scanning this lineItem
          items:
            type: string
          type: array
        status:
          $ref: '#/components/schemas/HandoverLineItemStatus'
        stickers:
          items:
            $ref: '#/components/schemas/Sticker'
          type: array
        transferId:
          type: string
        tags:
          items:
            $ref: '#/components/schemas/TagReference'
          type: array
      required:
        - quantity
        - article
        - transferId
      type: object
      title: ExpectedHandoverLineItemForCreation
      description: ExpectedHandoverLineItemForCreation
    ExpectedLineItem:
      allOf:
        - $ref: '#/components/schemas/OrderLineItem'
      properties:
        facilityRef:
          type: string
        transferId:
          type: string
      required:
        - facilityRef
        - transferId
      title: ExpectedLineItem
      description: ExpectedLineItem
    ExpectedPickLineItem:
      allOf:
        - $ref: '#/components/schemas/ExpectedPickLineItemForCreation'
        - properties:
            id:
              description: >-
                The id of this lineItem. It is generated during creation
                automatically and suits as the primary identifier of the
                described entity.
              example: climk4dcQFiPdA5ULuhS
              type: string
          required:
            - id
          type: object
      title: ExpectedPickLineItem
      description: ExpectedPickLineItem
    ExpectedPickLineItemForCreation:
      properties:
        allowedSubstitutes:
          items:
            $ref: '#/components/schemas/Substitute'
          type: array
        article:
          $ref: '#/components/schemas/PickLineItemArticle'
        customAttributes:
          description: >-
            Attributes that can be added to the pick line. These attributes
            cannot be used within fulfillment processes, but it could be useful
            to have the information carried here.
          type: object
        measurementUnitKey:
          description: Identifier for items unit of measurement.
          example: liter
          type: string
        measurementValidation:
          $ref: '#/components/schemas/MeasurementValidation'
        partialStockLocations:
          description: >-
            Indicates where the items to pick could be found and from where the
            picking should be started.
          items:
            $ref: >-
              #/components/schemas/PickJobLineItemPartialStockLocationForCreation
        quantity:
          description: quantity of the specific article that has been ordered
          example: 21
          format: int64
          minimum: 1
          type: integer
        scannableCodes:
          items:
            description: Codes, that identify the article
            type: string
          type: array
        secondaryMeasurementUnitKey:
          description: Identifier for items unit of measurement.
          example: liter
          type: string
        secondaryQuantity:
          description: quantity of the specific article that has been ordered
          example: 21
          format: int64
          minimum: 0
          type: integer
        stickers:
          items:
            $ref: '#/components/schemas/Sticker'
          type: array
        transferId:
          type: string
        tags:
          items:
            $ref: '#/components/schemas/TagReference'
          type: array
      required:
        - transferId
        - quantity
        - article
      title: ExpectedPickLineItemForCreation
      description: ExpectedPickLineItemForCreation
    ExpiryConfiguration:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        provisioningTimeOffsetInMinutes:
          minimum: 0
          type: integer
      required:
        - provisioningTimeOffsetInMinutes
      type: object
      title: ExpiryConfiguration
      description: ExpiryConfiguration
    ExpiryEntity:
      additionalProperties: false
      properties:
        created:
          description: >-
            The date this entity was created at the platform. This value is
            generated by the service.
          example: 2020-02-03T08:45:51.525Z
          format: date-time
          type: string
        expiryTime:
          description: Time where the connected process expires, if not fulfilled
          example: 2020-02-03T08:45:51.525Z
          format: date-time
          type: string
        id:
          description: Generated identifier of this entity
          example: 611c860f-3f00-4b01-9f4c-64cdee38a30e
          type: string
        lastModified:
          description: >-
            The date this entity was modified last. This value is generated by
            the service.
          example: 2020-02-03T09:45:51.525Z
          format: date-time
          type: string
        processRef:
          description: Reference to the Process of this Entity
          example: c4e5fb70-a893-4ffa-b7b0-e042cda6fb9f
          type: string
        processVersion:
          description: >-
            the version of the process this expiry entity belongs to, needed for
            preventing of faulty changes via late messages
          example: 42
          format: int64
          type: integer
        provisioningTime:
          description: >-
            Planned time where this entity should be provided or handed over to
            the customer
          example: 2020-02-03T08:45:51.525Z
          format: date-time
          type: string
        status:
          $ref: '#/components/schemas/ExpiryEntityStatus'
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          format: int64
          type: integer
      required:
        - id
        - version
        - created
        - lastModified
        - processRef
        - provisioningTime
        - expiryTime
        - status
      title: ExpiryEntity
      description: ExpiryEntity
    ExpiryEntityFilter:
      additionalProperties: false
      properties:
        endDate:
          description: end date range for expiryTime
          example: 2020-02-03T08:45:51.525Z
          format: date-time
        processRef:
          description: process of the entity you want to load
          type: string
        startDate:
          description: start date range for expiryTime
          example: 2020-02-03T08:45:51.525Z
          format: date-time
        status:
          $ref: '#/components/schemas/ExpiryEntityStatus'
      title: ExpiryEntityFilter
      description: ExpiryEntityFilter
    ExpiryEntityForCreation:
      additionalProperties: false
      properties:
        processRef:
          description: >-
            Reference to the Process for which this expiry entity will be
            created
          example: c4e5fb70-a893-4ffa-b7b0-e042cda6fb9f
          type: string
        provisioningTime:
          description: >-
            Planned time where this entity should be provided or handed over to
            the customer
          example: 2020-02-03T08:45:51.525Z
          format: date-time
          type: string
        status:
          $ref: '#/components/schemas/ExpiryEntityStatus'
      required:
        - processRef
        - provisioningTime
        - status
      title: ExpiryEntityForCreation
      description: ExpiryEntityForCreation
    ExpiryEntityForUpdate:
      additionalProperties: false
      properties:
        provisioningTime:
          description: >-
            Planned time where this entity should be provided or handed over to
            the customer
          example: 2020-02-03T08:45:51.525Z
          format: date-time
          type: string
        status:
          $ref: '#/components/schemas/ExpiryEntityStatus'
        version:
          description: version of the entity you want to alter
          type: integer
      required:
        - version
      title: ExpiryEntityForUpdate
      description: ExpiryEntityForUpdate
    ExpiryEntityStatus:
      enum:
        - ACTIVE
        - INACTIVE
      type: string
      title: ExpiryEntityStatus
      description: ExpiryEntityStatus
    ExpiryWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          $ref: '#/components/schemas/ExpiryEntity'
      required:
        - payload
      type: object
      title: ExpiryWebHookEvent
      description: ExpiryWebHookEvent
    ExternalAction:
      allOf:
        - $ref: '#/components/schemas/ExternalActionForReplacement'
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        id:
          description: >-
            The id of this external action. It is generated during creation
            automatically and suits as the primary identifier of the described
            entity.
          example: LGMl2DuvPnfPoSHhYFOm
          type: string
        name:
          description: The name of this external action.
          type: string
        processRef:
          description: Id of the global process related to this entity.
          type: string
      required:
        - id
        - name
        - processRef
      type: object
      xml:
        name: ExternalAction
      title: ExternalAction
      description: ExternalAction
    ExternalActionExecutedWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          $ref: '#/components/schemas/ExternalActionExecutedWebHookEventPayload'
      required:
        - payload
      type: object
      title: ExternalActionExecutedWebHookEvent
      description: ExternalActionExecutedWebHookEvent
    ExternalActionExecutedWebHookEventPayload:
      properties:
        actionPayload:
          oneOf:
            - $ref: '#/components/schemas/ExternalLinkActionLogPayload'
            - $ref: '#/components/schemas/ExternalFormActionLogPayload'
          type: object
        editor:
          $ref: '#/components/schemas/Editor'
        externalActionRef:
          type: string
        logId:
          type: string
        type:
          $ref: '#/components/schemas/ExternalActionType'
      required:
        - logId
        - externalActionRef
        - type
        - editor
        - actionPayload
      type: object
      title: ExternalActionExecutedWebHookEventPayload
      description: ExternalActionExecutedWebHookEventPayload
    ExternalActionForCreation:
      properties:
        nameLocalized:
          $ref: '#/components/schemas/LocaleString'
          description: The name of this external action localized
          example: '{ en_US: ''SomeName'' }'
        action:
          oneOf:
            - $ref: '#/components/schemas/ExternalFormActionDefinition'
            - $ref: '#/components/schemas/ExternalLinkActionDefinition'
            - $ref: '#/components/schemas/ExternalCommentActionDefinition'
          discriminator:
            propertyName: type
            mapping:
              BLANK_LINK: '#/components/schemas/ExternalLinkActionDefinition'
              COMMENT: '#/components/schemas/ExternalCommentActionDefinition'
              FORM: '#/components/schemas/ExternalFormActionDefinition'
        customAttributes:
          description: >-
            Attributes that can be added to this entity. These attributes
            **cannot** be used within fulfillment processes, but enable you to
            attach custom data from your systems to fulfillmenttools entities.
          nullable: true
          type: object
        groups:
          items:
            description: User-defined text strings for grouping external actions
            type: string
          type: array
        processRef:
          description: Id of the global process related to this entity.
          type: string
      required:
        - processRef
        - nameLocalized
        - groups
        - action
      type: object
      xml:
        name: ExternalActionForCreation
      title: ExternalActionForCreation
      description: ExternalActionForCreation
    ExternalActionForReplacement:
      properties:
        nameLocalized:
          $ref: '#/components/schemas/LocaleString'
          description: The name of this external action localized
          example: '{ en_US: ''SomeName'' }'
        action:
          oneOf:
            - $ref: '#/components/schemas/ExternalFormActionDefinition'
            - $ref: '#/components/schemas/ExternalLinkActionDefinition'
            - $ref: '#/components/schemas/ExternalCommentActionDefinition'
          discriminator:
            propertyName: type
            mapping:
              BLANK_LINK: '#/components/schemas/ExternalLinkActionDefinition'
              COMMENT: '#/components/schemas/ExternalCommentActionDefinition'
              FORM: '#/components/schemas/ExternalFormActionDefinition'
        customAttributes:
          description: >-
            Attributes that can be added to this entity. These attributes
            **cannot** be used within fulfillment processes, but enable you to
            attach custom data from your systems to fulfillmenttools entities.
          nullable: true
          type: object
        groups:
          items:
            description: User-defined text strings for grouping external actions
            type: string
          type: array
        version:
          example: 42
          format: int64
          type: integer
      required:
        - version
        - nameLocalized
        - groups
        - action
      type: object
      xml:
        name: ExternalActionForReplacement
      title: ExternalActionForReplacement
      description: ExternalActionForReplacement
    ExternalActionLog:
      additionalProperties: false
      allOf:
        - $ref: '#/components/schemas/ExternalActionLogForCreation'
      properties:
        created:
          description: The date this action has been executed
          example: 2020-02-03T08:45:50.525Z
          format: date-time
          type: string
        editor:
          $ref: '#/components/schemas/Editor'
        externalActionRef:
          description: Id of the refered external action.
          type: string
        id:
          type: string
      required:
        - id
        - externalActionRef
        - editor
        - created
      type: object
      xml:
        name: ExternalActionLog
      title: ExternalActionLog
      description: ExternalActionLog
    ExternalActionLogForCreation:
      properties:
        actionPayload:
          oneOf:
            - $ref: '#/components/schemas/ExternalLinkActionLogPayload'
            - $ref: '#/components/schemas/ExternalFormActionLogPayload'
            - $ref: '#/components/schemas/ExternalCommentActionLogPayload'
        requiresAnonymization:
          type: boolean
      required:
        - requiresAnonymization
        - actionPayload
      type: object
      xml:
        name: ExternalActionLogForCreation
      title: ExternalActionLogForCreation
      description: ExternalActionLogForCreation
    ExternalActionLogs:
      additionalProperties: false
      properties:
        externalActionLogs:
          items:
            $ref: '#/components/schemas/ExternalActionLog'
          type: array
        total:
          description: Total number of found entities for this query
          example: 42
          type: integer
      required:
        - externalActionLogs
        - total
      type: object
      title: ExternalActionLogs
      description: ExternalActionLogs
    ExternalActions:
      additionalProperties: false
      properties:
        externalActions:
          items:
            $ref: '#/components/schemas/ExternalAction'
          type: array
        total:
          description: Total number of found entities for this query
          example: 42
          type: integer
      required:
        - externalActions
        - total
      type: object
      title: ExternalActions
      description: ExternalActions
    ExternalActionType:
      description: The type of an external action
      enum:
        - BLANK_LINK
        - FORM
        - COMMENT
      type: string
      title: ExternalActionType
    ExternalCommentActionDefinition:
      additionalProperties: false
      description: >-
        This action provides a possibility to set comments. It also enables a
        possibility to save action results for other actions.
      properties:
        isInternal:
          default: false
          description: >-
            Whether or not this action is meant to be internally to the
            fulfillmenttools platform. If true, an additional entry in the
            actions dropdown will be added.
          type: boolean
        type:
          $ref: '#/components/schemas/ExternalActionType'
      required:
        - type
      title: ExternalCommentActionDefinition
      type: object
      xml:
        name: ExternalCommentActionDefinition
    ExternalCommentActionLogPayload:
      additionalProperties: false
      description: >-
        This action payload provides a possibility to set comments. It also
        enables a possibility to save action results for other actions.
      properties:
        comment:
          description: The actual comment.
          minLength: 1
          type: string
        externalActionRef:
          description: >-
            An existing external action id you want to link with. The action
            have to be in the same process.
          minLength: 1
          type: string
      required:
        - comment
      title: ExternalCommentActionLogPayload
      type: object
      xml:
        name: ExternalCommentActionLogPayload
    ExternalDocument:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        id:
          type: string
        name:
          type: string
        path:
          type: string
        priority:
          minimum: 0
          type: number
        section:
          $ref: '#/components/schemas/Section'
        type:
          $ref: '#/components/schemas/DocumentType'
      required:
        - type
        - section
        - id
      type: object
      title: ExternalDocument
      description: ExternalDocument
    ExternalDocumentContentForUpdate:
      additionalProperties: false
      properties:
        documentSetVersion:
          description: Version of documentSet to which this document belongs.
          example: 2
          type: number
        file:
          $ref: '#/components/schemas/NamedFile'
      required:
        - file
        - documentSetVersion
      type: object
      title: ExternalDocumentContentForUpdate
      description: ExternalDocumentContentForUpdate
    ExternalDocumentForCreation:
      additionalProperties: false
      properties:
        file:
          $ref: '#/components/schemas/NamedFile'
        priority:
          minimum: 0
          type: number
        section:
          $ref: '#/components/schemas/Section'
        type:
          $ref: '#/components/schemas/DocumentType'
      required:
        - type
        - section
      type: object
      title: ExternalDocumentForCreation
      description: ExternalDocumentForCreation
    ExternalDocumentForUpdate:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        file:
          $ref: '#/components/schemas/NamedFile'
      required:
        - file
      type: object
      title: ExternalDocumentForUpdate
      description: ExternalDocumentForUpdate
    ExternalDocumentInSectionForCreation:
      additionalProperties: false
      properties:
        file:
          $ref: '#/components/schemas/NamedFile'
        priority:
          minimum: 0
          type: number
        type:
          $ref: '#/components/schemas/DocumentType'
      required:
        - type
      type: object
      title: ExternalDocumentInSectionForCreation
      description: ExternalDocumentInSectionForCreation
    ExternalFormActionButton:
      additionalProperties: false
      properties:
        labelLocalized:
          $ref: '#/components/schemas/LocaleString'
          description: The name of this external action localized
          example: '{ en_US: ''SomeName'' }'
        label:
          type: string
      required:
        - labelLocalized
      type: object
      xml:
        name: ExternalFormActionElement
      title: ExternalFormActionButton
      description: ExternalFormActionButton
    ExternalFormActionDefinition:
      additionalProperties: false
      description: External Form Action.
      properties:
        cancel:
          $ref: '#/components/schemas/ExternalFormActionButton'
        elements:
          items:
            anyOf:
              - $ref: '#/components/schemas/ExternalFormActionElement'
              - $ref: '#/components/schemas/ExternalFormActionInputElement'
            discriminator:
              propertyName: elementType
              mapping:
                HEADLINE: '#/components/schemas/ExternalFormActionElement'
                SUBHEADLINE: '#/components/schemas/ExternalFormActionElement'
                TEXT: '#/components/schemas/ExternalFormActionElement'
                TEXT_INPUT: '#/components/schemas/ExternalFormActionInputElement'
          minItems: 1
          type: array
        success:
          $ref: '#/components/schemas/ExternalFormActionButton'
        type:
          $ref: '#/components/schemas/ExternalActionType'
      required:
        - elements
        - type
        - cancel
      title: ExternalFormActionDefinition
      type: object
      xml:
        name: ExternalFormActionDefinition
    ExternalFormActionElement:
      properties:
        titleLocalized:
          $ref: '#/components/schemas/LocaleString'
          description: The name of this external action localized
          example: '{ en_US: ''SomeName'' }'
        elementType:
          $ref: '#/components/schemas/ExternalFormActionElementType'
        style:
          description: it is only allowed to set a style for elementType TEXT
          enum:
            - BODY
            - INFO
            - WARN
            - ERROR
          type: string
        title:
          type: string
      required:
        - elementType
        - titleLocalized
      type: object
      xml:
        name: ExternalFormActionElement
      title: ExternalFormActionElement
      description: ExternalFormActionElement
    ExternalFormActionElementType:
      enum:
        - TEXT_INPUT
        - HEADLINE
        - SUBHEADLINE
        - TEXT
      type: string
      title: ExternalFormActionElementType
      description: ExternalFormActionElementType
    ExternalFormActionInputElement:
      additionalProperties: false
      description: External Form Input Action.
      properties:
        titleLocalized:
          $ref: '#/components/schemas/LocaleString'
          description: The name of this external action localized
          example: '{ en_US: ''SomeName'' }'
        elementId:
          type: string
        elementType:
          $ref: '#/components/schemas/ExternalFormActionElementType'
        isMandatory:
          type: boolean
        style:
          enum:
            - BODY
            - INFO
            - WARN
            - ERROR
          type: string
        title:
          type: string
        validation:
          anyOf:
            - $ref: '#/components/schemas/StringValidation'
            - $ref: '#/components/schemas/IntegerValidation'
            - $ref: '#/components/schemas/FloatValidation'
          discriminator:
            propertyName: validationType
            mapping:
              FLOAT: '#/components/schemas/FloatValidation'
              INTEGER: '#/components/schemas/IntegerValidation'
              STRING: '#/components/schemas/StringValidation'
      required:
        - elementId
        - titleLocalized
        - elementType
      title: ExternalFormActionInputElement
      type: object
      xml:
        name: ExternalFormActionInputElement
    ExternalFormActionLogPayload:
      description: External Form Action Log Payload.
      properties:
        elements:
          items:
            $ref: '#/components/schemas/ExternalFormActionLogPayloadElement'
          minItems: 1
          type: array
      required:
        - elements
      title: ExternalFormActionLogPayload
      type: object
      xml:
        name: ExternalFormActionLogPayload
    ExternalFormActionLogPayloadElement:
      properties:
        elementId:
          type: string
        value:
          type: string
      required:
        - elementId
        - value
      type: object
      xml:
        name: ExternalFormActionLogPayloadElement
      title: ExternalFormActionLogPayloadElement
      description: ExternalFormActionLogPayloadElement
    ExternalLinkActionDefinition:
      additionalProperties: false
      description: External Link Action.
      properties:
        linkUrl:
          type: string
        type:
          $ref: '#/components/schemas/ExternalActionType'
      required:
        - linkUrl
        - type
      title: ExternalLinkActionDefinition
      type: object
      xml:
        name: ExternalLinkActionDefinition
    ExternalLinkActionLogPayload:
      description: External Link Action Log Payload.
      properties:
        linkOpenedAt:
          description: The date when this link was opened.
          example: 2020-02-03T08:45:50.525Z
          format: date-time
          type: string
      required:
        - linkOpenedAt
      title: ExternalLinkActionLogPayload
      type: object
      xml:
        name: ExternalLinkActionLogPayload
    ExternalPrintableDocumentForCreation:
      additionalProperties: false
      properties:
        customAttributes:
          description: >-
            Attributes that can be added to the document. These attributes
            cannot be used within fulfillment processes, but it could be useful
            to have the informations carried here.
          type: object
        file:
          $ref: '#/components/schemas/NamedFile'
        operations:
          description: Offered operations for this document
          items:
            $ref: '#/components/schemas/DocumentOperations'
          minItems: 1
          type: array
        priority:
          minimum: 0
          type: number
        status:
          $ref: '#/components/schemas/DocumentStatus'
        type:
          $ref: '#/components/schemas/DocumentType'
      required:
        - type
      type: object
      title: ExternalPrintableDocumentForCreation
      description: ExternalPrintableDocumentForCreation
    ExternalStockChangeReason:
      properties:
        reasonLocalized:
          additionalProperties:
            maxLength: 255
            type: string
          description: >-
            Localizations, i.e. names which are to be displayed. Each localized
            string must not exceed 255 characters
          example:
            de_DE: FUND
            en_US: FOUND
          type: object
        active:
          description: Whether the reason is active
          example: true
          type: boolean
        created:
          description: Date of creation
          format: date-time
          type: string
        customAttributes:
          description: The custom attributes of this external stock change reason
          type: object
        id:
          description: Id of the external stock change reason
          example: 5aa18b4d-45de-4e9e-92db-936288040272
          type: string
        lastModified:
          description: Date of last modification
          format: date-time
          type: string
        tenantReasonId:
          description: Identifier of the stock change reason
          example: F12
          type: string
        version:
          description: Version of the external stock change reason
          example: 1
          type: number
      required:
        - active
        - reasonLocalized
        - id
        - version
      title: ExternalStockChangeReason
      type: object
      description: ExternalStockChangeReason
    ExternalStockChangeReasonForCreation:
      properties:
        reasonLocalized:
          additionalProperties:
            maxLength: 255
            type: string
          description: >-
            Localizations, i.e. names which are to be displayed. Each localized
            string must not exceed 255 characters
          example:
            de_DE: FUND
            en_US: FOUND
          type: object
        active:
          description: Whether the reason is active
          example: true
          type: boolean
        customAttributes:
          description: The custom attributes of this external stock change reason
          type: object
        tenantReasonId:
          description: Identifier of the stock change reason
          example: F12
          type: string
      required:
        - active
        - reasonLocalized
      title: ExternalStockChangeReasonForCreation
      type: object
      description: ExternalStockChangeReasonForCreation
    ExternalStockChangeReasonForUpdate:
      properties:
        reasonLocalized:
          additionalProperties:
            maxLength: 255
            type: string
          description: >-
            Localizations, i.e. names which are to be displayed. Each localized
            string must not exceed 255 characters
          example:
            de_DE: FUND
            en_US: FOUND
          type: object
        active:
          description: Whether the reason is active
          example: true
          type: boolean
        customAttributes:
          description: The custom attributes of this external stock change reason
          type: object
        id:
          description: Id of the external stock change reason
          example: 5aa18b4d-45de-4e9e-92db-936288040272
          type: string
        version:
          description: Version of the external stock change reason
          example: 1
          type: number
      required:
        - version
      title: ExternalStockChangeReasonForUpdate
      type: object
      description: ExternalStockChangeReasonForUpdate
    ExternalStockChangeReasonInput:
      properties:
        reasonLocalized:
          description: >-
            List of localized reason strings. If provided, no preconfiguration
            is necessary. Cannot be provided in combination with id or existing
            tenantReasonId.
          type: object
        id:
          description: ID of reason. Use to enrich with preconfigured reason
          type: string
        tenantReasonId:
          description: >-
            tenantReasonId of reason. If no reasonLocalized provided, a
            preconfigured reason with the tenantReasonId must be present
          type: string
      title: ExternalStockChangeReasonInput
      type: object
      description: ExternalStockChangeReasonInput
    ExternalStockChangeReasonOutput:
      properties:
        reasonLocalized:
          description: Localized reason strings
          type: object
        tenantReasonId:
          description: tenantReasonId of reason
          type: string
      required:
        - reasonLocalized
      title: ExternalStockChangeReasonOutput
      type: object
      description: ExternalStockChangeReasonOutput
    Facility:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
        - $ref: '#/components/schemas/FacilityForCreation'
      properties:
        id:
          description: >-
            The id of this facility. It is generated during creation
            automatically and suits as the primary identifier of the described
            entity.
          example: Esb20gpHBL94X5NdMp3C
          type: string
        operativeCosts:
          items:
            $ref: '#/components/schemas/FacilityOperativeCost'
          maxItems: 1
          type: array
      required:
        - id
        - type
        - status
      type: object
      xml:
        name: Facility
      title: Facility
      description: Facility
    FacilityActionsParameter:
      anyOf:
        - $ref: '#/components/schemas/RemoveFacilityCoordinatesActionParameter'
        - $ref: '#/components/schemas/UpdateFacilityCoordinatesActionParameter'
      title: FacilityActionsParameter
      description: FacilityActionsParameter
    FacilityAddress:
      allOf:
        - $ref: '#/components/schemas/FacilityAddressForCreation'
        - properties:
            resolvedTimeZone:
              $ref: '#/components/schemas/TimeZone'
          type: object
      type: object
      xml:
        name: FacilityAddress
      title: FacilityAddress
      description: FacilityAddress
    FacilityAddressEmailAddressesFilter:
      properties:
        recipient:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by recipient
        value:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by value
      title: FacilityAddressEmailAddressesFilter
      type: object
      description: FacilityAddressEmailAddressesFilter
    FacilityAddressEmailAddressesListFilter:
      properties:
        contains:
          allOf:
            - $ref: '#/components/schemas/FacilityAddressEmailAddressesFilter'
          description: Contains returns if at least one entry matches
      title: FacilityAddressEmailAddressesListFilter
      type: object
      description: FacilityAddressEmailAddressesListFilter
    FacilityAddressFilter:
      properties:
        city:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by city
        companyName:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by companyName
        country:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by country
        customAttributes:
          additionalProperties:
            anyOf:
              - $ref: '#/components/schemas/BooleanFilter'
              - $ref: '#/components/schemas/StringEqFilter'
              - $ref: '#/components/schemas/NumberEqFilter'
              - $ref: '#/components/schemas/DateFilter'
          description: Search by custom attributes
          type: object
        emailAddresses:
          allOf:
            - $ref: '#/components/schemas/FacilityAddressEmailAddressesListFilter'
          description: Nested list search by emailAddresses
        houseNumber:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by houseNumber
        postalCode:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by postalCode
        province:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by province
        street:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by street
      title: FacilityAddressFilter
      type: object
      description: FacilityAddressFilter
    FacilityAddressForCreation:
      allOf:
        - $ref: '#/components/schemas/Address'
        - properties:
            companyName:
              example: Speedy Boxales Ltd.
              type: string
            emailAddresses:
              items:
                properties:
                  recipient:
                    description: >-
                      Human readable information who is the recipient for emails
                      sent to this address.
                    example: >-
                      'Mailinglist reaching all the employees', 'Marc Fulton,
                      Manager', etc.
                    type: string
                  value:
                    type: string
                required:
                  - value
                type: object
              type: array
            resolvedCoordinates:
              $ref: '#/components/schemas/Coordinates'
            resolvedTimeZone:
              $ref: '#/components/schemas/TimeZoneForCreation'
              description: >-
                User-specified time zone in identifier format (e.g.,
                "America/Los_Angeles"). Used to determine local time. Relevant
                only if the country spans multiple time zones; otherwise, the
                time zone is automatically determined from the country or via
                Google if unspecified.
              example: America/Los_Angeles
          required:
            - companyName
          type: object
      type: object
      xml:
        name: FacilityAddressForCreation
      title: FacilityAddressForCreation
      description: FacilityAddressForCreation
    FacilityAddressSort:
      properties:
        city:
          enum:
            - ASC
            - DESC
          type: string
        country:
          enum:
            - ASC
            - DESC
          type: string
        postalCode:
          enum:
            - ASC
            - DESC
          type: string
      title: FacilityAddressSort
      type: object
      description: FacilityAddressSort
    FacilityCarrierConnection:
      properties:
        carrierRef:
          description: Reference to the carrier
          type: string
        configuration:
          description: Carrier-specific configuration
          type: object
        created:
          description: Creation timestamp
          format: date-time
          type: string
        credentials:
          description: Carrier-specific credentials
          type: object
        cutoffTime:
          $ref: '#/components/schemas/CutoffTime'
          description: Cutoff time configuration
        cutoffTimes:
          $ref: '#/components/schemas/CarrierCutoffTimes'
          description: Carrier cutoff times configuration
        deliveryAreas:
          description: Delivery areas supported by this connection
          items:
            $ref: '#/components/schemas/DeliveryArea'
          type: array
        deliveryType:
          description: Type of delivery service
          enum:
            - SAMEDAY
            - DELIVERY
          type: string
        facilityRef:
          description: Reference to the facility
          type: string
        id:
          description: Unique identifier for the facility carrier connection
          type: string
        key:
          description: Configuration key for the carrier connection
          type: string
        lastModified:
          description: Last modification timestamp
          format: date-time
          type: string
        name:
          description: Human-readable name for the connection
          type: string
        parcelLabelClassifications:
          description: Parcel label classifications
          items:
            $ref: '#/components/schemas/ParcelLabelClassification'
          type: array
        status:
          description: Status of the carrier connection
          enum:
            - ACTIVE
            - INACTIVE
          type: string
        validDeliveryTargets:
          description: Valid delivery targets for this connection
          items:
            $ref: '#/components/schemas/DeliveryTarget'
          type: array
        version:
          description: Version number for optimistic locking
          type: number
        tags:
          description: Tags associated with the connection
          items:
            $ref: '#/components/schemas/TagReference'
          type: array
      required:
        - id
        - version
        - created
        - lastModified
        - facilityRef
        - carrierRef
        - key
        - status
      title: FacilityCarrierConnection
      type: object
      description: FacilityCarrierConnection
    FacilityCarrierConnectionForCreation:
      properties:
        configuration:
          description: Carrier-specific configuration
          type: object
        credentials:
          description: Carrier-specific credentials
          type: object
        cutoffTime:
          $ref: '#/components/schemas/CutoffTime'
          description: Cutoff time configuration
        cutoffTimes:
          $ref: '#/components/schemas/CarrierCutoffTimes'
          description: Carrier cutoff times configuration
        deliveryAreas:
          description: Delivery areas supported by this connection
          items:
            $ref: '#/components/schemas/DeliveryArea'
          type: array
        name:
          description: Human-readable name for the connection
          type: string
        parcelLabelClassifications:
          description: Parcel label classifications for creation
          items:
            $ref: '#/components/schemas/ParcelLabelClassificationForCreation'
          type: array
        status:
          description: Status of the carrier connection
          enum:
            - ACTIVE
            - INACTIVE
          type: string
        validDeliveryTargets:
          description: Valid delivery targets for this connection
          items:
            $ref: '#/components/schemas/DeliveryTarget'
          type: array
        tags:
          description: Tags associated with the connection
          items:
            $ref: '#/components/schemas/TagReference'
          type: array
      title: FacilityCarrierConnectionForCreation
      type: object
      description: FacilityCarrierConnectionForCreation
    FacilityCarrierConnectionForModification:
      properties:
        configuration:
          description: Carrier-specific configuration
          type: object
        credentials:
          description: Carrier-specific credentials
          type: object
        cutoffTime:
          $ref: '#/components/schemas/CutoffTime'
          description: Cutoff time configuration
        cutoffTimes:
          $ref: '#/components/schemas/CarrierCutoffTimes'
          description: Carrier cutoff times configuration
        deliveryAreas:
          description: Delivery areas supported by this connection
          items:
            $ref: '#/components/schemas/DeliveryArea'
          type: array
        name:
          description: Human-readable name for the connection
          type: string
        parcelLabelClassifications:
          description: Parcel label classifications for creation
          items:
            $ref: '#/components/schemas/ParcelLabelClassificationForCreation'
          type: array
        status:
          description: Status of the carrier connection
          enum:
            - ACTIVE
            - INACTIVE
          type: string
        validDeliveryTargets:
          description: Valid delivery targets for this connection
          items:
            $ref: '#/components/schemas/DeliveryTarget'
          type: array
        version:
          description: Version number for optimistic locking
          type: number
        tags:
          description: Tags associated with the connection
          items:
            $ref: '#/components/schemas/TagReference'
          type: array
      required:
        - version
      title: FacilityCarrierConnectionForModification
      type: object
      description: FacilityCarrierConnectionForModification
    FacilityContact:
      properties:
        customAttributes:
          description: >-
            Attributes that can be added to the contact. These attributes cannot
            be used within fulfillment processes, but it could be useful to have
            the informations carried here.
          type: object
        firstName:
          type: string
        lastName:
          type: string
        roleDescription:
          example: Manager, Supervisor, Teamleader, etc.
          type: string
      required:
        - firstName
        - lastName
      type: object
      xml:
        name: FacilityContact
      title: FacilityContact
      description: FacilityContact
    FacilityContactFilter:
      properties:
        firstName:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by firstName
        lastName:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by lastName
      title: FacilityContactFilter
      type: object
      description: FacilityContactFilter
    FacilityCreatedWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          $ref: '#/components/schemas/ManagedFacility'
      required:
        - payload
      type: object
      title: FacilityCreatedWebHookEvent
      description: FacilityCreatedWebHookEvent
    FacilityCustomServiceConnection:
      additionalProperties: false
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        customServiceRef:
          type: string
        executionTimeInMin:
          type: integer
        facilityRef:
          type: string
        id:
          type: string
        status:
          $ref: '#/components/schemas/FacilityCustomServiceConnectionStatus'
      required:
        - id
        - status
        - facilityRef
        - customServiceRef
      title: FacilityCustomServiceConnection
      description: FacilityCustomServiceConnection
    FacilityCustomServiceConnectionForCreation:
      additionalProperties: false
      properties:
        executionTimeInMin:
          description: Time in minutes the custom service takes to be executed
          example: 100
          type: integer
        status:
          $ref: '#/components/schemas/FacilityCustomServiceConnectionStatus'
      required:
        - status
      title: FacilityCustomServiceConnectionForCreation
      description: FacilityCustomServiceConnectionForCreation
    FacilityCustomServiceConnectionForUpdate:
      additionalProperties: false
      properties:
        executionTimeInMin:
          description: Time in minutes the custom service takes to be executed
          example: 100
          type: integer
        status:
          $ref: '#/components/schemas/FacilityCustomServiceConnectionStatus'
        version:
          description: Version of the documentSet you want to update a document of
          example: 42
          format: int64
          type: integer
      required:
        - version
      title: FacilityCustomServiceConnectionForUpdate
      description: FacilityCustomServiceConnectionForUpdate
    FacilityCustomServiceConnectionStatus:
      enum:
        - ACTIVE
        - INACTIVE
      type: string
      title: FacilityCustomServiceConnectionStatus
      description: FacilityCustomServiceConnectionStatus
    FacilityDecision:
      properties:
        availabilities:
          items:
            $ref: '#/components/schemas/AvailabilityDuringRouting'
          type: array
        facility:
          $ref: '#/components/schemas/DecisionLogFacilityInfo'
        isBestAvailable:
          type: boolean
        isBestRated:
          type: boolean
        isBestReassignmentCandidate:
          type: boolean
        latestPickingStartInformation:
          $ref: '#/components/schemas/LatestPickingStartForDecisionLog'
        orderFences:
          items:
            $ref: '#/components/schemas/OrderFenceDecision'
          type: array
        orderLineItemFences:
          items:
            $ref: '#/components/schemas/OrderLineItemFenceDecisions'
          type: array
        orderRatings:
          items:
            $ref: '#/components/schemas/OrderRatingDecision'
          type: array
        rank:
          type: number
        totalPenalty:
          type: number
      required:
        - facility
        - orderFences
        - orderLineItemFences
        - orderRatings
        - orderLineItemRatings
        - availabilities
      title: FacilityDecision
      description: FacilityDecision
    FacilityDeletedWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          description: The id of the deleted facility
          type: string
      required:
        - payload
      type: object
      title: FacilityDeletedWebHookEvent
      description: FacilityDeletedWebHookEvent
    FacilityDiscount:
      additionalProperties: false
      allOf:
        - $ref: '#/components/schemas/FacilityDiscountForCreation'
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        discount:
          oneOf:
            - $ref: '#/components/schemas/FacilityDiscountRelative'
            - $ref: '#/components/schemas/FacilityDiscountAbsolute'
        facilityRef:
          description: >-
            The id of the facility the discount belongs to. It is generated
            during creation automatically and suits as the primary identifier of
            the described entity.
          example: 5d35d4b8-8a07-40c5-8486-eae2de902597
          type: string
        id:
          description: >-
            The id of the supplier discount. It is generated during creation
            automatically and suits as the primary identifier of the described
            entity.
          example: 5d35d4b8-8a07-40c5-8486-eae2de902597
          type: string
      required:
        - facilityRef
        - discount
        - priority
        - type
        - id
      title: FacilityDiscount
      description: FacilityDiscount
    FacilityDiscountAbsolute:
      additionalProperties: false
      properties:
        type:
          enum:
            - ABSOLUTE
          type: string
        values:
          items:
            $ref: '#/components/schemas/FacilityDiscountAbsoluteElement'
          minLength: 1
      required:
        - type
        - values
      type: object
      title: FacilityDiscountAbsolute
      description: FacilityDiscountAbsolute
    FacilityDiscountAbsoluteElement:
      additionalProperties: false
      properties:
        currency:
          allOf:
            - $ref: '#/components/schemas/CurrencyCode'
          description: The currency of the price as an ISO 4217 code.
          example: EUR
        decimalPlaces:
          description: Number of decimal places for the given currency
          example: 2
          minimum: 0
          type: integer
        value:
          description: >-
            Total value that should be shipped. Value is configured in the
            smallest subunit, e.g. cents.
          example: 5
          minimum: 1
          type: integer
      required:
        - value
        - currency
        - decimalPlaces
      type: object
      title: FacilityDiscountAbsoluteElement
      description: FacilityDiscountAbsoluteElement
    FacilityDiscountAbsoluteForCreation:
      additionalProperties: false
      properties:
        type:
          enum:
            - ABSOLUTE
          type: string
        values:
          items:
            $ref: '#/components/schemas/FacilityDiscountAbsoluteElement'
          minLength: 1
      required:
        - type
        - values
      type: object
      title: FacilityDiscountAbsoluteForCreation
      description: FacilityDiscountAbsoluteForCreation
    FacilityDiscountContext:
      additionalProperties: false
      description: >-
        The context of the discount. This is used to determine the conditions 
        under which the discount can be applied.
      properties:
        operator:
          $ref: '#/components/schemas/ContextOperator'
        type:
          $ref: '#/components/schemas/FacilityDiscountContextTypes'
        values:
          description: >-
            The values of the context. This is used to determine the conditions 
            under which the discount can be applied.
          items:
            example: uuid-bkrs-0157
            maxItems: 100
            minItems: 0
            type: string
          type: array
      required:
        - type
        - values
      type: object
      title: FacilityDiscountContext
    FacilityDiscountContextTypes:
      description: >-
        The context type of the discount. This is used to determine the
        conditions  under which the discount can be applied.
      enum:
        - FACILITY
        - FACILITY_GROUP
        - CATEGORY
      type: string
      title: FacilityDiscountContextTypes
    FacilityDiscountForCreation:
      additionalProperties: false
      properties:
        context:
          description: >-
            The context of the discount. This is used to determine the
            conditions  under which the discount can be applied.
          items:
            $ref: '#/components/schemas/FacilityDiscountContext'
            maxLength: 2000
            minItems: 0
        discount:
          oneOf:
            - $ref: '#/components/schemas/FacilityDiscountRelative'
            - $ref: '#/components/schemas/FacilityDiscountAbsoluteForCreation'
        priority:
          description: >-
            The priority of the discount. Discounts with the lowest priority
            value are applied first. Value must be greater than 0 and smaller
            than 1000.
          example: 1
          type: integer
        type:
          $ref: '#/components/schemas/FacilityDiscountPriceType'
      required:
        - discount
        - priority
        - type
      title: FacilityDiscountForCreation
      description: FacilityDiscountForCreation
    FacilityDiscountForUpdate:
      additionalProperties: false
      properties:
        context:
          description: >-
            The context of the discount. This is used to determine the
            conditions  under which the discount can be applied.
          items:
            $ref: '#/components/schemas/FacilityDiscountContext'
            maxLength: 2000
            minItems: 0
        discount:
          oneOf:
            - $ref: '#/components/schemas/FacilityDiscountRelative'
            - $ref: '#/components/schemas/FacilityDiscountAbsoluteForCreation'
        priority:
          description: >-
            The priority of the discount. Discounts with the lowest priority
            value are applied first. Must be greater than 0 and smaller than
            1000.
          example: 1
          type: integer
        type:
          $ref: '#/components/schemas/FacilityDiscountPriceType'
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          format: int64
          type: integer
      required:
        - version
      title: FacilityDiscountForUpdate
      description: FacilityDiscountForUpdate
    FacilityDiscountPaginatedResult:
      additionalProperties: false
      properties:
        items:
          description: >-
            The list of discounts that match the search criteria. The list might
            be empty if no discounts match the search criteria.
          items:
            $ref: '#/components/schemas/FacilityDiscount'
          type: array
        total:
          description: >-
            The total number of discounts that match the search criteria. This
            number is not limited by the page size.
          example: 42
          format: int64
          type: integer
      required:
        - items
        - total
      title: FacilityDiscountPaginatedResult
      description: FacilityDiscountPaginatedResult
    FacilityDiscountPriceType:
      description: Determines the price type this discount can be applied to.
      enum:
        - SALES_PRICE
      type: string
      title: FacilityDiscountPriceType
    FacilityDiscountRelative:
      additionalProperties: false
      properties:
        type:
          enum:
            - RELATIVE
          type: string
        value:
          description: Provided discount in percent.
          example: 7.1
          minimum: 0.1
          type: number
      required:
        - type
        - value
      type: object
      title: FacilityDiscountRelative
      description: FacilityDiscountRelative
    FacilityDiscountType:
      description: >-
        The type of the discount. This is used to determine the conditions 
        under which the discount can be applied.
      enum:
        - ABSOLUTE
        - RELATIVE
      type: string
      title: FacilityDiscountType
    FacilityForCreation:
      properties:
        customAttributes:
          description: >-
            Attributes that can be added to the facility. These attributes
            cannot be used within fulfillment processes, but it could be useful
            to have the informations carried here.
          type: object
        name:
          example: Hamburg NW2
          type: string
        operativeCosts:
          items:
            $ref: '#/components/schemas/FacilityOperativeCostForCreation'
          maxItems: 1
          type: array
        status:
          $ref: '#/components/schemas/FacilityStatus'
        tenantFacilityId:
          description: The id of the facility in the tenants own system
          example: K12345
          type: string
        type:
          $ref: '#/components/schemas/FacilityType'
          default: MANAGED_FACILITY
        tags:
          items:
            $ref: '#/components/schemas/TagReference'
          minItems: 1
          type: array
      required:
        - name
      type: object
      xml:
        name: FacilityForCreation
      title: FacilityForCreation
      description: FacilityForCreation
    FacilityGroup:
      properties:
        nameLocalized:
          additionalProperties:
            type: string
          description: Localized name object
          type: object
        created:
          description: Creation timestamp
          format: date-time
          type: string
        customAttributes:
          description: Custom attributes
          type: object
        facilityRefs:
          description: Array of facility references
          items:
            type: string
          type: array
        id:
          description: The facility group ID
          type: string
        lastModified:
          description: Last modified timestamp
          format: date-time
          type: string
        name:
          description: The name of the facility group
          type: string
        tenantFacilityGroupId:
          description: The tenant facility group ID
          type: string
        version:
          description: Document version for optimistic locking
          type: number
      required:
        - id
        - version
        - created
        - lastModified
        - tenantFacilityGroupId
        - facilityRefs
        - nameLocalized
      type: object
      title: FacilityGroup
      description: FacilityGroup
    FacilityGroupActionsParameter:
      anyOf:
        - $ref: '#/components/schemas/AddFacilitiesToGroupActionParameter'
      title: FacilityGroupActionsParameter
      description: FacilityGroupActionsParameter
    FacilityGroupCreatedWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          $ref: '#/components/schemas/FacilityGroup'
      required:
        - payload
      type: object
      title: FacilityGroupCreatedWebHookEvent
      description: FacilityGroupCreatedWebHookEvent
    FacilityGroupDeletedWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          description: The id of the deleted facility group
          type: string
      required:
        - payload
      type: object
      title: FacilityGroupDeletedWebHookEvent
      description: FacilityGroupDeletedWebHookEvent
    FacilityGroupForCreation:
      additionalProperties: false
      properties:
        nameLocalized:
          additionalProperties:
            type: string
          description: The localized name
          type: object
        customAttributes:
          description: >-
            Attributes that can be added to the facility group. These attributes
            cannot be used within fulfillment processes, but it could be useful
            to have the information carried here.
          type: object
        facilityRefs:
          items:
            type: string
          maxItems: 1000
          type: array
          uniqueItems: true
        tenantFacilityGroupId:
          description: The id of the facility group in the tenants own system
          example: K12345
          type: string
      required:
        - tenantFacilityGroupId
        - facilityRefs
        - nameLocalized
      type: object
      xml:
        name: FacilityGroupForCreation
      title: FacilityGroupForCreation
      description: FacilityGroupForCreation
    FacilityGroupForUpdate:
      additionalProperties: false
      properties:
        nameLocalized:
          additionalProperties:
            type: string
          description: The localized name
          type: object
        customAttributes:
          description: >-
            Attributes that can be added to the facility group. These attributes
            cannot be used within fulfillment processes, but it could be useful
            to have the information carried here.
          type: object
        facilityRefs:
          items:
            type: string
          maxItems: 1000
          type: array
          uniqueItems: true
        tenantFacilityGroupId:
          description: The id of the facility group in the tenants own system
          example: K12345
          type: string
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          format: int64
          type: integer
      required:
        - version
      type: object
      xml:
        name: FacilityGroupForUpdate
      title: FacilityGroupForUpdate
      description: FacilityGroupForUpdate
    FacilityGroupPaginatedResult:
      properties:
        facilityGroups:
          items:
            $ref: '#/components/schemas/FacilityGroup'
          type: array
        pageInfo:
          allOf:
            - $ref: '#/components/schemas/PageInfo'
          description: Pagination information for the search result.
        total:
          description: >-
            The total number of items matching the search criteria. Only filled,
            if withTotal is set to true in the search options.
          minimum: 0
          type: number
      required:
        - pageInfo
        - facilityGroups
      title: FacilityGroupPaginatedResult
      type: object
      description: FacilityGroupPaginatedResult
    FacilityGroups:
      properties:
        facilityGroups:
          items:
            $ref: '#/components/schemas/FacilityGroup'
          type: array
        total:
          description: Total number of found entities for this query
          example: 42
          type: integer
      type: object
      title: FacilityGroups
      description: FacilityGroups
    FacilityGroupSearchPayload:
      properties:
        after:
          deprecated: false
          description: >-
            The cursor to start after. The value is provided in the
            `pageInfo.endCursor` field of the response.
          type: string
        options:
          $ref: '#/components/schemas/SearchOptions'
        query:
          $ref: '#/components/schemas/FacilityGroupSearchQuery'
        size:
          default: 20
          description: Number of items to return.
          maximum: 250
          minimum: 1
          type: number
        sort:
          description: Use for sorting the result.
          items:
            $ref: '#/components/schemas/FacilityGroupSort'
          maxItems: 1
          minItems: 1
          type: array
        startAfterId:
          deprecated: true
          description: >-
            The ID to start after. Deprecated, use `after` with the value
            provided in `pageInfo.endCursor` instead.
          type: string
      required:
        - query
      title: FacilityGroupSearchPayload
      type: object
      description: FacilityGroupSearchPayload
    FacilityGroupSearchQuery:
      properties:
        and:
          items:
            $ref: '#/components/schemas/FacilityGroupSearchQuery'
          type: array
        facilityRefs:
          allOf:
            - $ref: '#/components/schemas/StringListFilter'
          description: Search by facilityRefs
        id:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by id
        name:
          allOf:
            - $ref: '#/components/schemas/LocalizedStringSearchFilter'
          description: Search by name
        or:
          items:
            $ref: '#/components/schemas/FacilityGroupSearchQuery'
          type: array
        tenantFacilityGroupId:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by tenantFacilityGroupId
      title: FacilityGroupSearchQuery
      type: object
      description: FacilityGroupSearchQuery
    FacilityGroupSort:
      properties:
        name:
          enum:
            - ASC
            - DESC
          type: string
      title: FacilityGroupSort
      type: object
      description: FacilityGroupSort
    FacilityGroupUpdatedWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          $ref: '#/components/schemas/FacilityGroup'
      required:
        - payload
      type: object
      title: FacilityGroupUpdatedWebHookEvent
      description: FacilityGroupUpdatedWebHookEvent
    FacilityLocationType:
      default: STORE
      enum:
        - STORE
        - WAREHOUSE
        - EXTERNAL
      type: string
      xml:
        name: FacilityLocationType
      title: FacilityLocationType
      description: FacilityLocationType
    FacilityLocationTypeEnumFilter:
      properties:
        eq:
          description: Search by locationType
          enum:
            - STORE
            - WAREHOUSE
            - EXTERNAL
          type: string
        in:
          description: Search by locationType
          items:
            enum:
              - STORE
              - WAREHOUSE
              - EXTERNAL
            type: string
          type: array
        notEq:
          description: Search by locationType
          enum:
            - STORE
            - WAREHOUSE
            - EXTERNAL
          type: string
      title: FacilityLocationTypeEnumFilter
      type: object
      description: FacilityLocationTypeEnumFilter
    FacilityOperativeCost:
      properties:
        currency:
          allOf:
            - $ref: '#/components/schemas/CurrencyCode'
          description: The currency of the price as an ISO 4217 code.
          example: EUR
          nullable: true
        decimalPlaces:
          description: Number of decimal places for the given currency
          example: 2
          minimum: 0
          type: integer
        value:
          description: >-
            Value of operational cost of the facility. Value is configured in
            the smallest subunit, e.g. cents.
          example: 25000
          minimum: 0
          type: integer
      required:
        - value
        - currency
        - decimalPlaces
      type: object
      title: FacilityOperativeCost
      description: FacilityOperativeCost
    FacilityOperativeCostForCreation:
      properties:
        currency:
          allOf:
            - $ref: '#/components/schemas/CurrencyCode'
          description: The currency of the price as an ISO 4217 code.
          example: EUR
          nullable: true
        decimalPlaces:
          description: >-
            Number of decimal places for the given currency. We be defaulted
            according to the currency if missing.
          example: 2
          minimum: 0
          type: integer
        value:
          description: >-
            Value of operational cost of the facility. Value is configured in
            the smallest subunit, e.g. cents.
          example: 25000
          minimum: 0
          type: integer
      required:
        - value
        - currency
      type: object
      title: FacilityOperativeCostForCreation
      description: FacilityOperativeCostForCreation
    FacilityOrderBy:
      description: Attribute to order a facility list
      enum:
        - NAME
        - CREATED
        - POSTAL_CODE_ASC
      type: string
      xml:
        name: FacilityOrderBy
      title: FacilityOrderBy
    FacilityPaginatedResult:
      properties:
        facilities:
          items:
            oneOf:
              - $ref: '#/components/schemas/ManagedFacility'
              - $ref: '#/components/schemas/Supplier'
          type: array
        pageInfo:
          allOf:
            - $ref: '#/components/schemas/PageInfo'
          description: Pagination information for the search result.
        total:
          description: >-
            The total number of items matching the search criteria. Only filled,
            if withTotal is set to true in the search options.
          minimum: 0
          type: number
      required:
        - pageInfo
        - facilities
      title: FacilityPaginatedResult
      type: object
      description: FacilityPaginatedResult
    FacilityPatchActions:
      description: >-
        This part of the API is deprecated. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Deprecated; works only on managed facilities. Prefer to use
        ManagedFacilityForModification / SupplierForModification for full
        compatibility.
      properties:
        actions:
          items:
            $ref: '#/components/schemas/ModifyFacility'
          minItems: 1
          type: array
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          format: int64
          type: integer
      required:
        - version
        - actions
      type: object
      xml:
        name: FacilityPatchActions
      title: FacilityPatchActions
    FacilityRefLatestPickingStartPair:
      properties:
        facilityRef:
          description: Facility reference
          type: string
        latestPickingStart:
          description: Latest picking start date-time
          format: date-time
          type: string
      required:
        - facilityRef
        - latestPickingStart
      title: FacilityRefLatestPickingStartPair
      type: object
      description: FacilityRefLatestPickingStartPair
    FacilityRefSelector:
      properties:
        facilityRef:
          description: >-
            Resolves a facility by its reference. This is the preferred way to
            resolve a facility.
          minLength: 1
          type: string
      required:
        - facilityRef
      title: FacilityRefSelector
      type: object
      description: FacilityRefSelector
    FacilitySearchPayload:
      properties:
        after:
          deprecated: false
          description: >-
            The cursor to start after. The value is provided in the
            `pageInfo.endCursor` field of the response.
          type: string
        options:
          $ref: '#/components/schemas/SearchOptions'
        query:
          $ref: '#/components/schemas/FacilitySearchQuery'
        size:
          default: 20
          description: Number of items to return.
          maximum: 250
          minimum: 1
          type: number
        sort:
          description: Use for sorting the result.
          items:
            $ref: '#/components/schemas/FacilitySort'
          maxItems: 1
          minItems: 1
          type: array
        startAfterId:
          deprecated: true
          description: >-
            The ID to start after. Deprecated, use `after` with the value
            provided in `pageInfo.endCursor` instead.
          type: string
      required:
        - query
      title: FacilitySearchPayload
      type: object
      description: FacilitySearchPayload
    FacilitySearchQuery:
      properties:
        address:
          allOf:
            - $ref: '#/components/schemas/FacilityAddressFilter'
          description: Nested search by address
        and:
          items:
            $ref: '#/components/schemas/FacilitySearchQuery'
          type: array
        contact:
          allOf:
            - $ref: '#/components/schemas/FacilityContactFilter'
          description: Nested search by contact
        customAttributes:
          additionalProperties:
            anyOf:
              - $ref: '#/components/schemas/BooleanFilter'
              - $ref: '#/components/schemas/StringEqFilter'
              - $ref: '#/components/schemas/NumberEqFilter'
              - $ref: '#/components/schemas/DateFilter'
          description: Search by custom attributes
          type: object
        id:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by id
        locationType:
          allOf:
            - $ref: '#/components/schemas/FacilityLocationTypeEnumFilter'
          description: Search by locationType
        name:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by name
        or:
          items:
            $ref: '#/components/schemas/FacilitySearchQuery'
          type: array
        services:
          allOf:
            - $ref: '#/components/schemas/FacilityServicesListFilter'
          description: Nested list search by services
        status:
          allOf:
            - $ref: '#/components/schemas/FacilityStatusEnumFilter'
          description: Search by status
        tenantFacilityId:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by tenantFacilityId
        type:
          allOf:
            - $ref: '#/components/schemas/FacilityTypeEnumFilter'
          description: Search by type
        tags:
          allOf:
            - $ref: '#/components/schemas/FacilityTagsListFilter'
          description: Nested list search by tags
      title: FacilitySearchQuery
      type: object
      description: FacilitySearchQuery
    FacilityService:
      additionalProperties: false
      properties:
        type:
          $ref: '#/components/schemas/FacilityServiceType'
      required:
        - type
      type: object
      xml:
        name: FacilityService
      title: FacilityService
      description: FacilityService
    FacilityServicesFacilityServiceTypeEnumFilter:
      properties:
        eq:
          description: Search by type
          enum:
            - SHIP_FROM_STORE
            - PICKUP
          type: string
        in:
          description: Search by type
          items:
            enum:
              - SHIP_FROM_STORE
              - PICKUP
            type: string
          type: array
        notEq:
          description: Search by type
          enum:
            - SHIP_FROM_STORE
            - PICKUP
          type: string
      title: FacilityServicesFacilityServiceTypeEnumFilter
      type: object
      description: FacilityServicesFacilityServiceTypeEnumFilter
    FacilityServicesFilter:
      properties:
        type:
          allOf:
            - $ref: >-
                #/components/schemas/FacilityServicesFacilityServiceTypeEnumFilter
          description: Search by type
      title: FacilityServicesFilter
      type: object
      description: FacilityServicesFilter
    FacilityServicesListFilter:
      properties:
        contains:
          allOf:
            - $ref: '#/components/schemas/FacilityServicesFilter'
          description: Contains returns if at least one entry matches
      title: FacilityServicesListFilter
      type: object
      description: FacilityServicesListFilter
    FacilityServiceType:
      description: The description of the service this facility offers.
      enum:
        - SHIP_FROM_STORE
        - PICKUP
      type: string
      title: FacilityServiceType
    FacilitySort:
      properties:
        address:
          $ref: '#/components/schemas/FacilityAddressSort'
        customAttributes:
          additionalProperties: true
          maxProperties: 1
          minProperties: 1
          type: object
        id:
          enum:
            - ASC
            - DESC
          type: string
        name:
          enum:
            - ASC
            - DESC
          type: string
        status:
          enum:
            - ASC
            - DESC
          type: string
        tenantFacilityId:
          enum:
            - ASC
            - DESC
          type: string
        type:
          enum:
            - ASC
            - DESC
          type: string
      title: FacilitySort
      type: object
      description: FacilitySort
    FacilityStatus:
      description: >-
        The state of the facility. ONLINE means that this facility can process
        new orders and pickjobs, SUSPENDED means it cannot get new orders but is
        able to fulfill the current workload and OFFLINE means that it cannot
        fulfill any new or existing orders. Processes already running might be
        rescheduled to another facility depending on the preferences.
      enum:
        - ONLINE
        - SUSPENDED
        - OFFLINE
      type: string
      title: FacilityStatus
    FacilityStatusEnumFilter:
      properties:
        eq:
          description: Search by status
          enum:
            - ONLINE
            - SUSPENDED
            - OFFLINE
          type: string
        in:
          description: Search by status
          items:
            enum:
              - ONLINE
              - SUSPENDED
              - OFFLINE
            type: string
          type: array
        notEq:
          description: Search by status
          enum:
            - ONLINE
            - SUSPENDED
            - OFFLINE
          type: string
      title: FacilityStatusEnumFilter
      type: object
      description: FacilityStatusEnumFilter
    FacilityStock:
      properties:
        available:
          type: number
        facilityRef:
          type: string
        id:
          type: string
        reserved:
          type: number
        tenantArticleId:
          type: string
        value:
          type: number
      required:
        - available
        - reserved
        - value
        - tenantArticleId
        - facilityRef
        - id
      title: FacilityStock
      type: object
      description: FacilityStock
    FacilityStockBulkOperation:
      properties:
        tenantArticleId:
          minLength: 1
          type: string
        value:
          minimum: 0
          type: number
      required:
        - tenantArticleId
        - value
      title: FacilityStockBulkOperation
      type: object
      description: FacilityStockBulkOperation
    FacilityStockBulkOperations:
      properties:
        operations:
          items:
            $ref: '#/components/schemas/FacilityStockBulkOperation'
          minItems: 1
          type: array
      required:
        - operations
      title: FacilityStockBulkOperations
      type: object
      description: FacilityStockBulkOperations
    FacilityStockBulkResult:
      properties:
        error:
          $ref: '#/components/schemas/BulkOperationError'
        facilityRef:
          type: string
        status:
          enum:
            - UPDATED
            - CREATED
            - FAILED
          type: string
        tenantArticleId:
          type: string
      required:
        - tenantArticleId
        - facilityRef
        - status
      title: FacilityStockBulkResult
      type: object
      description: FacilityStockBulkResult
    FacilityStockConfiguration:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
        - properties:
            id:
              type: string
            listingReactivationAfter:
              properties:
                active:
                  default: true
                  description: The disabling of listings is enabled or disabled.
                  type: boolean
                value:
                  default: 24
                  description: >-
                    Time in hours that has to pass for a deactivated listing
                    (e.g. due to manual deactivation or as a result of a
                    shortpick ) to be become active again.
                  type: number
              type: object
            retainedOfflineStock:
              deprecated: true
              description: >-
                This part of the API is deprecated. For details please check the
                <a
                href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
                target="_blank">api-release-life-cycle documentation</a>.<br
                /><br />Concept depreated. Use safety stock instead.
              properties:
                active:
                  description: The retained Offline Stock is enabled or disabled.
                  type: boolean
                value:
                  default: 0.2
                  description: >-
                    The overall percentage of stock that should be reserved to
                    offline clients.
                  example: 0.15
                  maximum: 1
                  minimum: 0.01
                  type: number
              type: object
            shortpick:
              properties:
                active:
                  default: true
                  description: >-
                    Inventory adjustment in the case of insufficient order
                    picking
                  type: boolean
              required:
                - active
              type: object
          required:
            - retainedOfflineStock
            - listingReactivationAfter
            - shortpick
            - id
          type: object
      title: FacilityStockConfiguration
      description: FacilityStockConfiguration
    FacilityStockDistribution:
      properties:
        available:
          deprecated: true
          description: >-
            This field is deprecated and replaced by new availability concepts.
            Please see
            https://docs.fulfillmenttools.com/api-docs/use-cases/inventory-management/global-inventory/availability
            for more information.
          minimum: 0
          type: number
        availableForPicking:
          type: number
        availableOnStock:
          type: number
        availableToPromise:
          deprecated: true
          description: >-
            This field is deprecated and replaced by new availability concepts.
            Please see
            https://docs.fulfillmenttools.com/api-docs/use-cases/inventory-management/global-inventory/availability
            for more information.
          type: number
        byTrait:
          $ref: '#/components/schemas/ByTrait'
        channelAdjusted:
          items:
            $ref: '#/components/schemas/ChannelStockAvailability'
          type: array
        facilityId:
          type: string
        facilityName:
          type: string
        facilityServiceTypes:
          items:
            $ref: '#/components/schemas/FacilityServiceType'
            type: string
          type: array
        facilityStatus:
          $ref: '#/components/schemas/FacilityStatus'
        price:
          nullable: true
          type: number
        readyToPick:
          deprecated: true
          description: >-
            This field is deprecated and replaced by new availability concepts.
            Please see
            https://docs.fulfillmenttools.com/api-docs/use-cases/inventory-management/global-inventory/availability
            for more information.
          type: number
        reserved:
          minimum: 0
          type: number
        safetyStock:
          minimum: 0
          type: number
        stockOnHand:
          type: number
        totalAmount:
          minimum: 0
          type: number
      required:
        - reserved
        - totalAmount
        - available
        - safetyStock
        - byTrait
        - availableForPicking
        - availableToPromise
        - readyToPick
        - availableOnStock
        - stockOnHand
        - facilityId
        - facilityName
      title: FacilityStockDistribution
      type: object
      description: FacilityStockDistribution
    FacilitySuspendedWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          $ref: '#/components/schemas/ManagedFacility'
      required:
        - payload
      type: object
      title: FacilitySuspendedWebHookEvent
      description: FacilitySuspendedWebHookEvent
    FacilityTagsFilter:
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by id
        value:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by value
      title: FacilityTagsFilter
      type: object
      description: FacilityTagsFilter
    FacilityTagsListFilter:
      properties:
        contains:
          allOf:
            - $ref: '#/components/schemas/FacilityTagsFilter'
          description: Contains returns if at least one entry matches
      title: FacilityTagsListFilter
      type: object
      description: FacilityTagsListFilter
    FacilityType:
      default: MANAGED_FACILITY
      enum:
        - MANAGED_FACILITY
        - SUPPLIER
      type: string
      xml:
        name: FacilityType
      title: FacilityType
      description: FacilityType
    FacilityTypeEnumFilter:
      properties:
        eq:
          description: Search by type
          enum:
            - MANAGED_FACILITY
            - SUPPLIER
          type: string
        in:
          description: Search by type
          items:
            enum:
              - MANAGED_FACILITY
              - SUPPLIER
            type: string
          type: array
        notEq:
          description: Search by type
          enum:
            - MANAGED_FACILITY
            - SUPPLIER
          type: string
      title: FacilityTypeEnumFilter
      type: object
      description: FacilityTypeEnumFilter
    FacilityUpdatedWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          $ref: '#/components/schemas/ManagedFacility'
      required:
        - payload
      type: object
      title: FacilityUpdatedWebHookEvent
      description: FacilityUpdatedWebHookEvent
    FacilityWentOfflineWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          $ref: '#/components/schemas/ManagedFacility'
      required:
        - payload
      type: object
      title: FacilityWentOfflineWebHookEvent
      description: FacilityWentOfflineWebHookEvent
    FacilityWentOnlineWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          $ref: '#/components/schemas/ManagedFacility'
      required:
        - payload
      type: object
      title: FacilityWentOnlineWebHookEvent
      description: FacilityWentOnlineWebHookEvent
    FallbackFacilityConfiguration:
      properties:
        active:
          default: false
          type: boolean
        facilityRefs:
          items:
            type: string
          maxItems: 1
          minItems: 1
          type: array
        fallbackAfterTime:
          default: PT0H
          description: >-
            Default amount of time in ISO 8601 duration format after which a not
            routable routingplan is routed to a configured fallback facility.
          pattern: ^P(?:(\d+W)|(\d+Y)?(\d+M)?(\d+D)?(?:T(\d+H)?(\d+M)?(\d+S)?)?)$
          type: string
      required:
        - facilityRefs
        - active
        - fallbackAfterTime
      title: FallbackFacilityConfiguration
      description: FallbackFacilityConfiguration
    FallbackFacilityConfigurationForPatch:
      properties:
        active:
          type: boolean
        facilityRefs:
          items:
            type: string
          maxItems: 1
          minItems: 1
          type: array
        fallbackAfterTime:
          description: >-
            Default amount of time in ISO 8601 duration format after which a not
            routable routingplan is routed to a configured fallback facility.
          pattern: ^P(?:(\d+W)|(\d+Y)?(\d+M)?(\d+D)?(?:T(\d+H)?(\d+M)?(\d+S)?)?)$
          type: string
      title: FallbackFacilityConfigurationForPatch
      description: FallbackFacilityConfigurationForPatch
    Feature:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        name:
          type: string
        status:
          $ref: '#/components/schemas/FeatureStatus'
      required:
        - name
        - status
      type: object
      title: Feature
      description: Feature
    FeaturePatchActions:
      properties:
        actions:
          items:
            $ref: '#/components/schemas/ModifyFeature'
          minItems: 1
          type: array
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          format: int64
          type: integer
      required:
        - version
        - actions
      type: object
      xml:
        name: FeaturePatchActions
      title: FeaturePatchActions
      description: FeaturePatchActions
    FeatureStatus:
      enum:
        - enabled
        - inactive
        - disabled
      type: string
      title: FeatureStatus
      description: FeatureStatus
    FedexCarrierConfiguration:
      allOf:
        - $ref: '#/components/schemas/CarrierConfiguration'
      description: Configuration of Fedex Carrier
      properties:
        defaultCommodityDescription:
          description: Describes the shipped goods
          example: Description goes here
          type: string
        defaultManufactureCountry:
          description: A two-digit country code as per ISO 3166-1 alpha-2
          example: DE
          pattern: ^[A-Z]{2}$
          type: string
        defaultPriceCurrency:
          description: default currency of shipped goods as 3 letter iso code
          example: EUR
          pattern: ^[A-Z]{3}$
          type: string
        defaultPriceValue:
          description: Default value of shipped goods
          example: 10.99
          type: number
        trackAndTraceUrl:
          type: string
        useEconomyService:
          description: Indicates if the economy services of fedex should be used.
          example: true
          type: boolean
      required:
        - useEconomyService
        - defaultPriceCurrency
        - defaultPriceValue
        - defaultManufactureCountry
        - defaultCommodityDescription
      title: FedexCarrierConfiguration
    FedexCarrierCredentials:
      allOf:
        - $ref: '#/components/schemas/AbstractCarrierCredentials'
        - properties:
            accountNumber:
              description: Your fedex accountnumber
              type: string
            apiKey:
              description: Internal API Key to communicate with the CEP Api
              type: string
            secretKey:
              description: Internal API Key to communicate with the CEP Api
              type: string
          required:
            - apiKey
            - secretKey
            - accountNumber
          type: object
      description: Fedex Credentials.
      title: FedexCarrierCredentials
      xml:
        name: FedexCarrierCredentials
    Fence:
      additionalProperties: false
      properties:
        active:
          type: boolean
        activeMode:
          $ref: '#/components/schemas/FenceMode'
        description:
          type: string
        id:
          description: >-
            This value identifies this very instance of the fence. It is set
            autmatically by the server when the configuration is updated.
          example: f937bc6b-d78b-46a3-913f-ecbba5f9f65d
          type: string
        implementation:
          $ref: '#/components/schemas/FenceImplementation'
        name:
          type: string
        supportedModes:
          items:
            $ref: '#/components/schemas/FenceMode'
          type: array
      required:
        - active
        - implementation
        - id
      type: object
      title: Fence
      description: Fence
    FenceImplementation:
      description: >-
        <i>This part of the API is currently under development. That means that
        this endpoint, model, etc. can contain breaking changes and / or might
        not be available at all times in your API instance. It could disappear
        also without warning. Thus it currently does not fall under our SLA
        regulations. For details on this topic please check our <a
        href="https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/api-release-life-cycle">documentation</a></i>
      enum:
        - FACILITY-BUSINESSTYPE
        - STOCK-AVAILABILITY
        - FACILITY-CARRIERAVAILABILITY
        - FACILITY-COUNTRY
        - FACILITY-PICKING-TIME-CAPACITY
        - PRESELECTED-FACILITY
        - SAMEDAY-POSSIBLE
        - AVOID-ZERO-STOCK
      type: string
      xml:
        name: FenceImplementation
      title: FenceImplementation
    FenceMode:
      enum:
        - static
        - reactive
      type: string
      title: FenceMode
      description: FenceMode
    FenceResultStatus:
      enum:
        - FAILED
        - PASSED
        - REACTIVE_PASSING_POSSIBLE
      title: FenceResultStatus
      description: FenceResultStatus
    FenceStatistic:
      properties:
        durationMs:
          description: Duration in Milliseconds
          type: number
        name:
          type: string
        passedAmount:
          type: number
        passedPercentage:
          type: number
        rejectedAmount:
          type: number
      required:
        - name
        - rejectedAmount
        - passedAmount
        - passedPercentage
        - durationMs
      title: FenceStatistic
      description: FenceStatistic
    FilterEntity:
      properties:
        valueLocalized:
          $ref: '#/components/schemas/LocaleString'
        id:
          example: fsfdsf87fsd
          type: string
        type:
          $ref: '#/components/schemas/SupportedFilterEntityTypesEnum'
        value:
          example: stickerValue
          type: string
      required:
        - valueLocalized
        - id
        - type
      type: object
      xml:
        name: FilterEntity
      title: FilterEntity
      description: FilterEntity
    FinishHandoverJobActionEnum:
      enum:
        - FINISH_HANDOVER_JOB
      type: string
      title: FinishHandoverJobActionEnum
      description: FinishHandoverJobActionEnum
    FinishHandoverJobActionParameter:
      additionalProperties: false
      description: Action to finish a handoverjob.
      properties:
        lineItems:
          additionalProperties: false
          items:
            $ref: '#/components/schemas/FinishHandoverJobLineItem'
          type: array
        name:
          $ref: '#/components/schemas/FinishHandoverJobActionEnum'
        version:
          description: Version of the entity to be changed
          minimum: 0
          type: integer
      required:
        - name
        - version
        - lineItems
      title: FinishHandoverJobActionParameter
    FinishHandoverJobLineItem:
      additionalProperties: false
      properties:
        handedOverQuantity:
          type: number
        id:
          type: string
        refused:
          items:
            $ref: '#/components/schemas/RefusedItemForUpdate'
          type: array
        substituteLineItems:
          items:
            $ref: '#/components/schemas/FinishHandoverJobSubstituteLineItem'
          type: array
      required:
        - id
        - handedOverQuantity
      title: FinishHandoverJobLineItem
      description: FinishHandoverJobLineItem
    FinishHandoverJobSubstituteLineItem:
      properties:
        handedOverQuantity:
          minimum: 0
          type: integer
        id:
          type: string
        refused:
          items:
            $ref: '#/components/schemas/RefusedItemForUpdate'
          type: array
      required:
        - id
        - handedOverQuantity
      title: FinishHandoverJobSubstituteLineItem
      description: FinishHandoverJobSubstituteLineItem
    FinishItemReturnActionEnum:
      enum:
        - FinishItemReturn
      type: string
      title: FinishItemReturnActionEnum
      description: FinishItemReturnActionEnum
    FinishItemReturnActionParameter:
      additionalProperties: false
      description: Action to finish an ItemReturn.
      properties:
        itemReturnJobVersion:
          description: Version of the entity to be changed
          minimum: 0
          type: integer
        name:
          $ref: '#/components/schemas/FinishItemReturnActionEnum'
      required:
        - name
        - itemReturnJobVersion
      title: FinishItemReturnActionParameter
    FinishItemReturnJobActionEnum:
      enum:
        - FinishItemReturnJob
      type: string
      title: FinishItemReturnJobActionEnum
      description: FinishItemReturnJobActionEnum
    FinishItemReturnJobActionParameter:
      additionalProperties: false
      description: Action to finish a ItemReturnJob.
      properties:
        name:
          $ref: '#/components/schemas/FinishItemReturnJobActionEnum'
        version:
          description: Version of the entity to be changed
          minimum: 0
          type: integer
      required:
        - name
        - version
      title: FinishItemReturnJobActionParameter
    FinishPickRun:
      allOf:
        - $ref: '#/components/schemas/AbstractModificationAction'
        - additionalProperties: false
          properties:
            action:
              description: Use value 'FinishPickRun', because you want to finish a pickrun
              enum:
                - FinishPickRun
              type: string
          required:
            - action
          type: object
      deprecated: true
      description: >-
        This part of the API is deprecated. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />@deprecated Use api/pickruns/:id/actions instead
      title: FinishPickRun
      xml:
        name: FinishPickRun
    FixedCountConfiguration:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />Configuration of fixed count split.
      properties:
        maxSplitCount:
          description: >-
            This setting defines how often an order split might be performed to
            fulfill the order.
          minimum: 1
          type: number
      required:
        - maxSplitCount
      type: object
      title: FixedCountConfiguration
      x-badges:
        - color: orange
          label: BETA
    FloatValidation:
      additionalProperties: false
      allOf:
        - $ref: '#/components/schemas/BaseValidation'
      description: Validate input as float.
      properties:
        maxValue:
          type: number
        minValue:
          type: number
      title: FloatValidation
      type: object
    Fulfillability:
      description: The response to a fulfillability request.
      properties:
        collect:
          properties:
            facilities:
              items:
                $ref: '#/components/schemas/FulfillabilityFacility'
              type: array
          type: object
        shipping:
          description: >-
            Results for the fulfillment of a shipping order for the parameters
            provided in the query
          properties:
            DELIVERY:
              description: Depicts wether the servicelevel DELIVERY is available.
              properties:
                available:
                  description: Depicts wether the servicelevel DELIVERY is available
                  example: false
                  type: boolean
              required:
                - available
              type: object
            SAMEDAY:
              description: >-
                This service level means, that the consumer expects a package
                the same day.
              properties:
                available:
                  description: Depicts wether the servicelevel SAMEDAY is available
                  example: true
                  type: boolean
                validUntil:
                  description: >-
                    This information is most likely valid until this date (there
                    are circumstances when this information becomes stale
                    earlier).
                  example: 2020-02-03T08:45:50.525Z
                  format: date-time
                  type: string
              required:
                - available
              type: object
          type: object
      type: object
      title: Fulfillability
    FulfillabilityClickAndCollectQuery:
      description: >-
        Provides the paramters you are interested in. You must supply at least
        the articles you are interested in
      properties:
        articles:
          items:
            properties:
              quantity:
                type: number
              tenantArticleId:
                type: string
            required:
              - tenantArticleId
            type: object
          minItems: 1
          type: array
        deliveryCountry:
          description: A two-digit country code as per ISO 3166-1 alpha-2
          example: DE
          pattern: ^[A-Z]{2}$
          type: string
        deliveryPostalCode:
          type: string
        deliveryPreferences:
          $ref: '#/components/schemas/DeliveryPreferences'
        facilityRefs:
          items:
            type: string
          type: array
        geoFence:
          $ref: '#/components/schemas/GeoFence'
      required:
        - articles
      title: FulfillabilityClickAndCollectQuery
    FulfillabilityDetail:
      properties:
        address:
          $ref: '#/components/schemas/FacilityAddress'
        articleAvailabilities:
          items:
            $ref: '#/components/schemas/ArticleAvailability'
          type: array
        closingDays:
          items:
            $ref: '#/components/schemas/ClosingDay'
          type: array
        facilityName:
          type: string
        facilityRef:
          type: string
        pickingTimes:
          $ref: '#/components/schemas/PickingTimes'
        targetTime:
          format: date-time
          type: string
        tenantFacilityId:
          type: string
      required:
        - facilityRef
        - facilityName
        - address
        - articleAvailabilities
      title: FulfillabilityDetail
      description: FulfillabilityDetail
    FulfillabilityFacility:
      allOf:
        - $ref: '#/components/schemas/StrippedManagedFacility'
      title: FulfillabilityFacility
      description: FulfillabilityFacility
    FulfillabilityItemsConstraintValue:
      properties:
        items:
          description: >-
            The shortened description of an article, that would be part of the
            order.
          items:
            properties:
              amount:
                description: The required amount
                example: 5
                type: integer
              tenantArticleId:
                description: The article ID, that is used in corresponding listings.
                example: RO-57665956-6-XL
                type: string
            type: object
          type: array
        mode:
          description: >-
            The mode this constraint is evaluated in. ITEMS_COMPLETE means, that
            all the items in the desired quantities have to be listed in a
            resulting facility.
          enum:
            - ITEMS_COMPLETE
          example: ITEMS_COMPLETE
          type: string
      required:
        - mode
        - items
      type: object
      title: FulfillabilityItemsConstraintValue
      description: FulfillabilityItemsConstraintValue
    FulfillabilityQuery:
      description: >-
        Provides the paramters you are interested in. You must supply at least
        either the shipping or the collect attribute as the description of the
        last mile expectation.
      properties:
        collect:
          description: >-
            The geofence (a gps coordinate and a radius around that coordinate)
            for considered facilities to collect the goods.
          properties:
            geoFence:
              $ref: '#/components/schemas/GeoFence'
          required:
            - geoFence
          type: object
        constraints:
          description: >-
            Constraints can be used to further cut down the list of resulting
            facilities. Important: ALL of the given constraints will be matched
            against the resulting list of facilities!
          items:
            $ref: '#/components/schemas/AbstractFulfillabilityConstraintType'
          type: array
        estimatedOrderDate:
          description: >-
            The point in time when the order estimated to be supplied to
            fulfillmenttools platform, e.g. calling this endpoint during
            checkout, you would most likely put the timestamp for 'now' in here.
          example: 2020-02-03T08:45:50.525Z
          format: date-time
          type: string
        shipping:
          description: >-
            You want information about the shipping possibility - more detailed
            parameters  can be described here.
          properties:
            serviceLevels:
              description: >-
                The kind of servicelevel you want to query as being part of the
                consumer expectation of delivery
              items:
                $ref: '#/components/schemas/CarrierDeliveryType'
              minItems: 1
              type: array
            targetAddress:
              $ref: '#/components/schemas/StrippedShippingTargetAddress'
          required:
            - serviceLevels
            - targetAddress
          type: object
      required:
        - estimatedOrderDate
      type: object
      title: FulfillabilityQuery
    FulfillabilityResult:
      properties:
        fulfillability:
          items:
            $ref: '#/components/schemas/FulfillabilityDetail'
          type: array
      required:
        - details
      title: FulfillabilityResult
      description: FulfillabilityResult
    FulfillabilityShipFromStoreQuery:
      description: >-
        Provides the paramters you are interested in. You must supply at least
        the articles you are interested in
      properties:
        articles:
          items:
            properties:
              quantity:
                type: number
              tenantArticleId:
                type: string
            required:
              - tenantArticleId
            type: object
          minItems: 1
          type: array
        deliveryCountry:
          description: A two-digit country code as per ISO 3166-1 alpha-2
          example: DE
          pattern: ^[A-Z]{2}$
          type: string
        deliveryPostalCode:
          type: string
        deliveryPreferences:
          $ref: '#/components/schemas/DeliveryPreferences'
        facilityRefs:
          items:
            type: string
          type: array
        geoFence:
          $ref: '#/components/schemas/GeoFence'
      required:
        - articles
      title: FulfillabilityShipFromStoreQuery
    FulfillmentProcessBufferConfiguration:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        id:
          type: string
        minutes:
          default: 240
          description: Duration in minutes until an order is processed
          example: '240'
          minimum: 0
          type: integer
      required:
        - minutes
      type: object
      title: FulfillmentProcessBufferConfiguration
      description: FulfillmentProcessBufferConfiguration
    GdprConfiguration:
      additionalProperties: false
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        actorAnonymization:
          default: true
          description: >-
            If true, the actor information will be stored anonymized for
            auditing. Might take up to 1 hour to be take into effect
          example: true
          type: boolean
        deletionTimeAfterRetention:
          description: Number of days since anonymization until deletion is triggered
          example: 30
          minimum: 1
          type: number
        id:
          type: string
        retentionTime:
          description: Number of days after that anonymization is triggered.
          example: 30
          minimum: 1
          type: number
        version:
          example: 42
          format: int64
          type: integer
      required:
        - retentionTime
        - version
      type: object
      title: GdprConfiguration
      description: GdprConfiguration
    GeoFence:
      description: >-
        Center (described with lon and lat attributes) and a circular geofence
        (described as radius around the center)
      properties:
        lat:
          description: The latitude of the center, provided as decimal coordinate
          example: 50.968713
          type: number
        lon:
          description: The longitude of the center, provided as decimal coordinate
          example: 7.011375
          type: number
        radius:
          description: Radius around the center in kilometers (km, max. 100)
          minimum: 1
          type: number
      required:
        - lat
        - lon
        - radius
      type: object
      title: GeoFence
    GlobalManualRerouteConfiguration:
      description: Allows reroutes to be triggered manually via api.
      properties:
        active:
          type: boolean
      required:
        - active
      type: object
      title: GlobalManualRerouteConfiguration
    GlobalRoutingConfiguration:
      description: Global configuration for routing
      properties:
        defaultPrice:
          default: 10
          description: Default price which is used if no price exists in order or listings
          type: number
        fallbackFacilityConfiguration:
          $ref: '#/components/schemas/FallbackFacilityConfiguration'
        manualReroute:
          $ref: '#/components/schemas/GlobalManualRerouteConfiguration'
        routingTimeout:
          default: 8
          deprecated: true
          description: >-
            This part of the API is deprecated. For details please check the <a
            href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
            target="_blank">api-release-life-cycle documentation</a>.<br /><br
            />@deprecated Default amount of hours after which a routing plan is
            marked not routable. This field is deprecated in favour of
            stopRoutingAttemptsAfterTime
          type: number
        stopRoutingAttemptsAfterTime:
          default: PT8H
          description: >-
            Default amount of time in ISO 8601 duration format after which a
            routing plan is marked not routable. The duration need to be a
            multiple of 60 seconds.
          pattern: ^P(?:(\d+W)|(\d+Y)?(\d+M)?(\d+D)?(?:T(\d+H)?(\d+M)?(\d+S)?)?)$
          type: string
      required:
        - defaultPrice
      type: object
      title: GlobalRoutingConfiguration
    GlsCarrierConfiguration:
      allOf:
        - $ref: '#/components/schemas/CarrierConfiguration'
      description: Configuration of GLS Carrier
      properties:
        alternativeReturnAddressLocationId:
          minLength: 1
          type: string
        alternativeSendAddressLocationId:
          minLength: 1
          type: string
        trackAndTraceUrl:
          type: string
        trackAndTraceWsdlUrl:
          type: string
      title: GlsCarrierConfiguration
    GLSCarrierCredentials:
      allOf:
        - $ref: '#/components/schemas/AbstractCarrierCredentials'
        - properties:
            password:
              description: GLS password
              type: string
            trackAndTracePassword:
              description: GLS Track And Trace password
              type: string
            trackAndTraceUsername:
              description: GLS Track And Trace username
              type: string
            username:
              description: GLS username
              type: string
          required:
            - username
            - password
            - trackAndTraceUsername
            - trackAndTracePassword
          type: object
      description: GLS Carrier Credentials
      title: GLSCarrierCredentials
      xml:
        name: GLSCarrierCredentials
    HandledItem:
      properties:
        quantity:
          minimum: 1
          type: number
        tenantArticleId:
          type: string
      required:
        - tenantArticleId
      type: object
      title: HandledItem
      description: HandledItem
    HandoverConfiguration:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        availableRefusedReasons:
          items:
            $ref: '#/components/schemas/AvailableRefusedReason'
        createStandaloneHandoverJobs:
          deprecated: true
          description: >-
            This part of the API is in Alpha status. For details please check
            the <a
            href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
            target="_blank">api-release-life-cycle documentation</a>.<br /><br
            />If true, a handover job will be created out of a valid routing
            plan. It is only possible, if no pickjob nor pack jobs are used for
            this tenant. This is a alpha feature and might be completely
            replaced in the future. Please only use in communication with the
            fulfillmenttools team.
          example: true
          type: boolean
          x-badges:
            - color: red
              label: ALPHA
      type: object
      title: HandoverConfiguration
      description: HandoverConfiguration
    HandoverConfigurationForCreate:
      additionalProperties: false
      properties:
        availableRefusedReasons:
          items:
            $ref: '#/components/schemas/AvailableRefuseReasonForCreation'
        createStandaloneHandoverJobs:
          deprecated: true
          description: >-
            This part of the API is in Alpha status. For details please check
            the <a
            href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
            target="_blank">api-release-life-cycle documentation</a>.<br /><br
            />If true, a handover job will be created out of a valid routing
            plan. It is only possible, if no pickjob nor packjobs are used for
            this tenant. This is a alpha feature and might be completly replaced
            in the future. Please only use in communication with the FFT team.
          example: true
          type: boolean
          x-badges:
            - color: red
              label: ALPHA
        version:
          type: number
      required:
        - version
      type: object
      title: HandoverConfigurationForCreate
      description: HandoverConfigurationForCreate
    HandoverContainer:
      additionalProperties: false
      allOf:
        - $ref: '#/components/schemas/HandoverContainerForCreation'
      properties:
        created:
          description: >-
            The date this entity was created at the platform. This value is
            generated by the service.
          example: 2020-02-03T08:45:51.525Z
          format: date-time
          type: string
        description:
          description: Translated Description from descriptionLocalized
          type: string
        facilityRef:
          description: Linked Facility through reference
          type: string
        id:
          type: string
        lastModified:
          description: >-
            The date this entity was modified last. This value is generated by
            the service.
          example: 2020-02-03T09:45:51.525Z
          format: date-time
          type: string
        lineItems:
          items:
            $ref: '#/components/schemas/HandoverContainerLineItem'
          type: array
        name:
          description: Translated name from nameLocalized
          type: string
        processRef:
          description: Linked Process through reference
          type: string
        stackRef:
          description: Linked stack through reference
          type: string
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          format: int64
          type: integer
      required:
        - id
        - version
        - created
        - lastModified
        - lineItems
        - facilityRef
        - processRef
        - stackRef
      type: object
      title: HandoverContainer
      description: HandoverContainer
    HandoverContainerForCreation:
      additionalProperties: false
      properties:
        nameLocalized:
          $ref: '#/components/schemas/LocaleString'
        descriptionLocalized:
          $ref: '#/components/schemas/LocaleString'
        codes:
          items:
            type: string
          type: array
        customAttributes:
          items:
            type: object
          type: array
        dimensions:
          $ref: '#/components/schemas/ContainerDimensions'
        handoverJobRef:
          description: Linked HandoverJob through reference
          type: string
        iconUrl:
          description: URL to icon
          type: string
        lineItems:
          items:
            $ref: '#/components/schemas/HandoverContainerLineItemForCreation'
          type: array
        operativeContainerTypeRef:
          description: Linked Operative Container Type through reference
          type: string
        stackRef:
          description: Linked Stack through reference
          type: string
        storageLocationRef:
          description: Linked StorageLocation through reference
          type: string
        weightLimitInG:
          description: Weight limit in gram for this Container
          type: integer
      required:
        - lineItems
        - handoverJobRef
        - nameLocalized
      type: object
      title: HandoverContainerForCreation
      description: HandoverContainerForCreation
    HandoverContainerLineItem:
      additionalProperties: false
      allOf:
        - $ref: '#/components/schemas/MandatoryLineItem'
      properties:
        article:
          $ref: '#/components/schemas/HandoverContainerLineItemArticle'
        id:
          type: string
        measurementUnitKey:
          description: Identifier for items unit of measurement.
          type: string
        quantity:
          description: Amount per line item
          type: number
      required:
        - id
        - quantity
        - article
      title: HandoverContainerLineItem
      description: HandoverContainerLineItem
    HandoverContainerLineItemArticle:
      allOf:
        - $ref: '#/components/schemas/AbstractArticle'
        - properties:
            attributes:
              items:
                $ref: '#/components/schemas/ArticleAttributeItem'
              type: array
          required:
            - title
            - tenantArticleId
          type: object
      title: HandoverContainerLineItemArticle
      description: HandoverContainerLineItemArticle
    HandoverContainerLineItemForCreation:
      additionalProperties: false
      allOf:
        - $ref: '#/components/schemas/MandatoryLineItemForCreation'
      properties:
        article:
          $ref: '#/components/schemas/HandoverContainerLineItemArticle'
        customAttributes:
          description: >-
            Attributes that can be added to the lineItem. These attributes
            cannot be used within fulfillment processes, but it could be useful
            to have the information carried here.
          type: object
        globalLineItemId:
          description: >-
            This id is used to identify if this line item is related to the line
            item of other operational entities.
          type: string
        measurementUnitKey:
          description: Identifier for items unit of measurement.
          type: string
        quantity:
          description: Amount per line item
          type: number
        recordableAttributes:
          description: >-
            Customizable information about the lineItem that can be set during
            the process.
          items:
            $ref: '#/components/schemas/RecordableAttributeForCreation'
          type: array
        scannableCodes:
          description: Codes that can be used for scanning this lineItem
          items:
            type: string
          type: array
      required:
        - quantity
        - article
      title: HandoverContainerLineItemForCreation
      description: HandoverContainerLineItemForCreation
    Handoverjob:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
        - properties:
            anonymized:
              description: Indicates if gdpr related data was anonymized
              example: false
              type: boolean
            assignedUsers:
              description: Assigned users for this entity
              items:
                $ref: '#/components/schemas/AssignedUser'
              type: array
            cancelReason:
              $ref: '#/components/schemas/HandoverJobCancelReason'
            carrierKey:
              description: >-
                This part of the API is deprecated. For details please check the
                <a
                href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
                target="_blank">api-release-life-cycle documentation</a>.<br
                /><br />@deprecated This field is deprecated since 28 November
                2024. Use nested object handoverJobParcelInfo instead.
              type: string
            carrierLogoUrl:
              description: >-
                This part of the API is deprecated. For details please check the
                <a
                href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
                target="_blank">api-release-life-cycle documentation</a>.<br
                /><br />@deprecated This field is deprecated since 28 November
                2024. Use nested object handoverJobParcelInfo instead.
              type: string
            carrierRef:
              description: >-
                This part of the API is deprecated. For details please check the
                <a
                href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
                target="_blank">api-release-life-cycle documentation</a>.<br
                /><br />@deprecated This field is deprecated since 28 November
                2024. Use nested object handoverJobParcelInfo instead.
              type: string
            carrierTrackingNumber:
              description: >-
                This part of the API is deprecated. For details please check the
                <a
                href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
                target="_blank">api-release-life-cycle documentation</a>.<br
                /><br />@deprecated This field is deprecated since 28 November
                2024. Use nested object handoverJobParcelInfo instead.
              type: string
            channel:
              enum:
                - DELIVERY
                - COLLECT
              type: string
            customAttributes:
              description: >-
                Attributes that can be added to the handover job. These
                attributes cannot be used within fulfillment processes, but it
                could be useful to have the informations carried here.
              type: object
            documents:
              items:
                $ref: '#/components/schemas/PrintableDocument'
              type: array
            documentsRef:
              description: Reference to the documents collection from this entity
              type: string
            expectedHandoverJobLineItems:
              items:
                $ref: '#/components/schemas/ExpectedHandoverLineItem'
              type: array
            facilityRef:
              description: The id of the facility reference.
              example: Esb20gpHBL94X5NdMp3C
              type: string
            fullIdentifier:
              description: An information to identify the recipient
              type: string
            handoverJobLineItems:
              items:
                $ref: '#/components/schemas/HandoverLineItem'
            handoverJobParcelInfo:
              $ref: '#/components/schemas/HandoverJobParcelInfo'
            id:
              description: >-
                The id of this handoverjob. It is generated during creation
                automatically and suits as the primary identifier of the
                described entity.
              example: 95EWrieX09OmeriXIUbb
              type: string
            invoiceAddress:
              $ref: '#/components/schemas/ConsumerAddress'
            loadUnitRefs:
              description: Reference to array of load unit Refs
              items:
                type: string
              type: array
            operativeProcessRef:
              type: string
            orderDate:
              description: The date this order was created at the supplying system.
              example: 2020-02-03T08:45:50.525Z
              format: date-time
              type: string
            paid:
              description: Indicates if the order is already paid
              example: false
              type: boolean
            parcelRef:
              description: >-
                This part of the API is deprecated. For details please check the
                <a
                href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
                target="_blank">api-release-life-cycle documentation</a>.<br
                /><br />@deprecated This field is deprecated since 28 November
                2024. Use nested object handoverJobParcelInfo instead.
              example: 2fOge2ZGW54K4TgvDTQw
              type: string
            pickJobRef:
              description: >-
                The reference to the pickjob for which the handoverjob is
                assigned to
              example: ca525716-7208-4a63-a2a6-11274eb37f67-0
              type: string
            processId:
              description: >-
                Id of the global process related to this entity. For example
                used for starting the GDPR process and others.
              type: string
            recipientAddress:
              $ref: '#/components/schemas/ConsumerAddress'
            shipmentRef:
              description: >-
                This part of the API is deprecated. For details please check the
                <a
                href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
                target="_blank">api-release-life-cycle documentation</a>.<br
                /><br />@deprecated This field is deprecated since 28 November
                2024. Use nested object handoverJobParcelInfo instead.
              example: Esb20gpHBL94X5NdMp3C
              type: string
            shortIdentifier:
              description: The short identifier of the shipment.
              type: string
            status:
              $ref: '#/components/schemas/HandoverjobStatus'
            stickers:
              items:
                $ref: '#/components/schemas/Sticker'
              type: array
            targetTime:
              description: >-
                The time the handoverjob is expected to be picked up at the
                facility.
              format: date-time
              type: string
            tenantOrderId:
              description: >-
                Field can be used as a reference number in foreign systems, for
                example as a reference to the source system's identifier for
                this order.
              example: R456728546
              type: string
            transfers:
              items:
                $ref: '#/components/schemas/OperativeTransfer'
              minItems: 0
              type: array
            tags:
              description: >-
                Tags can only be set when there is no process related with this
                handoverJob. Setting processId and tags will lead to an
                validationError.
              items:
                $ref: '#/components/schemas/TagReference'
              minItems: 1
              type: array
      required:
        - id
        - status
        - facilityRef
        - targetTime
        - channel
        - orderDate
      type: object
      title: Handoverjob
      description: Handoverjob
    HandoverJobActionsParameter:
      anyOf:
        - $ref: '#/components/schemas/HandoverJobCancelActionParameter'
        - $ref: '#/components/schemas/HandoverJobLineItemUpdateActionParameter'
        - $ref: '#/components/schemas/FinishHandoverJobActionParameter'
        - $ref: '#/components/schemas/SetHandoverJobToWaitingForInputActionParameter'
        - $ref: '#/components/schemas/HandoverJobReplaceAssignedUsersActionParameter'
        - $ref: '#/components/schemas/HandoverJobSplitLineItemsActionParameter'
        - $ref: >-
            #/components/schemas/UpdateHandoverLineItemRecordableAttributesActionParameter
      title: HandoverJobActionsParameter
      description: HandoverJobActionsParameter
    HandoverJobAssignedUsersFilter:
      properties:
        userId:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by userId
        username:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by username
      title: HandoverJobAssignedUsersFilter
      type: object
      description: HandoverJobAssignedUsersFilter
    HandoverJobAssignedUsersListFilter:
      properties:
        contains:
          allOf:
            - $ref: '#/components/schemas/HandoverJobAssignedUsersFilter'
          description: Contains returns if at least one entry matches
      title: HandoverJobAssignedUsersListFilter
      type: object
      description: HandoverJobAssignedUsersListFilter
    HandoverJobCancelActionEnum:
      enum:
        - CANCEL
      type: string
      title: HandoverJobCancelActionEnum
      description: HandoverJobCancelActionEnum
    HandoverJobCancelActionParameter:
      additionalProperties: false
      description: Action to cancel a handoverjob.
      properties:
        name:
          $ref: '#/components/schemas/HandoverJobCancelActionEnum'
        payload:
          additionalProperties: false
          properties:
            handoverJobCancelReason:
              $ref: '#/components/schemas/HandoverJobCancelReason'
          required:
            - handoverJobCancelReason
        version:
          description: Version of the entity to be changed
          minimum: 0
          type: integer
      required:
        - name
        - version
        - payload
      title: HandoverJobCancelActionParameter
    HandoverJobCancelReason:
      enum:
        - CONSUMER_NO_SHOW
        - CONSUMER_REJECTS
        - ORDER_CANCELED
      type: string
      title: HandoverJobCancelReason
      description: HandoverJobCancelReason
    HandoverJobChannelEnumEnumFilter:
      properties:
        eq:
          description: Search by channel
          enum:
            - DELIVERY
            - COLLECT
          type: string
        in:
          description: Search by channel
          items:
            enum:
              - DELIVERY
              - COLLECT
            type: string
          type: array
        notEq:
          description: Search by channel
          enum:
            - DELIVERY
            - COLLECT
          type: string
      title: HandoverJobChannelEnumEnumFilter
      type: object
      description: HandoverJobChannelEnumEnumFilter
    HandoverjobForCreation:
      additionalProperties: false
      properties:
        assignedUsers:
          description: Assigned users for this entity
          items:
            anyOf:
              - $ref: '#/components/schemas/AssignedUserForCreationByName'
              - $ref: '#/components/schemas/AssignedUserForCreationById'
          type: array
        cancelReason:
          $ref: '#/components/schemas/HandoverJobCancelReason'
        carrierLogoUrl:
          description: >-
            This part of the API is deprecated. For details please check the <a
            href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
            target="_blank">api-release-life-cycle documentation</a>.<br /><br
            />@deprecated This field is deprecated since 28 November 2024. Use
            nested object handoverJobParcelInfo instead.
          type: string
        carrierRef:
          description: >-
            This part of the API is deprecated. For details please check the <a
            href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
            target="_blank">api-release-life-cycle documentation</a>.<br /><br
            />@deprecated This field is deprecated since 28 November 2024. Use
            nested object handoverJobParcelInfo instead.
          type: string
        carrierTrackingNumber:
          description: >-
            This part of the API is deprecated. For details please check the <a
            href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
            target="_blank">api-release-life-cycle documentation</a>.<br /><br
            />@deprecated This field is deprecated since 28 November 2024. Use
            nested object handoverJobParcelInfo instead.
          type: string
        channel:
          enum:
            - DELIVERY
            - COLLECT
          type: string
        customAttributes:
          description: >-
            Attributes that can be added to the handover job. These attributes
            cannot be used within fulfillment processes, but it could be useful
            to have the informations carried here.
          type: object
        expectedHandoverJobLineItems:
          items:
            $ref: '#/components/schemas/ExpectedHandoverLineItemForCreation'
          type: array
        facilityRef:
          description: The id of the facility reference.
          example: Esb20gpHBL94X5NdMp3C
          type: string
        fullIdentifier:
          description: An information to identify the recipient
          type: string
        handoverJobLineItems:
          items:
            $ref: '#/components/schemas/HandoverLineItemForCreation'
          type: array
        handoverJobParcelInfo:
          $ref: '#/components/schemas/HandoverJobParcelInfoForCreation'
        invoiceAddress:
          $ref: '#/components/schemas/ConsumerAddress'
        loadUnitRefs:
          description: Reference to array of load unit Refs
          items:
            type: string
          type: array
        operativeProcessRef:
          type: string
        orderDate:
          description: The date this order was created at the supplying system.
          example: 2020-02-03T08:45:50.525Z
          format: date-time
          type: string
        paid:
          description: Indicates if the order is already paid
          example: false
          type: boolean
        parcelRef:
          description: >-
            This part of the API is deprecated. For details please check the <a
            href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
            target="_blank">api-release-life-cycle documentation</a>.<br /><br
            />@deprecated This field is deprecated since 28 November 2024. Use
            nested object handoverJobParcelInfo instead.
          example: 2fOge2ZGW54K4TgvDTQw
          type: string
        pickJobRef:
          description: >-
            The reference to the pickjob for which the handoverjob is assigned
            to
          example: ca525716-7208-4a63-a2a6-11274eb37f67-0
          type: string
        processId:
          description: >-
            Id of the global process related to this entity. For example used
            for starting the GDPR process and others.
          type: string
        recipientAddress:
          $ref: '#/components/schemas/ConsumerAddress'
        routingPlanRef:
          description: >-
            The reference to the routing plan for which the handoverjob is
            assigned to
          example: ca525716-7208-4a63-a2a6-11274eb37f67-0
          type: string
        shipmentRef:
          description: >-
            This part of the API is deprecated. For details please check the <a
            href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
            target="_blank">api-release-life-cycle documentation</a>.<br /><br
            />@deprecated This field is deprecated since 28 November 2024. Use
            nested object handoverJobParcelInfo instead.
          example: Esb20gpHBL94X5NdMp3C
          type: string
        shortIdentifier:
          description: The short identifier of the shipment.
          type: string
        status:
          $ref: '#/components/schemas/HandoverjobStatus'
        stickers:
          items:
            $ref: '#/components/schemas/Sticker'
          minItems: 1
          type: array
        targetTime:
          description: >-
            The time the handoverjob is expected to be picked up at the
            facility.
          format: date-time
          type: string
        tenantOrderId:
          description: >-
            Field can be used as a reference number in foreign systems, for
            example as a reference to the source system's identifier for this
            order.
          example: R456728546
          type: string
        transfers:
          items:
            $ref: '#/components/schemas/OperativeTransfer'
          minItems: 0
          type: array
        tags:
          description: >-
            Tags can only be set when there is no process related with this
            handoverJob. Setting processId and tags will lead to an
            validationError.
          items:
            $ref: '#/components/schemas/TagReference'
          minItems: 1
          type: array
      required:
        - facilityRef
        - targetTime
        - channel
        - orderDate
      type: object
      title: HandoverjobForCreation
      description: HandoverjobForCreation
    HandoverJobHandoverJobLineItemsArticleFilter:
      properties:
        tenantArticleId:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by tenantArticleId
        title:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by title
      title: HandoverJobHandoverJobLineItemsArticleFilter
      type: object
      description: HandoverJobHandoverJobLineItemsArticleFilter
    HandoverJobHandoverJobLineItemsFilter:
      properties:
        article:
          allOf:
            - $ref: >-
                #/components/schemas/HandoverJobHandoverJobLineItemsArticleFilter
          description: Nested search by article
        substituteLineItems:
          allOf:
            - $ref: >-
                #/components/schemas/HandoverJobHandoverJobLineItemsSubstituteLineItemsListFilter
          description: Nested list search by substituteLineItems
      title: HandoverJobHandoverJobLineItemsFilter
      type: object
      description: HandoverJobHandoverJobLineItemsFilter
    HandoverJobHandoverJobLineItemsListFilter:
      properties:
        contains:
          allOf:
            - $ref: '#/components/schemas/HandoverJobHandoverJobLineItemsFilter'
          description: Contains returns if at least one entry matches
      title: HandoverJobHandoverJobLineItemsListFilter
      type: object
      description: HandoverJobHandoverJobLineItemsListFilter
    HandoverJobHandoverJobLineItemsSubstituteLineItemsArticleFilter:
      properties:
        tenantArticleId:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by tenantArticleId
        title:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by title
      title: HandoverJobHandoverJobLineItemsSubstituteLineItemsArticleFilter
      type: object
      description: HandoverJobHandoverJobLineItemsSubstituteLineItemsArticleFilter
    HandoverJobHandoverJobLineItemsSubstituteLineItemsFilter:
      properties:
        article:
          allOf:
            - $ref: >-
                #/components/schemas/HandoverJobHandoverJobLineItemsSubstituteLineItemsArticleFilter
          description: Nested search by article
      title: HandoverJobHandoverJobLineItemsSubstituteLineItemsFilter
      type: object
      description: HandoverJobHandoverJobLineItemsSubstituteLineItemsFilter
    HandoverJobHandoverJobLineItemsSubstituteLineItemsListFilter:
      properties:
        contains:
          allOf:
            - $ref: >-
                #/components/schemas/HandoverJobHandoverJobLineItemsSubstituteLineItemsFilter
          description: Contains returns if at least one entry matches
      title: HandoverJobHandoverJobLineItemsSubstituteLineItemsListFilter
      type: object
      description: HandoverJobHandoverJobLineItemsSubstituteLineItemsListFilter
    HandoverJobHandoverJobParcelInfoFilter:
      properties:
        carrierKey:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by carrierKey
        carrierRef:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by carrierRef
        carrierTrackingNumber:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by carrierTrackingNumber
        shipmentRef:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by shipmentRef
      title: HandoverJobHandoverJobParcelInfoFilter
      type: object
      description: HandoverJobHandoverJobParcelInfoFilter
    HandoverJobHandoverjobStatusEnumFilter:
      properties:
        eq:
          description: Search by status
          enum:
            - OPEN
            - HANDED_OVER
            - OBSOLETE
            - CANCELED
            - WAITING_FOR_INPUT
          type: string
        in:
          description: Search by status
          items:
            enum:
              - OPEN
              - HANDED_OVER
              - OBSOLETE
              - CANCELED
              - WAITING_FOR_INPUT
            type: string
          type: array
        notEq:
          description: Search by status
          enum:
            - OPEN
            - HANDED_OVER
            - OBSOLETE
            - CANCELED
            - WAITING_FOR_INPUT
          type: string
      title: HandoverJobHandoverjobStatusEnumFilter
      type: object
      description: HandoverJobHandoverjobStatusEnumFilter
    HandoverJobInvoiceAddressFilter:
      properties:
        companyName:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by companyName
        email:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by email
        firstName:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by firstName
        lastName:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by lastName
      title: HandoverJobInvoiceAddressFilter
      type: object
      description: HandoverJobInvoiceAddressFilter
    HandoverJobLineItemUpdateActionEnum:
      enum:
        - UPDATE_LINEITEM
      type: string
      title: HandoverJobLineItemUpdateActionEnum
      description: HandoverJobLineItemUpdateActionEnum
    HandoverJobLineItemUpdateActionParameter:
      additionalProperties: false
      description: Action to update a lineItem of a handoverjob.
      properties:
        lineItem:
          additionalProperties: false
          properties:
            id:
              type: string
            refused:
              items:
                $ref: '#/components/schemas/RefusedItemForUpdate'
            status:
              $ref: '#/components/schemas/HandoverLineItemStatus'
            substituteItems:
              items:
                $ref: '#/components/schemas/HandoverSubstituteLineItemForUpdate'
              type: array
          required:
            - id
        name:
          $ref: '#/components/schemas/HandoverJobLineItemUpdateActionEnum'
        version:
          description: Version of the entity to be changed
          minimum: 0
          type: integer
      required:
        - name
        - version
        - lineItem
      title: HandoverJobLineItemUpdateActionParameter
    HandoverJobOrderBy:
      description: STATUS_TARGET_TIME_LAST_MODIFIED_DATE is deprecated
      enum:
        - STATUS_TARGET_TIME_LAST_MODIFIED_DATE
        - TARGET_TIME_ASC
      title: HandoverJobOrderBy
    HandoverJobPaginatedResult:
      properties:
        handoverJobs:
          items:
            $ref: '#/components/schemas/Handoverjob'
          type: array
        pageInfo:
          allOf:
            - $ref: '#/components/schemas/PageInfo'
          description: Pagination information for the search result.
        total:
          description: >-
            The total number of items matching the search criteria. Only filled,
            if withTotal is set to true in the search options.
          minimum: 0
          type: number
      required:
        - pageInfo
        - handoverJobs
      title: HandoverJobPaginatedResult
      type: object
      description: HandoverJobPaginatedResult
    HandoverJobParcelInfo:
      allOf:
        - $ref: '#/components/schemas/HandoverJobParcelInfoForCreation'
        - properties:
            carrierKey:
              description: the key of the carrier
              example: DHL
              type: string
      type: object
      title: HandoverJobParcelInfo
      description: HandoverJobParcelInfo
    HandoverJobParcelInfoForCreation:
      additionalProperties: false
      properties:
        carrierLogoUrl:
          description: The URL to the carrier logo
          example: https://www.example.com/carrierlogo.png
          type: string
        carrierParcelRef:
          description: The reference number of the parcel by the carrier
          example: '84168117830018'
          maxLength: 120
          minLength: 1
          type: string
        carrierRef:
          description: the reference to the related carrier
          example: 9ddb3c80-30ec-42c3-a750-9612296402ca
          type: string
        carrierTrackingNumber:
          description: the tracking number of the parcel
          example: '84168117830018'
          type: string
        parcelRef:
          description: the reference to the related parcel
          example: 9ddb3c80-30ec-42c3-a750-9612296402ca
          type: string
        shipmentRef:
          description: the reference to the related shipment
          example: 9ddb3c80-30ec-42c3-a750-9612296402ca
          type: string
      type: object
      title: HandoverJobParcelInfoForCreation
      description: HandoverJobParcelInfoForCreation
    HandoverjobPatchActions:
      properties:
        actions:
          items:
            anyOf:
              - $ref: '#/components/schemas/ModifyHandoverjob'
              - $ref: '#/components/schemas/CancelHandoverjob'
          minItems: 1
          type: array
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          format: int64
          type: integer
      required:
        - version
        - actions
      type: object
      xml:
        name: HandoverjobPatchActions
      title: HandoverjobPatchActions
      description: HandoverjobPatchActions
    HandoverJobRecipientAddressFilter:
      properties:
        companyName:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by companyName
        email:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by email
        firstName:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by firstName
        lastName:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by lastName
      title: HandoverJobRecipientAddressFilter
      type: object
      description: HandoverJobRecipientAddressFilter
    HandoverJobReplaceAssignedUsersActionEnum:
      enum:
        - REPLACE_ASSIGNED_USERS
      type: string
      title: HandoverJobReplaceAssignedUsersActionEnum
      description: HandoverJobReplaceAssignedUsersActionEnum
    HandoverJobReplaceAssignedUsersActionParameter:
      additionalProperties: false
      description: Action to replace the assigned users.
      properties:
        assignedUsers:
          description: Assigned users for this entity
          items:
            anyOf:
              - $ref: '#/components/schemas/AssignedUserForCreationByName'
              - $ref: '#/components/schemas/AssignedUserForCreationById'
          type: array
        name:
          $ref: '#/components/schemas/HandoverJobReplaceAssignedUsersActionEnum'
        version:
          description: Version of the entity to be changed
          minimum: 0
          type: integer
      required:
        - name
        - version
        - assignedUsers
      title: HandoverJobReplaceAssignedUsersActionParameter
    HandoverJobSearchPayload:
      properties:
        after:
          deprecated: false
          description: >-
            The cursor to start after. The value is provided in the
            `pageInfo.endCursor` field of the response.
          type: string
        options:
          $ref: '#/components/schemas/SearchOptions'
        query:
          $ref: '#/components/schemas/HandoverJobSearchQuery'
        size:
          default: 20
          description: Number of items to return.
          maximum: 250
          minimum: 1
          type: number
        sort:
          description: Use for sorting the result.
          items:
            $ref: '#/components/schemas/HandoverJobSort'
          maxItems: 1
          minItems: 1
          type: array
        startAfterId:
          deprecated: true
          description: >-
            The ID to start after. Deprecated, use `after` with the value
            provided in `pageInfo.endCursor` instead.
          type: string
      required:
        - query
      title: HandoverJobSearchPayload
      type: object
      description: HandoverJobSearchPayload
    HandoverJobSearchQuery:
      properties:
        and:
          items:
            $ref: '#/components/schemas/HandoverJobSearchQuery'
          type: array
        anonymized:
          allOf:
            - $ref: '#/components/schemas/BooleanFilter'
          description: Search by anonymized
        assignedUsers:
          allOf:
            - $ref: '#/components/schemas/HandoverJobAssignedUsersListFilter'
          description: Nested list search by assignedUsers
        channel:
          allOf:
            - $ref: '#/components/schemas/HandoverJobChannelEnumEnumFilter'
          description: Search by channel
        facilityRef:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by facilityRef
        fullIdentifier:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by fullIdentifier
        handoverJobLineItems:
          allOf:
            - $ref: '#/components/schemas/HandoverJobHandoverJobLineItemsListFilter'
          description: Nested list search by handoverJobLineItems
        handoverJobParcelInfo:
          allOf:
            - $ref: '#/components/schemas/HandoverJobHandoverJobParcelInfoFilter'
          description: Nested search by handoverJobParcelInfo
        id:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by id
        invoiceAddress:
          allOf:
            - $ref: '#/components/schemas/HandoverJobInvoiceAddressFilter'
          description: Nested search by invoiceAddress
        or:
          items:
            $ref: '#/components/schemas/HandoverJobSearchQuery'
          type: array
        pickJobRef:
          allOf:
            - $ref: '#/components/schemas/StringEqFilter'
          description: Search by pickJobRef
        recipientAddress:
          allOf:
            - $ref: '#/components/schemas/HandoverJobRecipientAddressFilter'
          description: Nested search by recipientAddress
        shortIdentifier:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by shortIdentifier
        status:
          allOf:
            - $ref: '#/components/schemas/HandoverJobHandoverjobStatusEnumFilter'
          description: Search by status
        targetTime:
          allOf:
            - $ref: '#/components/schemas/DateFilter'
          description: Search by targetTime
        tenantOrderId:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by tenantOrderId
      title: HandoverJobSearchQuery
      type: object
      description: HandoverJobSearchQuery
    HandoverJobSort:
      properties:
        targetTime:
          enum:
            - ASC
            - DESC
          type: string
      title: HandoverJobSort
      type: object
      description: HandoverJobSort
    HandoverJobSplitLineItemsActionEnum:
      enum:
        - SPLIT_LINES_HANDOVER_JOB
      type: string
      title: HandoverJobSplitLineItemsActionEnum
      description: HandoverJobSplitLineItemsActionEnum
    HandoverJobSplitLineItemsActionParameter:
      additionalProperties: false
      properties:
        name:
          $ref: '#/components/schemas/HandoverJobSplitLineItemsActionEnum'
        splitLineItemsInfo:
          items:
            $ref: '#/components/schemas/HandoverJobSplitLineItemsInfo'
          type: array
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          type: integer
      required:
        - name
        - version
        - splitLineItemsInfo
      title: HandoverJobSplitLineItemsActionParameter
      type: object
      description: HandoverJobSplitLineItemsActionParameter
    HandoverJobSplitLineItemsInfo:
      additionalProperties: false
      properties:
        handedOverQuantity:
          description: The amount of articles that were handed over for this line item.
          example: 20
          format: int64
          minimum: 0
          type: integer
        lineItemId:
          description: references the id of the line item of a handover job
          type: string
        quantity:
          description: quantity of the specific item that has been ordered
          example: 21
          minimum: 1
          type: integer
      required:
        - lineItemId
        - quantity
        - handedOverQuantity
      type: object
      title: HandoverJobSplitLineItemsInfo
      description: HandoverJobSplitLineItemsInfo
    HandoverjobStatus:
      enum:
        - OPEN
        - HANDED_OVER
        - OBSOLETE
        - CANCELED
        - WAITING_FOR_INPUT
      type: string
      title: HandoverjobStatus
      description: HandoverjobStatus
    HandoverJobTagConfiguration:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
        - $ref: '#/components/schemas/TagConfiguration'
      properties:
        stickerConfiguration:
          $ref: '#/components/schemas/StickerConfiguration'
      title: HandoverJobTagConfiguration
      description: HandoverJobTagConfiguration
    HandoverJobWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          $ref: '#/components/schemas/Handoverjob'
      required:
        - payload
      type: object
      title: HandoverJobWebHookEvent
      description: HandoverJobWebHookEvent
    HandoverLineItem:
      additionalProperties: false
      allOf:
        - $ref: '#/components/schemas/MandatoryLineItem'
      properties:
        article:
          $ref: '#/components/schemas/HandoverLineItemArticle'
        handedOverQuantity:
          description: quantity of the specific item that has been handed over
          example: 20
          format: int64
          minimum: 0
          type: integer
        id:
          type: string
        originId:
          description: >-
            The id of the line item this line item was originated from, before
            any split has happened. This can be used to restore the ‘pre-split’
            status.
          example: df671041-10dd-4600-a2ff-e9ffe2556bba
          nullable: true
          type: string
        quantity:
          description: quantity of the specific item that has been provided for handover
          example: 21
          format: int64
          minimum: 1
          type: integer
        refused:
          items:
            $ref: '#/components/schemas/RefusedItem'
          type: array
        status:
          $ref: '#/components/schemas/HandoverLineItemStatus'
        stickers:
          items:
            $ref: '#/components/schemas/Sticker'
          type: array
        substituteLineItems:
          description: >-
            This part of the API is in Beta status. For details please check the
            <a
            href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
            target="_blank">api-release-life-cycle documentation</a>.<br /><br
            />
          items:
            $ref: '#/components/schemas/HandoverSubstituteLineItem'
          type: array
          x-badges:
            - color: orange
              label: BETA
        tags:
          items:
            $ref: '#/components/schemas/TagReference'
          type: array
      required:
        - id
        - article
        - quantity
        - handedOverQuantity
      title: HandoverLineItem
      description: HandoverLineItem
    HandoverLineItemArticle:
      allOf:
        - $ref: '#/components/schemas/AbstractArticle'
        - properties:
            attributes:
              items:
                $ref: '#/components/schemas/ArticleAttributeItem'
              maxItems: 40
              type: array
          type: object
      xml:
        name: HandoverLineItemArticle
      title: HandoverLineItemArticle
      description: HandoverLineItemArticle
    HandoverLineItemForCreation:
      allOf:
        - $ref: '#/components/schemas/MandatoryLineItemForCreation'
      properties:
        article:
          $ref: '#/components/schemas/HandoverLineItemArticle'
        handedOverQuantity:
          description: quantity of the specific item that has been handed over
          example: 20
          format: int64
          minimum: 0
          type: integer
        quantity:
          description: quantity of the specific item that has been provided for handover
          example: 21
          format: int64
          minimum: 1
          type: integer
        refused:
          items:
            $ref: '#/components/schemas/RefusedItem'
          type: array
        status:
          $ref: '#/components/schemas/HandoverLineItemStatus'
        stickers:
          items:
            $ref: '#/components/schemas/Sticker'
          type: array
        substituteLineItems:
          description: >-
            This part of the API is in Beta status. For details please check the
            <a
            href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
            target="_blank">api-release-life-cycle documentation</a>.<br /><br
            />
          items:
            $ref: '#/components/schemas/HandoverSubstituteLineItem'
          type: array
          x-badges:
            - color: orange
              label: BETA
        tags:
          items:
            $ref: '#/components/schemas/TagReference'
          type: array
      required:
        - quantity
        - article
        - handedOverQuantity
      type: object
      title: HandoverLineItemForCreation
      description: HandoverLineItemForCreation
    HandoverLineItemStatus:
      enum:
        - OPEN
        - CLOSED
      type: string
      title: HandoverLineItemStatus
      description: HandoverLineItemStatus
    HandoverSubstituteLineItem:
      allOf:
        - $ref: '#/components/schemas/SubstituteLineItem'
        - properties:
            handedOverQuantity:
              description: >-
                quantity of the specific item to substitute the original line
                item that has been handed over
              example: 20
              format: int64
              minimum: 0
              type: integer
            id:
              type: string
            quantity:
              description: >-
                quantity of the specific item to substitute the original line
                item that has been provided for handover
              example: 21
              format: int64
              minimum: 1
              type: integer
            refused:
              items:
                $ref: '#/components/schemas/RefusedItem'
              type: array
      required:
        - quantity
        - article
      title: HandoverSubstituteLineItem
      description: HandoverSubstituteLineItem
    HandoverSubstituteLineItemForUpdate:
      properties:
        id:
          type: string
        refused:
          items:
            $ref: '#/components/schemas/RefusedItemForUpdate'
          type: array
      required:
        - id
      title: HandoverSubstituteLineItemForUpdate
      description: HandoverSubstituteLineItemForUpdate
    HealthDependencyStatus:
      properties:
        name:
          description: Name of the component that is checked to be healthy
          example: database
          type: string
        status:
          $ref: '#/components/schemas/HealthStatus'
      required:
        - name
        - status
      type: object
      title: HealthDependencyStatus
      description: HealthDependencyStatus
    HealthResult:
      properties:
        dependencies:
          items:
            $ref: '#/components/schemas/HealthDependencyStatus'
          minItems: 1
          type: array
        status:
          $ref: '#/components/schemas/HealthStatus'
      required:
        - status
        - dependencies
      type: object
      title: HealthResult
      description: HealthResult
    HealthStatus:
      enum:
        - UP
        - DOWN
      type: string
      title: HealthStatus
      description: HealthStatus
    HermesCarrierConfiguration:
      allOf:
        - $ref: '#/components/schemas/CarrierConfiguration'
      description: Configuration of Hermes Carrier
      properties:
        alwaysDoTrackAndTrace:
          default: false
          type: boolean
      title: HermesCarrierConfiguration
    HermesCarrierCredentials:
      allOf:
        - $ref: '#/components/schemas/AbstractCarrierCredentials'
        - properties:
            password:
              description: Password to authenticate with the Hermes Api
              type: string
            username:
              description: Internal user to identify with the Hermes Api
              type: string
          required:
            - username
            - password
          type: object
      description: Hermes Credentials.
      title: HermesCarrierCredentials
      xml:
        name: HermesCarrierCredentials
    InboundAttachment:
      properties:
        created:
          format: date-time
          type: string
        id:
          type: string
        lastModified:
          format: date-time
          type: string
        version:
          type: number
      required:
        - id
        - version
      title: InboundAttachment
      type: object
      description: InboundAttachment
    InboundAttachmentForCreation:
      properties:
        content:
          description: Base64 encoded attachment file
          type: string
        fileName:
          description: File name of attachment
          type: string
      required:
        - fileName
        - content
      title: InboundAttachmentForCreation
      type: object
      description: InboundAttachmentForCreation
    InboundAttachmentLink:
      properties:
        inboundAttachmentRef:
          type: string
      required:
        - inboundAttachmentRef
      title: InboundAttachmentLink
      type: object
      description: InboundAttachmentLink
    InboundDeliveryFinishedPayload:
      properties:
        customAttributes:
          description: >-
            Attributes that can be added to this entity. These attributes
            **cannot** be used within fulfillment processes, but enable you to
            attach custom data from your systems to fulfillmenttools entities.
          nullable: true
          type: object
        facilityRef:
          type: string
        inboundProcessRef:
          type: string
        onHold:
          type: boolean
        purchaseOrder:
          $ref: '#/components/schemas/InboundProcessPurchaseOrder'
        receipts:
          items:
            $ref: '#/components/schemas/InboundReceipt'
          type: array
        status:
          enum:
            - OPEN
            - PARTIAL_DELIVERY
            - ON_HOLD
            - CLOSED
          type: string
        tenantInboundProcessRef:
          type: string
      required:
        - inboundProcessRef
        - facilityRef
        - status
        - onHold
        - receipts
      title: InboundDeliveryFinishedPayload
      type: object
      description: InboundDeliveryFinishedPayload
    InboundDeliveryFinishedWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          $ref: '#/components/schemas/InboundDeliveryFinishedPayload'
      required:
        - payload
      type: object
      title: InboundDeliveryFinishedWebHookEvent
      description: InboundDeliveryFinishedWebHookEvent
    InboundDeliveryOnHoldPayload:
      properties:
        customAttributes:
          description: >-
            Attributes that can be added to this entity. These attributes
            **cannot** be used within fulfillment processes, but enable you to
            attach custom data from your systems to fulfillmenttools entities.
          nullable: true
          type: object
        facilityRef:
          type: string
        inboundProcessRef:
          type: string
        onHold:
          type: boolean
        purchaseOrder:
          $ref: '#/components/schemas/InboundProcessPurchaseOrder'
        status:
          enum:
            - OPEN
            - PARTIAL_DELIVERY
            - ON_HOLD
            - CLOSED
          type: string
        tenantInboundProcessRef:
          type: string
      required:
        - inboundProcessRef
        - facilityRef
        - status
        - onHold
      title: InboundDeliveryOnHoldPayload
      type: object
      description: InboundDeliveryOnHoldPayload
    InboundDeliveryOnHoldWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          $ref: '#/components/schemas/InboundDeliveryOnHoldPayload'
      required:
        - payload
      type: object
      title: InboundDeliveryOnHoldWebHookEvent
      description: InboundDeliveryOnHoldWebHookEvent
    InboundDeliveryReceivedPayload:
      properties:
        customAttributes:
          description: >-
            Attributes that can be added to this entity. These attributes
            **cannot** be used within fulfillment processes, but enable you to
            attach custom data from your systems to fulfillmenttools entities.
          nullable: true
          type: object
        facilityRef:
          type: string
        inboundProcessRef:
          type: string
        onHold:
          type: boolean
        purchaseOrder:
          $ref: '#/components/schemas/InboundProcessPurchaseOrder'
        receipt:
          $ref: '#/components/schemas/InboundReceipt'
        status:
          enum:
            - OPEN
            - PARTIAL_DELIVERY
            - ON_HOLD
            - CLOSED
          type: string
        tenantInboundProcessRef:
          type: string
      required:
        - inboundProcessRef
        - facilityRef
        - status
        - onHold
        - receipt
      title: InboundDeliveryReceivedPayload
      type: object
      description: InboundDeliveryReceivedPayload
    InboundDeliveryReceivedWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          $ref: '#/components/schemas/InboundDeliveryReceivedPayload'
      required:
        - payload
      type: object
      title: InboundDeliveryReceivedWebHookEvent
      description: InboundDeliveryReceivedWebHookEvent
    InboundDeliveryReleasedPayload:
      properties:
        customAttributes:
          description: >-
            Attributes that can be added to this entity. These attributes
            **cannot** be used within fulfillment processes, but enable you to
            attach custom data from your systems to fulfillmenttools entities.
          nullable: true
          type: object
        facilityRef:
          type: string
        inboundProcessRef:
          type: string
        onHold:
          type: boolean
        purchaseOrder:
          $ref: '#/components/schemas/InboundProcessPurchaseOrder'
        status:
          enum:
            - OPEN
            - PARTIAL_DELIVERY
            - ON_HOLD
            - CLOSED
          type: string
        tenantInboundProcessRef:
          type: string
      required:
        - inboundProcessRef
        - facilityRef
        - status
        - onHold
      title: InboundDeliveryReleasedPayload
      type: object
      description: InboundDeliveryReleasedPayload
    InboundDeliveryReleasedWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          $ref: '#/components/schemas/InboundDeliveryReleasedPayload'
      required:
        - payload
      type: object
      title: InboundDeliveryReleasedWebHookEvent
      description: InboundDeliveryReleasedWebHookEvent
    InboundDeliverySingleReceiptPayload:
      properties:
        customAttributes:
          description: >-
            Attributes that can be added to this entity. These attributes
            **cannot** be used within fulfillment processes, but enable you to
            attach custom data from your systems to fulfillmenttools entities.
          nullable: true
          type: object
        facilityRef:
          type: string
        inboundProcessRef:
          type: string
        onHold:
          type: boolean
        purchaseOrder:
          $ref: '#/components/schemas/InboundProcessPurchaseOrder'
        receipt:
          $ref: '#/components/schemas/InboundReceipt'
        status:
          enum:
            - OPEN
            - PARTIAL_DELIVERY
            - ON_HOLD
            - CLOSED
          type: string
        tenantInboundProcessRef:
          type: string
      required:
        - inboundProcessRef
        - facilityRef
        - status
        - onHold
        - receipt
      title: InboundDeliverySingleReceiptPayload
      type: object
      description: InboundDeliverySingleReceiptPayload
    InboundLineItem:
      properties:
        customAttributes:
          description: >-
            Attributes that can be added to this entity. These attributes
            **cannot** be used within fulfillment processes, but enable you to
            attach custom data from your systems to fulfillmenttools entities.
          nullable: true
          type: object
        quantity:
          $ref: '#/components/schemas/Quantity'
        stockProperties:
          additionalProperties:
            type: string
          allOf:
            - $ref: '#/components/schemas/StockPropertyPreset'
        tenantArticleId:
          type: string
      required:
        - tenantArticleId
        - quantity
      title: InboundLineItem
      type: object
      description: InboundLineItem
    InboundProcess:
      properties:
        anonymized:
          description: >-
            Indicates the inbound process was anonymized acording to configured
            GDPR retention time.
          type: boolean
        created:
          format: date-time
          type: string
        customAttributes:
          description: >-
            Attributes that can be added to this entity. These attributes
            **cannot** be used within fulfillment processes, but enable you to
            attach custom data from your systems to fulfillmenttools entities.
          nullable: true
          type: object
        facilityRef:
          type: string
        id:
          type: string
        inboundDate:
          description: >-
            Aggregated dates from sources which advise incoming stock. Currently
            that is "purchaseOrder"
          items:
            format: date-time
            type: string
          type: array
        lastModified:
          format: date-time
          type: string
        onHold:
          description: >-
            Indicates if the inbound process is on hold and will not be
            processed further
          type: boolean
        origin:
          description: >-
            Aggregated origin data from sources which advise incoming stock.
            Currently that is just  "purchaseOrder"
          items:
            $ref: '#/components/schemas/InboundProcessOrigin'
          type: array
        purchaseOrder:
          $ref: '#/components/schemas/InboundProcessPurchaseOrder'
        receipts:
          items:
            $ref: '#/components/schemas/InboundReceipt'
          type: array
        scannableCodes:
          description: >-
            scannableCodes such as barcodes that are relevant in the
            inboundProcess, e.g. , barcode of the delivery note
          items:
            type: string
          type: array
        status:
          enum:
            - OPEN
            - PARTIAL_DELIVERY
            - ON_HOLD
            - CLOSED
          type: string
        tenantInboundProcessId:
          type: string
        version:
          type: number
      required:
        - facilityRef
        - id
        - version
        - created
        - lastModified
        - inboundDate
        - origin
        - anonymized
        - status
        - onHold
        - scannableCodes
        - receipts
      title: InboundProcess
      type: object
      description: InboundProcess
    InboundProcessForCreation:
      properties:
        customAttributes:
          description: >-
            Attributes that can be added to this entity. These attributes
            **cannot** be used within fulfillment processes, but enable you to
            attach custom data from your systems to fulfillmenttools entities.
          nullable: true
          type: object
        facilityRef:
          description: Facility in which the inbound process takes place
          type: string
        onHold:
          description: >-
            Indicates if the inbound process is on hold and will not be
            processed further
          type: boolean
        purchaseOrder:
          $ref: '#/components/schemas/InboundProcessPurchaseOrderForCreation'
        receipts:
          items:
            $ref: '#/components/schemas/InboundReceiptForCreation'
          maxItems: 200
          type: array
        scannableCodes:
          description: >-
            scannableCodes such as barcodes that are relevant in the
            inboundProcess, e.g. , barcode of the delivery note
          items:
            type: string
          type: array
        tenantInboundProcessId:
          description: >-
            Identifier of the process provided by the tenant system. It is
            recommended to be unique
          type: string
      required:
        - facilityRef
      title: InboundProcessForCreation
      type: object
      description: InboundProcessForCreation
    InboundProcessForPatch:
      properties:
        customAttributes:
          description: >-
            Attributes that can be added to this entity. These attributes
            **cannot** be used within fulfillment processes, but enable you to
            attach custom data from your systems to fulfillmenttools entities.
          nullable: true
          type: object
        onHold:
          description: >-
            Indicates if the inbound process is on hold and will not be
            processed further
          type: boolean
        scannableCodes:
          description: >-
            scannableCodes such as barcodes that are relevant in the
            inboundProcess, e.g. , barcode of the delivery note
          items:
            type: string
          type: array
        version:
          type: number
      required:
        - version
      title: InboundProcessForPatch
      type: object
      description: InboundProcessForPatch
    InboundProcessOrigin:
      properties:
        name:
          type: string
      title: InboundProcessOrigin
      type: object
      description: InboundProcessOrigin
    InboundProcessPaginatedResult:
      properties:
        inboundProcesses:
          items:
            $ref: '#/components/schemas/InboundProcess'
          type: array
        pageInfo:
          allOf:
            - $ref: '#/components/schemas/PageInfo'
          description: Pagination information for the search result.
        total:
          description: >-
            The total number of items matching the search criteria. Only filled,
            if withTotal is set to true in the search options.
          minimum: 0
          type: number
      required:
        - pageInfo
        - inboundProcesses
      title: InboundProcessPaginatedResult
      type: object
      description: InboundProcessPaginatedResult
    InboundProcessPurchaseOrder:
      properties:
        cancelled:
          deprecated: true
          description: >-
            This field is deprecated. Set the status to 'CANCELED' Set the
            purchaseOrder to 'cancelled'. No further deliveries will be
            expected. Already received goods are unaffected.
          type: boolean
        created:
          format: date-time
          type: string
        customAttributes:
          description: >-
            Attributes that can be added to this entity. These attributes
            **cannot** be used within fulfillment processes, but enable you to
            attach custom data from your systems to fulfillmenttools entities.
          nullable: true
          type: object
        id:
          type: string
        lastModified:
          format: date-time
          type: string
        orderDate:
          description: >-
            Time and date at which the order was placed. Note: This does not
            refer to the creation date of this entity in the system.
          format: date-time
          type: string
        requestedDate:
          allOf:
            - $ref: '#/components/schemas/InputRequestedDate'
          description: >-
            Time and date at which the order is expected to arrive. Use 'ASAP'
            for deliveries with unknown date, but be aware that some features
            will not include these orders.
        requestedItems:
          description: Line items which are expected to be delivered.
          items:
            $ref: '#/components/schemas/InboundLineItem'
          maxItems: 200
          type: array
        status:
          enum:
            - OPEN
            - CANCELED
          type: string
        supplier:
          $ref: '#/components/schemas/InboundProcessPurchaseOrderSupplier'
        transfer:
          allOf:
            - $ref: '#/components/schemas/InboundProcessPurchaseOrderTransfer'
          description: >-
            Includes data about transfer between different facilities in the
            tenant's network.
      required:
        - orderDate
        - requestedDate
        - requestedItems
        - status
        - cancelled
        - id
        - created
        - lastModified
      title: InboundProcessPurchaseOrder
      type: object
      description: InboundProcessPurchaseOrder
    InboundProcessPurchaseOrderFilter:
      properties:
        customAttributes:
          additionalProperties:
            anyOf:
              - $ref: '#/components/schemas/BooleanFilter'
              - $ref: '#/components/schemas/StringEqFilter'
              - $ref: '#/components/schemas/NumberEqFilter'
              - $ref: '#/components/schemas/DateFilter'
          description: Search by custom attributes
          type: object
        id:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by id
        orderDate:
          allOf:
            - $ref: '#/components/schemas/DateFilter'
          description: >-
            Search entries by orderDate. Applying a narrow and well-considered
            filter value is strongly recommended, as it can greatly improve
            response times, especially when working with large datasets.
        requestedDate:
          allOf:
            - $ref: >-
                #/components/schemas/InboundProcessPurchaseOrderRequestedDateFilter
          description: Nested search by requestedDate
        requestedItems:
          allOf:
            - $ref: >-
                #/components/schemas/InboundProcessPurchaseOrderRequestedItemsListFilter
          description: Nested list search by requestedItems
        status:
          allOf:
            - $ref: >-
                #/components/schemas/InboundProcessPurchaseOrderPurchaseOrderStatusEnumEnumFilter
          description: Search by status
        supplier:
          allOf:
            - $ref: '#/components/schemas/InboundProcessPurchaseOrderSupplierFilter'
          description: Nested search by supplier
        transfer:
          allOf:
            - $ref: '#/components/schemas/InboundProcessPurchaseOrderTransferFilter'
          description: Nested search by transfer
      title: InboundProcessPurchaseOrderFilter
      type: object
      description: InboundProcessPurchaseOrderFilter
    InboundProcessPurchaseOrderForCreation:
      properties:
        cancelled:
          deprecated: true
          description: >-
            This field is deprecated. Set the status to 'CANCELED' Set the
            purchaseOrder to 'cancelled'. No further deliveries will be
            expected. Already received goods are unaffected.
          type: boolean
        customAttributes:
          description: >-
            Attributes that can be added to this entity. These attributes
            **cannot** be used within fulfillment processes, but enable you to
            attach custom data from your systems to fulfillmenttools entities.
          nullable: true
          type: object
        orderDate:
          description: >-
            Time and date at which the order was placed. Note: This does not
            refer to the creation date of this entity in the system.
          format: date-time
          type: string
        requestedDate:
          allOf:
            - $ref: '#/components/schemas/InputRequestedDate'
          description: >-
            Time and date at which the order is expected to arrive. Use 'ASAP'
            for deliveries with unknown date, but be aware that some features
            will not include these orders.
        requestedItems:
          description: Line items which are expected to be delivered.
          items:
            $ref: '#/components/schemas/InboundLineItem'
          maxItems: 200
          type: array
        status:
          enum:
            - OPEN
            - CANCELED
          type: string
        supplier:
          $ref: '#/components/schemas/InboundProcessPurchaseOrderSupplier'
      required:
        - orderDate
        - requestedDate
        - requestedItems
      title: InboundProcessPurchaseOrderForCreation
      type: object
      description: InboundProcessPurchaseOrderForCreation
    InboundProcessPurchaseOrderForUpsert:
      properties:
        cancelled:
          deprecated: true
          description: >-
            This field is deprecated. Set the status to 'CANCELED' Set the
            purchaseOrder to 'cancelled'. No further deliveries will be
            expected. Already received goods are unaffected.
          type: boolean
        customAttributes:
          description: >-
            Attributes that can be added to this entity. These attributes
            **cannot** be used within fulfillment processes, but enable you to
            attach custom data from your systems to fulfillmenttools entities.
          nullable: true
          type: object
        orderDate:
          description: >-
            Time and date at which the order was placed. Note: This does not
            refer to the creation date of this entity in the system.
          format: date-time
          type: string
        requestedDate:
          allOf:
            - $ref: '#/components/schemas/InputRequestedDate'
          description: >-
            Time and date at which the order is expected to arrive. Use 'ASAP'
            for deliveries with unknown date, but be aware that some features
            will not include these orders.
        requestedItems:
          description: Line items which are expected to be delivered.
          items:
            $ref: '#/components/schemas/InboundLineItem'
          maxItems: 200
          type: array
        status:
          enum:
            - OPEN
            - CANCELED
          type: string
        supplier:
          $ref: '#/components/schemas/InboundProcessPurchaseOrderSupplier'
        version:
          type: number
      required:
        - orderDate
        - requestedDate
        - requestedItems
        - version
      title: InboundProcessPurchaseOrderForUpsert
      type: object
      description: InboundProcessPurchaseOrderForUpsert
    InboundProcessPurchaseOrderPurchaseOrderStatusEnumEnumFilter:
      properties:
        eq:
          description: Search by status
          enum:
            - OPEN
            - CANCELED
          type: string
        in:
          description: Search by status
          items:
            enum:
              - OPEN
              - CANCELED
            type: string
          type: array
        notEq:
          description: Search by status
          enum:
            - OPEN
            - CANCELED
          type: string
      title: InboundProcessPurchaseOrderPurchaseOrderStatusEnumEnumFilter
      type: object
      description: InboundProcessPurchaseOrderPurchaseOrderStatusEnumEnumFilter
    InboundProcessPurchaseOrderRequestedDateFilter:
      properties:
        type:
          allOf:
            - $ref: >-
                #/components/schemas/InboundProcessPurchaseOrderRequestedDateRequestedDateTypeEnumFilter
          description: Search by type
        value:
          allOf:
            - $ref: '#/components/schemas/DateFilter'
          description: Search by value
      title: InboundProcessPurchaseOrderRequestedDateFilter
      type: object
      description: InboundProcessPurchaseOrderRequestedDateFilter
    InboundProcessPurchaseOrderRequestedDateRequestedDateTypeEnumFilter:
      properties:
        eq:
          description: Search by type
          enum:
            - ASAP
            - TIME_POINT
          type: string
        in:
          description: Search by type
          items:
            enum:
              - ASAP
              - TIME_POINT
            type: string
          type: array
        notEq:
          description: Search by type
          enum:
            - ASAP
            - TIME_POINT
          type: string
      title: InboundProcessPurchaseOrderRequestedDateRequestedDateTypeEnumFilter
      type: object
      description: InboundProcessPurchaseOrderRequestedDateRequestedDateTypeEnumFilter
    InboundProcessPurchaseOrderRequestedItemsFilter:
      properties:
        customAttributes:
          additionalProperties:
            anyOf:
              - $ref: '#/components/schemas/BooleanFilter'
              - $ref: '#/components/schemas/StringEqFilter'
              - $ref: '#/components/schemas/NumberEqFilter'
              - $ref: '#/components/schemas/DateFilter'
          description: Search by custom attributes
          type: object
        stockProperties:
          additionalProperties:
            anyOf:
              - $ref: '#/components/schemas/StringFilter'
              - $ref: '#/components/schemas/KeyExistsFilter'
          description: Search by stockProperties
          type: object
        tenantArticleId:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by tenantArticleId
      title: InboundProcessPurchaseOrderRequestedItemsFilter
      type: object
      description: InboundProcessPurchaseOrderRequestedItemsFilter
    InboundProcessPurchaseOrderRequestedItemsListFilter:
      properties:
        contains:
          allOf:
            - $ref: >-
                #/components/schemas/InboundProcessPurchaseOrderRequestedItemsFilter
          description: Contains returns if at least one entry matches
      title: InboundProcessPurchaseOrderRequestedItemsListFilter
      type: object
      description: InboundProcessPurchaseOrderRequestedItemsListFilter
    InboundProcessPurchaseOrderSort:
      properties:
        requestedDate:
          $ref: '#/components/schemas/InboundProcessRequestedDateSort'
        supplier:
          $ref: '#/components/schemas/InboundProcessSupplierSort'
      title: InboundProcessPurchaseOrderSort
      type: object
      description: InboundProcessPurchaseOrderSort
    InboundProcessPurchaseOrderSupplier:
      properties:
        name:
          description: Name of the supplier.
          type: string
      title: InboundProcessPurchaseOrderSupplier
      type: object
      description: InboundProcessPurchaseOrderSupplier
    InboundProcessPurchaseOrderSupplierFilter:
      properties:
        name:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by name
      title: InboundProcessPurchaseOrderSupplierFilter
      type: object
      description: InboundProcessPurchaseOrderSupplierFilter
    InboundProcessPurchaseOrderTransfer:
      properties:
        id:
          type: string
      required:
        - id
      title: InboundProcessPurchaseOrderTransfer
      type: object
      description: InboundProcessPurchaseOrderTransfer
    InboundProcessPurchaseOrderTransferFilter:
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by id
      title: InboundProcessPurchaseOrderTransferFilter
      type: object
      description: InboundProcessPurchaseOrderTransferFilter
    InboundProcessReceiptBulkWebHookEvent:
      properties:
        payload:
          $ref: '#/components/schemas/InboundProcessReceiptBulkWebHookEventPayload'
      required:
        - payload
      title: InboundProcessReceiptBulkWebHookEvent
      type: object
      description: InboundProcessReceiptBulkWebHookEvent
    InboundProcessReceiptBulkWebHookEventPayload:
      properties:
        items:
          items:
            $ref: '#/components/schemas/InboundDeliverySingleReceiptPayload'
          type: array
      required:
        - items
      title: InboundProcessReceiptBulkWebHookEventPayload
      type: object
      description: InboundProcessReceiptBulkWebHookEventPayload
    InboundProcessReceiptsFilter:
      properties:
        customAttributes:
          additionalProperties:
            anyOf:
              - $ref: '#/components/schemas/BooleanFilter'
              - $ref: '#/components/schemas/StringEqFilter'
              - $ref: '#/components/schemas/NumberEqFilter'
              - $ref: '#/components/schemas/DateFilter'
          description: Search by custom attributes
          type: object
        id:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by id
        receivedDate:
          allOf:
            - $ref: '#/components/schemas/DateFilter'
          description: Search by receivedDate
        receivedItems:
          allOf:
            - $ref: >-
                #/components/schemas/InboundProcessReceiptsReceivedItemsListFilter
          description: Nested list search by receivedItems
        status:
          allOf:
            - $ref: >-
                #/components/schemas/InboundProcessReceiptsInboundReceiptStatusTypeEnumFilter
          description: Search by status
      title: InboundProcessReceiptsFilter
      type: object
      description: InboundProcessReceiptsFilter
    InboundProcessReceiptsInboundReceiptStatusTypeEnumFilter:
      properties:
        eq:
          description: Search by status
          enum:
            - OPEN
            - IN_PROGRESS
            - FINISHED
          type: string
        in:
          description: Search by status
          items:
            enum:
              - OPEN
              - IN_PROGRESS
              - FINISHED
            type: string
          type: array
        notEq:
          description: Search by status
          enum:
            - OPEN
            - IN_PROGRESS
            - FINISHED
          type: string
      title: InboundProcessReceiptsInboundReceiptStatusTypeEnumFilter
      type: object
      description: InboundProcessReceiptsInboundReceiptStatusTypeEnumFilter
    InboundProcessReceiptsListFilter:
      properties:
        contains:
          allOf:
            - $ref: '#/components/schemas/InboundProcessReceiptsFilter'
          description: Contains returns if at least one entry matches
      title: InboundProcessReceiptsListFilter
      type: object
      description: InboundProcessReceiptsListFilter
    InboundProcessReceiptsReceivedItemsFilter:
      properties:
        stockProperties:
          additionalProperties:
            anyOf:
              - $ref: '#/components/schemas/StringFilter'
              - $ref: '#/components/schemas/KeyExistsFilter'
          description: Search by stockProperties
          type: object
        tenantArticleId:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by tenantArticleId
      title: InboundProcessReceiptsReceivedItemsFilter
      type: object
      description: InboundProcessReceiptsReceivedItemsFilter
    InboundProcessReceiptsReceivedItemsListFilter:
      properties:
        contains:
          allOf:
            - $ref: '#/components/schemas/InboundProcessReceiptsReceivedItemsFilter'
          description: Contains returns if at least one entry matches
      title: InboundProcessReceiptsReceivedItemsListFilter
      type: object
      description: InboundProcessReceiptsReceivedItemsListFilter
    InboundProcessRequestedDateSort:
      properties:
        type:
          enum:
            - ASC
            - DESC
          type: string
        value:
          enum:
            - ASC
            - DESC
          type: string
      title: InboundProcessRequestedDateSort
      type: object
      description: InboundProcessRequestedDateSort
    InboundProcessSearchPayload:
      properties:
        after:
          deprecated: false
          description: >-
            The cursor to start after. The value is provided in the
            `pageInfo.endCursor` field of the response.
          type: string
        options:
          $ref: '#/components/schemas/SearchOptions'
        query:
          $ref: '#/components/schemas/InboundProcessSearchQuery'
        size:
          default: 20
          description: Number of items to return.
          maximum: 250
          minimum: 1
          type: number
        sort:
          description: Use for sorting the result.
          items:
            $ref: '#/components/schemas/InboundProcessSort'
          maxItems: 1
          minItems: 1
          type: array
        startAfterId:
          deprecated: true
          description: >-
            The ID to start after. Deprecated, use `after` with the value
            provided in `pageInfo.endCursor` instead.
          type: string
      required:
        - query
      title: InboundProcessSearchPayload
      type: object
      description: InboundProcessSearchPayload
    InboundProcessSearchQuery:
      properties:
        and:
          items:
            $ref: '#/components/schemas/InboundProcessSearchQuery'
          type: array
        customAttributes:
          additionalProperties:
            anyOf:
              - $ref: '#/components/schemas/BooleanFilter'
              - $ref: '#/components/schemas/StringEqFilter'
              - $ref: '#/components/schemas/NumberEqFilter'
              - $ref: '#/components/schemas/DateFilter'
          description: Search by custom attributes
          type: object
        facilityRef:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by facilityRef
        id:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by id
        inboundDate:
          allOf:
            - $ref: '#/components/schemas/DateListFilter'
          description: Search by inboundDate
        or:
          items:
            $ref: '#/components/schemas/InboundProcessSearchQuery'
          type: array
        purchaseOrder:
          allOf:
            - $ref: '#/components/schemas/InboundProcessPurchaseOrderFilter'
          description: Nested search by purchaseOrder
        receipts:
          allOf:
            - $ref: '#/components/schemas/InboundProcessReceiptsListFilter'
          description: Nested list search by receipts
        scannableCodes:
          allOf:
            - $ref: '#/components/schemas/StringListFilter'
          description: Search by scannableCodes
        status:
          allOf:
            - $ref: '#/components/schemas/InboundProcessStatusTypeEnumFilter'
          description: Search by status
        tenantInboundProcessId:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by tenantInboundProcessId
      title: InboundProcessSearchQuery
      type: object
      description: InboundProcessSearchQuery
    InboundProcessSort:
      properties:
        customAttributes:
          additionalProperties: true
          maxProperties: 1
          minProperties: 1
          type: object
        lastModified:
          enum:
            - ASC
            - DESC
          type: string
        po_created:
          enum:
            - ASC
            - DESC
          type: string
        purchaseOrder:
          $ref: '#/components/schemas/InboundProcessPurchaseOrderSort'
      title: InboundProcessSort
      type: object
      description: InboundProcessSort
    InboundProcessStatusTypeEnumFilter:
      properties:
        eq:
          description: Search by status
          enum:
            - OPEN
            - PARTIAL_DELIVERY
            - ON_HOLD
            - CLOSED
          type: string
        in:
          description: Search by status
          items:
            enum:
              - OPEN
              - PARTIAL_DELIVERY
              - ON_HOLD
              - CLOSED
            type: string
          type: array
        notEq:
          description: Search by status
          enum:
            - OPEN
            - PARTIAL_DELIVERY
            - ON_HOLD
            - CLOSED
          type: string
      title: InboundProcessStatusTypeEnumFilter
      type: object
      description: InboundProcessStatusTypeEnumFilter
    InboundProcessSupplierSort:
      properties:
        name:
          enum:
            - ASC
            - DESC
          type: string
      title: InboundProcessSupplierSort
      type: object
      description: InboundProcessSupplierSort
    InboundReceipt:
      properties:
        asnRef:
          description: enables mapping a receipt to one of the ASNs in this inbound process
          type: string
        comments:
          description: comments regarding the receipt itself
          items:
            $ref: '#/components/schemas/InboundReceiptComment'
          maxItems: 20
          type: array
        customAttributes:
          description: >-
            Attributes that can be added to this entity. These attributes
            **cannot** be used within fulfillment processes, but enable you to
            attach custom data from your systems to fulfillmenttools entities.
          nullable: true
          type: object
        id:
          type: string
        receivedDate:
          description: date-time of the arrival of the items in the facility
          format: date-time
          type: string
        receivedItems:
          description: list of item that arrived in the facility
          items:
            $ref: '#/components/schemas/InboundReceiptLineItem'
          maxItems: 200
          type: array
        status:
          description: >-
            status of this receipt, only receipts with status 'FINISHED' are
            booked. IN_PROGRESS can be used to save partial receipts.
          enum:
            - OPEN
            - IN_PROGRESS
            - FINISHED
          type: string
      required:
        - receivedDate
        - receivedItems
        - comments
        - id
      title: InboundReceipt
      type: object
      description: InboundReceipt
    InboundReceiptComment:
      properties:
        attachments:
          deprecated: true
          description: attachments such as photos or documents
          items:
            $ref: '#/components/schemas/InboundAttachmentLink'
          type: array
        content:
          description: text content of the comment
          type: string
        documentSetRef:
          description: >-
            reference to the documentSet that contains the attachments.
            Read-only field
          type: string
        id:
          type: string
        userRef:
          description: >-
            user that added the comment, is anonymized according to specified
            rules
          type: string
      required:
        - content
      title: InboundReceiptComment
      type: object
      description: InboundReceiptComment
    InboundReceiptCommentForCreation:
      properties:
        attachments:
          deprecated: true
          description: attachments such as photos or documents
          items:
            $ref: '#/components/schemas/InboundAttachmentLink'
          type: array
        content:
          description: text content of the comment
          type: string
        userRef:
          description: >-
            user that added the comment, is anonymized according to specified
            rules
          type: string
      required:
        - content
      title: InboundReceiptCommentForCreation
      type: object
      description: InboundReceiptCommentForCreation
    InboundReceiptCommentForUpdate:
      properties:
        attachments:
          deprecated: true
          description: attachments such as photos or documents
          items:
            $ref: '#/components/schemas/InboundAttachmentLink'
          type: array
        content:
          description: text content of the comment
          type: string
        id:
          type: string
        userRef:
          description: >-
            user that added the comment, is anonymized according to specified
            rules
          type: string
      required:
        - content
      title: InboundReceiptCommentForUpdate
      type: object
      description: InboundReceiptCommentForUpdate
    InboundReceiptForCreation:
      properties:
        asnRef:
          description: enables mapping a receipt to one of the ASNs in this inbound process
          type: string
        comments:
          description: comments regarding the receipt itself
          items:
            $ref: '#/components/schemas/InboundReceiptCommentForCreation'
          maxItems: 20
          type: array
        customAttributes:
          description: >-
            Attributes that can be added to this entity. These attributes
            **cannot** be used within fulfillment processes, but enable you to
            attach custom data from your systems to fulfillmenttools entities.
          nullable: true
          type: object
        receivedDate:
          description: date-time of the arrival of the items in the facility
          format: date-time
          type: string
        receivedItems:
          description: list of item that arrived in the facility
          items:
            $ref: '#/components/schemas/InboundReceiptLineItemForCreation'
          maxItems: 200
          type: array
        status:
          description: >-
            status of this receipt, only receipts with status 'FINISHED' are
            booked. IN_PROGRESS can be used to save partial receipts.
          enum:
            - OPEN
            - IN_PROGRESS
            - FINISHED
          type: string
      required:
        - receivedDate
        - receivedItems
        - comments
      title: InboundReceiptForCreation
      type: object
      description: InboundReceiptForCreation
    InboundReceiptForPatch:
      properties:
        asnRef:
          description: enables mapping a receipt to one of the ASNs in this inbound process
          type: string
        comments:
          description: comments regarding the receipt itself
          items:
            $ref: '#/components/schemas/InboundReceiptCommentForUpdate'
          maxItems: 20
          type: array
        customAttributes:
          description: >-
            Attributes that can be added to this entity. These attributes
            **cannot** be used within fulfillment processes, but enable you to
            attach custom data from your systems to fulfillmenttools entities.
          nullable: true
          type: object
        receivedDate:
          description: date-time of the arrival of the items in the facility
          format: date-time
          type: string
        receivedItems:
          description: list of item that arrived in the facility
          items:
            $ref: '#/components/schemas/InboundReceiptLineItemForUpdate'
          maxItems: 200
          type: array
        status:
          description: >-
            status of this receipt, only receipts with status 'FINISHED' are
            booked. IN_PROGRESS can be used to save partial receipts.
          enum:
            - OPEN
            - IN_PROGRESS
            - FINISHED
          type: string
        version:
          type: number
      required:
        - version
      title: InboundReceiptForPatch
      type: object
      description: InboundReceiptForPatch
    InboundReceiptForUpdate:
      properties:
        asnRef:
          description: enables mapping a receipt to one of the ASNs in this inbound process
          type: string
        comments:
          description: comments regarding the receipt itself
          items:
            $ref: '#/components/schemas/InboundReceiptCommentForUpdate'
          maxItems: 20
          type: array
        customAttributes:
          description: >-
            Attributes that can be added to this entity. These attributes
            **cannot** be used within fulfillment processes, but enable you to
            attach custom data from your systems to fulfillmenttools entities.
          nullable: true
          type: object
        receivedDate:
          description: date-time of the arrival of the items in the facility
          format: date-time
          type: string
        receivedItems:
          description: list of item that arrived in the facility
          items:
            $ref: '#/components/schemas/InboundReceiptLineItemForUpdate'
          maxItems: 200
          type: array
        status:
          description: >-
            status of this receipt, only receipts with status 'FINISHED' are
            booked. IN_PROGRESS can be used to save partial receipts.
          enum:
            - OPEN
            - IN_PROGRESS
            - FINISHED
          type: string
        version:
          type: number
      required:
        - receivedDate
        - receivedItems
        - comments
        - version
      title: InboundReceiptForUpdate
      type: object
      description: InboundReceiptForUpdate
    InboundReceiptJob:
      properties:
        expectedDate:
          $ref: '#/components/schemas/RequestedDate'
        facilityRef:
          type: string
        id:
          type: string
        inboundProcessRef:
          type: string
        items:
          $ref: '#/components/schemas/InboundLineItem'
        origin:
          $ref: '#/components/schemas/InboundReceiptJobOrigin'
        originReadableId:
          type: string
        originReadableName:
          type: string
        status:
          enum:
            - OPEN
            - PARTIAL_DELIVERY
            - ON_HOLD
            - CLOSED
          type: string
      required:
        - id
        - facilityRef
        - inboundProcessRef
        - status
        - expectedDate
        - items
        - origin
      title: InboundReceiptJob
      type: object
      description: InboundReceiptJob
    InboundReceiptJobOrigin:
      properties:
        name:
          type: string
      title: InboundReceiptJobOrigin
      type: object
      description: InboundReceiptJobOrigin
    InboundReceiptJobPaginatedResult:
      properties:
        inboundReceiptJobs:
          items:
            $ref: '#/components/schemas/InboundReceiptJob'
          type: array
        total:
          minimum: 0
          type: number
      required:
        - total
        - inboundReceiptJobs
      title: InboundReceiptJobPaginatedResult
      type: object
      description: InboundReceiptJobPaginatedResult
    InboundReceiptLineItem:
      properties:
        acceptedQuantity:
          allOf:
            - $ref: '#/components/schemas/Quantity'
          description: >-
            quantity of the stock that was accepted in this receipt. If its
            larger than 0, Stock will be created when this receipt is FINISHED.
        comments:
          description: comments regarding the receipt itself
          items:
            $ref: '#/components/schemas/InboundReceiptComment'
          maxItems: 20
          type: array
        customAttributes:
          description: >-
            Attributes that can be added to this entity. These attributes
            **cannot** be used within fulfillment processes, but enable you to
            attach custom data from your systems to fulfillmenttools entities.
          nullable: true
          type: object
        id:
          type: string
        rejectedQuantity:
          allOf:
            - $ref: '#/components/schemas/Quantity'
          description: >-
            quantity of the stock that was rejected in this receipt. If it is
            larger than 0, Stock will be created with condition "defective" when
            this receipt is FINISHED.
        stockProperties:
          additionalProperties:
            type: string
          allOf:
            - $ref: '#/components/schemas/StockPropertyPreset'
          description: stock properties that will be set on the created stock
        storageLocationRef:
          description: storage location on which stock was placed
          type: string
        tenantArticleId:
          description: tenantArticleId of the stock that was received
          type: string
      required:
        - tenantArticleId
        - acceptedQuantity
        - rejectedQuantity
        - comments
      title: InboundReceiptLineItem
      type: object
      description: InboundReceiptLineItem
    InboundReceiptLineItemForCreation:
      properties:
        acceptedQuantity:
          allOf:
            - $ref: '#/components/schemas/Quantity'
          description: >-
            quantity of the stock that was accepted in this receipt. If its
            larger than 0, Stock will be created when this receipt is FINISHED.
        comments:
          description: comments regarding the receipt itself
          items:
            $ref: '#/components/schemas/InboundReceiptCommentForCreation'
          maxItems: 20
          type: array
        customAttributes:
          description: >-
            Attributes that can be added to this entity. These attributes
            **cannot** be used within fulfillment processes, but enable you to
            attach custom data from your systems to fulfillmenttools entities.
          nullable: true
          type: object
        rejectedQuantity:
          allOf:
            - $ref: '#/components/schemas/Quantity'
          description: >-
            quantity of the stock that was rejected in this receipt. If it is
            larger than 0, Stock will be created with condition "defective" when
            this receipt is FINISHED.
        stockProperties:
          additionalProperties:
            type: string
          allOf:
            - $ref: '#/components/schemas/StockPropertyPreset'
          description: stock properties that will be set on the created stock
        storageLocationRef:
          description: storage location on which stock was placed
          type: string
        tenantArticleId:
          description: tenantArticleId of the stock that was received
          type: string
      required:
        - tenantArticleId
        - acceptedQuantity
        - rejectedQuantity
        - comments
      title: InboundReceiptLineItemForCreation
      type: object
      description: InboundReceiptLineItemForCreation
    InboundReceiptLineItemForUpdate:
      properties:
        acceptedQuantity:
          allOf:
            - $ref: '#/components/schemas/Quantity'
          description: >-
            quantity of the stock that was accepted in this receipt. If its
            larger than 0, Stock will be created when this receipt is FINISHED.
        comments:
          description: comments regarding the receival of this item
          items:
            $ref: '#/components/schemas/InboundReceiptCommentForUpdate'
          maxItems: 20
          type: array
        customAttributes:
          description: >-
            Attributes that can be added to this entity. These attributes
            **cannot** be used within fulfillment processes, but enable you to
            attach custom data from your systems to fulfillmenttools entities.
          nullable: true
          type: object
        id:
          type: string
        rejectedQuantity:
          allOf:
            - $ref: '#/components/schemas/Quantity'
          description: >-
            quantity of the stock that was rejected in this receipt. If it is
            larger than 0, Stock will be created with condition "defective" when
            this receipt is FINISHED.
        stockProperties:
          additionalProperties:
            type: string
          allOf:
            - $ref: '#/components/schemas/StockPropertyPreset'
          description: stock properties that will be set on the created stock
        storageLocationRef:
          description: storage location on which stock was placed
          type: string
        tenantArticleId:
          description: tenantArticleId of the stock that was received
          type: string
      required:
        - tenantArticleId
        - acceptedQuantity
        - rejectedQuantity
        - comments
      title: InboundReceiptLineItemForUpdate
      type: object
      description: InboundReceiptLineItemForUpdate
    InheritedServiceJobLineItem:
      additionalProperties: false
      allOf:
        - $ref: '#/components/schemas/MandatoryLineItem'
      properties:
        article:
          $ref: '#/components/schemas/ServiceJobLineItemArticle'
        id:
          type: string
        quantity:
          description: Quantity of the items
          example: 12
          minimum: 1
          type: integer
        serviceJobRef:
          type: string
      required:
        - id
        - quantity
        - article
        - serviceJobRef
      title: InheritedServiceJobLineItem
      description: InheritedServiceJobLineItem
    InputRequestedDate:
      properties:
        type:
          enum:
            - ASAP
            - TIME_POINT
          type: string
        value:
          format: date-time
          type: string
      required:
        - type
      title: InputRequestedDate
      type: object
      description: InputRequestedDate
    IntegerValidation:
      additionalProperties: false
      allOf:
        - $ref: '#/components/schemas/BaseValidation'
      description: Validate input as integer.
      properties:
        maxValue:
          type: number
        minValue:
          type: number
      title: IntegerValidation
      type: object
    InterFacilityConnection:
      additionalProperties: false
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        carrierKey:
          description: >-
            The key of the carrier that is used for this connection. References
            known and configured carriers in the system.
          example: DHL_V2
          type: string
        carrierName:
          description: The name of the carrier that is used for this connection.
          example: DHL
          type: string
        context:
          items:
            $ref: '#/components/schemas/InterFacilityConnectionContext'
          maxItems: 2000
          minItems: 0
          type: array
        customAttributes:
          additionalProperties: true
          description: >-
            Custom attributes that can be used to store additional information
            about the connection.
          type: object
        cutoffTimes:
          $ref: '#/components/schemas/CarrierCutoffTimes'
        fallbackCosts:
          items:
            $ref: '#/components/schemas/InterFacilityConnectionDeliveryCost'
          type: array
        fallbackTransitTime:
          $ref: '#/components/schemas/CarrierTransitTime'
        id:
          type: string
        nonDeliveryDays:
          items:
            $ref: '#/components/schemas/NonDeliveryDaysPerCountryAndProvince'
          type: array
        packagingUnitsByContexts:
          items:
            $ref: '#/components/schemas/PackagingUnitsByContext'
          maxItems: 2000
          minItems: 0
          type: array
        sourceFacilityRef:
          type: string
        target:
          oneOf:
            - $ref: '#/components/schemas/InterFacilityConnectionCustomerTarget'
            - $ref: >-
                #/components/schemas/InterFacilityConnectionManagedFacilityTarget
            - $ref: '#/components/schemas/InterFacilityConnectionSupplierTarget'
          discriminator:
            propertyName: type
            mapping:
              CUSTOMER: '#/components/schemas/InterFacilityConnectionCustomerTarget'
              MANAGED_FACILITY: >-
                #/components/schemas/InterFacilityConnectionManagedFacilityTarget
              SUPPLIER: '#/components/schemas/InterFacilityConnectionSupplierTarget'
      required:
        - id
        - sourceFacilityRef
        - target
      type: object
      xml:
        name: InterFacilityConnection
      title: InterFacilityConnection
      description: InterFacilityConnection
    InterFacilityConnectionBaseTarget:
      discriminator:
        propertyName: type
      properties:
        type:
          $ref: '#/components/schemas/ConnectionType'
      required:
        - type
      type: object
      xml:
        name: InterFacilityConnectionBaseTarget
      title: InterFacilityConnectionBaseTarget
      description: InterFacilityConnectionBaseTarget
    InterFacilityConnectionContext:
      additionalProperties: false
      properties:
        operator:
          $ref: '#/components/schemas/ContextOperator'
        type:
          $ref: '#/components/schemas/InterFacilityConnectionContextTypes'
        values:
          items:
            maxItems: 2000
            minItems: 0
            type: string
          type: array
      required:
        - type
        - values
      type: object
      title: InterFacilityConnectionContext
      description: InterFacilityConnectionContext
    InterFacilityConnectionContextTypes:
      enum:
        - FACILITY
        - FACILITY_GROUP
        - CATEGORY
        - TAG_REFERENCE
      type: string
      title: InterFacilityConnectionContextTypes
      description: InterFacilityConnectionContextTypes
    InterFacilityConnectionCustomerTarget:
      allOf:
        - $ref: '#/components/schemas/InterFacilityConnectionBaseTarget'
      type: object
      title: InterFacilityConnectionCustomerTarget
      description: InterFacilityConnectionCustomerTarget
    InterFacilityConnectionDeliveryCost:
      additionalProperties: false
      properties:
        currency:
          $ref: '#/components/schemas/CurrencyCode'
        decimalPlaces:
          description: Number of decimal places for the given currency
          example: 2
          minimum: 0
          type: integer
        deliveryCostCoefficient:
          $ref: '#/components/schemas/DeliverCostCoefficient'
        value:
          description: >-
            Value of operational cost of the facility. Value is configured in
            the smallest subunit, e.g. cents.
          example: 25000
          minimum: 0
          type: integer
      required:
        - value
        - currency
      type: object
      title: InterFacilityConnectionDeliveryCost
      description: InterFacilityConnectionDeliveryCost
    InterFacilityConnectionFallbackCost:
      additionalProperties: false
      properties:
        currency:
          $ref: '#/components/schemas/CurrencyCode'
        decimalPlaces:
          description: Number of decimal places for the given currency
          example: 2
          minimum: 0
          type: integer
        value:
          description: >-
            Value of operational cost of the facility. Value is configured in
            the smallest subunit, e.g. cents.
          example: 25000
          minimum: 0
          type: integer
      required:
        - value
        - currency
      type: object
      title: InterFacilityConnectionFallbackCost
      description: InterFacilityConnectionFallbackCost
    InterFacilityConnectionForCreation:
      properties:
        carrierKey:
          description: >-
            The key of the carrier that is used for this connection. References
            known and configured carriers in the system.
          example: DHL_V2
          type: string
        carrierName:
          description: The name of the carrier that is used for this connection.
          example: DHL
          type: string
        context:
          items:
            $ref: '#/components/schemas/InterFacilityConnectionContext'
          maxItems: 2000
          minItems: 0
          type: array
        customAttributes:
          additionalProperties: true
          description: >-
            Custom attributes that can be used to store additional information
            about the connection.
          type: object
        cutoffTimes:
          $ref: '#/components/schemas/CarrierCutoffTimes'
        fallbackCosts:
          items:
            $ref: '#/components/schemas/InterFacilityConnectionDeliveryCost'
          type: array
        fallbackTransitTime:
          $ref: '#/components/schemas/CarrierTransitTime'
        nonDeliveryDays:
          items:
            $ref: '#/components/schemas/NonDeliveryDaysPerCountryAndProvince'
          type: array
        packagingUnitsByContexts:
          items:
            $ref: '#/components/schemas/PackagingUnitsByContext'
          maxItems: 2000
          minItems: 0
          type: array
        type:
          $ref: '#/components/schemas/ConnectionType'
      required:
        - type
      type: object
      xml:
        name: InterFacilityConnectionForCreation
      title: InterFacilityConnectionForCreation
      description: InterFacilityConnectionForCreation
    InterFacilityConnectionForUpdate:
      properties:
        carrierKey:
          description: >-
            The key of the carrier that is used for this connection. References
            known and configured carriers in the system.
          example: DHL_V2
          type: string
        carrierName:
          description: The name of the carrier that is used for this connection.
          example: DHL
          type: string
        context:
          items:
            $ref: '#/components/schemas/InterFacilityConnectionContext'
          maxItems: 2000
          minItems: 0
          type: array
        customAttributes:
          additionalProperties: true
          description: >-
            Custom attributes that can be used to store additional information
            about the connection.
          type: object
        cutoffTimes:
          $ref: '#/components/schemas/CarrierCutoffTimes'
        fallbackCosts:
          items:
            $ref: '#/components/schemas/InterFacilityConnectionDeliveryCost'
          type: array
        fallbackTransitTime:
          $ref: '#/components/schemas/CarrierTransitTime'
        nonDeliveryDays:
          items:
            $ref: '#/components/schemas/NonDeliveryDaysPerCountryAndProvince'
          type: array
        packagingUnitsByContexts:
          items:
            $ref: '#/components/schemas/PackagingUnitsByContext'
          maxItems: 2000
          minItems: 0
          type: array
        type:
          $ref: '#/components/schemas/ConnectionType'
        version:
          type: number
      required:
        - version
        - type
      type: object
      xml:
        name: InterFacilityConnectionForUpdate
      title: InterFacilityConnectionForUpdate
      description: InterFacilityConnectionForUpdate
    InterFacilityConnectionManagedFacilityTarget:
      allOf:
        - $ref: '#/components/schemas/InterFacilityConnectionBaseTarget'
      properties:
        excludedFacilityGroupRefs:
          items:
            type: string
          type: array
        excludedFacilityRefs:
          items:
            type: string
          type: array
        facilityRef:
          type: string
      type: object
      title: InterFacilityConnectionManagedFacilityTarget
      description: InterFacilityConnectionManagedFacilityTarget
    InterFacilityConnections:
      additionalProperties: false
      properties:
        interFacilityConnections:
          items:
            $ref: '#/components/schemas/InterFacilityConnection'
          type: array
        total:
          description: Total number of entities found for this query
          example: 42
          type: integer
      required:
        - interFacilityConnections
        - total
      type: object
      xml:
        name: InterFacilityConnection
      title: InterFacilityConnections
      description: InterFacilityConnections
    InterFacilityConnectionSupplierTarget:
      allOf:
        - $ref: '#/components/schemas/InterFacilityConnectionBaseTarget'
      properties:
        excludedFacilityGroupRefs:
          items:
            type: string
          type: array
        excludedFacilityRefs:
          items:
            type: string
          type: array
        facilityRef:
          type: string
      type: object
      title: InterFacilityConnectionSupplierTarget
      description: InterFacilityConnectionSupplierTarget
    InterFacilityConnectionToCustomerForCreation:
      allOf:
        - $ref: '#/components/schemas/InterFacilityConnectionForCreation'
      properties:
        target:
          $ref: '#/components/schemas/InterFacilityConnectionCustomerTarget'
      required:
        - target
      type: object
      xml:
        name: InterFacilityConnectionToCustomerForCreation
      title: InterFacilityConnectionToCustomerForCreation
      description: InterFacilityConnectionToCustomerForCreation
    InterFacilityConnectionToCustomerForUpdate:
      allOf:
        - $ref: '#/components/schemas/InterFacilityConnectionForUpdate'
      properties:
        target:
          $ref: '#/components/schemas/InterFacilityConnectionCustomerTarget'
      required:
        - target
      type: object
      xml:
        name: InterFacilityConnectionToCustomerForUpdate
      title: InterFacilityConnectionToCustomerForUpdate
      description: InterFacilityConnectionToCustomerForUpdate
    InterFacilityConnectionToManagedFacilityForCreation:
      allOf:
        - $ref: '#/components/schemas/InterFacilityConnectionForCreation'
      properties:
        target:
          $ref: '#/components/schemas/InterFacilityConnectionManagedFacilityTarget'
      required:
        - target
      type: object
      xml:
        name: InterFacilityConnectionToManagedFacilityForCreation
      title: InterFacilityConnectionToManagedFacilityForCreation
      description: InterFacilityConnectionToManagedFacilityForCreation
    InterFacilityConnectionToManagedFacilityForUpdate:
      allOf:
        - $ref: '#/components/schemas/InterFacilityConnectionForUpdate'
      properties:
        target:
          $ref: '#/components/schemas/InterFacilityConnectionManagedFacilityTarget'
      required:
        - target
      type: object
      xml:
        name: InterFacilityConnectionToManagedFacilityForUpdate
      title: InterFacilityConnectionToManagedFacilityForUpdate
      description: InterFacilityConnectionToManagedFacilityForUpdate
    InterFacilityConnectionToSupplierForCreation:
      allOf:
        - $ref: '#/components/schemas/InterFacilityConnectionForCreation'
      properties:
        target:
          $ref: '#/components/schemas/InterFacilityConnectionSupplierTarget'
      required:
        - target
      type: object
      xml:
        name: InterFacilityConnectionToSupplierForCreation
      title: InterFacilityConnectionToSupplierForCreation
      description: InterFacilityConnectionToSupplierForCreation
    InterFacilityConnectionToSupplierForUpdate:
      allOf:
        - $ref: '#/components/schemas/InterFacilityConnectionForUpdate'
      properties:
        target:
          $ref: '#/components/schemas/InterFacilityConnectionSupplierTarget'
      required:
        - target
      type: object
      xml:
        name: InterFacilityConnectionToSupplierForUpdate
      title: InterFacilityConnectionToSupplierForUpdate
      description: InterFacilityConnectionToSupplierForUpdate
    InventoryArticle:
      properties:
        titleLocalized:
          $ref: '#/components/schemas/LocaleString'
        attributes:
          items:
            $ref: '#/components/schemas/ListingAttributeItem'
          type: array
        imageUrl:
          type: string
        tenantArticleId:
          type: string
        title:
          type: string
      required:
        - imageUrl
        - tenantArticleId
        - title
      title: InventoryArticle
      type: object
      description: InventoryArticle
    InventoryArticlePaginatedResult:
      properties:
        articles:
          items:
            $ref: '#/components/schemas/InventoryArticle'
          type: array
        pageInfo:
          $ref: '#/components/schemas/PageInfo'
        total:
          minimum: 0
          type: number
      required:
        - total
        - pageInfo
        - articles
      title: InventoryArticlePaginatedResult
      type: object
      description: InventoryArticlePaginatedResult
    InventoryAvailabilityTimeframe:
      properties:
        start:
          format: date-time
          type: string
      title: InventoryAvailabilityTimeframe
      type: object
      description: InventoryAvailabilityTimeframe
    InventoryAvailableUntilDefinition:
      properties:
        calculationBase:
          enum:
            - CREATION
            - EXPIRY
          type: string
        modifier:
          type: string
      required:
        - calculationBase
      title: InventoryAvailableUntilDefinition
      type: object
      description: InventoryAvailableUntilDefinition
    InventoryConfiguration:
      properties:
        isMixedStorage:
          type: boolean
        version:
          type: number
      required:
        - version
      title: InventoryConfiguration
      type: object
      description: InventoryConfiguration
    InventoryConfigurationForPatch:
      properties:
        isMixedStorage:
          nullable: true
          type: boolean
        version:
          type: number
      required:
        - version
      title: InventoryConfigurationForPatch
      type: object
      description: InventoryConfigurationForPatch
    InventoryFacilityConfiguration:
      properties:
        facilityRef:
          type: string
        id:
          type: string
        isMixedStorage:
          type: boolean
        outboundStockConfiguration:
          $ref: '#/components/schemas/OutboundStockConfiguration'
        version:
          type: number
      required:
        - id
        - version
        - facilityRef
      title: InventoryFacilityConfiguration
      type: object
      description: InventoryFacilityConfiguration
    InventoryFacilityConfigurationForPatch:
      properties:
        isMixedStorage:
          nullable: true
          type: boolean
        outboundStockConfiguration:
          $ref: '#/components/schemas/OutboundStockConfiguration'
        version:
          type: number
      required:
        - version
      title: InventoryFacilityConfigurationForPatch
      type: object
      description: InventoryFacilityConfigurationForPatch
    InventoryFacilityReferences:
      properties:
        facilityRef:
          type: string
        tenantFacilityId:
          type: string
      required:
        - facilityRef
      title: InventoryFacilityReferences
      type: object
      description: InventoryFacilityReferences
    InventoryFacilityStockChangedWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          items:
            $ref: '#/components/schemas/InventoryFacilityStockShape'
          type: array
      required:
        - payload
      type: object
      title: InventoryFacilityStockChangedWebHookEvent
      description: InventoryFacilityStockChangedWebHookEvent
    InventoryFacilityStockDeltaShape:
      properties:
        available:
          deprecated: true
          type: number
        availableForPicking:
          type: number
        availableForPickingDetails:
          $ref: '#/components/schemas/AvailableForPickingDetails'
        availableOnStock:
          type: number
        availableToPromise:
          deprecated: true
          type: number
        byTrait:
          $ref: '#/components/schemas/InventoryFacilityStockShapeByTrait'
        readyToPick:
          deprecated: true
          type: number
        reserved:
          type: number
        safetyStock:
          type: number
        stockCount:
          type: number
        stockOnHand:
          type: number
        totalAmount:
          type: number
      required:
        - totalAmount
        - reserved
        - safetyStock
        - available
        - byTrait
        - availableToPromise
        - readyToPick
        - availableForPicking
        - stockCount
        - availableOnStock
        - stockOnHand
        - availableForPickingDetails
      title: InventoryFacilityStockDeltaShape
      type: object
      description: InventoryFacilityStockDeltaShape
    InventoryFacilityStockShape:
      properties:
        available:
          deprecated: true
          description: >-
            This field is deprecated and replaced by new availability concepts.
            Please see
            https://docs.fulfillmenttools.com/api-docs/use-cases/inventory-management/global-inventory/availability
            for more information.
          type: number
        availableForPicking:
          type: number
        availableForPickingDetails:
          $ref: '#/components/schemas/AvailableForPickingDetails'
        availableOnStock:
          type: number
        availableToPromise:
          deprecated: true
          description: >-
            This field is deprecated and replaced by new availability concepts.
            Please see
            https://docs.fulfillmenttools.com/api-docs/use-cases/inventory-management/global-inventory/availability
            for more information.
          type: number
        byTrait:
          $ref: '#/components/schemas/InventoryFacilityStockShapeByTrait'
        changeReason:
          enum:
            - UNKNOWN
          type: string
        delta:
          $ref: '#/components/schemas/InventoryFacilityStockDeltaShape'
        facility:
          $ref: '#/components/schemas/InventoryFacilityReferences'
        facilityRef:
          type: string
        readyToPick:
          deprecated: true
          description: >-
            This field is deprecated and replaced by new availability concepts.
            Please see
            https://docs.fulfillmenttools.com/api-docs/use-cases/inventory-management/global-inventory/availability
            for more information.
          type: number
        reserved:
          type: number
        safetyStock:
          type: number
        staleReasons:
          items:
            $ref: '#/components/schemas/InventoryFacilityStockStaleReason'
          type: array
        stockOnHand:
          type: number
        tenantArticleId:
          type: string
        totalAmount:
          type: number
      required:
        - facilityRef
        - facility
        - tenantArticleId
        - totalAmount
        - reserved
        - safetyStock
        - available
        - byTrait
        - changeReason
        - availableToPromise
        - readyToPick
        - availableForPicking
        - availableForPickingDetails
        - delta
        - staleReasons
        - stockOnHand
        - availableOnStock
      title: InventoryFacilityStockShape
      type: object
      description: InventoryFacilityStockShape
    InventoryFacilityStockShapeByTrait:
      properties:
        ACCESSIBLE:
          type: number
        PICKABLE:
          type: number
      required:
        - PICKABLE
        - ACCESSIBLE
      title: InventoryFacilityStockShapeByTrait
      type: object
      description: InventoryFacilityStockShapeByTrait
    InventoryFacilityStockStaleReason:
      properties:
        reasons:
          items:
            type: string
          type: array
        timestamp:
          format: date-time
          type: string
      required:
        - timestamp
        - reasons
      title: InventoryFacilityStockStaleReason
      type: object
      description: InventoryFacilityStockStaleReason
    InventoryListingAttributeItem:
      properties:
        valueLocalized:
          additionalProperties:
            type: string
          description: >-
            Provides Localized values. The key is the locale, the value is the
            translation. See
            https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/localization#fallback-language-mechanism
          example:
            de_DE: Wert
            en_US: Value
            ru_RU: значение
          type: object
        keyLocalized:
          additionalProperties:
            type: string
          description: >-
            Provides Localized values. The key is the locale, the value is the
            translation. See
            https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/localization#fallback-language-mechanism
          example:
            de_DE: Wert
            en_US: Value
            ru_RU: значение
          type: object
        category:
          enum:
            - descriptive
            - miscellaneous
            - pickingSequence
            - customs
            - insurance
            - shop
            - dimensions
            - carrierService
            - salesPrice
          type: string
        key:
          type: string
        priority:
          type: number
        value:
          type: string
      required:
        - key
        - value
      title: InventoryListingAttributeItem
      type: object
      description: InventoryListingAttributeItem
    InventoryListingEventPayload:
      properties:
        titleLocalized:
          additionalProperties:
            type: string
          description: >-
            Provides Localized values. The key is the locale, the value is the
            translation. See
            https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/localization#fallback-language-mechanism
          example:
            de_DE: Wert
            en_US: Value
            ru_RU: значение
          type: object
        attributes:
          items:
            $ref: '#/components/schemas/InventoryListingAttributeItem'
          type: array
        availabilityTimeframe:
          $ref: '#/components/schemas/InventoryAvailabilityTimeframe'
        categoryRefs:
          items:
            type: string
          type: array
        created:
          format: date-time
          type: string
        currency:
          description: The currency of the price as an ISO 4217 code.
          enum:
            - AED
            - AFN
            - ALL
            - AMD
            - ANG
            - AOA
            - ARS
            - AUD
            - AWG
            - AZN
            - BAM
            - BBD
            - BDT
            - BGN
            - BHD
            - BIF
            - BMD
            - BND
            - BOB
            - BOV
            - BRL
            - BSD
            - BTN
            - BWP
            - BYN
            - BZD
            - CAD
            - CDF
            - CHE
            - CHF
            - CHW
            - CLF
            - CLP
            - CNY
            - COP
            - COU
            - CRC
            - CUC
            - CUP
            - CVE
            - CZK
            - DJF
            - DKK
            - DOP
            - DZD
            - EGP
            - ERN
            - ETB
            - EUR
            - FJD
            - FKP
            - GBP
            - GEL
            - GHS
            - GIP
            - GMD
            - GNF
            - GTQ
            - GYD
            - HKD
            - HNL
            - HTG
            - HUF
            - IDR
            - ILS
            - INR
            - IQD
            - IRR
            - ISK
            - JMD
            - JOD
            - JPY
            - KES
            - KGS
            - KHR
            - KMF
            - KPW
            - KRW
            - KWD
            - KYD
            - KZT
            - LAK
            - LBP
            - LKR
            - LRD
            - LSL
            - LYD
            - MAD
            - MDL
            - MGA
            - MKD
            - MMK
            - MNT
            - MOP
            - MRU
            - MUR
            - MVR
            - MWK
            - MXN
            - MXV
            - MYR
            - MZN
            - NAD
            - NGN
            - NIO
            - NOK
            - NPR
            - NZD
            - OMR
            - PAB
            - PEN
            - PGK
            - PHP
            - PKR
            - PLN
            - PYG
            - QAR
            - RON
            - RSD
            - RUB
            - RWF
            - SAR
            - SBD
            - SCR
            - SDG
            - SEK
            - SGD
            - SHP
            - SLE
            - SOS
            - SRD
            - SSP
            - STN
            - SVC
            - SYP
            - SZL
            - THB
            - TJS
            - TMT
            - TND
            - TOP
            - TRY
            - TTD
            - TWD
            - TZS
            - UAH
            - UGX
            - USD
            - USN
            - UYI
            - UYU
            - UYW
            - UZS
            - VED
            - VES
            - VND
            - VUV
            - WST
            - XAF
            - XAG
            - XAU
            - XBA
            - XBB
            - XBC
            - XBD
            - XCD
            - XDR
            - XOF
            - XPD
            - XPF
            - XPT
            - XSU
            - XTS
            - XUA
            - XXX
            - YER
            - ZAR
            - ZMW
            - ZWL
          type: string
        customAttributes:
          type: object
        facilityId:
          type: string
        id:
          type: string
        imageUrl:
          type: string
        lastModified:
          format: date-time
          type: string
        measurementUnitKey:
          type: string
        outOfStockBehaviour:
          enum:
            - BACKORDER
            - PREORDER
            - RESTOCK
            - PREORDER_AND_RESTOCK
          type: string
        outOfStockBehaviourByContexts:
          items:
            $ref: '#/components/schemas/InventoryOutOfStockBehaviourByContext'
          type: array
        outOfStockConfig:
          $ref: '#/components/schemas/InventoryOutOfStockConfig'
        price:
          type: number
        recordableAttributes:
          items:
            $ref: '#/components/schemas/InventoryRecordableAttribute'
          type: array
        scannableCodes:
          items:
            type: string
          type: array
        scanningRule:
          $ref: '#/components/schemas/InventoryScanningRuleConfiguration'
        status:
          enum:
            - ACTIVE
            - INACTIVE
          type: string
        stockAvailableUntil:
          $ref: '#/components/schemas/InventoryAvailableUntilDefinition'
        stockProperties:
          additionalProperties:
            $ref: '#/components/schemas/InventoryStockPropertyDefinition'
          type: object
        tenantArticleId:
          type: string
        title:
          type: string
        version:
          type: number
        weight:
          type: number
        tags:
          items:
            $ref: '#/components/schemas/InventoryTagReference'
          type: array
      required:
        - id
        - version
        - created
        - lastModified
        - facilityId
        - tenantArticleId
        - status
        - title
      title: InventoryListingEventPayload
      type: object
      description: InventoryListingEventPayload
    InventoryOutOfStockBehaviourByContext:
      properties:
        context:
          description: >-
            The context of the outOfStockBehaviour. This is used to determine
            the conditions under which the outOfStockBehaviour can be applied.
          items:
            $ref: '#/components/schemas/InventoryOutOfStockBehaviourContext'
          type: array
        outOfStockBehaviour:
          enum:
            - BACKORDER
            - PREORDER
            - RESTOCK
            - PREORDER_AND_RESTOCK
          type: string
        outOfStockConfig:
          $ref: '#/components/schemas/InventoryOutOfStockConfig'
        priority:
          description: >-
            This value gives the priority in the respective
            OutOfStockBehaviourByContexts. The lower the value the higher is the
            priority, e.g. priority 1 is higher than priority 10.
          type: number
      required:
        - outOfStockBehaviour
        - context
        - priority
      title: InventoryOutOfStockBehaviourByContext
      type: object
      description: InventoryOutOfStockBehaviourByContext
    InventoryOutOfStockBehaviourContext:
      properties:
        operator:
          enum:
            - NOT
          type: string
        type:
          enum:
            - FACILITY_GROUP
            - TAG_REFERENCE
          type: string
        values:
          description: >-
            The values of the context. This is used to determine the conditions
            under which the outOfStockBehaviour can be applied.
          items:
            type: string
          type: array
      required:
        - type
        - values
      title: InventoryOutOfStockBehaviourContext
      type: object
      description: InventoryOutOfStockBehaviourContext
    InventoryOutOfStockConfig:
      properties:
        preorder:
          $ref: '#/components/schemas/InventoryOutOfStockConfigPreorder'
        restock:
          $ref: '#/components/schemas/InventoryOutOfStockConfigRestock'
      title: InventoryOutOfStockConfig
      type: object
      description: InventoryOutOfStockConfig
    InventoryOutOfStockConfigPreorder:
      properties:
        availabilityTimeframe:
          $ref: '#/components/schemas/InventoryAvailabilityTimeframe'
      required:
        - availabilityTimeframe
      title: InventoryOutOfStockConfigPreorder
      type: object
      description: InventoryOutOfStockConfigPreorder
    InventoryOutOfStockConfigRestock:
      properties:
        restockableInDays:
          type: number
      required:
        - restockableInDays
      title: InventoryOutOfStockConfigRestock
      type: object
      description: InventoryOutOfStockConfigRestock
    InventoryRecordableAttribute:
      properties:
        keyLocalized:
          type: object
        recordingRule:
          type: string
        value:
          type: string
      required:
        - keyLocalized
        - recordingRule
      title: InventoryRecordableAttribute
      type: object
      description: InventoryRecordableAttribute
    InventoryScanningRuleConfiguration:
      properties:
        values:
          items:
            $ref: '#/components/schemas/InventoryScanningRuleValue'
          type: array
      title: InventoryScanningRuleConfiguration
      type: object
      description: InventoryScanningRuleConfiguration
    InventoryScanningRuleValue:
      properties:
        priority:
          type: number
        scanningRuleType:
          enum:
            - ARTICLE
            - LOCATION
          type: string
      required:
        - priority
        - scanningRuleType
      title: InventoryScanningRuleValue
      type: object
      description: InventoryScanningRuleValue
    InventoryStockBulkWebHookEvent:
      properties:
        payload:
          $ref: '#/components/schemas/InventoryStockWebHookEventPayload'
      required:
        - payload
      title: InventoryStockBulkWebHookEvent
      type: object
      description: InventoryStockBulkWebHookEvent
    InventoryStockDelta:
      properties:
        previousLocationRef:
          nullable: true
          type: string
        reserved:
          type: number
        stockCount:
          type: number
        value:
          type: number
      required:
        - previousLocationRef
        - value
        - reserved
        - stockCount
      title: InventoryStockDelta
      type: object
      description: InventoryStockDelta
    InventoryStockPropertyDefinition:
      properties:
        inputType:
          enum:
            - DATE
            - TEXT
          type: string
        required:
          type: boolean
      required:
        - inputType
        - required
      title: InventoryStockPropertyDefinition
      type: object
      description: InventoryStockPropertyDefinition
    InventoryStockWebHookEventPayload:
      properties:
        items:
          items:
            $ref: '#/components/schemas/InventoryStockWebHookEventPayloadItem'
          type: array
      required:
        - items
      title: InventoryStockWebHookEventPayload
      type: object
      description: InventoryStockWebHookEventPayload
    InventoryStockWebHookEventPayloadItem:
      properties:
        available:
          type: number
        availableUntil:
          description: >-
            defines until when a stock is included in the stock availability as
            available and used for routing
          format: date-time
          type: string
        conditions:
          description: |-
            Describes conditions of a stock
                *`DEFECTIVE` - stock is defective, not usable for customer orders
          items:
            enum:
              - DEFECTIVE
            type: string
          type: array
        created:
          format: date-time
          type: string
        customAttributes:
          description: >-
            Attributes that can be added to this entity. These attributes
            **cannot** be used within fulfillment processes, but enable you to
            attach custom data from your systems to fulfillmenttools entities.
          nullable: true
          type: object
        delta:
          $ref: '#/components/schemas/InventoryStockDelta'
        facility:
          $ref: '#/components/schemas/StockFacilityReferences'
        facilityRef:
          description: facility in which the stock is located
          type: string
        facilityWideReserved:
          deprecated: true
          type: number
        id:
          type: string
        lastModified:
          format: date-time
          type: string
        locationRef:
          description: location on which the stock is placed
          type: string
        properties:
          additionalProperties:
            type: string
          allOf:
            - $ref: '#/components/schemas/StockPropertyPreset'
          description: >-
            allow tracking of specific values such as expiry dates on a set of
            items. They should describe physical identifiable properties of the
            stock and are not meant to be used for metadata (see
            "customAttributes" for that).
        receiptDate:
          description: >-
            date-time when stock has entered the system, defaults to the
            creation date
          format: date-time
          type: string
        reserved:
          description: amount of this stock for customer orders
          type: number
        scannableCodes:
          description: scannableCodes such as barcodes that identify this stock
          items:
            type: string
          type: array
        scores:
          description: >-
            stock with a high score can used preferably over stock with a lower
            score in routing, depending on configuration. The score can
            represent different attributes of the stock like zone, storage
            location, expiry date or receipt date.
          items:
            type: string
          type: array
        serializedProperties:
          description: >-
            properties object serialized as JSON string, sorted alphabetically
            by key
          type: string
        tenantArticleId:
          description: tenantArticleId of the stock
          type: string
        tenantStockId:
          description: >-
            tenantStockId is an optional identifier for the stock in the tenant
            system.
          type: string
        traitConfig:
          description: >-
            defines the traits of the stock, overrules the storage location
            traits
          items:
            $ref: '#/components/schemas/StorageLocationTraitConfigEntry'
          type: array
        traits:
          description: >-
            provide information on how storage locations and stocks are to be
            handled in operational processes. Can only be set via
            storageLocation. 
          items:
            enum:
              - PICKABLE
              - ACCESSIBLE
              - KEEP_ON_ZERO
              - OUTBOUND
              - IN_MOTION
            type: string
          type: array
        value:
          format: int32
          minimum: 0
          type: integer
        version:
          type: number
      required:
        - tenantArticleId
        - value
        - reserved
        - facilityWideReserved
        - facilityRef
        - facility
        - available
        - id
        - version
        - created
        - lastModified
        - traits
        - serializedProperties
        - delta
      title: InventoryStockWebHookEventPayloadItem
      type: object
      description: InventoryStockWebHookEventPayloadItem
    InventoryTagReference:
      properties:
        id:
          type: string
        value:
          type: string
      required:
        - id
        - value
      title: InventoryTagReference
      type: object
      description: InventoryTagReference
    ItemReturn:
      additionalProperties: false
      properties:
        created:
          description: >-
            The date this entity was created at the platform. This value is
            generated by the service.
          example: 2020-02-03T08:45:51.525Z
          format: date-time
          type: string
        customAttributes:
          description: >-
            Attributes that can be added to the entity. These attributes cannot
            be used within fulfillment processes, but it could be useful to have
            the information carried here.
          type: object
        id:
          type: string
        lastModified:
          description: >-
            The date this entity was modified last. This value is generated by
            the service.
          example: 2020-02-03T09:45:51.525Z
          format: date-time
          type: string
        parcelRefs:
          items:
            description: references the parcel
            example: 672f3f72-b5d3-47c7-941c-9af5348e3cd7
            type: string
          type: array
        returnedLineItems:
          items:
            $ref: '#/components/schemas/ItemReturnLineItem'
          minItems: 1
          type: array
        returnFacilityRef:
          type: string
        scannableCodes:
          items:
            type: string
          type: array
        status:
          $ref: '#/components/schemas/ItemReturnStatus'
        tenantOrderId:
          type: string
      required:
        - id
        - status
        - returnedLineItems
        - returnFacilityRef
      title: ItemReturn
      description: ItemReturn
    ItemReturnActionsParameter:
      anyOf:
        - $ref: '#/components/schemas/AnnounceItemReturnActionParameter'
        - $ref: '#/components/schemas/OpenItemReturnActionParameter'
        - $ref: '#/components/schemas/StartItemReturnActionParameter'
        - $ref: '#/components/schemas/PauseItemReturnActionParameter'
        - $ref: '#/components/schemas/FinishItemReturnActionParameter'
        - $ref: '#/components/schemas/WaitForInputItemReturnActionParameter'
      title: ItemReturnActionsParameter
      description: ItemReturnActionsParameter
    ItemReturnForCreation:
      additionalProperties: false
      properties:
        returnedLineItems:
          items:
            $ref: '#/components/schemas/ItemReturnLineItemForCreation'
          minItems: 1
          type: array
        returnFacilityRef:
          type: string
        scannableCodes:
          items:
            type: string
          type: array
        status:
          $ref: '#/components/schemas/ItemReturnStatus'
        tenantOrderId:
          deprecated: true
          description: >-
            deprecated: will be automatically deducted from related
            itemReturnJob
          type: string
      required:
        - returnedLineItems
        - status
        - returnFacilityRef
      title: ItemReturnForCreation
      description: ItemReturnForCreation
    ItemReturnJob:
      additionalProperties: false
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        anonymized:
          description: Indicates if gdpr related data was anonymized
          example: false
          type: boolean
        consumerAddresses:
          items:
            $ref: '#/components/schemas/ConsumerAddress'
          type: array
        customAttributes:
          description: >-
            Attributes that can be added to the entity. These attributes cannot
            be used within fulfillment processes, but it could be useful to have
            the information carried here.
          type: object
        id:
          type: string
        itemReturns:
          items:
            $ref: '#/components/schemas/ItemReturn'
          minItems: 0
          type: array
        notReturnableLineItems:
          items:
            $ref: '#/components/schemas/ItemReturnJobLineItem'
          minItems: 0
          type: array
        originFacilityRefs:
          items:
            type: string
          type: array
        processRef:
          type: string
        returnableLineItems:
          items:
            $ref: '#/components/schemas/ItemReturnJobLineItem'
          minItems: 1
          type: array
        scannableCodes:
          items:
            type: string
          type: array
        shortId:
          description: >-
            A short identifier that helps assigning a item return job to a
            customer. This is automatically created during creation.
          example: AS12
          type: string
        status:
          $ref: '#/components/schemas/ItemReturnJobStatus'
        tenantOrderId:
          type: string
      required:
        - id
        - processRef
        - originFacilityRefs
        - status
        - consumerAddresses
        - returnableLineItems
        - itemReturns
      type: object
      title: ItemReturnJob
      description: ItemReturnJob
    ItemReturnJobActionsParameter:
      anyOf:
        - $ref: '#/components/schemas/StartItemReturnJobActionParameter'
        - $ref: '#/components/schemas/FinishItemReturnJobActionParameter'
        - $ref: '#/components/schemas/RestartItemReturnJobActionParameter'
        - $ref: >-
            #/components/schemas/ChangeLineItemsToNotReturnableInItemReturnJobActionParameter
        - $ref: >-
            #/components/schemas/ChangeLineItemsToReturnableInItemReturnJobActionParameter
      title: ItemReturnJobActionsParameter
      description: ItemReturnJobActionsParameter
    ItemReturnJobForCreation:
      additionalProperties: false
      properties:
        consumerAddresses:
          items:
            $ref: '#/components/schemas/ConsumerAddress'
          type: array
        customAttributes:
          description: >-
            Attributes that can be added to the entity. These attributes cannot
            be used within fulfillment processes, but it could be useful to have
            the information carried here.
          type: object
        notReturnableLineItems:
          items:
            $ref: '#/components/schemas/ItemReturnJobLineItemForCreation'
          minItems: 0
          type: array
        originFacilityRefs:
          items:
            type: string
          type: array
        processRef:
          type: string
        returnableLineItems:
          items:
            $ref: '#/components/schemas/ItemReturnJobLineItemForCreation'
          minItems: 0
          type: array
        scannableCodes:
          items:
            type: string
          type: array
        shortId:
          description: >-
            A short identifier that helps assigning a item return job to a
            customer. This is automatically created during creation.
          example: AS12
          type: string
        status:
          $ref: '#/components/schemas/ItemReturnJobStatus'
        tenantOrderId:
          type: string
      required:
        - originFacilityRefs
        - status
        - consumerAddresses
        - returnableLineItems
      type: object
      title: ItemReturnJobForCreation
      description: ItemReturnJobForCreation
    ItemReturnJobLineItem:
      additionalProperties: false
      allOf:
        - $ref: '#/components/schemas/ItemReturnJobLineItemForCreation'
      properties:
        globalLineItemId:
          description: >-
            This id is used to identify if this line item is related to the line
            item of other operational entities.
          type: string
        id:
          description: Generated identifier of this entity
          example: 611c860f-3f00-4b01-9f4c-64cdee38a30e
          type: string
        notReturnableItemsExists:
          deprecated: true
          description: Add items to notReturnableLineItems array in itemReturnJob instead.
          type: boolean
        recordableAttributes:
          items:
            $ref: '#/components/schemas/RecordableAttribute'
          nullable: true
          type: array
        returnable:
          description: Quantity of this line item that can be returned
          example: '7'
          minimum: 0
          type: number
        returned:
          description: Quantity of this line item that has been returned
          example: '5'
          minimum: 0
          type: number
        serviceJobRefs:
          description: >-
            refs of the service jobs that altered this line item during the
            workflow
          items:
            type: string
          type: array
      required:
        - id
        - article
        - delivered
        - returned
        - returnable
      title: ItemReturnJobLineItem
      description: ItemReturnJobLineItem
    ItemReturnJobLineItemArticle:
      allOf:
        - $ref: '#/components/schemas/AbstractArticle'
        - properties:
            attributes:
              items:
                $ref: '#/components/schemas/ArticleAttributeItem'
              type: array
            prices:
              description: >-
                Deprecated: Use attributes with keys: 'valuePerUnit', 'currency'
                and 'numberOfDecimalPlaces'
              items:
                $ref: '#/components/schemas/ArticlePrice'
              type: array
          type: object
      xml:
        name: PickLineItemArticle
      title: ItemReturnJobLineItemArticle
      description: ItemReturnJobLineItemArticle
    ItemReturnJobLineItemForCreation:
      additionalProperties: false
      properties:
        article:
          $ref: '#/components/schemas/ItemReturnJobLineItemArticle'
        customAttributes:
          description: >-
            Attributes that can be added to the entity. These attributes cannot
            be used within fulfillment processes, but it could be useful to have
            the information carried here.
          type: object
        delivered:
          description: Quantity of this line item that has been delivered
          example: '7'
          minimum: 1
          type: number
        globalLineItemId:
          description: >-
            This id is used to identify if this line item is related to the line
            item of other operational entities.
          type: string
        notReturnableItemsExists:
          deprecated: true
          description: Add items to notReturnableLineItems array in itemReturnJob instead.
          type: boolean
        recordableAttributes:
          items:
            $ref: '#/components/schemas/RecordableAttributeForCreation'
          nullable: true
          type: array
        scannableCodes:
          description: Codes that can be used for scanning this line item
          items:
            type: string
          type: array
        serviceJobRefs:
          description: >-
            refs of the service jobs that altered this line item during the
            workflow
          items:
            type: string
          type: array
      required:
        - article
        - delivered
      title: ItemReturnJobLineItemForCreation
      description: ItemReturnJobLineItemForCreation
    ItemReturnJobs:
      properties:
        itemReturnJobsWithSearchPaths:
          items:
            $ref: '#/components/schemas/ItemReturnJobWithSearchPaths'
          type: array
        total:
          description: Total number of found entities for this query
          example: 42
          type: integer
      type: object
      title: ItemReturnJobs
      description: ItemReturnJobs
    ItemReturnJobStatus:
      enum:
        - OPEN
        - IN_PROGRESS
        - FINISHED
        - CANCELED
      type: string
      title: ItemReturnJobStatus
      description: ItemReturnJobStatus
    ItemReturnJobWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          $ref: '#/components/schemas/ItemReturnJob'
      required:
        - payload
      type: object
      title: ItemReturnJobWebHookEvent
      description: ItemReturnJobWebHookEvent
    ItemReturnJobWithSearchPaths:
      additionalProperties: false
      allOf:
        - $ref: '#/components/schemas/ItemReturnJob'
      properties:
        searchPaths:
          items:
            type: string
          minItems: 0
          type: array
      type: object
      title: ItemReturnJobWithSearchPaths
      description: ItemReturnJobWithSearchPaths
    ItemReturnLineItem:
      additionalProperties: false
      properties:
        itemConditionLocalized:
          $ref: '#/components/schemas/LocaleString'
        customAttributes:
          description: >-
            Attributes that can be added to the entity. These attributes cannot
            be used within fulfillment processes, but it could be useful to have
            the information carried here.
          type: object
        id:
          example: a69006ba-7100-4b4d-a610-1ca28016a4eb
          type: string
        itemCondition:
          example: Damaged
          type: string
        itemConditionComment:
          example: Upper corner damaged
          minLength: 1
          type: string
        itemReturnJobLineItemRefs:
          items:
            example: a69006ba-7100-4b4d-a610-1ca28016a4eb
            type: string
          type: array
        reasons:
          items:
            $ref: '#/components/schemas/ItemReturnLineItemReason'
          type: array
        recordableAttributes:
          items:
            $ref: '#/components/schemas/RecordableAttribute'
          nullable: true
          type: array
        refund:
          $ref: '#/components/schemas/ReturnedLineItemRefund'
        scannedCodes:
          items:
            type: string
          type: array
        status:
          $ref: '#/components/schemas/ItemReturnLineItemStatus'
        tenantArticleId:
          example: a69006ba-7100-4b4d-a610-1ca28016a4eb
          type: string
      required:
        - id
        - status
        - itemReturnJobLineItemRefs
        - tenantArticleId
      title: ItemReturnLineItem
      description: ItemReturnLineItem
    ItemReturnLineItemForCreation:
      additionalProperties: false
      properties:
        itemConditionLocalized:
          $ref: '#/components/schemas/LocaleString'
        customAttributes:
          description: >-
            Attributes that can be added to the entity. These attributes cannot
            be used within fulfillment processes, but it could be useful to have
            the information carried here.
          type: object
        itemConditionComment:
          example: Upper corner damaged
          minLength: 1
          type: string
        itemReturnJobLineItemRef:
          description: id of the item return job line item that is returned
          example: a69006ba-7100-4b4d-a610-1ca28016a4eb
          type: string
        reasons:
          items:
            $ref: '#/components/schemas/ItemReturnLineItemReason'
          type: array
        recordableAttributes:
          items:
            $ref: '#/components/schemas/RecordableAttributeForCreation'
          nullable: true
          type: array
        scannedCodes:
          items:
            type: string
          type: array
        status:
          $ref: '#/components/schemas/ItemReturnLineItemStatus'
        tenantArticleId:
          example: a69006ba-7100-4b4d-a610-1ca28016a4eb
          type: string
      required:
        - itemReturnJobLineItemRef
        - status
      title: ItemReturnLineItemForCreation
      description: ItemReturnLineItemForCreation
    ItemReturnLineItemForUpdate:
      additionalProperties: false
      properties:
        itemReturnJobVersion:
          description: version of the overlaying itemReturnJob
          example: 42
          type: number
        refund:
          $ref: '#/components/schemas/ReturnedLineItemRefund'
        status:
          $ref: '#/components/schemas/ItemReturnLineItemStatus'
      required:
        - itemReturnJobVersion
      title: ItemReturnLineItemForUpdate
      description: ItemReturnLineItemForUpdate
    ItemReturnLineItemReason:
      additionalProperties: false
      properties:
        reasonLocalized:
          $ref: '#/components/schemas/LocaleString'
        comment:
          example: Upper corner damaged
          minLength: 1
          type: string
        reason:
          description: Translated reasonLocalized
          type: string
      required:
        - reasonLocalized
      title: ItemReturnLineItemReason
      description: ItemReturnLineItemReason
    ItemReturnLineItemStatus:
      enum:
        - OPEN
        - IN_PROGRESS
        - WAITING_FOR_INPUT
        - REJECTED
        - ACCEPTED
        - CANCELED
      type: string
      title: ItemReturnLineItemStatus
      description: ItemReturnLineItemStatus
    ItemReturns:
      properties:
        itemReturns:
          items:
            $ref: '#/components/schemas/ItemReturnsWithSearchPaths'
          type: array
        totalCount:
          description: Total number of found entities for this query
          example: 42
          type: integer
      required:
        - itemReturns
        - totalCount
      type: object
      title: ItemReturns
      description: ItemReturns
    ItemReturnSortOptions:
      enum:
        - ITEM_RETURN_LAST_MODIFIED_ASC
        - ITEM_RETURN_LAST_MODIFIED_DESC
        - ITEM_RETURN_CREATED_ASC
        - ITEM_RETURN_CREATED_DESC
      type: string
      title: ItemReturnSortOptions
      description: ItemReturnSortOptions
    ItemReturnStatus:
      enum:
        - ANNOUNCED
        - OPEN
        - IN_PROGRESS
        - PAUSED
        - FINISHED
        - WAITING_FOR_INPUT
      type: string
      title: ItemReturnStatus
      description: ItemReturnStatus
    ItemReturnsWithSearchPaths:
      additionalProperties: false
      allOf:
        - $ref: '#/components/schemas/ItemReturn'
      properties:
        searchPaths:
          items:
            type: string
          type: array
      required:
        - searchPaths
      title: ItemReturnsWithSearchPaths
      description: ItemReturnsWithSearchPaths
    ItemsFulfillabilityConstraintType:
      allOf:
        - $ref: '#/components/schemas/AbstractFulfillabilityConstraintType'
      properties:
        type:
          enum:
            - ITEMS
          type: string
        value:
          $ref: '#/components/schemas/FulfillabilityItemsConstraintValue'
      type: object
      title: ItemsFulfillabilityConstraintType
      description: ItemsFulfillabilityConstraintType
    ItemsRequiredEnum:
      enum:
        - MANDATORY
        - NONE
      type: string
      title: ItemsRequiredEnum
      description: ItemsRequiredEnum
    KeyExistsFilter:
      properties:
        exists:
          description: Search all entities which have or do not have this key defined
          type: boolean
      title: KeyExistsFilter
      type: object
      description: KeyExistsFilter
    LastDomainEntityStatusItem:
      description: >-
        An object holding the last DomainStatus of a given entity and its
        corresponding domain.
      properties:
        domain:
          $ref: '#/components/schemas/DomainType'
          description: The domain of the entity that caused the status change.
        entityId:
          description: The entity id
          type: string
        status:
          $ref: '#/components/schemas/DomainStatus'
          description: The status of the entity.
      required:
        - domain
        - status
        - entityId
      type: object
      title: LastDomainEntityStatusItem
    LatestPickingStart:
      allOf:
        - $ref: '#/components/schemas/PickingStartBase'
      properties:
        latestPickingStartDate:
          example: 2020-02-03T08:45:50.525Z
          format: date-time
          type: string
      required:
        - latestPickingStartDate
      type: object
      title: LatestPickingStart
      description: LatestPickingStart
    LatestPickingStartForDecisionLog:
      properties:
        carrierRef:
          type: string
        latestPickingStartDate:
          example: 2020-02-03T08:45:50.525Z
          format: date-time
          type: string
        lpsCalculationHints:
          description: '@deprecated, use hints'
          items:
            type: string
          type: array
        targetTime:
          example: 2020-02-03T08:45:50.525Z
          format: date-time
          type: string
      type: object
      title: LatestPickingStartForDecisionLog
      description: LatestPickingStartForDecisionLog
    LineItem:
      properties:
        article:
          description: information about the lineItem
          type: object
        customAttributes:
          description: >-
            Attributes that can be added to the lineItem. These attributes
            cannot be used within fulfillment processes, but it could be useful
            to have the information carried here.
          type: object
        globalLineItemId:
          description: >-
            This id is used to identify if this line item is related to the line
            item of other operational entities.
          type: string
        id:
          description: id of the recordable attribute
          example: 17ebfdfb-e1b4-4913-9962-3aef2b49f16f
          type: string
        quantity:
          description: The quantity of the lineItem
          type: number
        recordableAttributes:
          description: >-
            Customizable information about the lineItem that can be set during
            the process.
          items:
            $ref: '#/components/schemas/RecordableAttribute'
          type: array
        scannableCodes:
          description: Codes that can be used for scanning this lineItem
          items:
            type: string
          type: array
      required:
        - id
      title: LineItem
      type: object
      description: LineItem
    LineItemArticle:
      properties:
        titleLocalized:
          allOf:
            - $ref: '#/components/schemas/LocaleString'
          description: The translations for the title of the product
        attributes:
          description: >-
            Attributes are used in the fulfillmenttools platform in order to
            impose a certain degree of customization to a process, such as
            improving the appearance in the platform and clients. Details about
            usage can be found <a
            href=\"https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/customization-via-attributes">here</a>
          items:
            $ref: '#/components/schemas/ArticleAttributeItem'
          type: array
        customAttributes:
          deprecated: true
          description: 'deprecated: use customAttributes on lineItem instead.'
          nullable: true
          type: object
        imageUrl:
          description: >-
            A web link to a picture of this article. Please make sure that no
            authentication is required to fetch the image!
          type: string
        tenantArticleId:
          description: This is a reference to an article number
          example: '4711'
          type: string
        title:
          description: The title of the product
          example: Cologne Water
          type: string
        weight:
          description: weight value is in gram
          minimum: 0
          type: number
      required:
        - title
        - tenantArticleId
      title: LineItemArticle
      type: object
      description: LineItemArticle
    LineItemForCreation:
      properties:
        article:
          description: information about the lineItem
          type: object
        customAttributes:
          description: >-
            Attributes that can be added to the lineItem. These attributes
            cannot be used within fulfillment processes, but it could be useful
            to have the information carried here.
          type: object
        globalLineItemId:
          description: >-
            This id is used to identify if this line item is related to the line
            item of other operational entities.
          type: string
        quantity:
          description: The quantity of the lineItem
          type: number
        recordableAttributes:
          description: >-
            Customizable information about the lineItem that can be set during
            the process.
          items:
            $ref: '#/components/schemas/RecordableAttributeForCreation'
          type: array
        scannableCodes:
          description: Codes that can be used for scanning this lineItem
          items:
            type: string
          type: array
      title: LineItemForCreation
      type: object
      description: LineItemForCreation
    LinkedConfiguration:
      properties:
        ref:
          type: string
        rel:
          type: string
      type: object
      title: LinkedConfiguration
      description: LinkedConfiguration
    LinkedServiceJobs:
      additionalProperties: false
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        facilityRef:
          description: Id linked Facility from the includes service jobs
          example: cdb1dfc4-8361-4ba9-b3c2-33a6f2fc8d05
          type: string
        fullIdentifier:
          description: >-
            Full identifier of the service job. Using the full name of the
            customer when created from an order.
          example: 240429_lorem-42
          type: string
        id:
          example: 9a14e183-ff86-4b6e-a2dc-eb4c7e312ab1
          type: string
        includedServiceJobLinkIds:
          description: searchable field of all included service job link ids
          items:
            example: cdb1dfc4-8361-4ba9-b3c2-33a6f2fc8d05
            type: string
          minItems: 1
          type: array
        includedServiceJobRefs:
          description: searchable field of all included service job ids
          items:
            example: cdb1dfc4-8361-4ba9-b3c2-33a6f2fc8d05
            type: string
          minItems: 1
          type: array
        operativeProcessRef:
          type: string
        processRef:
          description: >-
            ProcessRef of the added ServiceJobs. All Service Jobs need to be
            part of the same process
          example: 9a14e183-ff86-4b6e-a2dc-eb4c7e312ab1
          type: string
        serviceJobLinks:
          items:
            $ref: '#/components/schemas/ServiceJobLink'
          minItems: 1
          type: array
        status:
          $ref: '#/components/schemas/LinkedServiceJobsStatus'
        targetTime:
          format: date-time
          type: string
        usersModificationHistory:
          items:
            $ref: '#/components/schemas/UserModificationHistory'
          type: array
      required:
        - id
        - serviceJobLinks
        - processRef
        - facilityRef
        - includedServiceJobLinkIds
        - includedServiceJobRefs
        - status
        - targetTime
      title: LinkedServiceJobs
      description: LinkedServiceJobs
    LinkedServiceJobsFilterChannel:
      enum:
        - COLLECT
        - SHIPPING
      type: string
      xml:
        name: LinkedServiceJobsFilterChannel
      title: LinkedServiceJobsFilterChannel
      description: LinkedServiceJobsFilterChannel
    LinkedServiceJobsForCreation:
      additionalProperties: false
      properties:
        fullIdentifier:
          description: >-
            Full identifier of the service job. Using the full name of the
            customer when created from an order.
          example: 240429_lorem-42
          type: string
        operativeProcessRef:
          type: string
        serviceJobLinks:
          items:
            $ref: '#/components/schemas/ServiceJobLinkForCreation'
          minItems: 1
          type: array
        status:
          $ref: '#/components/schemas/LinkedServiceJobsStatus'
      required:
        - serviceJobLinks
      title: LinkedServiceJobsForCreation
      description: LinkedServiceJobsForCreation
    LinkedServiceJobsOrderBy:
      description: Attribute to order linked service jobs by
      enum:
        - LAST_MODIFIED_ASC
        - LAST_MODIFIED_DESC
        - TARGET_TIME_ASC
        - TARGET_TIME_DESC
      type: string
      xml:
        name: LinkedServiceJobsOrderBy
      title: LinkedServiceJobsOrderBy
    LinkedServiceJobsPaginatedResult:
      properties:
        linkedServiceJobs:
          items:
            $ref: '#/components/schemas/LinkedServiceJobs'
          type: array
        pageInfo:
          allOf:
            - $ref: '#/components/schemas/PageInfo'
          description: Pagination information for the search result.
        total:
          description: >-
            The total number of items matching the search criteria. Only filled,
            if withTotal is set to true in the search options.
          minimum: 0
          type: number
      required:
        - pageInfo
        - linkedServiceJobs
      title: LinkedServiceJobsPaginatedResult
      type: object
      description: LinkedServiceJobsPaginatedResult
    LinkedServiceJobsResult:
      additionalProperties: false
      properties:
        linkedServiceJobs:
          items:
            $ref: '#/components/schemas/LinkedServiceJobsWithSearchPaths'
          type: array
        total:
          minimum: 0
          type: object
      required:
        - total
        - linkedServiceJobs
      type: object
      title: LinkedServiceJobsResult
      description: LinkedServiceJobsResult
    LinkedServiceJobsSearchPayload:
      properties:
        after:
          deprecated: false
          description: >-
            The cursor to start after. The value is provided in the
            `pageInfo.endCursor` field of the response.
          type: string
        options:
          $ref: '#/components/schemas/SearchOptions'
        query:
          $ref: '#/components/schemas/LinkedServiceJobsSearchQuery'
        size:
          default: 20
          description: Number of items to return.
          maximum: 250
          minimum: 1
          type: number
        sort:
          description: Use for sorting the result.
          items:
            $ref: '#/components/schemas/LinkedServiceJobsSort'
          maxItems: 1
          minItems: 1
          type: array
        startAfterId:
          deprecated: true
          description: >-
            The ID to start after. Deprecated, use `after` with the value
            provided in `pageInfo.endCursor` instead.
          type: string
      required:
        - query
      title: LinkedServiceJobsSearchPayload
      type: object
      description: LinkedServiceJobsSearchPayload
    LinkedServiceJobsSearchQuery:
      properties:
        additionalInformation:
          allOf:
            - $ref: '#/components/schemas/StringListFilter'
          description: Search by additionalInformation
        and:
          items:
            $ref: '#/components/schemas/LinkedServiceJobsSearchQuery'
          type: array
        articleTitles:
          allOf:
            - $ref: '#/components/schemas/StringListFilter'
          description: Search by articleTitles
        channel:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by channel
        consumerName:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by consumerName
        facilityRef:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by facilityRef
        id:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by id
        invoiceAddress:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by invoiceAddress
        lastModified:
          allOf:
            - $ref: '#/components/schemas/DateFilter'
          description: Search by lastModified
        linkedServiceJobRef:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by linkedServiceJobRef
        or:
          items:
            $ref: '#/components/schemas/LinkedServiceJobsSearchQuery'
          type: array
        serviceName:
          allOf:
            - $ref: '#/components/schemas/StringListFilter'
          description: Search by serviceName
        shippingAddress:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by shippingAddress
        status:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by status
        targetTime:
          allOf:
            - $ref: '#/components/schemas/DateFilter'
          description: Search by targetTime
        tenantOrderId:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by tenantOrderId
        usersModificationHistory:
          allOf:
            - $ref: >-
                #/components/schemas/LinkedServiceJobsUsersModificationHistoryListFilter
          description: Nested list search by usersModificationHistory
      title: LinkedServiceJobsSearchQuery
      type: object
      description: LinkedServiceJobsSearchQuery
    LinkedServiceJobsSort:
      properties:
        lastModified:
          enum:
            - ASC
            - DESC
          type: string
        targetTime:
          enum:
            - ASC
            - DESC
          type: string
      title: LinkedServiceJobsSort
      type: object
      description: LinkedServiceJobsSort
    LinkedServiceJobsStatus:
      enum:
        - OPEN
        - IN_PROGRESS
        - FINISHED
        - CANCELLED
        - OBSOLETE
        - NOT_READY
      type: string
      title: LinkedServiceJobsStatus
      description: LinkedServiceJobsStatus
    LinkedServiceJobsUsersModificationHistoryFilter:
      properties:
        username:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by username
      title: LinkedServiceJobsUsersModificationHistoryFilter
      type: object
      description: LinkedServiceJobsUsersModificationHistoryFilter
    LinkedServiceJobsUsersModificationHistoryListFilter:
      properties:
        contains:
          allOf:
            - $ref: >-
                #/components/schemas/LinkedServiceJobsUsersModificationHistoryFilter
          description: Contains returns if at least one entry matches
      title: LinkedServiceJobsUsersModificationHistoryListFilter
      type: object
      description: LinkedServiceJobsUsersModificationHistoryListFilter
    LinkedServiceJobsWithSearchPaths:
      additionalProperties: false
      allOf:
        - $ref: '#/components/schemas/LinkedServiceJobs'
      properties:
        searchPaths:
          items:
            type: string
          type: array
      required:
        - searchPaths
      title: LinkedServiceJobsWithSearchPaths
      description: LinkedServiceJobsWithSearchPaths
    Listing:
      allOf:
        - $ref: '#/components/schemas/ListingForCreation'
        - $ref: '#/components/schemas/VersionedResource'
        - properties:
            facilityId:
              description: This is a reference to a facility
              example: '4711'
              type: string
            id:
              example: fsfdsf87fsd
              type: string
            partialStocks:
              deprecated: true
              description: >-
                This part of the API is deprecated. For details please check the
                <a
                href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
                target="_blank">api-release-life-cycle documentation</a>.<br
                /><br />@deprecated This field is deprecated since 11th of
                September 2023. Use /api/stocks endpoints instead.
              items:
                $ref: '#/components/schemas/PartialStock'
              type: array
            scannableCodes:
              items:
                description: Codes, that identify the article
                type: string
              type: array
            status:
              enum:
                - ACTIVE
                - INACTIVE
              type: string
            stockinformation:
              $ref: '#/components/schemas/StockInformation'
              deprecated: true
              description: >-
                This part of the API is deprecated. For details please check the
                <a
                href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
                target="_blank">api-release-life-cycle documentation</a>.<br
                /><br />@deprecated This field is deprecated since 11th of
                September 2023. Use /api/stocks endpoints instead.
          required:
            - status
            - facilityId
            - id
          type: object
      xml:
        name: Listing
      title: Listing
      description: Listing
    ListingAttributeItem:
      allOf:
        - $ref: '#/components/schemas/ArticleAttributeItem'
      properties:
        valueLocalized:
          $ref: '#/components/schemas/LocaleString'
        keyLocalized:
          $ref: '#/components/schemas/LocaleString'
      title: ListingAttributeItem
      description: ListingAttributeItem
    ListingAvailabilityTimeframeFilter:
      properties:
        start:
          allOf:
            - $ref: '#/components/schemas/DateFilter'
          description: Search by start
      title: ListingAvailabilityTimeframeFilter
      type: object
      description: ListingAvailabilityTimeframeFilter
    ListingBulkOperationResult:
      properties:
        listing:
          $ref: '#/components/schemas/Listing'
        status:
          $ref: '#/components/schemas/BulkOperationResultStatus'
      required:
        - listing
        - status
      type: object
      title: ListingBulkOperationResult
      description: ListingBulkOperationResult
    ListingBulkUpsertPayload:
      properties:
        listings:
          description: >-
            List of listings to be upserted in bulk. Number of entries times
            selectors must not exceed 25.
          discriminator:
            mapping:
              MULTI_SELECTOR: '#/components/schemas/ListingForBulkUpsertBySelector'
              SINGLE_FACILITY: '#/components/schemas/ListingForBulkUpsertByFacility'
            propertyName: targetingStrategy
          items:
            oneOf:
              - $ref: '#/components/schemas/ListingForBulkUpsertBySelector'
              - $ref: '#/components/schemas/ListingForBulkUpsertByFacility'
          minItems: 1
          type: array
      required:
        - listings
      title: ListingBulkUpsertPayload
      type: object
      description: ListingBulkUpsertPayload
    ListingBulkUpsertResponse:
      properties:
        listings:
          description: Listings upsert operations that were successfully upserted.
          items:
            $ref: '#/components/schemas/ListingBulkUpsertSuccess'
          type: array
        summary:
          allOf:
            - $ref: '#/components/schemas/BulkUpsertSummary'
          description: Summary of the operations.
      required:
        - summary
        - listings
      title: ListingBulkUpsertResponse
      type: object
      description: ListingBulkUpsertResponse
    ListingBulkUpsertSuccess:
      properties:
        result:
          allOf:
            - $ref: '#/components/schemas/Listing'
          description: The resulting entity.
        status:
          description: Indicates whether the operation created or updated the entity.
          enum:
            - CREATED
            - UPDATED
            - UNCHANGED
          type: string
      required:
        - status
        - result
      title: ListingBulkUpsertSuccess
      type: object
      description: ListingBulkUpsertSuccess
    ListingBulkWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          $ref: '#/components/schemas/ListingWebHookEventPayload'
      required:
        - payload
      title: ListingBulkWebHookEvent
      type: object
      description: ListingBulkWebHookEvent
    ListingFacilitySelector:
      properties:
        facility:
          description: >-
            Selector for the facility. Either a facility reference or a tenant
            facility ID must be provided.
          oneOf:
            - $ref: '#/components/schemas/FacilityRefSelector'
            - $ref: '#/components/schemas/TenantFacilityIdSelector'
        version:
          description: >-
            Optional version of the facility. Must be provided for existing
            facilities. Leave empty for new facilities.
          type: number
      required:
        - facility
      title: ListingFacilitySelector
      type: object
      description: ListingFacilitySelector
    ListingForBulkUpsertByFacility:
      properties:
        titleLocalized:
          $ref: '#/components/schemas/LocaleString'
        attributes:
          items:
            $ref: '#/components/schemas/ListingAttributeItem'
          maxItems: 40
          type: array
        categoryRefs:
          description: References to categories the listing belongs to.
          items:
            type: string
          maxItems: 10
          type: array
        currency:
          allOf:
            - $ref: '#/components/schemas/CurrencyCode'
          description: >-
            The currency of the price as an ISO 4217 code. Attention - Routing
            currently does not convert between different currencies. Don't use
            multiple currencies when using price ratings in order routing.
          example: EUR
          nullable: true
        customAttributes:
          description: >-
            Attributes that can be added to the listing. These attributes
            **cannot** be used within fulfillment processes, but enable you to
            attach custom data from your systems to fulfillmenttools entities.
          nullable: true
          type: object
        facility:
          description: >-
            Selector for the facility. Either a facility reference or a tenant
            facility ID must be provided.
          oneOf:
            - $ref: '#/components/schemas/FacilityRefSelector'
            - $ref: '#/components/schemas/TenantFacilityIdSelector'
        imageUrl:
          description: >-
            A web link to a picture of this article. Please make sure that no
            authentication is required to fetch the image!
          type: string
        legal:
          $ref: '#/components/schemas/ListingLegal'
        measurementUnitKey:
          description: Identifier for items unit of measurement.
          example: liter
          type: string
        outOfStockBehaviour:
          $ref: '#/components/schemas/OutOfStockBehaviour'
        outOfStockConfig:
          allOf:
            - $ref: '#/components/schemas/OutOfStockConfig'
          description: >-
            The outOfStockConfig is in Alpha status. For details please check
            the api-release-life-cycle documentation.
        price:
          example: 1200
          type: number
        scannableCodes:
          description: Codes, that identify the article
          items:
            type: string
          type: array
        scanningRule:
          $ref: '#/components/schemas/ScanningRuleConfiguration'
        status:
          enum:
            - ACTIVE
            - INACTIVE
          type: string
        stockAvailableUntil:
          $ref: '#/components/schemas/AvailableUntilDefinition'
        stockProperties:
          additionalProperties:
            $ref: '#/components/schemas/StockPropertyDefinition'
          type: object
        targetingStrategy:
          description: >-
            Targeting strategy for this bulk upsert entry - determines how
            target facilities are specified.
          enum:
            - MULTI_SELECTOR
            - SINGLE_FACILITY
          example: SINGLE_FACILITY
          type: string
        tenantArticleId:
          description: This is a reference to an article Id
          example: '4711'
          minLength: 1
          type: string
        title:
          description: a title describing the article
          example: Adidas Superstar
          type: string
        version:
          description: >-
            Optional version of the facility. Must be provided for existing
            facilities.
          type: number
        weight:
          minimum: 0
          type: number
        tags:
          items:
            $ref: '#/components/schemas/TagReference'
          minItems: 0
          type: array
      required:
        - tenantArticleId
        - title
        - targetingStrategy
        - facility
      title: ListingForBulkUpsertByFacility
      type: object
      description: ListingForBulkUpsertByFacility
    ListingForBulkUpsertBySelector:
      properties:
        titleLocalized:
          $ref: '#/components/schemas/LocaleString'
        attributes:
          items:
            $ref: '#/components/schemas/ListingAttributeItem'
          maxItems: 40
          type: array
        categoryRefs:
          description: References to categories the listing belongs to.
          items:
            type: string
          maxItems: 10
          type: array
        currency:
          allOf:
            - $ref: '#/components/schemas/CurrencyCode'
          description: >-
            The currency of the price as an ISO 4217 code. Attention - Routing
            currently does not convert between different currencies. Don't use
            multiple currencies when using price ratings in order routing.
          example: EUR
          nullable: true
        customAttributes:
          description: >-
            Attributes that can be added to the listing. These attributes
            **cannot** be used within fulfillment processes, but enable you to
            attach custom data from your systems to fulfillmenttools entities.
          nullable: true
          type: object
        imageUrl:
          description: >-
            A web link to a picture of this article. Please make sure that no
            authentication is required to fetch the image!
          type: string
        legal:
          $ref: '#/components/schemas/ListingLegal'
        measurementUnitKey:
          description: Identifier for items unit of measurement.
          example: liter
          type: string
        outOfStockBehaviour:
          $ref: '#/components/schemas/OutOfStockBehaviour'
        outOfStockConfig:
          allOf:
            - $ref: '#/components/schemas/OutOfStockConfig'
          description: >-
            The outOfStockConfig is in Alpha status. For details please check
            the api-release-life-cycle documentation.
        price:
          example: 1200
          type: number
        scannableCodes:
          description: Codes, that identify the article
          items:
            type: string
          type: array
        scanningRule:
          $ref: '#/components/schemas/ScanningRuleConfiguration'
        selector:
          description: >-
            Facility selectors for bulk operations. Add one or more selectors to
            specify the facilities for the listings.
          items:
            $ref: '#/components/schemas/ListingFacilitySelector'
          minItems: 1
          type: array
        status:
          enum:
            - ACTIVE
            - INACTIVE
          type: string
        stockAvailableUntil:
          $ref: '#/components/schemas/AvailableUntilDefinition'
        stockProperties:
          additionalProperties:
            $ref: '#/components/schemas/StockPropertyDefinition'
          type: object
        targetingStrategy:
          description: >-
            Targeting strategy for this bulk upsert entry - determines how
            target facilities are specified.
          enum:
            - MULTI_SELECTOR
            - SINGLE_FACILITY
          example: MULTI_SELECTOR
          type: string
        tenantArticleId:
          description: This is a reference to an article Id
          example: '4711'
          minLength: 1
          type: string
        title:
          description: a title describing the article
          example: Adidas Superstar
          type: string
        weight:
          minimum: 0
          type: number
        tags:
          items:
            $ref: '#/components/schemas/TagReference'
          minItems: 0
          type: array
      required:
        - tenantArticleId
        - title
        - targetingStrategy
        - selector
      title: ListingForBulkUpsertBySelector
      type: object
      description: ListingForBulkUpsertBySelector
    ListingForCreation:
      properties:
        titleLocalized:
          $ref: '#/components/schemas/LocaleString'
        attributes:
          items:
            $ref: '#/components/schemas/ListingAttributeItem'
          maxItems: 40
          type: array
        availabilityTimeframe:
          $ref: '#/components/schemas/AvailabilityTimeframe'
          deprecated: true
          description: >-
            @deprecated This property (for OutOfStockBehaviour.BACKORDER) is
            deprecated since 26th of February 2025.
        categoryRefs:
          description: References to categories the listing belongs to.
          items:
            type: string
          maxItems: 10
          type: array
        currency:
          allOf:
            - $ref: '#/components/schemas/CurrencyCode'
          description: >-
            The currency of the price as an ISO 4217 code. Attention - Routing
            currently does not convert between different currencies. Don't use
            multiple currencies when using price ratings in order routing.
          example: EUR
          nullable: true
        customAttributes:
          description: >-
            Attributes that can be added to the listing. These attributes
            **cannot** be used within fulfillment processes, but enable you to
            attach custom data from your systems to fulfillmenttools entities.
          nullable: true
          type: object
        imageUrl:
          description: >-
            A web link to a picture of this article. Please make sure that no
            authentication is required to fetch the image!
          type: string
        legal:
          $ref: '#/components/schemas/ListingLegal'
        measurementUnitKey:
          description: Identifier for items unit of measurement.
          example: liter
          type: string
        outOfStockBehaviour:
          $ref: '#/components/schemas/OutOfStockBehaviour'
        outOfStockBehaviourByContexts:
          description: >-
            The OutOfStockBehaviourByContexts is in Alpha status. For details
            please check the <a
            href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
            target="_blank">api-release-life-cycle documentation</a>.<br /><br
            />
          items:
            $ref: '#/components/schemas/OutOfStockBehaviourByContext'
          maxItems: 10
          minItems: 1
          type: array
        outOfStockConfig:
          $ref: '#/components/schemas/OutOfStockConfig'
          description: >-
            The outOfStockConfig is in Alpha status. For details please check
            the <a
            href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
            target="_blank">api-release-life-cycle documentation</a>.<br /><br
            />
        partialStocks:
          deprecated: true
          description: >-
            This part of the API is deprecated. For details please check the <a
            href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
            target="_blank">api-release-life-cycle documentation</a>.<br /><br
            />@deprecated This field is deprecated since 11th of September 2023.

            Use /api/stocks endpoints instead.
          items:
            $ref: '#/components/schemas/PartialStockForCreation'
          type: array
        price:
          example: 1200
          type: number
        recordableAttributes:
          description: >-
            Customizable information about the lineItem that can be set during
            the process.
          items:
            $ref: '#/components/schemas/ListingRecordableAttribute'
          maxItems: 40
          type: array
        scannableCodes:
          items:
            description: Codes, that identify the article
            type: string
          type: array
        scanningRule:
          $ref: '#/components/schemas/ScanningRuleConfiguration'
        stockAvailableUntil:
          $ref: '#/components/schemas/AvailableUntilDefinition'
        stockinformation:
          $ref: '#/components/schemas/StockInformationForCreation'
          deprecated: true
          description: >-
            This part of the API is deprecated. For details please check the <a
            href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
            target="_blank">api-release-life-cycle documentation</a>.<br /><br
            />@deprecated This field is deprecated since 11th of September 2023.

            Use /api/stocks endpoints instead.
        stockProperties:
          additionalProperties:
            $ref: '#/components/schemas/StockPropertyDefinition'
          type: object
        tenantArticleId:
          description: This is a reference to an article Id
          example: '4711'
          minLength: 1
          type: string
        title:
          description: a title describing the article
          example: Adidas Superstar
          type: string
        weight:
          minimum: 0
          type: number
        tags:
          items:
            $ref: '#/components/schemas/TagReference'
          minItems: 0
          type: array
      required:
        - tenantArticleId
        - title
      type: object
      xml:
        name: ListingForCreation
      title: ListingForCreation
      description: ListingForCreation
    ListingForReplacement:
      allOf:
        - $ref: '#/components/schemas/ListingForCreation'
      properties:
        status:
          enum:
            - ACTIVE
            - INACTIVE
          type: string
        version:
          example: 42
          format: int64
          type: integer
      type: object
      xml:
        name: ListingForReplacement
      title: ListingForReplacement
      description: ListingForReplacement
    ListingLegal:
      additionalProperties: false
      properties:
        hsCode:
          maxLength: 50
          type: string
      type: object
      title: ListingLegal
      description: ListingLegal
    ListingOutOfStockBehaviourEnumFilter:
      properties:
        eq:
          description: Search by outOfStockBehaviour
          enum:
            - BACKORDER
            - PREORDER
            - RESTOCK
            - PREORDER_AND_RESTOCK
          type: string
        in:
          description: Search by outOfStockBehaviour
          items:
            enum:
              - BACKORDER
              - PREORDER
              - RESTOCK
              - PREORDER_AND_RESTOCK
            type: string
          type: array
        notEq:
          description: Search by outOfStockBehaviour
          enum:
            - BACKORDER
            - PREORDER
            - RESTOCK
            - PREORDER_AND_RESTOCK
          type: string
      title: ListingOutOfStockBehaviourEnumFilter
      type: object
      description: ListingOutOfStockBehaviourEnumFilter
    ListingPaginatedResult:
      properties:
        listings:
          items:
            $ref: '#/components/schemas/Listing'
          type: array
        pageInfo:
          allOf:
            - $ref: '#/components/schemas/PageInfo'
          description: Pagination information for the search result.
        total:
          description: >-
            The total number of items matching the search criteria. Only filled,
            if withTotal is set to true in the search options.
          minimum: 0
          type: number
      required:
        - pageInfo
        - listings
      title: ListingPaginatedResult
      type: object
      description: ListingPaginatedResult
    ListingPatchActions:
      properties:
        actions:
          items:
            $ref: '#/components/schemas/ModifyListing'
          minItems: 1
          type: array
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          format: int64
          type: integer
      required:
        - version
        - actions
      type: object
      xml:
        name: ListingPatchActions
      title: ListingPatchActions
      description: ListingPatchActions
    ListingRecordableAttribute:
      additionalProperties: false
      properties:
        keyLocalized:
          $ref: '#/components/schemas/LocaleString'
        key:
          description: Calculated value from keyLocalized based on passed locale
          example: Serialnumber
          type: string
        recordingRule:
          description: Indicates whether the value has to be recorded or not
          enum:
            - OPTIONAL
            - MANDATORY
          example: MANDATORY
          type: string
        value:
          description: The value of the attribute
          example: Germany
          minLength: 1
          nullable: true
          type: string
      required:
        - keyLocalized
        - recordingRule
      title: ListingRecordableAttribute
      type: object
      description: ListingRecordableAttribute
    ListingSearchPayload:
      properties:
        after:
          deprecated: false
          description: >-
            The cursor to start after. The value is provided in the
            `pageInfo.endCursor` field of the response.
          type: string
        options:
          $ref: '#/components/schemas/SearchOptions'
        query:
          $ref: '#/components/schemas/ListingSearchQuery'
        size:
          default: 20
          description: Number of items to return.
          maximum: 250
          minimum: 1
          type: number
        sort:
          description: Use for sorting the result.
          items:
            $ref: '#/components/schemas/ListingSort'
          maxItems: 1
          minItems: 1
          type: array
        startAfterId:
          deprecated: true
          description: >-
            The ID to start after. Deprecated, use `after` with the value
            provided in `pageInfo.endCursor` instead.
          type: string
      required:
        - query
      title: ListingSearchPayload
      type: object
      description: ListingSearchPayload
    ListingSearchQuery:
      properties:
        and:
          items:
            $ref: '#/components/schemas/ListingSearchQuery'
          type: array
        availabilityTimeframe:
          allOf:
            - $ref: '#/components/schemas/ListingAvailabilityTimeframeFilter'
          description: Nested search by availabilityTimeframe
        categoryRefs:
          allOf:
            - $ref: '#/components/schemas/StringListFilter'
          description: Search by categoryRefs
        created:
          allOf:
            - $ref: '#/components/schemas/DateFilter'
          description: >-
            Search entries by created. Applying a narrow and well-considered
            filter value is strongly recommended, as it can greatly improve
            response times, especially when working with large datasets.
        customAttributes:
          additionalProperties:
            anyOf:
              - $ref: '#/components/schemas/BooleanFilter'
              - $ref: '#/components/schemas/StringEqFilter'
              - $ref: '#/components/schemas/NumberEqFilter'
              - $ref: '#/components/schemas/DateFilter'
          description: Search by custom attributes
          type: object
        facilityRef:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by facilityRef
        id:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by id
        measurementUnitKey:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by measurementUnitKey
        or:
          items:
            $ref: '#/components/schemas/ListingSearchQuery'
          type: array
        outOfStockBehaviour:
          allOf:
            - $ref: '#/components/schemas/ListingOutOfStockBehaviourEnumFilter'
          description: Search by outOfStockBehaviour
        price:
          allOf:
            - $ref: '#/components/schemas/NumberFilter'
          description: Search by price
        status:
          allOf:
            - $ref: '#/components/schemas/ListingStatusEnumEnumFilter'
          description: Search by status
        tenantArticleId:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by tenantArticleId
        weight:
          allOf:
            - $ref: '#/components/schemas/NumberFilter'
          description: Search by weight
        tags:
          allOf:
            - $ref: '#/components/schemas/ListingTagsListFilter'
          description: Nested list search by tags
      title: ListingSearchQuery
      type: object
      description: ListingSearchQuery
    ListingsForCreation:
      properties:
        listings:
          items:
            $ref: '#/components/schemas/ListingForCreation'
          minItems: 1
          type: array
      required:
        - listings
      type: object
      xml:
        name: ListingsForCreation
      title: ListingsForCreation
      description: ListingsForCreation
    ListingsForReplacement:
      properties:
        listings:
          items:
            $ref: '#/components/schemas/ListingForReplacement'
          maxItems: 500
          minItems: 1
          type: array
      required:
        - listings
      type: object
      xml:
        name: ListingsForReplacement
      title: ListingsForReplacement
      description: ListingsForReplacement
    ListingSort:
      properties:
        customAttributes:
          additionalProperties: true
          maxProperties: 1
          minProperties: 1
          type: object
        lastModified:
          enum:
            - ASC
            - DESC
          type: string
        tenantArticleId:
          enum:
            - ASC
            - DESC
          type: string
      title: ListingSort
      type: object
      description: ListingSort
    ListingStatusEnumEnumFilter:
      properties:
        eq:
          description: Search by status
          enum:
            - ACTIVE
            - INACTIVE
          type: string
        in:
          description: Search by status
          items:
            enum:
              - ACTIVE
              - INACTIVE
            type: string
          type: array
        notEq:
          description: Search by status
          enum:
            - ACTIVE
            - INACTIVE
          type: string
      title: ListingStatusEnumEnumFilter
      type: object
      description: ListingStatusEnumEnumFilter
    ListingTagsFilter:
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by id
        value:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by value
      title: ListingTagsFilter
      type: object
      description: ListingTagsFilter
    ListingTagsListFilter:
      properties:
        contains:
          allOf:
            - $ref: '#/components/schemas/ListingTagsFilter'
          description: Contains returns if at least one entry matches
      title: ListingTagsListFilter
      type: object
      description: ListingTagsListFilter
    ListingWebHookEventPayload:
      properties:
        items:
          items:
            $ref: '#/components/schemas/InventoryListingEventPayload'
          type: array
      required:
        - items
      title: ListingWebHookEventPayload
      type: object
      description: ListingWebHookEventPayload
    LoadUnit:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      description: LoadUnit.
      properties:
        nameLocalized:
          $ref: '#/components/schemas/LocaleString'
        descriptionLocalized:
          $ref: '#/components/schemas/LocaleString'
        codes:
          items:
            description: List of codes
            type: string
          type: array
        customAttributes:
          description: >-
            Attributes that can be added to the LoadUnit. These attributes
            cannot be used within fulfillment processes, but it could be useful
            to have the informations carried here.
          type: object
        description:
          type: string
        dimensions:
          $ref: '#/components/schemas/LoadUnitDimensions'
        facilityRef:
          description: >-
            The id of the facility reference. The given ID has to be present in
            the system. But it is not updatable via PUT request
          example: Esb20gpHBL94X5NdMp3C
          type: string
        iconUrl:
          type: string
        id:
          type: string
        loadUnitLineItems:
          items:
            $ref: '#/components/schemas/LoadUnitLineItem'
          type: array
        loadUnitTypeRef:
          deprecated: true
          description: >-
            This part of the API is deprecated. For details please check the <a
            href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
            target="_blank">api-release-life-cycle documentation</a>.<br /><br
            />Use operativeContainerTypeRef instead.
          type: string
        name:
          type: string
        operativeContainerTypeRef:
          description: the reference to the operativeContainerType
          type: string
        pickJobRefs:
          items:
            description: List of corresponding pickjob Ids
            type: string
          maxItems: 1
          minItems: 1
          type: array
        stackRef:
          description: the reference to the stackRef this loadUnit is part of
          type: string
        storageLocationRef:
          description: >-
            the reference to the storage location this load unit as been placed
            into
          type: string
        weightLimitInG:
          description: 'Maximal weight in gramm(gr) the loadunit can handle. '
          minimum: 1
          type: number
      required:
        - id
        - nameLocalized
        - version
        - facilityRef
        - pickJobRefs
      title: LoadUnit
      type: object
    LoadUnitActionsParameter:
      oneOf:
        - $ref: >-
            #/components/schemas/LoadUnitLineItemUpdateRecordableAttributesActionParameter
      title: LoadUnitActionsParameter
      description: LoadUnitActionsParameter
    LoadUnitAssignmentConfiguration:
      description: >-
        Who do the load units need to be assigned in pickJob (SingleOrderPick)
        and pickRun (MultiOrderPick)
      properties:
        pickJob:
          $ref: '#/components/schemas/LoadUnitAssignmentType'
        pickRun:
          $ref: '#/components/schemas/LoadUnitAssignmentType'
      required:
        - pickJob
        - pickRun
      type: object
      title: LoadUnitAssignmentConfiguration
    LoadUnitAssignmentType:
      description: Where do the load unit needs to be assigned?
      enum:
        - INACTIVE
        - AT_START
        - AT_END
        - DURING_PICKING
      example: AT_END
      type: string
      title: LoadUnitAssignmentType
    LoadUnitConfiguration:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        maxCount:
          default: 20
          description: Max creatable count of load units per load unit type
          example: 20
          type: integer
      type: object
      title: LoadUnitConfiguration
      description: LoadUnitConfiguration
    LoadUnitDimensions:
      properties:
        heightInCm:
          description: The height of the container (in cm)
          example: 50
          type: number
        lengthInCm:
          description: The length of the container (in cm)
          example: 100
          type: number
        weightInG:
          description: The weight of the container (in g)
          example: 1700
          type: number
        widthInCm:
          description: The width of the container (in cm)
          example: 25
          type: number
      type: object
      title: LoadUnitDimensions
      description: LoadUnitDimensions
    LoadUnitForCreation:
      properties:
        codes:
          items:
            description: List of codes
            type: string
          type: array
        customAttributes:
          description: >-
            Attributes that can be added to the LoadUnit. These attributes
            cannot be used within fulfillment processes, but it could be useful
            to have the informations carried here.
          type: object
        loadUnitLineItems:
          items:
            $ref: '#/components/schemas/LoadUnitLineItemForCreation'
          type: array
        loadUnitTypeRef:
          deprecated: true
          description: >-
            This part of the API is deprecated. For details please check the <a
            href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
            target="_blank">api-release-life-cycle documentation</a>.<br /><br
            />Use operativeContainerTypeRef instead.
          type: string
        operativeContainerTypeRef:
          description: the reference to the operativeContainerType
          type: string
        pickJobRefs:
          items:
            description: List of corresponding pickjob Ids
            type: string
          maxItems: 1
          minItems: 1
          type: array
        stackRef:
          description: the reference to the stackRef this loadUnit is part of
          type: string
        storageLocationRef:
          description: >-
            the reference to the storage location this load unit as been placed
            into
          type: string
      required:
        - pickJobRefs
      type: object
      title: LoadUnitForCreation
      description: LoadUnitForCreation
    LoadUnitLineItem:
      allOf:
        - $ref: '#/components/schemas/LineItem'
      properties:
        article:
          $ref: '#/components/schemas/PickLineItemArticle'
        id:
          type: string
        measurementUnitKey:
          description: Identifier for items unit of measurement.
          example: liter
          type: string
      required:
        - id
        - article
      title: LoadUnitLineItem
      description: LoadUnitLineItem
    LoadUnitLineItemForCreation:
      additionalProperties: false
      allOf:
        - $ref: '#/components/schemas/LineItemForCreation'
      properties:
        article:
          $ref: '#/components/schemas/PickLineItemArticle'
        customAttributes:
          description: >-
            Attributes that can be added to the lineItem. These attributes
            cannot be used within fulfillment processes, but it could be useful
            to have the information carried here.
          type: object
        globalLineItemId:
          description: >-
            This id is used to identify if this line item is related to the line
            item of other operational entities.
          type: string
        measurementUnitKey:
          description: Identifier for items unit of measurement.
          example: liter
          type: string
        quantity:
          description: The quantity of the lineItem
          type: number
        recordableAttributes:
          description: >-
            Customizable information about the lineItem that can be set during
            the process.
          items:
            $ref: '#/components/schemas/RecordableAttributeForCreation'
          type: array
        scannableCodes:
          description: Codes that can be used for scanning this lineItem
          items:
            type: string
          type: array
      required:
        - article
      title: LoadUnitLineItemForCreation
      description: LoadUnitLineItemForCreation
    LoadUnitLineItemUpdateRecordableAttributesActionEnum:
      description: Update the recordable attributes of the line items of a load unit
      enum:
        - UPDATE_LOAD_UNIT_LINE_ITEM_RECORDABLE_ATTRIBUTES
      type: string
      title: LoadUnitLineItemUpdateRecordableAttributesActionEnum
    LoadUnitLineItemUpdateRecordableAttributesActionParameter:
      additionalProperties: false
      description: Update the recordable attributes of the line items of a load unit
      properties:
        name:
          $ref: >-
            #/components/schemas/LoadUnitLineItemUpdateRecordableAttributesActionEnum
        recordableAttributes:
          items:
            $ref: '#/components/schemas/RecordableAttributeForUpdate'
          type: array
        version:
          description: Version of the entity to be changed
          minimum: 0
          type: integer
      required:
        - name
        - version
        - recordableAttributes
      title: LoadUnitLineItemUpdateRecordableAttributesActionParameter
    LoadUnitPatchActions:
      description: Actions to patch a LoadUnit.
      properties:
        actions:
          items:
            $ref: '#/components/schemas/ReplaceLoadUnitLineItems'
          minItems: 1
          type: array
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          format: int64
          type: integer
      required:
        - version
        - actions
      title: LoadUnitPatchActions
      type: object
      xml:
        name: LoadUnitPatchActions
    LoadUnits:
      properties:
        loadUnits:
          items:
            $ref: '#/components/schemas/LoadUnit'
          type: array
        total:
          description: Total number of found entities for this query
          example: 42
          type: integer
      type: object
      title: LoadUnits
      description: LoadUnits
    LoadUnitsForCreation:
      additionalProperties: false
      properties:
        loadUnits:
          items:
            $ref: '#/components/schemas/LoadUnitForCreation'
          minItems: 1
          type: array
      required:
        - loadUnits
      type: object
      title: LoadUnitsForCreation
      description: LoadUnitsForCreation
    LoadUnitType:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        nameLocalized:
          $ref: '#/components/schemas/LocaleString'
        descriptionLocalized:
          $ref: '#/components/schemas/LocaleString'
        description:
          type: string
        dimensions:
          $ref: '#/components/schemas/LoadUnitDimensions'
        iconUrl:
          description: ''
          type: string
        id:
          description: ''
          type: string
        name:
          type: string
        priority:
          description: >-
            This value gives the priority in the respective loadUnitType. The
            lower the value the higher is the priority, e.g. priority 1 is
            higher than priority 10. The priority can be used to order
            loadUnityTypes.
          example: 100
          format: int64
          maximum: 10000
          minimum: 1
          type: integer
        weightLimitInG:
          description: 'Maximal weight in gramm(gr) the loadunit can handle. '
          minimum: 1
          type: number
      required:
        - id
        - version
        - nameLocalized
      type: object
      title: LoadUnitType
      description: LoadUnitType
    LoadUnitTypeForCreation:
      additionalProperties: false
      properties:
        nameLocalized:
          $ref: '#/components/schemas/LocaleString'
        descriptionLocalized:
          $ref: '#/components/schemas/LocaleString'
        dimensions:
          $ref: '#/components/schemas/LoadUnitDimensions'
        icon:
          $ref: '#/components/schemas/NamedFile'
          description: ''
        priority:
          description: >-
            This value gives the priority in the respective loadUnitType. The
            lower the value the higher is the priority, e.g. priority 1 is
            higher than priority 10. The priority can be used to order
            loadUnityTypes.
          example: 100
          format: int64
          maximum: 10000
          minimum: 1
          type: integer
        weightLimitInG:
          description: 'Maximal weight in gramm(gr) the loadunit can handle. '
          minimum: 1
          type: number
      required:
        - nameLocalized
      type: object
      title: LoadUnitTypeForCreation
      description: LoadUnitTypeForCreation
    LoadUnitTypePatchActions:
      properties:
        actions:
          items:
            $ref: '#/components/schemas/ModifyLoadUnitType'
          minItems: 1
          type: array
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          format: int64
          type: integer
      required:
        - version
        - actions
      type: object
      xml:
        name: LoadUnitTypePatchActions
      title: LoadUnitTypePatchActions
      description: LoadUnitTypePatchActions
    LoadUnitTypes:
      items:
        $ref: '#/components/schemas/LoadUnitType'
      type: array
      title: LoadUnitTypes
      description: LoadUnitTypes
    LocaleConfiguration:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        countryLanguageMapping:
          $ref: '#/components/schemas/CountryLanguageMapping'
        id:
          type: string
        locale:
          $ref: '#/components/schemas/SupportedLocale'
      required:
        - locale
      type: object
      title: LocaleConfiguration
      description: LocaleConfiguration
    LocaleString:
      additionalProperties:
        type: string
      description: >-
        Provides Localized values. The key is the locale, the value is the
        translation. See
        https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/localization#fallback-language-mechanism
      example:
        de_DE: Wert
        en_US: Value
        ru_RU: значение
      title: LocaleString
      type: object
    LocaleStringConstrained:
      properties: {}
      title: LocaleStringConstrained
      type: object
      description: LocaleStringConstrained
    LocalizedAvailableItemCondition:
      additionalProperties: false
      properties:
        conditionLocalized:
          $ref: '#/components/schemas/LocaleString'
          example:
            de_DE: Beschädigt
            en_US: Damaged
        condition:
          description: translated conditionsLocalized
          example: Damaged
          type: string
      required:
        - conditionLocalized
        - condition
      title: LocalizedAvailableItemCondition
      description: LocalizedAvailableItemCondition
    LocalizedAvailableReturnReason:
      additionalProperties: false
      allOf:
        - $ref: '#/components/schemas/AvailableReturnReason'
      properties:
        identifier:
          description: >-
            Small identifier to be displayed and printed. Allowed values are
            1-99 and A-Z. Needs to be unique respecting all other reasons. If
            not set, an ascending will be chosen automatically
          example: A
          type: string
        reason:
          description: translated reasonLocalized
          example: Damaged
          type: string
      required:
        - reasonLocalized
        - reason
        - identifier
      title: LocalizedAvailableReturnReason
      description: LocalizedAvailableReturnReason
    LocalizedReturnConfiguration:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        active:
          default: true
          deprecated: true
          description: >-
            This part of the API is deprecated. For details please check the <a
            href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
            target="_blank">api-release-life-cycle documentation</a>.<br /><br
            />Enable or disable legacy returns. Use returnTypeConfiguration
            instead
          type: boolean
        allowTriggerRefund:
          default: false
          description: >-
            If true, a refund can be triggered. If false, the endpoints to
            trigger a refund are disabled.
          type: boolean
        availableItemConditions:
          items:
            $ref: '#/components/schemas/LocalizedAvailableItemCondition'
        availableReturnReasons:
          items:
            $ref: '#/components/schemas/LocalizedAvailableReturnReason'
        returnTypeConfiguration:
          $ref: '#/components/schemas/ReturnTypeConfiguration'
      required:
        - active
      type: object
      title: LocalizedReturnConfiguration
      description: LocalizedReturnConfiguration
    LocalizedStringSearchFilter:
      properties:
        eq:
          maxLength: 256
          type: string
        in:
          items:
            maxLength: 256
            type: string
          maxItems: 25
          type: array
        like:
          description: Search by regex pattern
          maxLength: 256
          type: string
        notEq:
          maxLength: 256
          type: string
        notIn:
          items:
            maxLength: 256
            type: string
          maxItems: 25
          type: array
      title: LocalizedStringSearchFilter
      type: object
      description: LocalizedStringSearchFilter
    Location:
      properties:
        locationRef:
          description: The id of the location
          type: string
        scannableCodes:
          description: Represents barcodes that may be scanned at this location
          items:
            type: string
          type: array
      xml:
        name: Location
      title: Location
      description: Location
    ManagedFacility:
      allOf:
        - $ref: '#/components/schemas/Facility'
        - $ref: '#/components/schemas/ManagedFacilityForCreation'
      properties:
        address:
          $ref: '#/components/schemas/FacilityAddress'
        configs:
          items:
            $ref: '#/components/schemas/LinkedConfiguration'
          type: array
      required:
        - status
        - address
        - name
      type: object
      xml:
        name: ManagedFacility
      title: ManagedFacility
      description: ManagedFacility
    ManagedFacilityForCreation:
      allOf:
        - $ref: '#/components/schemas/FacilityForCreation'
      properties:
        address:
          $ref: '#/components/schemas/FacilityAddressForCreation'
        capacityEnabled:
          default: false
          description: >-
            Indicates that configured capacity limits for picking times are
            considered
          type: boolean
        capacityPlanningTimeframe:
          description: >-
            The range in days per facility which defines how many days in the
            future the capacity of the facility can be planned
          minimum: 1
          type: integer
        closingDays:
          description: >-
            Days of the year where the facility is closed and doesn't allows
            picking
          items:
            $ref: '#/components/schemas/ClosingDay'
          type: array
        contact:
          $ref: '#/components/schemas/FacilityContact'
        fulfillmentProcessBuffer:
          default: 240
          description: Duration in minutes until an order is processed
          example: '240'
          minimum: 0
          type: integer
        locationType:
          $ref: '#/components/schemas/FacilityLocationType'
        pickingMethods:
          description: Picking Methods supported by this facility.
          items:
            $ref: '#/components/schemas/PickingMethodEnum'
          type: array
        pickingTimes:
          $ref: '#/components/schemas/PickingTimes'
          description: >-
            Time ranges defining the picking times per weekday. No overlapping
            ranges are allowed
        scanningRule:
          $ref: '#/components/schemas/ScanningRuleConfiguration'
        services:
          items:
            $ref: '#/components/schemas/FacilityService'
          type: array
      required:
        - name
        - address
      type: object
      xml:
        name: ManagedFacilityForCreation
      title: ManagedFacilityForCreation
      description: ManagedFacilityForCreation
    ManagedFacilityForModification:
      additionalProperties: false
      properties:
        address:
          $ref: '#/components/schemas/FacilityAddressForCreation'
        capacityEnabled:
          description: >-
            Indicates that configured capacity limits for picking times are
            considered
          nullable: true
          type: boolean
        capacityPlanningTimeframe:
          description: >-
            The range in days per facility which defines how many days in the
            future the capacity of the facility can be planned
          minimum: 1
          nullable: true
          type: integer
        closingDays:
          description: >-
            Days of the year where the facility is closed and doesn't allows
            picking
          items:
            $ref: '#/components/schemas/ClosingDay'
          nullable: true
          type: array
        configs:
          items:
            $ref: '#/components/schemas/LinkedConfiguration'
          nullable: true
          type: array
        contact:
          allOf:
            - $ref: '#/components/schemas/FacilityContact'
          nullable: true
          type: object
        customAttributes:
          description: >-
            Attributes that can be added to the facility. These attributes
            cannot be used within fulfillment processes, but it could be useful
            to have the informations carried here.
          nullable: true
          type: object
        fulfillmentProcessBuffer:
          description: Duration in minutes until an order is processed
          example: '240'
          minimum: 0
          nullable: true
          type: integer
        locationType:
          allOf:
            - $ref: '#/components/schemas/FacilityLocationType'
          nullable: true
        name:
          example: Hamburg NW2
          type: string
        pickingMethods:
          description: Picking Methods supported by this facility.
          items:
            $ref: '#/components/schemas/PickingMethodEnum'
          nullable: true
          type: array
        pickingTimes:
          allOf:
            - $ref: '#/components/schemas/PickingTimes'
          nullable: true
        scanningRule:
          allOf:
            - $ref: '#/components/schemas/ScanningRuleConfiguration'
          nullable: true
        services:
          items:
            $ref: '#/components/schemas/FacilityService'
          nullable: true
          type: array
        status:
          $ref: '#/components/schemas/FacilityStatus'
        tenantFacilityId:
          description: The id of the facility in the tenants own system
          example: K12345
          nullable: true
          type: string
        type:
          $ref: '#/components/schemas/FacilityType'
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          format: int64
          type: integer
        tags:
          items:
            $ref: '#/components/schemas/TagReference'
          minItems: 1
          nullable: true
          type: array
      required:
        - type
        - version
      type: object
      xml:
        name: ManagedFacilityForModification
      title: ManagedFacilityForModification
      description: ManagedFacilityForModification
    ManagedFacilityForReplacement:
      additionalProperties: false
      properties:
        address:
          $ref: '#/components/schemas/FacilityAddressForCreation'
        capacityEnabled:
          default: false
          description: >-
            Indicates that configured capacity limits for picking times are
            considered
          type: boolean
        capacityPlanningTimeframe:
          description: >-
            The range in days per facility which defines how many days in the
            future the capacity of the facility can be planned
          minimum: 1
          type: integer
        closingDays:
          description: >-
            Days of the year where the facility is closed and doesn't allows
            picking
          items:
            $ref: '#/components/schemas/ClosingDay'
          type: array
        configs:
          items:
            $ref: '#/components/schemas/LinkedConfiguration'
          type: array
        contact:
          $ref: '#/components/schemas/FacilityContact'
        customAttributes:
          description: >-
            Attributes that can be added to the facility. These attributes
            cannot be used within fulfillment processes, but it could be useful
            to have the informations carried here.
          type: object
        fulfillmentProcessBuffer:
          default: 240
          description: Duration in minutes until an order is processed
          example: '240'
          minimum: 0
          type: integer
        locationType:
          $ref: '#/components/schemas/FacilityLocationType'
        name:
          example: Hamburg NW2
          type: string
        pickingMethods:
          description: Picking Methods supported by this facility.
          items:
            $ref: '#/components/schemas/PickingMethodEnum'
          type: array
        pickingTimes:
          $ref: '#/components/schemas/PickingTimes'
        scanningRule:
          $ref: '#/components/schemas/ScanningRuleConfiguration'
        services:
          items:
            $ref: '#/components/schemas/FacilityService'
          type: array
        status:
          $ref: '#/components/schemas/FacilityStatus'
        tenantFacilityId:
          description: The id of the facility in the tenants own system
          example: K12345
          type: string
        type:
          $ref: '#/components/schemas/FacilityType'
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          format: int64
          type: integer
        tags:
          items:
            $ref: '#/components/schemas/TagReference'
          minItems: 1
          type: array
      discriminator:
        propertyName: type
      required:
        - version
        - type
        - status
        - name
        - address
        - locationType
        - fulfillmentProcessBuffer
        - capacityEnabled
      type: object
      xml:
        name: ManagedFacilityForReplacement
      title: ManagedFacilityForReplacement
      description: ManagedFacilityForReplacement
    MandatoryLineItem:
      properties:
        article:
          description: information about the lineItem
          type: object
        customAttributes:
          description: >-
            Attributes that can be added to the lineItem. These attributes
            cannot be used within fulfillment processes, but it could be useful
            to have the information carried here.
          type: object
        globalLineItemId:
          description: >-
            This id is used to identify if this line item is related to the line
            item of other operational entities.
          type: string
        id:
          description: id of the recordable attribute
          example: 17ebfdfb-e1b4-4913-9962-3aef2b49f16f
          type: string
        quantity:
          description: The quantity of the lineItem
          type: number
        recordableAttributes:
          description: >-
            Customizable information about the lineItem that can be set during
            the process.
          items:
            $ref: '#/components/schemas/RecordableAttribute'
          type: array
        scannableCodes:
          description: Codes that can be used for scanning this lineItem
          items:
            type: string
          type: array
      required:
        - id
        - article
        - quantity
      title: MandatoryLineItem
      type: object
      description: MandatoryLineItem
    MandatoryLineItemForCreation:
      properties:
        article:
          description: information about the lineItem
          type: object
        customAttributes:
          description: >-
            Attributes that can be added to the lineItem. These attributes
            cannot be used within fulfillment processes, but it could be useful
            to have the information carried here.
          type: object
        globalLineItemId:
          description: >-
            This id is used to identify if this line item is related to the line
            item of other operational entities.
          type: string
        quantity:
          description: The quantity of the lineItem
          type: number
        recordableAttributes:
          description: >-
            Customizable information about the lineItem that can be set during
            the process.
          items:
            $ref: '#/components/schemas/RecordableAttributeForCreation'
          type: array
        scannableCodes:
          description: Codes that can be used for scanning this lineItem
          items:
            type: string
          type: array
      required:
        - article
        - quantity
      title: MandatoryLineItemForCreation
      type: object
      description: MandatoryLineItemForCreation
    MandatoryShippingArticleAttribute:
      allOf:
        - $ref: '#/components/schemas/CountryServiceMappingShippingArticleAttribute'
      title: MandatoryShippingArticleAttribute
      description: MandatoryShippingArticleAttribute
    MandatoryShippingArticleAttributeCategory:
      enum:
        - customs
        - dimensions
        - insurance
      type: string
      title: MandatoryShippingArticleAttributeCategory
      description: MandatoryShippingArticleAttributeCategory
    MandatoryShippingArticleAttributeDataType:
      enum:
        - NUMBER
        - STRING
      type: string
      title: MandatoryShippingArticleAttributeDataType
      description: MandatoryShippingArticleAttributeDataType
    MandatoryShippingArticleAttributeReferencedField:
      enum:
        - attributes.weightPerUnit
        - attributes.hsCode
        - attributes.currency
        - attributes.valuePerUnit
        - attributes.countryOfManufacture
      type: string
      title: MandatoryShippingArticleAttributeReferencedField
      description: MandatoryShippingArticleAttributeReferencedField
    MandatoryShippingAttribute:
      allOf:
        - $ref: '#/components/schemas/CountryServiceMappingShippingAttribute'
      title: MandatoryShippingAttribute
      description: MandatoryShippingAttribute
    MandatoryShippingItemAttribute:
      additionalProperties: false
      properties:
        descriptionLocalized:
          $ref: '#/components/schemas/LocaleString'
        dataType:
          enum:
            - Number
            - String
            - Date
            - Boolean
          type: string
        description:
          type: string
        referencedField:
          description: |-
            Deprecated:
              - description: article.title will be used instead
              - weightInGram: use MandatoryShippingArticleAttribute.attributes.weightPerUnit
              - quantity, this field is now mandatory in the item
              - parcelItemValue.value: use MandatoryShippingArticleAttribute.attributes.pricePerUnit
              - parcelItemValue.currency: use MandatoryShippingArticleAttribute.attributes.currency
              - countryOfManufacture: use MandatoryShippingArticleAttribute.attributes.countryOfManufacture
              - tenantArticleId: mandatory on line item article
          enum:
            - description
            - weightInGram
            - quantity
            - parcelItemValue.value
            - parcelItemValue.currency
            - countryOfManufacture
            - tenantArticleId
          type: string
      type: object
      title: MandatoryShippingItemAttribute
      description: MandatoryShippingItemAttribute
    ManualRerouteConfiguration:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      deprecated: true
      description: >-
        @deprecated This config property is deprecated since 26/02/24. Use
        GlobalManualRerouteConfiguration instead.
      properties:
        active:
          type: boolean
        id:
          type: string
      required:
        - active
      type: object
      title: ManualRerouteConfiguration
    MeasurementUnit:
      additionalProperties: false
      allOf:
        - $ref: '#/components/schemas/MeasurementUnitForCreation'
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        abbreviation:
          description: Translated abbreviation of the measurement unit
          example: kg
          type: string
        id:
          example: c5300790-9477-475c-bd6d-98e5d61f6413
          type: string
        name:
          description: Translated name of the measurement unit
          example: kilogramm
          type: string
      required:
        - id
      type: object
      title: MeasurementUnit
      description: MeasurementUnit
    MeasurementUnitForCreation:
      properties:
        nameLocalized:
          $ref: '#/components/schemas/LocaleString'
        abbreviationLocalized:
          allOf:
            - $ref: '#/components/schemas/LocaleString'
          description: Abbreviation of the unit. Maximum 4 chars long.
          example:
            de_DE: kg
            en_US: kg
            ru_RU: кг
        key:
          description: Descriptor for the measurement unit
          example: kilogramm
          type: string
        requiresMeasurement:
          description: Indicates that the given unit need to be measured.
          example: true
          type: boolean
      required:
        - nameLocalized
        - abbreviationLocalized
        - key
      type: object
      title: MeasurementUnitForCreation
      description: MeasurementUnitForCreation
    MeasurementUnits:
      properties:
        measurementUnits:
          items:
            $ref: '#/components/schemas/MeasurementUnit'
          type: array
        total:
          description: Total number of found entities for this query
          example: 42
          type: integer
      type: object
      title: MeasurementUnits
      description: MeasurementUnits
    MeasurementValidation:
      properties:
        overPickHardTolerancePercentage:
          description: Allowed hard over pick deviation tolerance.
          example: 20
          minimum: 0
          type: number
        overPickSoftTolerancePercentage:
          description: Allowed soft over pick deviation tolerance.
          example: 15
          minimum: 0
          type: number
        shortPickHardTolerancePercentage:
          description: Allowed hard short pick deviation tolerance.
          example: 15
          maximum: 100
          minimum: 0
          type: number
        shortPickSoftTolerancePercentage:
          description: Allowed soft short pick deviation tolerance.
          example: 10
          maximum: 100
          minimum: 0
          type: number
      title: MeasurementValidation
      description: MeasurementValidation
    ModifyAddress:
      properties:
        additionalAddressInfo:
          example: 'to care of: Mrs. Müller'
          type: string
        city:
          example: Langenfeld
          pattern: ^.+$
          type: string
        country:
          description: A two-digit country code as per ISO 3166-1 alpha-2
          example: DE
          pattern: ^[A-Z]{2}$
          type: string
        customAttributes:
          description: >-
            Attributes that can be added to the address. These attributes cannot
            be used within fulfillment processes, but it could be useful to have
            the informations carried here.
          type: object
        houseNumber:
          example: 42a
          pattern: ^.+$
          type: string
        phoneNumbers:
          items:
            properties:
              customAttributes:
                description: >-
                  Attributes that can be added to the phonenumber. These
                  attributes cannot be used within fulfillment processes, but it
                  could be useful to have the informations carried here.
                type: object
              label:
                description: >-
                  Can be used to give a description for the number, like
                  "private", "business number", etc.
                type: string
              type:
                enum:
                  - MOBILE
                  - PHONE
                type: string
              value:
                description: The number itself. We do not enforce any format (yet).
                type: string
            type: object
          type: array
        postalCode:
          example: '40764'
          pattern: ^.+$
          type: string
        province:
          example: Nordrhein-Westfalen
          pattern: ^.+$
          type: string
        resolvedCoordinates:
          $ref: '#/components/schemas/Coordinates'
        street:
          example: Hauptstr.
          pattern: ^.+$
          type: string
      type: object
      title: ModifyAddress
      description: ModifyAddress
    ModifyAngelCarrierCredentials:
      allOf:
        - $ref: '#/components/schemas/AbstractModifyCarrierCredentials'
        - properties:
            authToken:
              description: X-Auth-Token for callbacks from Angel
              type: string
            key:
              description: Use value 'ANGEL' in order to provide ANGEL credentials
              type: string
            password:
              description: Your password for Angel carrier
              type: string
            username:
              description: Your Angel username
              type: string
          required:
            - key
          type: object
      xml:
        name: ModifyAngelCarrierCredentials
      title: ModifyAngelCarrierCredentials
      description: ModifyAngelCarrierCredentials
    ModifyBringCarrierCredentials:
      allOf:
        - $ref: '#/components/schemas/AbstractModifyCarrierCredentials'
        - additionalProperties: false
          properties:
            apiKey:
              description: Internal API Key to communicate with the CEP Api
              type: string
            apiUid:
              description: Internal API Uid to communicate with the CEP Api
              type: string
            authToken:
              description: Identifier for Track&Trace Webhook
              type: string
            clientUrl:
              description: Url of the requesting client, can be a static value
              type: string
            key:
              description: Use value 'BRING' in order to provide BRING credentials
              type: string
          required:
            - key
          type: object
      xml:
        name: ModifyBringCarrierCredentials
      title: ModifyBringCarrierCredentials
      description: ModifyBringCarrierCredentials
    ModifyCarrier:
      allOf:
        - $ref: '#/components/schemas/AbstractModificationAction'
        - additionalProperties: false
          properties:
            action:
              description: >-
                Use value 'ModifyCarrierAction', because you want to modify a
                carrier
              enum:
                - ModifyCarrier
              type: string
            credentials:
              $ref: '#/components/schemas/AbstractModifyCarrierCredentials'
            defaultParcelHeightInCm:
              default: 10
              description: Default height in cm
              minimum: 1
              type: number
            defaultParcelLengthInCm:
              default: 25
              description: Default length in cm
              minimum: 1
              type: number
            defaultParcelWeightInGram:
              default: 1000
              description: Default weight for a parcel in gram
              minimum: 1
              type: number
            defaultParcelWidthInCm:
              default: 35
              description: Default width in cm
              minimum: 1
              type: number
            deliveryType:
              $ref: '#/components/schemas/CarrierDeliveryType'
            lifecycle:
              $ref: '#/components/schemas/CarrierLifecycle'
            logoUrl:
              minLength: 1
              type: string
            name:
              description: >-
                This is the well known name for a supported CEP partner. Can be
                adapted to the clients needs.
              example: DHL Köln
              type: string
            parcelLabelClassifications:
              items:
                $ref: '#/components/schemas/ParcelLabelClassificationForCreation'
              type: array
            productValueNeeded:
              description: >-
                Setting to enable the Client to ask for the parcel product value
                while ordering a label. This information is mandatory for
                sending parcels between different countries (customs
                declaration)
              example: true
              type: boolean
            status:
              $ref: '#/components/schemas/CarrierStatus'
          required:
            - action
          type: object
      xml:
        name: ModifyCarrier
      title: ModifyCarrier
      description: ModifyCarrier
    ModifyCustomServiceAction:
      allOf:
        - $ref: '#/components/schemas/AbstractModificationAction'
        - additionalProperties: false
          properties:
            descriptionLocalized:
              $ref: '#/components/schemas/LocaleString'
            nameLocalized:
              $ref: '#/components/schemas/LocaleString'
            action:
              description: >-
                Use value 'ModifyCustomService', because you want to modify a
                custom service
              enum:
                - ModifyCustomService
              type: string
            executionTimeInMin:
              description: Time in minutes the custom service takes to be executed
              example: 100
              type: integer
            itemsRequired:
              $ref: '#/components/schemas/ItemsRequiredEnum'
            itemsReturnable:
              description: >-
                Indicates if the items of the custom service are returnable
                after the custom service has been executed
              type: boolean
            status:
              $ref: '#/components/schemas/CustomServiceStatus'
            tenantCustomServiceId:
              type: string
          required:
            - action
          type: object
      description: Action to modify a custom service.
      title: ModifyCustomServiceAction
      xml:
        name: ModifyCustomServiceAction
    ModifyDHLV2CarrierCredentials:
      allOf:
        - $ref: '#/components/schemas/AbstractModifyCarrierCredentials'
        - additionalProperties: false
          properties:
            apiKey:
              description: Internal API Key to communicate with the DHL Api
              minLength: 1
              type: string
            fallback:
              $ref: '#/components/schemas/DHLV2BusinessCredentials'
          required:
            - key
            - apiKey
          type: object
      xml:
        name: ModifyDHLV2CarrierCredentials
      title: ModifyDHLV2CarrierCredentials
      description: ModifyDHLV2CarrierCredentials
    ModifyDpdChCarrierCredentials:
      allOf:
        - $ref: '#/components/schemas/AbstractModifyCarrierCredentials'
        - additionalProperties: false
          properties:
            delisId:
              description: Delis ID to create a DPD CH auth token.
              type: string
            key:
              description: Use value 'DPD_CH' in order to provide DPD credentials
              type: string
            password:
              description: Password to create a DPD CH auth token.
              type: string
          required:
            - key
          type: object
      xml:
        name: ModifyDpdChCarrierCredentials
      title: ModifyDpdChCarrierCredentials
      description: ModifyDpdChCarrierCredentials
    ModifyFacility:
      allOf:
        - $ref: '#/components/schemas/AbstractModificationAction'
        - additionalProperties: false
          properties:
            action:
              description: >-
                Use value 'ModifyFacility', because you want to modify a
                facility
              enum:
                - ModifyFacility
              type: string
            address:
              $ref: '#/components/schemas/ModifyFacilityAddress'
            capacityEnabled:
              type: boolean
            capacityPlanningTimeframe:
              description: >-
                The range in days per facility which defines how many days in
                the future the capacity of the facility can be planned
              minimum: 1
              type: integer
            closingDays:
              description: >-
                Days of the year where the facility is closed and doesn't allows
                picking
              items:
                $ref: '#/components/schemas/ClosingDay'
              type: array
            contact:
              $ref: '#/components/schemas/FacilityContact'
            customAttributes:
              description: >-
                Attributes that can be added to the facility. These attributes
                cannot be used within fulfillment processes, but it could be
                useful to have the informations carried here.
              type: object
            fulfillmentProcessBuffer:
              description: Duration in minutes until an order is processed
              example: '240'
              minimum: 0
              type: integer
            locationType:
              $ref: '#/components/schemas/FacilityLocationType'
            name:
              example: Hamburg NW2
              type: string
            operativeCosts:
              items:
                $ref: '#/components/schemas/FacilityOperativeCostForCreation'
              maxItems: 1
            pickingMethods:
              description: Picking Methods supported by this facility.
              items:
                $ref: '#/components/schemas/PickingMethodEnum'
              type: array
            pickingTimes:
              $ref: '#/components/schemas/PickingTimes'
              description: >-
                Time ranges defining the picking times per weekday. No
                overlapping ranges are allowed
            scanningRule:
              $ref: '#/components/schemas/ScanningRuleConfiguration'
            services:
              items:
                properties:
                  type:
                    description: The description of the service this facility offers.
                    enum:
                      - SHIP_FROM_STORE
                      - PICKUP
                    type: string
                required:
                  - type
                type: object
              type: array
            status:
              description: >-
                The state of the facility. ONLINE means that this facility can
                process new orders and pickjobs, SUSPENDED means it cannot get
                new orders but is able to fulfill the current workload and
                OFFLINE means that it cannot fulfill any new or existing orders.
                Processes already running might be rescheduled to another
                facility depending on the preferences.
              enum:
                - ONLINE
                - SUSPENDED
                - OFFLINE
              type: string
            tenantFacilityId:
              description: The id of the facility in the tenants own system
              example: K12345
              type: string
            tags:
              items:
                $ref: '#/components/schemas/TagReference'
              minItems: 0
              type: array
          required:
            - action
          type: object
      xml:
        name: ModifyFacility
      title: ModifyFacility
      description: ModifyFacility
    ModifyFacilityAddress:
      allOf:
        - $ref: '#/components/schemas/ModifyAddress'
        - type: object
        - properties:
            companyName:
              example: Speedy Boxales Ltd.
              type: string
            emailAddresses:
              items:
                properties:
                  recipient:
                    description: >-
                      Human readable information who is the recipient for emails
                      sent to this address.
                    example: >-
                      'Mailinglist reaching all the employees', 'Marc Fulton,
                      Manager', etc.
                    type: string
                  value:
                    format: email
                    type: string
                required:
                  - value
                type: object
              type: array
          type: object
      title: ModifyFacilityAddress
      description: ModifyFacilityAddress
    ModifyFeature:
      allOf:
        - $ref: '#/components/schemas/AbstractModificationAction'
        - additionalProperties: false
          properties:
            action:
              description: Use value 'ModifyFeature', because you want to modify a Feature
              enum:
                - ModifyFeature
              type: string
            status:
              $ref: '#/components/schemas/FeatureStatus'
              description: The state of the feature we want to change.
          required:
            - action
            - status
          type: object
      xml:
        name: ModifyFeature
      title: ModifyFeature
      description: ModifyFeature
    ModifyFedexCarrierCredentials:
      allOf:
        - $ref: '#/components/schemas/AbstractModifyCarrierCredentials'
        - properties:
            accountNumber:
              description: Your fedex accountnumber
              type: string
            apiKey:
              description: Internal API Key to communicate with the CEP Api
              type: string
            key:
              description: Use value 'FEDEX' in order to provide FEDEX credentials
              type: string
            secretKey:
              description: Internal API Key to communicate with the CEP Api
              type: string
          required:
            - key
          type: object
      xml:
        name: ModifyFedexCarrierCredentials
      title: ModifyFedexCarrierCredentials
      description: ModifyFedexCarrierCredentials
    ModifyFenceAction:
      allOf:
        - $ref: '#/components/schemas/AbstractModificationAction'
        - properties:
            action:
              description: Use value 'ModifyFence', because you want to modify a fence.
              enum:
                - ModifyFence
              type: string
            active:
              type: boolean
            activeMode:
              $ref: '#/components/schemas/FenceMode'
            id:
              type: string
          required:
            - action
            - id
          type: object
      description: Action to Modify a Fence.
      title: ModifyFenceAction
      xml:
        name: ModifyFenceAction
    ModifyGlobalRoutingConfigurationAction:
      allOf:
        - $ref: '#/components/schemas/AbstractModificationAction'
        - properties:
            action:
              description: >-
                Use value 'ModifyGlobalRoutingConfiguration', because you want
                to modify global routing configuration.
              enum:
                - ModifyGlobalRoutingConfiguration
              type: string
            defaultPrice:
              default: 10
              description: >-
                Default price which is used if no price exists in order or
                listings
              type: number
            fallbackFacilityConfiguration:
              $ref: '#/components/schemas/FallbackFacilityConfigurationForPatch'
            manualRerouteConfiguration:
              $ref: '#/components/schemas/GlobalManualRerouteConfiguration'
            routingTimeout:
              default: 8
              deprecated: true
              description: >-
                This part of the API is deprecated. For details please check the
                <a
                href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
                target="_blank">api-release-life-cycle documentation</a>.<br
                /><br />@deprecated Default amount of hours after which a
                routing plan is marked not routable. This field is deprecated in
                favour of stopRoutingAttemptsAfterTime
              type: number
            stopRoutingAttemptsAfterTime:
              default: PT8H
              description: >-
                Default amount of time in ISO 8601 duration format after which a
                routing plan is marked not routable. The duration need to be a
                multiple of 60 seconds.
              pattern: ^P(?:(\d+W)|(\d+Y)?(\d+M)?(\d+D)?(?:T(\d+H)?(\d+M)?(\d+S)?)?)$
              type: string
          required:
            - action
          type: object
      description: Action to Modify the Global Routing Configuration.
      title: ModifyGlobalRoutingConfigurationAction
    ModifyGLSCarrierCredentials:
      allOf:
        - $ref: '#/components/schemas/AbstractModifyCarrierCredentials'
        - properties:
            key:
              description: Use value 'GLS' in order to provide GLS credentials
              type: string
            password:
              description: Your password for Angel carrier
              type: string
            trackAndTracePassword:
              description: GLS Track And Trace password
              type: string
            trackAndTraceUsername:
              description: GLS Track And Trace username
              type: string
            username:
              description: Your Angel username
              type: string
          required:
            - key
          type: object
      xml:
        name: ModifyGLSCarrierCredentials
      title: ModifyGLSCarrierCredentials
      description: ModifyGLSCarrierCredentials
    ModifyHandoverjob:
      allOf:
        - $ref: '#/components/schemas/AbstractModificationAction'
        - additionalProperties: false
          properties:
            action:
              description: >-
                Use value 'ModifyHandoverjob', because you want to modify a
                handoverjob
              enum:
                - ModifyHandoverjob
              type: string
            customAttributes:
              description: >-
                Attributes that can be added to the handoverJob. These
                attributes cannot be used within fulfillment processes, but it
                could be useful to have the informations carried here.
              type: object
            status:
              $ref: '#/components/schemas/HandoverjobStatus'
          required:
            - action
          type: object
      description: Action to modify a HandoverJob.
      title: ModifyHandoverjobAction
      xml:
        name: ModifyHandoverjob
    ModifyListing:
      allOf:
        - $ref: '#/components/schemas/AbstractModificationAction'
        - additionalProperties: false
          properties:
            titleLocalized:
              $ref: '#/components/schemas/LocaleString'
            action:
              description: Use value 'ModifyListing', because you want to modify a listing
              enum:
                - ModifyListing
              type: string
            attributes:
              description: The attributes of this listing
              items:
                $ref: '#/components/schemas/ListingAttributeItem'
              maxItems: 40
              type: array
            availabilityTimeframe:
              $ref: '#/components/schemas/AvailabilityTimeframe'
              deprecated: true
              description: >-
                @deprecated This property (for OutOfStockBehaviour.BACKORDER) is
                deprecated since 26th of February 2025.
            categoryRefs:
              description: References to categories the listing belongs to.
              items:
                type: string
              maxItems: 10
              type: array
            currency:
              allOf:
                - $ref: '#/components/schemas/CurrencyCode'
              description: >-
                The currency of the price as an ISO 4217 code. Attention -
                Routing currently does not convert between different currencies.
                Don't use multiple currencies when using price ratings in order
                routing.
              example: EUR
              nullable: true
            customAttributes:
              description: >-
                Attributes that can be added to the listing. These attributes
                **cannot** be used within fulfillment processes, but enable you
                to attach custom data from your systems to fulfillmenttools
                entities.
              nullable: true
              type: object
            imageUrl:
              description: >-
                A web link to a picture of this article. Please make sure that
                no authentication is required to fetch the image!
              type: string
            legal:
              $ref: '#/components/schemas/ListingLegal'
            measurementUnitKey:
              example: kg
              nullable: true
              type: string
            outOfStockBehaviour:
              $ref: '#/components/schemas/OutOfStockBehaviour'
            outOfStockConfig:
              $ref: '#/components/schemas/OutOfStockConfig'
              description: >-
                The outOfStockConfig is in Alpha status. For details please
                check the <a
                href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
                target="_blank">api-release-life-cycle documentation</a>.<br
                /><br />
            price:
              example: 1200
              type: number
            recordableAttributes:
              description: >-
                Customizable information about the lineItem that can be set
                during the process.
              items:
                $ref: '#/components/schemas/ListingRecordableAttribute'
              maxItems: 40
              type: array
            scannableCodes:
              items:
                description: Codes, that identify the article
                type: string
              type: array
            scanningRule:
              $ref: '#/components/schemas/ScanningRuleConfiguration'
            status:
              description: The status indicates if a listing is available or not
              enum:
                - ACTIVE
                - INACTIVE
              type: string
            stockAvailableUntil:
              $ref: '#/components/schemas/AvailableUntilDefinition'
            stockinformation:
              $ref: '#/components/schemas/StockInformationForCreation'
              deprecated: true
              description: >-
                This part of the API is deprecated. For details please check the
                <a
                href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
                target="_blank">api-release-life-cycle documentation</a>.<br
                /><br />@deprecated This field is deprecated since 11th of
                September 2023. Use /api/stocks endpoints instead.
            stockProperties:
              additionalProperties:
                $ref: '#/components/schemas/StockPropertyDefinition'
              nullable: true
              type: object
            subtitle:
              description: a subtitle describing the article
              example: 44 2/3
              type: string
            title:
              description: a title describing the article
              example: Adidas Superstar
              type: string
            weight:
              type: number
            tags:
              items:
                $ref: '#/components/schemas/TagReference'
              minItems: 0
              type: array
          required:
            - action
          type: object
      xml:
        name: ModifyListing
      title: ModifyListing
      description: ModifyListing
    ModifyListingReactivationAfter:
      allOf:
        - $ref: '#/components/schemas/AbstractModificationAction'
        - properties:
            action:
              description: >-
                Use value 'ModifyListingReactivationAfter', if you want to
                modify the listingReactivationAfter of a facility
              enum:
                - ModifyListingReactivationAfter
              type: string
            listingReactivationAfter:
              properties:
                active:
                  default: true
                  description: The disabling of listings is enabled or disabled.
                  type: boolean
                value:
                  default: 24
                  description: >-
                    Time in hours that has to pass for a deactivated listing
                    (e.g. due to manual deactivation or as a result of a
                    shortpick ) to be become active again.
                  type: number
              type: object
          required:
            - action
          type: object
      description: Action to modify the reactivationAfter property of a Listing.
      title: ModifyListingReactivationAfterAction
      xml:
        name: ModifyListingReactivationAfter
    ModifyLoadUnitType:
      allOf:
        - $ref: '#/components/schemas/AbstractModificationAction'
        - additionalProperties: false
          properties:
            nameLocalized:
              $ref: '#/components/schemas/LocaleString'
            descriptionLocalized:
              $ref: '#/components/schemas/LocaleString'
            action:
              description: >-
                Use value 'ModifyLoadUnitType', because you want to modify a
                LoadUnitType
              enum:
                - ModifyLoadUnitType
              type: string
            dimensions:
              $ref: '#/components/schemas/LoadUnitDimensions'
            priority:
              description: >-
                This value gives the priority in the respective loadUnitType.
                The lower the value the higher is the priority, e.g. priority 1
                is higher than priority 10. The priority can be used to order
                loadUnityTypes.
              example: 100
              format: int64
              maximum: 10000
              minimum: 1
              type: integer
            weightLimitInG:
              description: 'Maximal weight in gramm(gr) the loadunit can handle. '
              minimum: 1
              type: number
          required:
            - action
          type: object
      xml:
        name: ModifyLoadUnitType
      title: ModifyLoadUnitType
      description: ModifyLoadUnitType
    ModifyOrderSplitAction:
      allOf:
        - $ref: '#/components/schemas/AbstractModificationAction'
        - properties:
            action:
              description: >-
                Use value 'ModifyOrderSplit', because you want to modify the
                configuration for the an order split.
              enum:
                - ModifyOrderSplit
              type: string
            active:
              default: false
              type: boolean
            activeForSameDay:
              default: false
              type: boolean
            fixedCountConfiguration:
              $ref: '#/components/schemas/FixedCountConfiguration'
            orderSplitType:
              $ref: '#/components/schemas/OrderSplitType'
            shouldUseWaitingRoomForPreBackOrderItems:
              default: false
              type: boolean
          required:
            - action
          type: object
      description: Action to Modify the Order Split Configuration.
      title: ModifyOrderSplitAction
      xml:
        name: ModifyOrderSplitAction
    ModifyPackingContainerType:
      allOf:
        - $ref: '#/components/schemas/AbstractModificationAction'
        - additionalProperties: false
          properties:
            nameLocalized:
              $ref: '#/components/schemas/LocaleString'
            descriptionLocalized:
              $ref: '#/components/schemas/LocaleString'
            action:
              description: >-
                Use value 'ModifyPackingContainerType', because you want to
                modify a PackingContainerType
              enum:
                - ModifyPackingContainerType
              type: string
            dimensions:
              $ref: '#/components/schemas/ContainerDimensions'
            priority:
              description: >-
                This value gives the priority in the respective
                packingContainerType. The lower the value the higher is the
                priority, e.g. priority 1 is higher than priority 10. The
                priority can be used to order PackingContainerTypes.
              example: 100
              format: int32
              maximum: 10000
              minimum: 1
              type: integer
            weightLimitInG:
              description: 'Maximal weight in gramm(gr) the container can be loaded with. '
              example: 2500
              minimum: 1
              type: number
          required:
            - action
          type: object
      description: Action to a modify the type of a packing container.
      title: ModifyPackingContainerType
      xml:
        name: ModifyPackingContainerType
    ModifyPackingContainerTypeIcon:
      allOf:
        - $ref: '#/components/schemas/AbstractModificationAction'
        - additionalProperties: false
          properties:
            action:
              description: >-
                Use value 'ModifyPackingContainerTypeIcon', because you want to
                modify a PackingContainerTypes icon
              enum:
                - ModifyPackingContainerTypeIcon
              type: string
            content:
              description: Content of the icon as base64 string
              type: string
            name:
              description: icons filename
              type: string
          required:
            - action
            - name
            - content
          type: object
      description: Action to a modify the type icon of a packing container.
      title: ModifyPackingContainerTypeIcon
      xml:
        name: ModifyPackingContainerTypeIcon
    ModifyPackJob:
      allOf:
        - $ref: '#/components/schemas/AbstractModificationAction'
        - additionalProperties: false
          properties:
            action:
              description: Use value 'ModifyPackJob', because you want to modify a packjob
              enum:
                - ModifyPackJob
              type: string
            customAttributes:
              description: >-
                Attributes that can be added to the line item. These attributes
                cannot be used within fulfillment processes, but it could be
                useful to have the informations carried here.
              type: object
            status:
              $ref: '#/components/schemas/PackJobStatus'
          required:
            - action
          type: object
      description: Action to modify a PackJob
      title: ModifyPackJob
      xml:
        name: ModifyPackJob
    ModifyPackLineItem:
      allOf:
        - $ref: '#/components/schemas/AbstractModificationAction'
        - additionalProperties: false
          properties:
            action:
              description: >-
                Use value 'ModifyPackLineItem', because you want to modify a
                packjobs lineItem
              enum:
                - ModifyPackLineItem
              type: string
            id:
              description: references the id of the packLineItem of a packJob
              type: string
            packed:
              description: >-
                The amount of articles that were packed for this packline. Can't
                be more than picked before.
              example: 20
              format: int64
              minimum: 0
              type: integer
          required:
            - action
            - id
          type: object
      description: Action to modify a PackLineItem of a PackJob
      title: ModifyPackLineItem
      xml:
        name: ModifyPackLineItem
    ModifyParcel:
      allOf:
        - $ref: '#/components/schemas/AbstractModificationAction'
        - additionalProperties: false
          properties:
            action:
              description: Use value 'ModifyParcel', because you want to modify a Parcel
              enum:
                - ModifyParcel
              type: string
            carrierProduct:
              description: Only changable on status OPEN or FAILED of the existing Parcel
              nullable: true
              type: string
            customAttributes:
              type: object
            customProductValue:
              description: >-
                Set this value if you want to overwrite the calculated product
                value of the parcel.
              example: 12.5
              type: number
            dimensions:
              $ref: '#/components/schemas/ParcelDimensions'
            pickUpInformation:
              $ref: '#/components/schemas/ParcelPickUpInformation'
            productValue:
              description: >-
                Monetary value of all goods in this parcel. Needed for sending
                cross border packages (customs) To be interpreted as money in
                the currency given under paymentInformation.currency
              example: 12.5
              nullable: true
              type: number
            result:
              $ref: '#/components/schemas/ParcelResult'
            services:
              $ref: '#/components/schemas/ParcelServices'
            status:
              $ref: '#/components/schemas/ParcelStatus'
          required:
            - action
          type: object
      description: Modify Parcel Action.
      title: ModifyParcelAction
      xml:
        name: ModifyParcel
    ModifyParcelLoadUnit:
      allOf:
        - $ref: '#/components/schemas/AbstractModificationAction'
        - additionalProperties: false
          properties:
            action:
              description: >-
                Use value 'ModifyParcelLoadUnit', because you want to modify
                loadunitRefs in Parcel
              enum:
                - ModifyParcelLoadUnit
              type: string
            loadUnitRefs:
              items:
                type: string
              type: array
          required:
            - action
            - loadUnitRefs
          type: object
      description: Modify Parcels of a LoadUnit.
      title: ModifyParcelLoadUnitsAction
      xml:
        name: ModifyParcelLoadUnit
    ModifyPartialStock:
      allOf:
        - $ref: '#/components/schemas/AbstractModificationAction'
        - additionalProperties: false
          properties:
            action:
              description: >-
                Use value 'ModifyPartialStock', because you want to modify a
                partial stock
              enum:
                - ModifyPartialStock
              type: string
            partialStocks:
              items:
                $ref: '#/components/schemas/PartialStockForCreation'
              minItems: 0
              type: array
          required:
            - action
          type: object
      xml:
        name: ModifyPartialStock
      title: ModifyPartialStock
      description: ModifyPartialStock
    ModifyPickJob:
      allOf:
        - $ref: '#/components/schemas/AbstractModificationAction'
        - additionalProperties: false
          properties:
            action:
              description: Use value 'ModifyPickJob', because you want to modify a pickjob
              enum:
                - ModifyPickJob
              type: string
            customAttributes:
              description: >-
                Attributes that can be added to the pickJob. These attributes
                cannot be used within fulfillment processes, but it could be
                useful to have the informations carried here.
              type: object
            paymentInformation:
              $ref: '#/components/schemas/PaymentInformation'
            preferredPickingMethods:
              description: Preferred way of picking a given pickJob.
              items:
                $ref: '#/components/schemas/PickingMethodEnum'
              type: array
            status:
              $ref: '#/components/schemas/PickJobStatusUnprotected'
          required:
            - action
          type: object
      description: Action to modify a PickJob.
      title: ModifyPickJob
      xml:
        name: ModifyPickJob
    ModifyPickJobLastEditor:
      allOf:
        - $ref: '#/components/schemas/AbstractModificationAction'
        - additionalProperties: false
          properties:
            action:
              description: >-
                Use value 'ModifyPickJobLastEditor' to set the last editor to
                your user and therefor take over the pickjob.
              enum:
                - ModifyPickJobLastEditor
              type: string
          required:
            - action
          type: object
      description: Action to modify the last editor of a PickJob.
      title: ModifyPickJobLastEditor
      xml:
        name: ModifyPickJobLastEditor
    ModifyPickJobLineItemsActionEnum:
      enum:
        - MODIFY_PICK_JOB_LINE_ITEMS
      type: string
      title: ModifyPickJobLineItemsActionEnum
      description: ModifyPickJobLineItemsActionEnum
    ModifyPickLineItem:
      allOf:
        - $ref: '#/components/schemas/AbstractModificationAction'
        - additionalProperties: false
          properties:
            shortPickReasonLocalized:
              $ref: '#/components/schemas/LocaleString'
            action:
              description: >-
                Use value 'ModifyPickLineItem', because you want to modify a
                pick line item
              enum:
                - ModifyPickLineItem
              type: string
            customAttributes:
              description: >-
                Attributes that can be added to the pick ine item. These
                attributes cannot be used within fulfillment processes, but it
                could be useful to have the informations carried here.
              type: object
            id:
              description: >-
                The id of this lineItem. It is generated during creation
                automatically and suits as the primary identifier of the
                described entity.
              example: climk4dcQFiPdA5ULuhS
              type: string
            partialStockLocations:
              items:
                $ref: >-
                  #/components/schemas/PickJobLineItemPartialStockLocationForUpdate
            picked:
              description: The amount of articles that were picked for this pickline.
              example: 20
              format: int64
              minimum: 0
              type: integer
            pickedAt:
              description: Date when the line has been picked.
              example: 2024-02-03T08:45:51.525Z
              format: date-time
              type: string
            scannedCodes:
              description: Scanned Codes of the given picked line item
              items:
                $ref: '#/components/schemas/PickLineItemScannedCode'
              minItems: 0
            secondaryPicked:
              type: integer
            status:
              $ref: '#/components/schemas/PickLineItemStatus'
            stickers:
              items:
                $ref: '#/components/schemas/Sticker'
              type: array
            stockEmptied:
              example: true
              type: boolean
            substituteLineItems:
              description: >-
                This part of the API is in Beta status. For details please check
                the <a
                href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
                target="_blank">api-release-life-cycle documentation</a>.<br
                /><br />
              items:
                $ref: '#/components/schemas/SubstituteLineItemForCreation'
              type: array
              x-badges:
                - color: orange
                  label: BETA
          required:
            - id
            - action
          type: object
      description: Action to modify a picklineitem of a PickJob.
      title: ModifyPickLineItem
      xml:
        name: ModifyPickLineItem
    ModifyPickLineItemsActionParameter:
      additionalProperties: false
      description: Action to modify picklineItems of a Pickjob.
      properties:
        name:
          $ref: '#/components/schemas/ModifyPickJobLineItemsActionEnum'
        pickJobLineItemUpdates:
          items:
            $ref: '#/components/schemas/PickLineItemUpdate'
          minItems: 1
        version:
          description: Version of the entity to be changed
          minimum: 0
          type: integer
      required:
        - name
        - version
        - pickJobLineItemUpdates
      title: ModifyPickLineItemsActionParameter
    ModifyPickRunLineItem:
      allOf:
        - $ref: '#/components/schemas/AbstractModificationAction'
        - properties:
            action:
              description: >-
                Use value 'ModifyPickRunLineItem', because you want to modify a
                pick line item
              enum:
                - ModifyPickRunLineItem
              type: string
            id:
              description: >-
                The id of this lineItem. It is generated during creation
                automatically and suits as the primary identifier of the
                described entity.
              example: climk4dcQFiPdA5ULuhS
              type: string
            partialStockLocations:
              items:
                $ref: >-
                  #/components/schemas/PickJobLineItemPartialStockLocationForUpdate
            picked:
              description: The amount of articles that were picked for this pickline.
              example: 20
              format: int64
              minimum: 0
              type: integer
            secondaryPicked:
              description: >-
                The secondary amount of articles that were picked for this
                pickline.
              example: 20
              format: int64
              minimum: 0
              type: integer
            shortPickReason:
              $ref: '#/components/schemas/ShortPickReasonForUpsert'
            status:
              $ref: '#/components/schemas/PickLineItemStatus'
          required:
            - id
            - action
          type: object
      description: Action to modify a lineitem of a pickrun
      title: ModifyPickRunLineItem
      xml:
        name: ModifyPickRunLineItem
    ModifyPostNLCarrierCredentials:
      allOf:
        - $ref: '#/components/schemas/AbstractModifyCarrierCredentials'
        - additionalProperties: false
          properties:
            apiKey:
              description: Key to access the postNl api.
              type: string
            key:
              description: Use value 'POSTNL' in order to provide POSTNL credentials
              type: string
          required:
            - key
          type: object
      xml:
        name: ModifyPostNLCarrierCredentials
      title: ModifyPostNLCarrierCredentials
      description: ModifyPostNLCarrierCredentials
    ModifyPrioritizationAction:
      allOf:
        - $ref: '#/components/schemas/AbstractModificationAction'
        - properties:
            action:
              description: >-
                Use value 'ModifyPrioritization', because you want to modify
                prioritization.
              enum:
                - ModifyPrioritization
              type: string
            active:
              type: boolean
            id:
              type: string
            name:
              type: string
          required:
            - action
            - id
          type: object
      description: Action to Modify the Prioritization Configuration.
      title: ModifyPrioritizationAction
      xml:
        name: ModifyPrioritizationAction
    ModifyRatingAction:
      allOf:
        - $ref: '#/components/schemas/AbstractModificationAction'
        - properties:
            action:
              description: Use value 'ModifyRating', because you want to modify a rating.
              enum:
                - ModifyRating
              type: string
            active:
              type: boolean
            description:
              type: string
            id:
              type: string
            maxPenalty:
              example: 100
              minimum: 0
              type: number
            name:
              type: string
          required:
            - action
            - id
          type: object
      description: Action to Modify a Rating.
      title: ModifyRatingAction
      xml:
        name: ModifyRatingAction
    ModifyRestowItemAction:
      additionalProperties: false
      description: Action to modify a restow item.
      properties:
        action:
          description: >-
            Use value 'ModifyRestowItem', because you want to modify a restow
            item
          enum:
            - ModifyRestowItem
          type: string
        location:
          $ref: '#/components/schemas/Location'
        restowed:
          default: false
          description: Indicates if the restowItem has been restowed
          example: true
          type: boolean
      required:
        - action
        - restowed
      title: ModifyRestowItemAction
      type: object
    ModifyRetainedOfflineStock:
      allOf:
        - $ref: '#/components/schemas/AbstractModificationAction'
        - properties:
            action:
              deprecated: true
              description: >-
                This part of the API is deprecated. For details please check the
                <a
                href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
                target="_blank">api-release-life-cycle documentation</a>.<br
                /><br />@deprecated Concept depreated. Use safety stock instead.
              enum:
                - ModifyRetainedOfflineStock
              type: string
            active:
              description: The retained Offline Stock is enabled or disabled.
              type: boolean
            value:
              default: 0.2
              description: >-
                The overall percentage of stock that should be reserved to
                offline clients.
              example: 0.15
              maximum: 1
              minimum: 0.01
              type: number
          required:
            - action
          type: object
      deprecated: true
      description: >-
        This part of the API is deprecated. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />@deprecated Concept depreated. Use safety stock instead.
      title: ModifyRetainedOfflineStockAction
      xml:
        name: ModifyRetainedOfflineStock
    ModifyReturn:
      allOf:
        - $ref: '#/components/schemas/AbstractModificationAction'
        - additionalProperties: false
          properties:
            action:
              enum:
                - ModifyReturn
              type: string
            status:
              $ref: '#/components/schemas/ReturnStatus'
          required:
            - action
          type: object
      description: Action to modify a return
      title: ModifyReturnAction
      xml:
        name: ModifyReturn
    ModifyReturnLineItem:
      allOf:
        - $ref: '#/components/schemas/AbstractModificationAction'
        - properties:
            action:
              description: >-
                Use value 'ModifyReturnLineItem', because you want to modify a
                return line item
              enum:
                - ModifyReturnLineItem
              type: string
            id:
              description: Id of the return line item you want to update
              type: string
            returned:
              $ref: '#/components/schemas/Returned'
            status:
              $ref: '#/components/schemas/ReturnLineStatus'
          required:
            - id
            - action
            - returned
          type: object
      description: Action to modify a returnLineItem of a return
      title: ModifyReturnLineItemAction
      xml:
        name: ModifyReturnLineItem
    ModifyRoutingPlanAction:
      allOf:
        - $ref: '#/components/schemas/AbstractModificationAction'
        - additionalProperties: false
          properties:
            action:
              description: >-
                Use value 'ModifyRoutingPlan', because you want to modify a
                routing plan
              enum:
                - ModifyRoutingPlan
              type: string
            facilityRef:
              description: >-
                The id of the facility reference. The given ID has to be present
                in the system.
              example: Esb20gpHBL94X5NdMp3C
              type: string
            status:
              $ref: '#/components/schemas/RoutingPlanStatus'
          required:
            - action
          type: object
      xml:
        name: ModifyRoutingPlanAction
      title: ModifyRoutingPlanAction
      description: ModifyRoutingPlanAction
    ModifyShipment:
      allOf:
        - $ref: '#/components/schemas/AbstractModificationAction'
        - additionalProperties: false
          properties:
            action:
              description: >-
                Use value 'ModifyShipment', because you want to modify a
                shipment
              enum:
                - ModifyShipment
              type: string
            carrierProduct:
              description: Desired product of given carrier to choose when ordering a label
              example: EXPRESS
              type: string
            carrierRef:
              description: >-
                The reference to the carrier for which the shipment is assigned
                to
              example: ca525716-7208-4a63-a2a6-11274eb37f67-0
              type: string
            paymentInformation:
              $ref: '#/components/schemas/PaymentInformation'
            pickJobRef:
              description: >-
                The reference to the pickjob for which the shipment is assigned
                to
              example: ca525716-7208-4a63-a2a6-11274eb37f67-0
              type: string
            status:
              $ref: '#/components/schemas/ShipmentStatus'
            targetAddress:
              $ref: '#/components/schemas/ConsumerAddress'
          required:
            - action
          type: object
      xml:
        name: ModifyShipment
      title: ModifyShipment
      description: ModifyShipment
    ModifyShortpick:
      allOf:
        - $ref: '#/components/schemas/AbstractModificationAction'
        - properties:
            action:
              description: >-
                Use value 'ModifyShortpick', if you want to modify the
                ModifyShortPick of a facility
              enum:
                - ModifyShortpick
              type: string
            active:
              default: true
              description: Inventory adjustment in the case of insufficient order picking
              type: boolean
          required:
            - action
          type: object
      description: Modify Shortpick Action.
      title: ModifyShortpick
      xml:
        name: ModifyShortpick
    ModifyStorageLocationAction:
      allOf:
        - $ref: '#/components/schemas/AbstractModificationAction'
        - additionalProperties: false
          properties:
            action:
              description: >-
                Use value 'ModifyStorageLocation', because you want to modify a
                storage location
              enum:
                - ModifyStorageLocation
              type: string
            customAttributes:
              description: >-
                Attributes that can be added to the storage location. These
                attributes cannot be used within fulfillment processes, but it
                could be useful to have the informations carried here.
              type: object
            information:
              description: >-
                A free text information about this storage location, max length
                1024
              maxLength: 1024
              type: string
            name:
              description: The name of this storage location
              maxLength: 15
              type: string
            runningSequences:
              description: The Sequence item/s of this location
              items:
                $ref: '#/components/schemas/StorageLocationSequenceItem'
              maxItems: 10
              type: array
            scannableCodes:
              description: Barcodes representing this storage location
              items:
                type: string
              maxItems: 5
              type: array
            tenantLocationId:
              description: The internal tenant id for this location
              type: string
            traitConfig:
              $ref: '#/components/schemas/StorageLocationTraitConfig'
            traits:
              deprecated: true
              description: >-
                The traits of this storage location. Do not use this to write
                traits, use traitConfig instead.
              items:
                $ref: '#/components/schemas/StorageLocationTrait'
              type: array
            type:
              $ref: '#/components/schemas/StorageLocationType'
            zoneRef:
              description: The id of the Zone to which this storage location belongs.
              example: Esb20gpHBL94X5NdMp3C
              type: string
          required:
            - action
          type: object
      xml:
        name: ModifyStorageLocationAction
      title: ModifyStorageLocationAction
      description: ModifyStorageLocationAction
    ModifyStowLineItemsAction:
      description: >-
        MODIFY_STOW_LINE_ITEMS targets specific stowJob.stowLineItems by ID.
        Each targeted entry is partially updated: provided fields are completely
        replaced, while unspecified fields remain unchanged. New entries can be
        added by omitting the ID field.
      properties:
        name:
          description: The name of the action that should be performed
          enum:
            - MODIFY_STOW_LINE_ITEMS
          type: string
        stowLineItems:
          items:
            $ref: '#/components/schemas/StowLineItemForUpdate'
          type: array
        version:
          description: The current version of the stow job that should be modified
          type: number
      required:
        - version
        - name
        - stowLineItems
      title: ModifyStowLineItemsAction
      type: object
    ModifyTimingModeAction:
      allOf:
        - $ref: '#/components/schemas/AbstractModificationAction'
        - properties:
            action:
              description: >-
                Use value 'ModifyTimingMode', because you want to modify a
                timing mode.
              enum:
                - ModifyTimingMode
              type: string
            timingMode:
              $ref: '#/components/schemas/RoutingConfigurationTiming'
          required:
            - action
          type: object
      description: Action to Modify the Timing Mode.
      title: ModifyTimingModeAction
      xml:
        name: ModifyTimingModeAction
    ModifyUBSendCarrierCredentials:
      allOf:
        - $ref: '#/components/schemas/AbstractModifyCarrierCredentials'
        - properties:
            clientId:
              description: ID provided by UbSend
              type: string
            password:
              description: Password to communicate with the UbSend Api
              type: string
            username:
              description: Username to communicate with the UbSend Api
              type: string
          required:
            - key
          type: object
      xml:
        name: ModifyUBSendCarrierCredentials
      title: ModifyUBSendCarrierCredentials
      description: ModifyUBSendCarrierCredentials
    ModifyUserAction:
      properties:
        action:
          $ref: '#/components/schemas/UserActionEnum'
        assignedFacilities:
          deprecated: true
          description: >-
            Deprecated: Use assignedRoles with contextLimitation of type
            FACILITY instead
          items:
            $ref: '#/components/schemas/UserAssignedFacilityForCreation'
          type: array
        assignedRoles:
          description: The new roles of the user
          items:
            $ref: '#/components/schemas/AssignedRoles'
          type: array
        customAttributes:
          description: The new custom attributes of the user
          nullable: true
          type: object
        email:
          description: The changed email of the user
          type: string
        firstname:
          description: The new firstname of the user
          type: string
        lastname:
          description: The new lastname of the user
          type: string
        locale:
          $ref: '#/components/schemas/SupportedLocale'
        password:
          description: The new password of the user
          type: string
        roles:
          deprecated: true
          description: 'Deprecated: Use assignedRoles instead'
          items:
            $ref: '#/components/schemas/UserRole'
          type: array
      required:
        - action
      title: ModifyUserAction
      type: object
      description: ModifyUserAction
    ModifyUserPersonalData:
      properties:
        firstname:
          description: The new firstname of the user
          type: string
        lastname:
          description: The new lastname of the user
          type: string
        locale:
          $ref: '#/components/schemas/SupportedLocale'
        password:
          description: The new password of the user
          type: string
      title: ModifyUserPersonalData
      type: object
      description: ModifyUserPersonalData
    MoveStockToLocationOptions:
      properties:
        deleteFromStockIfZero:
          type: boolean
      title: MoveStockToLocationOptions
      type: object
      description: MoveStockToLocationOptions
    MultiOrderPickingConfiguration:
      additionalProperties: false
      properties:
        maxAmountOfPickJobsForMultiOrderPick:
          description: >-
            The maximum amount of pick jobs that can be combined in a multi
            order pick. Must be a value between 1 and 50.
          type: integer
      required:
        - maxAmountOfPickJobsForMultiOrderPick
      type: object
      title: MultiOrderPickingConfiguration
      description: MultiOrderPickingConfiguration
    NamedFile:
      additionalProperties: false
      properties:
        content:
          description: File content base64 encoded
          example: >-
            JVBERi0xLjEKJcKlwrHDqwoKMSAwIG9iagogIDw8IC9UeXBlIC9DYXRhbG9nCiAgICAgL1BhZ2VzIDIgMCBSCiAgPj4KZW5kb2JqCgoyIDAgb2JqCiAgPDwgL1R5cGUgL1BhZ2VzCiAgICAgL0tpZHMgWzMgMCBSXQogICAgIC9Db3VudCAxCiAgICAgL01lZGlhQm94IFswIDAgMzAwIDE0NF0KICA+PgplbmRvYmoKCjMgMCBvYmoKICA8PCAgL1R5cGUgL1BhZ2UKICAgICAgL1BhcmVudCAyIDAgUgogICAgICAvUmVzb3VyY2VzCiAgICAgICA8PCAvRm9udAogICAgICAgICAgIDw8IC9GMQogICAgICAgICAgICAgICA8PCAvVHlwZSAvRm9udAogICAgICAgICAgICAgICAgICAvU3VidHlwZSAvVHlwZTEKICAgICAgICAgICAgICAgICAgL0Jhc2VGb250IC9UaW1lcy1Sb21hbgogICAgICAgICAgICAgICA+PgogICAgICAgICAgID4+CiAgICAgICA+PgogICAgICAvQ29udGVudHMgNCAwIFIKICA+PgplbmRvYmoKCjQgMCBvYmoKICA8PCAvTGVuZ3RoIDU1ID4+CnN0cmVhbQogIEJUCiAgICAvRjEgMTggVGYKICAgIDAgMCBUZAogICAgKEhlbGxvIFdvcmxkKSBUagogIEVUCmVuZHN0cmVhbQplbmRvYmoKCnhyZWYKMCA1CjAwMDAwMDAwMDAgNjU1MzUgZiAKMDAwMDAwMDAxOCAwMDAwMCBuIAowMDAwMDAwMDc3IDAwMDAwIG4gCjAwMDAwMDAxNzggMDAwMDAgbiAKMDAwMDAwMDQ1NyAwMDAwMCBuIAp0cmFpbGVyCiAgPDwgIC9Sb290IDEgMCBSCiAgICAgIC9TaXplIDUKICA+PgpzdGFydHhyZWYKNTY1CiUlRU9GCg==
          type: string
        name:
          description: File name with extension
          example: example.pdf
          type: string
      required:
        - name
        - content
      type: object
      xml:
        name: NamedFile
      title: NamedFile
      description: NamedFile
    NeedsPacking:
      properties:
        needsPacking:
          type: boolean
      required:
        - needsPacking
      type: object
      title: NeedsPacking
      description: NeedsPacking
    NodeType:
      enum:
        - SUPPLIER
        - MANAGED_FACILITY
        - CUSTOMER
      type: string
      title: NodeType
      description: NodeType
    NonDeliveryDays:
      additionalProperties: false
      properties:
        nonDeliveryDay:
          example: 2020-02-03T00:00:00.000Z
          format: date
          pattern: ^\d{4}-\d{2}-\d{2}$
          type: string
        nonDeliveryType:
          $ref: '#/components/schemas/NonDeliveryType'
          default: SINGLE
      required:
        - nonDeliveryDay
      type: object
      title: NonDeliveryDays
      description: NonDeliveryDays
    NonDeliveryDaysPerCountryAndProvince:
      additionalProperties: false
      properties:
        country:
          type: string
        nonDeliveryDays:
          items:
            $ref: '#/components/schemas/NonDeliveryDays'
          type: array
        nonDeliveryDaysPerProvince:
          items:
            $ref: '#/components/schemas/NonDeliveryDaysPerProvince'
          type: array
        recurringNonDeliveryWeekdays:
          items:
            $ref: '#/components/schemas/WeekDay'
          type: array
      required:
        - country
        - nonDeliveryDays
        - recurringNonDeliveryWeekdays
        - nonDeliveryDaysPerProvince
      type: object
      title: NonDeliveryDaysPerCountryAndProvince
      description: NonDeliveryDaysPerCountryAndProvince
    NonDeliveryDaysPerProvince:
      additionalProperties: false
      properties:
        nonDeliveryDays:
          items:
            $ref: '#/components/schemas/NonDeliveryDays'
          type: array
        province:
          type: string
        recurringNonDeliveryWeekdays:
          items:
            $ref: '#/components/schemas/WeekDay'
          type: array
      required:
        - province
        - nonDeliveryDays
        - recurringNonDeliveryWeekdays
      type: object
      title: NonDeliveryDaysPerProvince
      description: NonDeliveryDaysPerProvince
    NonDeliveryType:
      enum:
        - SINGLE
        - RECURRING
      type: string
      title: NonDeliveryType
      description: NonDeliveryType
    Notification:
      properties:
        category:
          description: The category of the notification.
          enum:
            - ORDER
            - FACILITY
            - MISC
          type: string
        created:
          description: Timestamp when the notification was created.
          format: date-time
          type: string
        event:
          description: The event name that triggered the notification.
          type: string
        id:
          description: Identifier of the notification.
          type: string
        lastModified:
          description: Last modification timestamp of the notification.
          format: date-time
          type: string
        payload:
          allOf:
            - $ref: '#/components/schemas/NotificationPayload'
          description: The payload of the notification.
        priority:
          description: The priority of the notification
          properties:
            label:
              description: Priority label
              enum:
                - LOW
                - MEDIUM
                - HIGH
            sequence:
              description: Priority sequence number
              type: number
          type: object
        status:
          description: The status of the notification
          enum:
            - OPEN
            - FINISHED
          type: string
        type:
          description: The type of the notification channel.
          enum:
            - EMAIL
            - CLIENT
          type: string
        version:
          description: Current version of the notification.
          type: number
      required:
        - created
        - id
        - lastModified
        - version
        - category
        - status
        - priority
        - event
        - payload
        - type
      title: Notification
      type: object
      description: Notification
    NotificationAction:
      properties:
        name:
          description: Which action to perform
          enum:
            - ACK_NOTIFICATION
          type: string
        version:
          description: The current version of the notification that should be modified
          type: number
      required:
        - version
        - name
      title: NotificationAction
      type: object
      description: NotificationAction
    NotificationCategoryEnumFilter:
      properties:
        eq:
          description: Search by category
          enum:
            - ORDER
            - FACILITY
            - MISC
          type: string
        in:
          description: Search by category
          items:
            enum:
              - ORDER
              - FACILITY
              - MISC
            type: string
          type: array
        notEq:
          description: Search by category
          enum:
            - ORDER
            - FACILITY
            - MISC
          type: string
      title: NotificationCategoryEnumFilter
      type: object
      description: NotificationCategoryEnumFilter
    NotificationCenterConfig:
      properties:
        channels:
          items:
            oneOf:
              - $ref: '#/components/schemas/EmailNotificationChannel'
              - $ref: '#/components/schemas/ClientNotificationChannel'
          type: array
        created:
          format: date-time
          type: string
        lastModified:
          format: date-time
          type: string
        version:
          type: number
      required:
        - version
        - created
        - lastModified
        - channels
      title: NotificationCenterConfig
      type: object
      description: NotificationCenterConfig
    NotificationCenterConfigForCreation:
      properties:
        channels:
          items:
            oneOf:
              - $ref: '#/components/schemas/EmailNotificationChannelForCreation'
              - $ref: '#/components/schemas/ClientNotificationChannelForCreation'
          type: array
      required:
        - channels
      title: NotificationCenterConfigForCreation
      type: object
      description: NotificationCenterConfigForCreation
    NotificationCenterConfigForUpdate:
      properties:
        channels:
          items:
            oneOf:
              - $ref: '#/components/schemas/EmailNotificationChannelForCreation'
              - $ref: '#/components/schemas/ClientNotificationChannelForCreation'
          type: array
        version:
          type: number
      required:
        - channels
        - version
      title: NotificationCenterConfigForUpdate
      type: object
      description: NotificationCenterConfigForUpdate
    NotificationClientNotificationStatusEnumFilter:
      properties:
        eq:
          description: Search by status
          enum:
            - OPEN
            - FINISHED
          type: string
        in:
          description: Search by status
          items:
            enum:
              - OPEN
              - FINISHED
            type: string
          type: array
        notEq:
          description: Search by status
          enum:
            - OPEN
            - FINISHED
          type: string
      title: NotificationClientNotificationStatusEnumFilter
      type: object
      description: NotificationClientNotificationStatusEnumFilter
    NotificationPaginatedResult:
      properties:
        notifications:
          items:
            $ref: '#/components/schemas/Notification'
          type: array
        pageInfo:
          allOf:
            - $ref: '#/components/schemas/PageInfo'
          description: Pagination information for the search result.
        total:
          description: >-
            The total number of items matching the search criteria. Only filled,
            if withTotal is set to true in the search options.
          minimum: 0
          type: number
      required:
        - pageInfo
        - notifications
      title: NotificationPaginatedResult
      type: object
      description: NotificationPaginatedResult
    NotificationPayload:
      properties:
        titleLocalized:
          additionalProperties:
            type: string
          description: >-
            The localized title of the notification (only for client
            notifications).
          type: object
        subjectLocalized:
          additionalProperties:
            type: string
          description: >-
            The localized subject of the notification (only for email
            notifications).
          type: object
        messageLocalized:
          additionalProperties:
            type: string
          description: The localized message of the notification.
          type: object
        entityLinks:
          description: Array of entity links related to this notification
          items:
            $ref: '#/components/schemas/EntityLink'
          type: array
        message:
          description: The message of the notification.
          type: string
        subject:
          description: The subject of the notification (only for email notifications).
          type: string
        title:
          description: The title of the notification (only for client notifications).
          type: string
      required:
        - messageLocalized
        - entityLinks
      title: NotificationPayload
      type: object
      description: NotificationPayload
    NotificationSearchPayload:
      properties:
        after:
          deprecated: false
          description: >-
            The cursor to start after. The value is provided in the
            `pageInfo.endCursor` field of the response.
          type: string
        options:
          $ref: '#/components/schemas/SearchOptions'
        query:
          $ref: '#/components/schemas/NotificationSearchQuery'
        size:
          default: 20
          description: Number of items to return.
          maximum: 250
          minimum: 1
          type: number
        sort:
          description: Use for sorting the result.
          items:
            $ref: '#/components/schemas/NotificationSort'
          maxItems: 1
          minItems: 1
          type: array
        startAfterId:
          deprecated: true
          description: >-
            The ID to start after. Deprecated, use `after` with the value
            provided in `pageInfo.endCursor` instead.
          type: string
      required:
        - query
      title: NotificationSearchPayload
      type: object
      description: NotificationSearchPayload
    NotificationSearchQuery:
      properties:
        and:
          items:
            $ref: '#/components/schemas/NotificationSearchQuery'
          type: array
        category:
          allOf:
            - $ref: '#/components/schemas/NotificationCategoryEnumFilter'
          description: Search by category
        created:
          allOf:
            - $ref: '#/components/schemas/DateFilter'
          description: >-
            Search entries by created. Applying a narrow and well-considered
            filter value is strongly recommended, as it can greatly improve
            response times, especially when working with large datasets.
        or:
          items:
            $ref: '#/components/schemas/NotificationSearchQuery'
          type: array
        status:
          allOf:
            - $ref: >-
                #/components/schemas/NotificationClientNotificationStatusEnumFilter
          description: Search by status
      title: NotificationSearchQuery
      type: object
      description: NotificationSearchQuery
    NotificationSort:
      properties:
        created:
          enum:
            - ASC
            - DESC
          type: string
        status:
          enum:
            - ASC
            - DESC
          type: string
      title: NotificationSort
      type: object
      description: NotificationSort
    NullableEntity:
      nullable: true
      title: NullableEntity
      description: NullableEntity
    NumberEqFilter:
      properties:
        eq:
          type: number
        gt:
          type: number
        gte:
          type: number
        lt:
          type: number
        lte:
          type: number
        notEq:
          type: number
      title: NumberEqFilter
      type: object
      description: NumberEqFilter
    NumberFilter:
      properties:
        eq:
          type: number
        gt:
          type: number
        gte:
          type: number
        in:
          items:
            type: number
          maxItems: 25
          type: array
        lt:
          type: number
        lte:
          type: number
        notEq:
          type: number
        notIn:
          items:
            type: number
          maxItems: 25
          type: array
      title: NumberFilter
      type: object
      description: NumberFilter
    OfferedDocument:
      properties:
        documentCategory:
          $ref: '#/components/schemas/DocumentCategory'
      required:
        - documentCategory
      type: object
      title: OfferedDocument
      description: OfferedDocument
    OfferedDocumentPerTag:
      properties:
        matchingValues:
          items:
            minItems: 1
            type: string
          type: array
        offeredDocuments:
          items:
            $ref: '#/components/schemas/OfferedDocument'
          type: array
        tagRef:
          type: string
      required:
        - offeredDocuments
        - matchingValues
        - tagRef
      type: object
      title: OfferedDocumentPerTag
      description: OfferedDocumentPerTag
    OfferedScanningRuleByTag:
      additionalProperties: false
      properties:
        matchingValues:
          items:
            type: string
          minItems: 1
          type: array
        scanningType:
          $ref: '#/components/schemas/PickingScanningConfigurationEnum'
        tagRef:
          minLength: 1
          type: string
      required:
        - tagRef
        - matchingValues
        - scanningType
      type: object
      title: OfferedScanningRuleByTag
      description: OfferedScanningRuleByTag
    OfferedStickersByTag:
      additionalProperties: false
      properties:
        matchingValues:
          items:
            type: string
          minItems: 1
          type: array
        stickers:
          items:
            $ref: '#/components/schemas/Sticker'
          minItems: 1
          type: array
        tagRef:
          type: string
      required:
        - tagRef
        - matchingValues
        - stickers
      type: object
      title: OfferedStickersByTag
      description: OfferedStickersByTag
    OidcProviderCustomParameter:
      properties:
        key:
          type: string
        value:
          type: string
      required:
        - key
        - value
      title: OidcProviderCustomParameter
      type: object
      description: OidcProviderCustomParameter
    OidcProviderForCreation:
      properties:
        assignedGroups:
          description: The assigned groups of the OIDC provider
          items:
            $ref: '#/components/schemas/AssignedGroup'
          type: array
        clientId:
          description: The client id of the OIDC provider
          type: string
        clientSecret:
          description: The client secret of the OIDC provider
          type: string
        customParameters:
          description: The custom parameters of the OIDC provider
          items:
            $ref: '#/components/schemas/OidcProviderCustomParameter'
          type: array
        issuer:
          description: The issuer of the OIDC provider
          type: string
        name:
          description: The name of the OIDC provider
          type: string
        status:
          description: The status of the OIDC provider
          enum:
            - ACTIVE
            - INACTIVE
          type: string
      required:
        - name
        - status
        - issuer
        - clientId
        - customParameters
        - assignedGroups
        - clientSecret
      title: OidcProviderForCreation
      type: object
      description: OidcProviderForCreation
    OidcProviderForPatch:
      properties:
        assignedGroups:
          description: The assigned groups of the OIDC provider
          items:
            $ref: '#/components/schemas/AssignedGroup'
          type: array
        clientId:
          description: The client id of the OIDC provider
          type: string
        clientSecret:
          description: The client secret of the OIDC provider
          type: string
        customParameters:
          description: The custom parameters of the OIDC provider
          items:
            $ref: '#/components/schemas/OidcProviderCustomParameter'
          type: array
        issuer:
          description: The issuer of the OIDC provider
          type: string
        name:
          description: The name of the OIDC provider
          type: string
        status:
          description: The status of the OIDC provider
          enum:
            - ACTIVE
            - INACTIVE
          type: string
        version:
          description: The version of the OIDC provider
          type: number
      required:
        - version
      title: OidcProviderForPatch
      type: object
      description: OidcProviderForPatch
    OidcProviderForUpdate:
      properties:
        assignedGroups:
          description: The assigned groups of the OIDC provider
          items:
            $ref: '#/components/schemas/AssignedGroup'
          type: array
        clientId:
          description: The client id of the OIDC provider
          type: string
        clientSecret:
          description: The client secret of the OIDC provider
          type: string
        customParameters:
          description: The custom parameters of the OIDC provider
          items:
            $ref: '#/components/schemas/OidcProviderCustomParameter'
          type: array
        issuer:
          description: The issuer of the OIDC provider
          type: string
        name:
          description: The name of the OIDC provider
          type: string
        status:
          description: The status of the OIDC provider
          enum:
            - ACTIVE
            - INACTIVE
          type: string
        version:
          description: The version of the OIDC provider
          type: number
      required:
        - name
        - status
        - issuer
        - clientId
        - customParameters
        - assignedGroups
        - clientSecret
        - version
      title: OidcProviderForUpdate
      type: object
      description: OidcProviderForUpdate
    OidcProviders:
      properties:
        providers:
          description: The list of OIDC providers
          items:
            $ref: '#/components/schemas/StrippedOidcProvider'
          type: array
        total:
          description: The total number of OIDC providers
          type: number
      required:
        - total
        - providers
      title: OidcProviders
      type: object
      description: OidcProviders
    OpenItemReturnActionEnum:
      enum:
        - OpenItemReturn
      type: string
      title: OpenItemReturnActionEnum
      description: OpenItemReturnActionEnum
    OpenItemReturnActionParameter:
      additionalProperties: false
      description: Action to open an ItemReturn.
      properties:
        itemReturnJobVersion:
          description: Version of the entity to be changed
          minimum: 0
          type: integer
        name:
          $ref: '#/components/schemas/OpenItemReturnActionEnum'
      required:
        - name
        - itemReturnJobVersion
      title: OpenItemReturnActionParameter
    OperationalRestowingConfigurations:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        restowingProcessConfiguration:
          $ref: '#/components/schemas/RestowingProcessConfiguration'
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          format: int64
          type: integer
      required:
        - version
      type: object
      title: OperationalRestowingConfigurations
      description: OperationalRestowingConfigurations
    OperativeContainerType:
      additionalProperties: false
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        nameLocalized:
          $ref: '#/components/schemas/LocaleString'
        descriptionLocalized:
          $ref: '#/components/schemas/LocaleString'
        allowedOperativeTypes:
          items:
            $ref: '#/components/schemas/OperativeType'
          minItems: 1
          type: array
        customAttributes:
          description: >-
            Attributes that can be added to the operativeContainerType. These
            attributes cannot be used within fulfillment processes, but it could
            be useful to have the informations carried here.
          type: object
        description:
          type: string
        dimensions:
          $ref: '#/components/schemas/ContainerDimensions'
        iconUrl:
          type: string
        id:
          type: string
        name:
          type: string
        priority:
          description: >-
            This value gives the priority of the respective
            operativeContainerType. The lower the value the higher is the
            priority, e.g. priority 1 is higher than priority 10. The priority
            can be used to order packingContainerTypes in the UI.
          example: 100
          format: int32
          maximum: 10000
          minimum: 1
          type: integer
        scannableIdentifiers:
          items:
            $ref: '#/components/schemas/ScannableIdentifier'
          maxItems: 1
          type: array
        weightLimitInG:
          description: 'Maximal weight in gramm(gr) the container can be loaded with. '
          example: 2500
          minimum: 1
          type: number
      required:
        - id
        - version
        - nameLocalized
        - allowedOperativeTypes
      type: object
      title: OperativeContainerType
      description: OperativeContainerType
    OperativeContainerTypeForCreation:
      additionalProperties: false
      properties:
        nameLocalized:
          $ref: '#/components/schemas/LocaleString'
        descriptionLocalized:
          $ref: '#/components/schemas/LocaleString'
        allowedOperativeTypes:
          items:
            $ref: '#/components/schemas/OperativeType'
          minItems: 1
          type: array
        customAttributes:
          description: >-
            Attributes that can be added to the operativeContainerType. These
            attributes cannot be used within fulfillment processes, but it could
            be useful to have the informations carried here.
          type: object
        dimensions:
          $ref: '#/components/schemas/ContainerDimensions'
        icon:
          $ref: '#/components/schemas/NamedFile'
        iconUrl:
          description: ''
          type: string
        priority:
          description: >-
            This value gives the priority of the respective
            operativeContainerType. The lower the value the higher is the
            priority, e.g. priority 1 is higher than priority 10. The priority
            can be used to order packingContainerTypes in the UI.
          example: 100
          format: int32
          maximum: 10000
          minimum: 1
          type: integer
        scannableIdentifiers:
          items:
            $ref: '#/components/schemas/ScannableIdentifier'
          maxItems: 1
          type: array
        weightLimitInG:
          description: 'Maximal weight in gramm(gr) the container can be loaded with. '
          example: 2500
          minimum: 1
          type: number
      required:
        - nameLocalized
        - allowedOperativeTypes
      type: object
      title: OperativeContainerTypeForCreation
      description: OperativeContainerTypeForCreation
    OperativeContainerTypeForUpdate:
      additionalProperties: false
      properties:
        nameLocalized:
          $ref: '#/components/schemas/LocaleString'
        descriptionLocalized:
          $ref: '#/components/schemas/LocaleString'
        allowedOperativeTypes:
          items:
            $ref: '#/components/schemas/OperativeType'
          type: array
        customAttributes:
          description: >-
            Attributes that can be added to the operativeContainerTypes. These
            attributes cannot be used within fulfillment processes, but it could
            be useful to have the informations carried here.
          type: object
        dimensions:
          $ref: '#/components/schemas/ContainerDimensions'
        iconUrl:
          description: ''
          type: string
        priority:
          description: >-
            This value gives the priority of the respective
            operativeContainerType. The lower the value the higher is the
            priority, e.g. priority 1 is higher than priority 10. The priority
            can be used to order packingContainerTypes in the UI.
          example: 100
          format: int32
          maximum: 10000
          minimum: 1
          type: integer
        scannableIdentifiers:
          items:
            $ref: '#/components/schemas/ScannableIdentifier'
          maxItems: 1
          type: array
        version:
          minimum: 1
          type: integer
        weightLimitInG:
          description: 'Maximal weight in gramm(gr) the container can be loaded with. '
          example: 2500
          minimum: 1
          type: number
      required:
        - version
      type: object
      title: OperativeContainerTypeForUpdate
      description: OperativeContainerTypeForUpdate
    OperativeContainerTypes:
      additionalProperties: false
      items:
        $ref: '#/components/schemas/OperativeContainerType'
      type: array
      title: OperativeContainerTypes
      description: OperativeContainerTypes
    OperativeContainerTypesResponse:
      additionalProperties: false
      properties:
        operativeContainerTypes:
          items:
            $ref: '#/components/schemas/OperativeContainerType'
          type: array
        total:
          description: Total number of found entities for this query
          example: 42
          type: integer
      type: object
      title: OperativeContainerTypesResponse
      description: OperativeContainerTypesResponse
    OperativeEntity:
      additionalProperties: false
      properties:
        entityChildren:
          description: Tree structure of entities belonging to this entity
          items:
            $ref: '#/components/schemas/OperativeEntity'
        entityRef:
          description: Reference to the full entity
          type: string
        entityType:
          $ref: '#/components/schemas/OperativeEntityType'
      required:
        - entityRef
        - entityType
      title: OperativeEntity
      description: OperativeEntity
    OperativeEntityType:
      enum:
        - PICK_JOB
        - PACK_JOB
        - SHIPMENT
        - HANDOVER_JOB
        - PARCEL
        - SERVICE_JOB
        - RESTOW_ITEM
        - ITEM_RETURN_JOB
        - LINKED_SERVICE_JOBS
        - PACKING_TARGET_CONTAINER
      type: string
      title: OperativeEntityType
      description: OperativeEntityType
    OperativeProcess:
      additionalProperties: false
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        entityChildren:
          description: Tree structure of entities belonging to this operative process
          items:
            $ref: '#/components/schemas/OperativeEntity'
          minLength: 0
        facilityRef:
          description: Reference to the facility this operative process is handled in
          type: string
        flatEntityRefs:
          description: >-
            References to all operational entities belonging to this operative
            process
          items:
            type: string
          minLength: 0
        id:
          type: string
        processRef:
          description: Reference to the overall process
          type: string
        routingPlanRef:
          description: Reference to the connected routing plan if available
          type: string
      required:
        - id
        - processRef
        - facilityRef
        - flatEntityRefs
        - entityChildren
      type: object
      title: OperativeProcess
      description: OperativeProcess
    OperativeProcessForCreation:
      additionalProperties: false
      properties:
        entityChildren:
          description: Tree structure of entities belonging to this operative process
          items:
            $ref: '#/components/schemas/OperativeEntity'
        facilityRef:
          description: Reference to the facility this operative process is handled in
          type: string
        processRef:
          description: Reference to the overall process
          type: string
        routingPlanRef:
          description: Reference to the connected routing plan if available
          type: string
      required:
        - processRef
        - facilityRef
      type: object
      title: OperativeProcessForCreation
      description: OperativeProcessForCreation
    OperativeServiceConfiguration:
      additionalProperties: false
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        cancelReasons:
          items:
            $ref: '#/components/schemas/ServiceJobCancelReason'
          type: array
        id:
          description: ID of the Operative Service Configuration is always operativeservice
          type: string
      required:
        - id
      type: object
      title: OperativeServiceConfiguration
      description: OperativeServiceConfiguration
    OperativeServiceConfigurationForUpsert:
      additionalProperties: false
      properties:
        cancelReasons:
          items:
            $ref: '#/components/schemas/ServiceJobCancelReason'
          type: array
        version:
          minimum: 1
          type: number
      required:
        - version
      type: object
      title: OperativeServiceConfigurationForUpsert
      description: OperativeServiceConfigurationForUpsert
    OperativeTransfer:
      additionalProperties: false
      properties:
        id:
          description: The id of the transfer
          example: 018fe899-80ec-70f8-9bda-f7cc904bc0bf
          type: string
        type:
          description: The type of the transfer
          enum:
            - SUPPLIER
            - RECEIVER
          example: RECEIVER
          type: string
      required:
        - id
        - type
      title: OperativeTransfer
      type: object
      description: OperativeTransfer
    OperativeType:
      enum:
        - PICKING
        - PACKING_SOURCE
        - PACKING_TARGET
        - HANDOVER
      type: string
      title: OperativeType
      description: OperativeType
    OptimizationHints:
      properties:
        includeCalculationHints:
          default: false
          description: >-
            Should only be used for debugging. Includes more information on how
            we calculated the response.
          type: boolean
        requestedResultCount:
          default: 1
          description: Number of different results we calculated
          example: 3
          type: integer
      type: object
      title: OptimizationHints
      description: OptimizationHints
    Order:
      allOf:
        - $ref: '#/components/schemas/OrderForCreation'
        - $ref: '#/components/schemas/VersionedResource'
        - properties:
            anonymized:
              description: Indicates if gdpr related data was anonymized
              example: false
              type: boolean
            cancelationReason:
              $ref: '#/components/schemas/CancelationReason'
            customServices:
              items:
                $ref: '#/components/schemas/CustomServiceReference'
              minItems: 1
              type: array
            id:
              description: >-
                The id of this order. It is generated during creation
                automatically and suits as the primary identifier of the
                described entity.
              example: LGMl2DuvPnfPoSHhYFOm
              type: string
            orderLineItems:
              items:
                $ref: '#/components/schemas/OrderLineItem'
              type: array
            paymentInfo:
              $ref: '#/components/schemas/OrderPaymentInfo'
            processId:
              description: >-
                Id of the global process related to this entity. For example
                used for starting the GDPR process and others.
              type: string
            schemaVersion:
              type: number
            status:
              $ref: '#/components/schemas/OrderStatus'
          required:
            - id
            - status
            - orderLineItems
            - processId
          type: object
      xml:
        name: Order
      title: Order
      description: Order
    OrderActionsParameter:
      oneOf:
        - $ref: '#/components/schemas/OrderUnlockActionParameter'
        - $ref: '#/components/schemas/OrderCancelActionParameter'
        - $ref: '#/components/schemas/OrderForceCancelActionParameter'
        - $ref: '#/components/schemas/PromiseConfirmActionParameter'
        - $ref: '#/components/schemas/PromiseExtendActionParameter'
        - $ref: '#/components/schemas/OrderConsumerAddressChangeActionParameter'
        - $ref: '#/components/schemas/OrderConsumerAddressesReplaceActionParameter'
      title: OrderActionsParameter
      description: OrderActionsParameter
    OrderArticleAttributeItem:
      allOf:
        - $ref: '#/components/schemas/ArticleAttributeItem'
      title: OrderArticleAttributeItem
      description: OrderArticleAttributeItem
    OrderCancelActionParameter:
      allOf:
        - $ref: '#/components/schemas/AbstractOrderActionsParameter'
      description: Action to cancel an order.
      properties:
        cancelationReasonId:
          description: ID of the cancelation reason
          type: string
        name:
          enum:
            - CANCEL
          type: string
      required:
        - name
        - version
      title: OrderCancelActionParameter
    OrderCancelationConfiguration:
      additionalProperties: false
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />This configuration is to define specific rules for canceling orders
        such as the forced cancelation.
      properties:
        allowForceCancelOrder:
          type: boolean
        created:
          description: >-
            The date this order was created at the platform. This value is
            generated by the service.
          example: 2020-02-03T08:45:51.525Z
          format: date-time
          type: string
        id:
          type: string
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          format: int64
          type: integer
      required:
        - version
        - allowForceCancelOrder
      type: object
      title: OrderCancelationConfiguration
      x-badges:
        - color: orange
          label: BETA
    OrderCancelledByExpiryEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          $ref: '#/components/schemas/Order'
      required:
        - payload
      type: object
      title: OrderCancelledByExpiryEvent
      description: OrderCancelledByExpiryEvent
    OrderCancelledWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          $ref: '#/components/schemas/Order'
      required:
        - payload
      type: object
      title: OrderCancelledWebHookEvent
      description: OrderCancelledWebHookEvent
    OrderConsumerAddressChangeActionParameter:
      allOf:
        - $ref: '#/components/schemas/AbstractOrderActionsParameter'
      description: >-
        Action to change a consumer address of an order, e.g. the postal
        address.
      properties:
        addressType:
          $ref: '#/components/schemas/AddressType'
        consumerAddress:
          $ref: '#/components/schemas/ConsumerAddress'
        name:
          enum:
            - CHANGE_CONSUMER_ADDRESS
          type: string
      required:
        - name
        - version
        - consumerAddress
        - addressType
      title: OrderConsumerAddressChangeActionParameter
    OrderConsumerAddressesAddressTypeEnumFilter:
      properties:
        eq:
          description: Search by addressType
          enum:
            - POSTAL_ADDRESS
            - PARCEL_LOCKER
            - INVOICE_ADDRESS
          type: string
        in:
          description: Search by addressType
          items:
            enum:
              - POSTAL_ADDRESS
              - PARCEL_LOCKER
              - INVOICE_ADDRESS
            type: string
          type: array
        notEq:
          description: Search by addressType
          enum:
            - POSTAL_ADDRESS
            - PARCEL_LOCKER
            - INVOICE_ADDRESS
          type: string
      title: OrderConsumerAddressesAddressTypeEnumFilter
      type: object
      description: OrderConsumerAddressesAddressTypeEnumFilter
    OrderConsumerAddressesFilter:
      properties:
        addressType:
          allOf:
            - $ref: '#/components/schemas/OrderConsumerAddressesAddressTypeEnumFilter'
          description: Search by addressType
        city:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by city
        companyName:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by companyName
        country:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by country
        email:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by email
        firstName:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by firstName
        houseNumber:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by houseNumber
        lastName:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by lastName
        postalCode:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by postalCode
        province:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by province
        street:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by street
      title: OrderConsumerAddressesFilter
      type: object
      description: OrderConsumerAddressesFilter
    OrderConsumerAddressesListFilter:
      properties:
        contains:
          allOf:
            - $ref: '#/components/schemas/OrderConsumerAddressesFilter'
          description: Contains returns if at least one entry matches
      title: OrderConsumerAddressesListFilter
      type: object
      description: OrderConsumerAddressesListFilter
    OrderConsumerAddressesReplaceActionParameter:
      allOf:
        - $ref: '#/components/schemas/AbstractOrderActionsParameter'
      description: Action to replace all consumer addresses of an order.
      properties:
        consumerAddresses:
          items:
            $ref: '#/components/schemas/ConsumerAddress'
          type: array
        name:
          enum:
            - REPLACE_CONSUMER_ADDRESSES
          type: string
      required:
        - name
        - version
        - consumerAddresses
      title: OrderConsumerAddressesReplaceActionParameter
    OrderConsumerFilter:
      properties:
        addresses:
          allOf:
            - $ref: '#/components/schemas/OrderConsumerAddressesListFilter'
          description: Nested list search by addresses
        consumerId:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by consumerId
      title: OrderConsumerFilter
      type: object
      description: OrderConsumerFilter
    OrderCreatedWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          $ref: '#/components/schemas/Order'
      required:
        - payload
      type: object
      title: OrderCreatedWebHookEvent
      description: OrderCreatedWebHookEvent
    OrderDeliveryPreferencesCollectFilter:
      properties:
        facilityRef:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by facilityRef
        paid:
          allOf:
            - $ref: '#/components/schemas/BooleanFilter'
          description: Search by paid
      title: OrderDeliveryPreferencesCollectFilter
      type: object
      description: OrderDeliveryPreferencesCollectFilter
    OrderDeliveryPreferencesCollectListFilter:
      properties:
        contains:
          allOf:
            - $ref: '#/components/schemas/OrderDeliveryPreferencesCollectFilter'
          description: Contains returns if at least one entry matches
      title: OrderDeliveryPreferencesCollectListFilter
      type: object
      description: OrderDeliveryPreferencesCollectListFilter
    OrderDeliveryPreferencesFilter:
      properties:
        collect:
          allOf:
            - $ref: '#/components/schemas/OrderDeliveryPreferencesCollectListFilter'
          description: Nested list search by collect
        shipping:
          allOf:
            - $ref: '#/components/schemas/OrderDeliveryPreferencesShippingFilter'
          description: Nested search by shipping
      title: OrderDeliveryPreferencesFilter
      type: object
      description: OrderDeliveryPreferencesFilter
    OrderDeliveryPreferencesShippingDeliveryServiceLevelEnumFilter:
      properties:
        eq:
          description: Search by serviceLevel
          enum:
            - DELIVERY
            - SAMEDAY
          type: string
        in:
          description: Search by serviceLevel
          items:
            enum:
              - DELIVERY
              - SAMEDAY
            type: string
          type: array
        notEq:
          description: Search by serviceLevel
          enum:
            - DELIVERY
            - SAMEDAY
          type: string
      title: OrderDeliveryPreferencesShippingDeliveryServiceLevelEnumFilter
      type: object
      description: OrderDeliveryPreferencesShippingDeliveryServiceLevelEnumFilter
    OrderDeliveryPreferencesShippingFilter:
      properties:
        desiredDeliveryTime:
          allOf:
            - $ref: '#/components/schemas/DateFilter'
          description: Search by desiredDeliveryTime
        serviceLevel:
          allOf:
            - $ref: >-
                #/components/schemas/OrderDeliveryPreferencesShippingDeliveryServiceLevelEnumFilter
          description: Search by serviceLevel
      title: OrderDeliveryPreferencesShippingFilter
      type: object
      description: OrderDeliveryPreferencesShippingFilter
    OrderFenceDecision:
      properties:
        decision:
          $ref: '#/components/schemas/FenceResultStatus'
        details:
          items:
            anyOf:
              - $ref: '#/components/schemas/OrderFenceDecisionDetail'
              - $ref: '#/components/schemas/ToolkitDecisionDetail'
              - $ref: '#/components/schemas/ToolkitComparisonDecisionDetail'
          type: array
        name:
          type: string
      required:
        - name
        - decision
        - details
      type: object
      title: OrderFenceDecision
      description: OrderFenceDecision
    OrderFenceDecisionDetail:
      allOf:
        - $ref: '#/components/schemas/BaseDecisionDetail'
      description: Order Fence Decision Detail.
      properties:
        actualValue:
          type: string
        contextReference:
          $ref: '#/components/schemas/ContextReference'
        expectedValue:
          type: string
        reactiveErrorReason:
          $ref: '#/components/schemas/ReactiveErrorReason'
      required:
        - expectedValue
        - facilityValue
        - decisionType
      title: OrderFenceDecisionDetail
    OrderForceCancelActionParameter:
      allOf:
        - $ref: '#/components/schemas/AbstractOrderActionsParameter'
      description: Action to force cancel an order.
      properties:
        name:
          enum:
            - FORCE_CANCEL
          type: string
      required:
        - name
        - version
      title: OrderForceCancelActionParameter
    OrderForceCancelledWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          $ref: '#/components/schemas/Order'
      required:
        - payload
      type: object
      title: OrderForceCancelledWebHookEvent
      description: OrderForceCancelledWebHookEvent
    OrderForCreation:
      additionalProperties: false
      properties:
        consumer:
          properties:
            addresses:
              items:
                $ref: '#/components/schemas/ConsumerAddress'
              type: array
            consumerId:
              description: The id of the consumer.
              example: e4213a07-f563-46a3-b1ba-4dfeb6abe82a
              type: string
            customAttributes:
              description: >-
                Attributes that can be added to the consumer. These attributes
                cannot be used within fulfillment processes, but it could be
                useful to have the informations carried here.
              type: object
            email:
              deprecated: true
              description: >
                @deprecated The email address of the consumer. Use email in
                addresses array
              example: max@speedyboxales.com
              format: email
              type: string
            facilityRef:
              description: ID of the facility, if the recipient is a facility.
              example: e4213a07-f563-46a3-b1ba-4dfeb6abe82a
              type: string
            tenantFacilityId:
              description: tenantFacilityId of the facility, if the recipient is a facility
              type: string
          type: object
        customAttributes:
          description: >-
            Attributes that can be added to the order. These attributes cannot
            be used within fulfillment processes, but it could be useful to have
            the informations carried here.
          type: object
        customServices:
          items:
            $ref: '#/components/schemas/CustomServiceReferenceForCreation'
          minItems: 1
          type: array
        deliveryPreferences:
          $ref: '#/components/schemas/DeliveryPreferences'
        orderDate:
          description: The date this order was created at the supplying system.
          example: 2020-02-03T08:45:50.525Z
          format: date-time
          type: string
        orderLineItems:
          items:
            $ref: '#/components/schemas/OrderLineItemForCreation'
          type: array
        paymentInfo:
          $ref: '#/components/schemas/OrderPaymentInfoForCreation'
        promisesOptions:
          $ref: '#/components/schemas/OrderPromisesOptions'
        status:
          $ref: '#/components/schemas/OrderStatus'
        statusReasons:
          items:
            $ref: '#/components/schemas/OrderStatusReason'
          type: array
        stickers:
          items:
            $ref: '#/components/schemas/Sticker'
          maxItems: 100
          minItems: 1
          type: array
        tenantOrderId:
          description: >-
            Field can be used as a reference number in foreign systems, for
            example as a reference to the source system's identifier for this
            order.
          example: R456728546
          type: string
        tags:
          items:
            $ref: '#/components/schemas/TagReference'
          minItems: 1
          type: array
      required:
        - orderDate
        - orderLineItems
        - consumer
      type: object
      xml:
        name: Order
      title: OrderForCreation
      description: OrderForCreation
    OrderForSourcingOptionsRequest:
      additionalProperties: false
      properties:
        consumer:
          $ref: '#/components/schemas/ConsumerAddressesForSourcingOptions'
        customAttributes:
          description: >-
            Attributes that can be added to the order. These attributes cannot
            be used within fulfillment processes, but it could be useful to have
            the informations carried here.
          type: object
        customServices:
          items:
            $ref: '#/components/schemas/CustomServiceReferenceForCreation'
          minItems: 1
          type: array
        deliveryPreferences:
          $ref: '#/components/schemas/DeliveryPreferences'
        orderDate:
          description: The date this order was created at the supplying system.
          example: 2020-02-03T08:45:50.525Z
          format: date-time
          type: string
        orderLineItems:
          items:
            $ref: '#/components/schemas/OrderLineItemForCreation'
          type: array
        paymentInfo:
          $ref: '#/components/schemas/OrderPaymentInfoForCreation'
        promisesOptions:
          $ref: '#/components/schemas/OrderPromisesOptions'
        status:
          $ref: '#/components/schemas/OrderStatus'
        statusReasons:
          items:
            $ref: '#/components/schemas/OrderStatusReason'
          type: array
        stickers:
          items:
            $ref: '#/components/schemas/Sticker'
          maxItems: 100
          minItems: 1
          type: array
        tenantOrderId:
          description: >-
            Field can be used as a reference number in foreign systems, for
            example as a reference to the source system's identifier for this
            order.
          example: R456728546
          type: string
        tags:
          items:
            $ref: '#/components/schemas/TagReference'
          minItems: 1
          type: array
      required:
        - consumer
      type: object
      xml:
        name: OrderForSourcingOptionsRequest
      title: OrderForSourcingOptionsRequest
      description: OrderForSourcingOptionsRequest
    OrderForUpdate:
      additionalProperties: false
      properties:
        customAttributes:
          description: >-
            Attributes that can be added to the order. These attributes cannot
            be used within fulfillment processes, but it could be useful to have
            the informations carried here.
          nullable: true
          type: object
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          format: int64
          type: integer
      required:
        - version
      type: object
      xml:
        name: OrderForUpdate
      title: OrderForUpdate
      description: OrderForUpdate
    OrderInformation:
      properties:
        orderDate:
          description: The date the order was created.
          example: 2020-02-03T08:45:50.525Z
          format: date-time
          type: string
        orderNumber:
          description: An identifier for the order.
          example: R456728546
          pattern: ^.+$
          type: string
      type: object
      title: OrderInformation
      description: OrderInformation
    OrderLineItem:
      allOf:
        - $ref: '#/components/schemas/OrderLineItemForCreation'
        - properties:
            id:
              description: >-
                The id of this orderline. It is generated during creation
                automatically by the API and suits as the primary identifier of
                the described line.
              example: LGMl2DuvPnfPoSHhYFOm
              type: string
          required:
            - id
          type: object
      title: OrderLineItem
      description: OrderLineItem
    OrderLineItemActionsParameter:
      oneOf:
        - $ref: '#/components/schemas/OrderLineItemCustomAttributesUpdateParameter'
      type: object
      title: OrderLineItemActionsParameter
      description: OrderLineItemActionsParameter
    OrderLineItemArticle:
      allOf:
        - $ref: '#/components/schemas/AbstractArticle'
        - properties:
            attributes:
              description: >-
                Attributes are used in the fulfillmenttools platform in order to
                impose a certain degree of customization to a process, such as
                improving the appearance in the platform and clients.

                Details about usage can be found <a
                href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/customization-via-attributes">here</a>
              items:
                $ref: '#/components/schemas/OrderArticleAttributeItem'
              type: array
          type: object
      xml:
        name: OrderLineItemArticle
      title: OrderLineItemArticle
      description: OrderLineItemArticle
    OrderLineItemCustomAttributesUpdateParameter:
      allOf:
        - $ref: '#/components/schemas/AbstractOrderLineItemActionsParameter'
      description: Action to update custom attributes of an order.
      properties:
        customAttributes:
          description: >-
            Attributes that can be added to the orderline. These attributes
            cannot be used within fulfillment processes, but it could be useful
            to have the informations carried here. If no customAttributes exist
            yet, they will be created for this line item.
          type: object
        name:
          enum:
            - UPDATE_CUSTOM_ATTRIBUTES
          type: string
      required:
        - name
        - version
        - customAttributes
      title: OrderLineItemCustomAttributesUpdateParameter
    OrderLineItemFenceDecision:
      properties:
        articleTitle:
          type: string
        decision:
          $ref: '#/components/schemas/FenceResultStatus'
        details:
          items:
            anyOf:
              - $ref: '#/components/schemas/OrderFenceDecisionDetail'
              - $ref: '#/components/schemas/ToolkitDecisionDetail'
              - $ref: '#/components/schemas/ToolkitComparisonDecisionDetail'
          type: array
        reactiveErrorReason:
          $ref: '#/components/schemas/ReactiveErrorReason'
        tenantArticleId:
          type: string
      required:
        - tenantArticleId
        - articleTitle
        - decision
        - details
      type: object
      title: OrderLineItemFenceDecision
      description: OrderLineItemFenceDecision
    OrderLineItemFenceDecisions:
      properties:
        name:
          type: string
        orderLineItems:
          items:
            $ref: '#/components/schemas/OrderLineItemFenceDecision'
          type: array
      required:
        - name
        - orderLineItems
      title: OrderLineItemFenceDecisions
      description: OrderLineItemFenceDecisions
    OrderLineItemForCreation:
      additionalProperties: false
      properties:
        allowedSubstitutes:
          description: >-
            Array of allowed substitutes for given orderLineItem. If an empty
            array is provided, no substitute is allowed for this orderLineItem.
            If allowedSubstitutes is not provided, this configured substitutes
            on listing level will be available
          items:
            $ref: '#/components/schemas/Substitute'
          type: array
        article:
          $ref: '#/components/schemas/OrderLineItemArticle'
        customAttributes:
          description: >-
            Attributes that can be added to the orderline. These attributes
            cannot be used within fulfillment processes, but it could be useful
            to have the informations carried here.
          type: object
        measurementUnitKey:
          description: Identifier for items unit of measurement.
          example: liter
          type: string
        measurementValidation:
          $ref: '#/components/schemas/MeasurementValidation'
        quantity:
          description: quantity of the specific article that has been ordered
          example: 21
          format: int64
          minimum: 1
          type: integer
        scannableCodes:
          items:
            description: Codes, that identify the article
            type: string
          type: array
        secondaryMeasurementUnitKey:
          description: Secondary identifier for items unit of measurement.
          example: liter
          type: string
        secondaryQuantity:
          description: Secondary quantity of the specific article that has been ordered
          example: 21
          format: int64
          minimum: 0
          type: integer
        shopPrice:
          description: >
            @deprecated price per piece of this line item Use attributes instead
            (see: <a
            href="https://docs.fulfillmenttools.com/api-docs/connecting-to-fulfillmenttools/restful-api/general-topics/customization-via-attributes">customization
            by attributes</a>)
          example: 1200
          type: number
        tags:
          items:
            $ref: '#/components/schemas/TagReference'
          type: array
      required:
        - article
        - quantity
      type: object
      title: OrderLineItemForCreation
      description: OrderLineItemForCreation
    OrderOrderLineItemsArticleFilter:
      properties:
        titleLocalized:
          allOf:
            - $ref: >-
                #/components/schemas/OrderOrderLineItemsArticleTitleLocalizedFilter
          description: Nested search by titleLocalized
        tenantArticleId:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by tenantArticleId
        title:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by title
      title: OrderOrderLineItemsArticleFilter
      type: object
      description: OrderOrderLineItemsArticleFilter
    OrderOrderLineItemsArticleTitleLocalizedFilter:
      properties:
        de_DE:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by de_DE
        en_US:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by en_US
        ru_RU:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by ru_RU
      title: OrderOrderLineItemsArticleTitleLocalizedFilter
      type: object
      description: OrderOrderLineItemsArticleTitleLocalizedFilter
    OrderOrderLineItemsFilter:
      properties:
        article:
          allOf:
            - $ref: '#/components/schemas/OrderOrderLineItemsArticleFilter'
          description: Nested search by article
      title: OrderOrderLineItemsFilter
      type: object
      description: OrderOrderLineItemsFilter
    OrderOrderLineItemsListFilter:
      properties:
        contains:
          allOf:
            - $ref: '#/components/schemas/OrderOrderLineItemsFilter'
          description: Contains returns if at least one entry matches
      title: OrderOrderLineItemsListFilter
      type: object
      description: OrderOrderLineItemsListFilter
    OrderPaginatedResult:
      properties:
        orders:
          items:
            $ref: '#/components/schemas/Order'
          type: array
        pageInfo:
          allOf:
            - $ref: '#/components/schemas/PageInfo'
          description: Pagination information for the search result.
        total:
          description: >-
            The total number of items matching the search criteria. Only filled,
            if withTotal is set to true in the search options.
          minimum: 0
          type: number
      required:
        - pageInfo
        - orders
      title: OrderPaginatedResult
      type: object
      description: OrderPaginatedResult
    OrderPaymentInfo:
      additionalProperties: false
      properties:
        methodLocalized:
          $ref: '#/components/schemas/LocaleString'
        currency:
          description: The currency in which the consumer paid with
          example: EUR
          type: string
        method:
          description: Localized value from methodLocalized
          example: Credit Card
          type: string
      type: object
      title: OrderPaymentInfo
      description: OrderPaymentInfo
    OrderPaymentInfoFilter:
      properties:
        methodLocalized:
          allOf:
            - $ref: '#/components/schemas/OrderPaymentInfoMethodLocalizedFilter'
          description: Nested search by methodLocalized
        currency:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by currency
        method:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by method
      title: OrderPaymentInfoFilter
      type: object
      description: OrderPaymentInfoFilter
    OrderPaymentInfoForCreation:
      additionalProperties: false
      properties:
        methodLocalized:
          $ref: '#/components/schemas/LocaleString'
        currency:
          description: The currency in which the consumer paid with
          example: EUR
          type: string
      type: object
      title: OrderPaymentInfoForCreation
      description: OrderPaymentInfoForCreation
    OrderPaymentInfoMethodLocalizedFilter:
      properties:
        de_DE:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by de_DE
        en_US:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by en_US
        ru_RU:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by ru_RU
      title: OrderPaymentInfoMethodLocalizedFilter
      type: object
      description: OrderPaymentInfoMethodLocalizedFilter
    OrderPromisesOptions:
      additionalProperties: false
      properties:
        validUntil:
          description: >-
            The date the promised order will become invalid and is cancelled
            automatically, when not transformed into an actual order.
          example: 2020-02-03T08:45:50.525Z
          format: date-time
          type: string
      required:
        - validUntil
      type: object
      xml:
        name: OrderPromisesOptions
      title: OrderPromisesOptions
      description: OrderPromisesOptions
    OrderRatingDecision:
      properties:
        details:
          items:
            anyOf:
              - $ref: '#/components/schemas/ToolkitDecisionDetail'
              - $ref: '#/components/schemas/ToolkitComparisonDecisionDetail'
          type: array
        maxPenalty:
          type: number
        name:
          type: string
        normalizedScore:
          type: number
        score:
          type: number
      required:
        - name
        - normalizedScore
        - maxPenalty
      type: object
      title: OrderRatingDecision
      description: OrderRatingDecision
    OrderRoutingConfiguration:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        id:
          type: string
        infiniteStockEnabled:
          description: Config to enable/disable infinite stock
          type: boolean
      type: object
      title: OrderRoutingConfiguration
      description: OrderRoutingConfiguration
    OrderSearchPayload:
      properties:
        after:
          deprecated: false
          description: >-
            The cursor to start after. The value is provided in the
            `pageInfo.endCursor` field of the response.
          type: string
        options:
          $ref: '#/components/schemas/SearchOptions'
        query:
          $ref: '#/components/schemas/OrderSearchQuery'
        size:
          default: 20
          description: Number of items to return.
          maximum: 250
          minimum: 1
          type: number
        sort:
          description: Use for sorting the result.
          items:
            $ref: '#/components/schemas/OrderSort'
          maxItems: 1
          minItems: 1
          type: array
        startAfterId:
          deprecated: true
          description: >-
            The ID to start after. Deprecated, use `after` with the value
            provided in `pageInfo.endCursor` instead.
          type: string
      required:
        - query
      title: OrderSearchPayload
      type: object
      description: OrderSearchPayload
    OrderSearchQuery:
      properties:
        and:
          items:
            $ref: '#/components/schemas/OrderSearchQuery'
          type: array
        consumer:
          allOf:
            - $ref: '#/components/schemas/OrderConsumerFilter'
          description: Nested search by consumer
        customAttributes:
          additionalProperties:
            anyOf:
              - $ref: '#/components/schemas/BooleanFilter'
              - $ref: '#/components/schemas/StringEqFilter'
              - $ref: '#/components/schemas/NumberEqFilter'
              - $ref: '#/components/schemas/DateFilter'
          description: Search by custom attributes
          type: object
        deliveryPreferences:
          allOf:
            - $ref: '#/components/schemas/OrderDeliveryPreferencesFilter'
          description: Nested search by deliveryPreferences
        or:
          items:
            $ref: '#/components/schemas/OrderSearchQuery'
          type: array
        orderDate:
          allOf:
            - $ref: '#/components/schemas/DateFilter'
          description: >-
            Search entries by orderDate. Applying a narrow and well-considered
            filter value is strongly recommended, as it can greatly improve
            response times, especially when working with large datasets.
        orderLineItems:
          allOf:
            - $ref: '#/components/schemas/OrderOrderLineItemsListFilter'
          description: Nested list search by orderLineItems
        paymentInfo:
          allOf:
            - $ref: '#/components/schemas/OrderPaymentInfoFilter'
          description: Nested search by paymentInfo
        status:
          allOf:
            - $ref: '#/components/schemas/OrderStatusEnumFilter'
          description: Search by status
        tenantOrderId:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by tenantOrderId
        tags:
          allOf:
            - $ref: '#/components/schemas/OrderTagsListFilter'
          description: Nested list search by tags
      title: OrderSearchQuery
      type: object
      description: OrderSearchQuery
    OrderSort:
      properties:
        orderDate:
          enum:
            - ASC
            - DESC
          type: string
        status:
          enum:
            - ASC
            - DESC
          type: string
      title: OrderSort
      type: object
      description: OrderSort
    OrderSplit:
      additionalProperties: false
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      properties:
        active:
          default: false
          type: boolean
        activeForSameDay:
          default: false
          type: boolean
        fixedCountConfiguration:
          $ref: '#/components/schemas/FixedCountConfiguration'
        orderSplitType:
          $ref: '#/components/schemas/OrderSplitType'
        shouldUseWaitingRoomForPreBackOrderItems:
          default: false
          type: boolean
      required:
        - active
        - orderSplitType
      type: object
      title: OrderSplit
      x-badges:
        - color: orange
          label: BETA
    OrderSplitDecision:
      properties:
        reassignment:
          $ref: '#/components/schemas/ReassignmentInformation'
        split:
          $ref: '#/components/schemas/SplitInformation'
        splitType:
          $ref: '#/components/schemas/SplitResultType'
      required:
        - splitType
      title: OrderSplitDecision
      description: OrderSplitDecision
    OrderSplitType:
      description: The type of order split
      enum:
        - FIXED_COUNT
      type: string
      xml:
        name: OrderSplitType
      title: OrderSplitType
    OrderStatus:
      description: The state of the order. Initially it is OPEN.
      enum:
        - OPEN
        - CANCELLED
        - PROMISED
        - LOCKED
        - OBSOLETE
      type: string
      title: OrderStatus
    OrderStatusEnumFilter:
      properties:
        eq:
          description: Search by status
          enum:
            - OPEN
            - CANCELLED
            - PROMISED
            - LOCKED
            - OBSOLETE
          type: string
        in:
          description: Search by status
          items:
            enum:
              - OPEN
              - CANCELLED
              - PROMISED
              - LOCKED
              - OBSOLETE
            type: string
          type: array
        notEq:
          description: Search by status
          enum:
            - OPEN
            - CANCELLED
            - PROMISED
            - LOCKED
            - OBSOLETE
          type: string
      title: OrderStatusEnumFilter
      type: object
      description: OrderStatusEnumFilter
    OrderStatusReason:
      description: Order Status Reason.
      properties:
        reason:
          description: The reason for setting this order status
          type: string
        status:
          $ref: '#/components/schemas/OrderStatus'
      required:
        - reason
        - status
      title: OrderStatusReason
    OrderTagConfiguration:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
        - $ref: '#/components/schemas/TagConfiguration'
      properties:
        stickerConfiguration:
          $ref: '#/components/schemas/StickerConfiguration'
      title: OrderTagConfiguration
      description: OrderTagConfiguration
    OrderTagsFilter:
      properties:
        value:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by value
      title: OrderTagsFilter
      type: object
      description: OrderTagsFilter
    OrderTagsListFilter:
      properties:
        contains:
          allOf:
            - $ref: '#/components/schemas/OrderTagsFilter'
          description: Contains returns if at least one entry matches
      title: OrderTagsListFilter
      type: object
      description: OrderTagsListFilter
    OrderUnlockActionParameter:
      allOf:
        - $ref: '#/components/schemas/AbstractOrderActionsParameter'
      description: Action to unlock an order.
      properties:
        name:
          enum:
            - UNLOCK
          type: string
        targetTime:
          description: Time to be set as a targetTime for the devlivery preferences.
          example: 2025-01-15T00:00:00.000Z
          format: date-time
          type: string
      required:
        - name
        - version
      title: OrderUnlockActionParameter
    OrderUnlockedWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          $ref: '#/components/schemas/Order'
      required:
        - payload
      type: object
      title: OrderUnlockedWebHookEvent
      description: OrderUnlockedWebHookEvent
    OutboundClearTrigger:
      properties:
        event:
          enum:
            - pick-job-closed_event-v1
            - handoverjob-handed-over_event-v1
          type: string
        tagFilter:
          items:
            $ref: '#/components/schemas/OutboundTagFilter'
          type: array
      required:
        - event
      title: OutboundClearTrigger
      type: object
      description: OutboundClearTrigger
    OutboundStockConfiguration:
      properties:
        clearTrigger:
          items:
            $ref: '#/components/schemas/OutboundClearTrigger'
          type: array
        locationRef:
          type: string
        trackOutboundStock:
          type: boolean
      required:
        - trackOutboundStock
        - locationRef
      title: OutboundStockConfiguration
      type: object
      description: OutboundStockConfiguration
    OutboundTagFilter:
      properties:
        allowedValues:
          items:
            type: string
          type: array
        tagId:
          type: string
      required:
        - allowedValues
        - tagId
      title: OutboundTagFilter
      type: object
      description: OutboundTagFilter
    OutOfStockBehaviour:
      description: >-
        The PREORDER and RESTOCK can be only set, when the depending
        outOfStockConfig is provided.

        Also PREORDER and RESTOCK values are in Alpha status. For details please
        check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      enum:
        - BACKORDER
        - PREORDER
        - RESTOCK
        - PREORDER_AND_RESTOCK
      type: string
      title: OutOfStockBehaviour
    OutOfStockBehaviourByContext:
      additionalProperties: false
      properties:
        context:
          description: >-
            The context of the outOfStockBehaviour. This is used to determine
            the conditions under which the outOfStockBehaviour can be applied.

            For details please check the <a
            href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/context"
            target="_blank">context documentation</a>.
          items:
            $ref: '#/components/schemas/OutOfStockBehaviourContext'
            maxLength: 5
            minItems: 1
        outOfStockBehaviour:
          $ref: '#/components/schemas/OutOfStockBehaviour'
        outOfStockConfig:
          $ref: '#/components/schemas/OutOfStockConfig'
        priority:
          description: >-
            This value gives the priority in the respective
            OutOfStockBehaviourByContexts. The lower the value the higher is the
            priority, e.g. priority 1 is higher than priority 10. The priority
            can be used to order OutOfStockBehaviourByContexts.
          example: 100
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
      required:
        - outOfStockBehaviour
        - context
        - priority
      type: object
      title: OutOfStockBehaviourByContext
      description: OutOfStockBehaviourByContext
    OutOfStockBehaviourContext:
      additionalProperties: false
      description: >-
        The context of the outOfStockBehaviour. This is used to determine the
        conditions under which the outOfStockBehaviour can be applied.
      properties:
        operator:
          $ref: '#/components/schemas/ContextOperator'
        type:
          $ref: '#/components/schemas/OutOfStockBehaviourContextType'
        values:
          description: >-
            The values of the context. This is used to determine the conditions
            under which the outOfStockBehaviour can be applied.
          items:
            example: uuid-bkrs-0157
            maxItems: 100
            minItems: 0
            type: string
          type: array
      required:
        - type
        - values
      type: object
      title: OutOfStockBehaviourContext
    OutOfStockBehaviourContextType:
      description: >-
        The context type of the OutOfStockBehaviourContext. This is used to
        determine the conditions under which the outOfStockBehaviour can be
        applied.
      enum:
        - FACILITY_GROUP
        - TAG_REFERENCE
      type: string
      title: OutOfStockBehaviourContextType
    OutOfStockConfig:
      additionalProperties: false
      properties:
        preorder:
          properties:
            availabilityTimeframe:
              $ref: '#/components/schemas/AvailabilityTimeframe'
          required:
            - availabilityTimeframe
          type: object
        restock:
          properties:
            restockableInDays:
              type: integer
          required:
            - restockableInDays
          type: object
      type: object
      title: OutOfStockConfig
      description: OutOfStockConfig
    PackageCost:
      additionalProperties: false
      properties:
        cost:
          description: Cost of the package
          example: 0.99
          type: number
        packageName:
          description: Name of the package
          example: Small Box
          type: string
      required:
        - packageName
        - cost
      type: object
      title: PackageCost
      description: PackageCost
    PackagingUnit:
      additionalProperties: false
      properties:
        dimensions:
          $ref: '#/components/schemas/PackagingUnitDimensions'
        maxItemQuantity:
          description: The maximum item quantity of the packaging unit
          example: 10
          minimum: 0
          type: integer
        name:
          description: The name of the packaging unit
          example: Parcel XXL
          type: string
        prices:
          items:
            $ref: '#/components/schemas/InterFacilityConnectionDeliveryCost'
          type: array
        priority:
          description: >-
            The priority of the packaging unit. Lowest value has the highest
            priority. Must be unique per context
          example: 1
          minimum: 0
          type: integer
        transitTime:
          $ref: '#/components/schemas/CarrierTransitTime'
        volumeBufferInPercent:
          description: The volume buffer of PackagingUnit in percent
          example: 10
          minimum: 0
          type: integer
      required:
        - name
        - priority
      type: object
      title: PackagingUnit
      description: PackagingUnit
    PackagingUnitContext:
      additionalProperties: false
      properties:
        type:
          $ref: '#/components/schemas/PackagingUnitContextTypes'
        values:
          items:
            maxItems: 2000
            minItems: 0
            type: string
          type: array
      required:
        - type
        - values
      type: object
      title: PackagingUnitContext
      description: PackagingUnitContext
    PackagingUnitContextTypes:
      enum:
        - TARGET_POSTALCODE
        - TARGET_COUNTRY
        - CATEGORY
      type: string
      title: PackagingUnitContextTypes
      description: PackagingUnitContextTypes
    PackagingUnitDimensions:
      additionalProperties: false
      properties:
        height:
          description: The height of the packaging unit
          example: 50
          minimum: 0
          type: number
        length:
          description: The length of the packaging unit
          example: 100
          minimum: 0
          type: number
        maxWeightInGram:
          description: The weight of the packaging unit
          example: 1000
          minimum: 0
          type: number
        width:
          description: The width of the packaging unit
          example: 50
          minimum: 0
          type: number
      type: object
      title: PackagingUnitDimensions
      description: PackagingUnitDimensions
    PackagingUnitsByContext:
      additionalProperties: false
      properties:
        context:
          items:
            $ref: '#/components/schemas/PackagingUnitContext'
          maxItems: 2000
          minItems: 0
          type: array
        packagingUnits:
          items:
            $ref: '#/components/schemas/PackagingUnit'
          maxItems: 2000
          minItems: 1
          type: array
      required:
        - context
        - packagingUnits
      type: object
      title: PackagingUnitsByContext
      description: PackagingUnitsByContext
    PackingConfigurations:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        packingContainerRequiredConfiguration:
          $ref: '#/components/schemas/PackingContainerRequiredConfiguration'
        packingItemConfirmationNeededConfiguration:
          $ref: '#/components/schemas/PackingItemConfirmationNeededConfiguration'
        packingSourceContainerConfiguration:
          $ref: '#/components/schemas/PackingSourceContainerConfiguration'
        scanningConfiguration:
          $ref: '#/components/schemas/PackingScanningConfiguration'
      type: object
      title: PackingConfigurations
      description: PackingConfigurations
    PackingContainerRequiredConfiguration:
      additionalProperties: false
      description: Packing Container Required Configuration.
      properties:
        active:
          default: false
          type: boolean
      required:
        - active
      title: PackingContainerRequiredConfiguration
      type: object
    PackingContainerType:
      additionalProperties: false
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        nameLocalized:
          $ref: '#/components/schemas/LocaleString'
        descriptionLocalized:
          $ref: '#/components/schemas/LocaleString'
        description:
          type: string
        dimensions:
          $ref: '#/components/schemas/ContainerDimensions'
        iconUrl:
          description: ''
          type: string
        id:
          description: ''
          type: string
        name:
          type: string
        priority:
          description: >-
            This value gives the priority of the respective
            packingContainerType. The lower the value the higher is the
            priority, e.g. priority 1 is higher than priority 10. The priority
            can be used to order packingContainerTypes in the UI.
          example: 100
          format: int32
          maximum: 10000
          minimum: 1
          type: integer
        weightLimitInG:
          description: 'Maximal weight in gramm(gr) the container can be loaded with. '
          example: 2500
          minimum: 1
          type: number
      required:
        - id
        - version
        - nameLocalized
      type: object
      title: PackingContainerType
      description: PackingContainerType
    PackingContainerTypeForCreation:
      additionalProperties: false
      properties:
        nameLocalized:
          $ref: '#/components/schemas/LocaleString'
        descriptionLocalized:
          $ref: '#/components/schemas/LocaleString'
        dimensions:
          $ref: '#/components/schemas/ContainerDimensions'
        icon:
          $ref: '#/components/schemas/NamedFile'
        priority:
          description: >-
            This value gives the priority in the respective
            packingContainerType. The lower the value the higher is the
            priority, e.g. priority 1 is higher than priority 10. The priority
            can be used to order packingContainerTypes.
          example: 100
          format: int32
          maximum: 10000
          minimum: 1
          type: integer
        weightLimitInG:
          description: 'Maximal weight in gramm(gr) the container can be loaded with. '
          example: 2500
          minimum: 1
          type: number
      required:
        - nameLocalized
      type: object
      title: PackingContainerTypeForCreation
      description: PackingContainerTypeForCreation
    PackingContainerTypePatchActions:
      properties:
        actions:
          items:
            anyOf:
              - $ref: '#/components/schemas/ModifyPackingContainerType'
              - $ref: '#/components/schemas/ModifyPackingContainerTypeIcon'
          minItems: 1
          type: array
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          format: int64
          type: integer
      required:
        - version
        - actions
      type: object
      xml:
        name: PackingContainerTypePatchActions
      title: PackingContainerTypePatchActions
      description: PackingContainerTypePatchActions
    PackingItemConfirmationNeededConfiguration:
      additionalProperties: false
      description: Do the customer need to validate which items are part of a pack job
      properties:
        active:
          default: true
          type: boolean
      required:
        - active
      title: PackingContainerRequiredConfiguration
      type: object
    PackingScanningConfiguration:
      description: Packing Scanning Configuration.
      properties:
        scanningType:
          $ref: '#/components/schemas/PackingScanningConfigurationEnum'
      title: PackingScanningConfiguration
      type: object
    PackingScanningConfigurationEnum:
      enum:
        - MUST_SCAN_EACH
        - SCAN_NOT_REQUIRED
      type: string
      title: PackingScanningConfigurationEnum
      description: PackingScanningConfigurationEnum
    PackingSourceContainer:
      additionalProperties: false
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        nameLocalized:
          $ref: '#/components/schemas/LocaleString'
        descriptionLocalized:
          $ref: '#/components/schemas/LocaleString'
        codes:
          items:
            description: Codes, that identify the container
            type: string
          minItems: 1
          type: array
        customAttributes:
          description: >-
            Attributes that can be added to the packing source container. These
            attributes cannot be used within fulfillment processes, but it could
            be useful to have the information carried here.
          type: object
        description:
          description: >-
            Description of the packing source container in the locale the client
            requests.
          type: string
        facilityRef:
          description: >-
            Reference to the facility the packing source container is related
            to.
          example: Esb20gpHBL94X5NdMp3C
          type: string
        iconUrl:
          description: Url to the icon of the packing source container
          type: string
        id:
          description: >-
            The id of this packing source container. It is generated during
            creation automatically and suits as the primary identifier of the
            described entity.
          example: c7467ba8-c28a-4473-8748-a4e54e675e4c
          type: string
        lineItems:
          items:
            $ref: '#/components/schemas/PackingSourceContainerLineItem'
          type: array
        loadUnitRef:
          description: >-
            Reference to the load unit this packing source container is related
            to.
          example: 2357914c-d965-421e-b6cf-330501bccaab
          type: string
        name:
          description: >-
            Name of the packing source container in the locale the client
            requests.
          type: string
        packJobRefs:
          description: >-
            List of references to packJobs this packing source container is
            related to.
          items:
            example: 0857914c-d965-421e-b6cf-330501bcca58
            type: string
          minItems: 1
          type: array
        storageLocationRef:
          description: >-
            Reference to the location where the packing source container is
            located.
          type: string
        type:
          $ref: '#/components/schemas/PackingSourceContainerType'
      required:
        - packJobRefs
        - nameLocalized
        - facilityRef
        - id
        - version
        - lastModified
        - created
        - lineItems
        - type
      type: object
      title: PackingSourceContainer
      description: PackingSourceContainer
    PackingSourceContainerConfiguration:
      description: Can this tenant use the packing source container
      properties:
        active:
          default: false
          type: boolean
      required:
        - active
      title: PackingSourceContainerConfiguration
      type: object
    PackingSourceContainerForCreation:
      properties:
        nameLocalized:
          $ref: '#/components/schemas/LocaleString'
        descriptionLocalized:
          $ref: '#/components/schemas/LocaleString'
        codes:
          items:
            description: Codes, that identify the article
            type: string
          minItems: 1
          type: array
        customAttributes:
          description: >-
            Attributes that can be added to the packing source container. These
            attributes cannot be used within fulfillment processes, but it could
            be useful to have the information carried here.
          type: object
        facilityRef:
          description: >-
            The id of the facility reference. The given ID has to be present in
            the system. But it is not updatable.
          example: Esb20gpHBL94X5NdMp3C
          type: string
        icon:
          $ref: '#/components/schemas/NamedFile'
        lineItems:
          items:
            $ref: '#/components/schemas/PackingSourceContainerLineItemForCreation'
          type: array
        packJobRefs:
          description: List of references to packJobs
          items:
            example: 0857914c-d965-421e-b6cf-330501bcca58
            type: string
          minItems: 1
          type: array
        storageLocationRef:
          description: >-
            Reference to the location where the packing source container is
            located.
          type: string
      required:
        - packJobRefs
        - nameLocalized
        - facilityRef
        - lineItems
      type: object
      title: PackingSourceContainerForCreation
      description: PackingSourceContainerForCreation
    PackingSourceContainerLineItem:
      additionalProperties: false
      allOf:
        - $ref: '#/components/schemas/MandatoryLineItem'
      description: item that is inside the packingSourceContainer
      properties:
        article:
          $ref: '#/components/schemas/LineItemArticle'
        id:
          description: >-
            The id of this lineItem. It is generated during creation
            automatically and suits as the primary identifier of the described
            entity.
          example: da488ad1-4215-4b9a-9642-c39883c6cd2c
          type: string
        measurementUnitKey:
          description: Identifier for items unit of measurement.
          example: liter
          type: string
        originId:
          description: >-
            The id of the line item this line item was originated from, before
            any split has happened. This can be used to restore the ‘pre-split’
            status.
          example: df671041-10dd-4600-a2ff-e9ffe2556bba
          nullable: true
          type: string
        quantity:
          description: quantity of this item
          example: 21
          format: int64
          minimum: 1
          type: integer
        secondaryMeasurementUnitKey:
          description: >-
            Identifier for items unit of measurement. E.g. measurementUnitKey is
            pieces and secondaryQuantity is gram
          example: gram
          type: string
        secondaryQuantity:
          description: >-
            secondary quantity of this item, E.g. quantity is the count and
            secondaryQuantity is the weight
          example: 200
          format: int64
          minimum: 1
          type: integer
        stickers:
          items:
            $ref: '#/components/schemas/Sticker'
          type: array
        tags:
          items:
            $ref: '#/components/schemas/TagReference'
          type: array
      required:
        - id
        - quantity
        - article
      type: object
      xml:
        name: PackingSourceContainerLineItem
      title: PackingSourceContainerLineItem
    PackingSourceContainerLineItemForCreation:
      additionalProperties: false
      allOf:
        - $ref: '#/components/schemas/MandatoryLineItemForCreation'
      description: items that are inside the packingSourceContainer
      properties:
        article:
          $ref: '#/components/schemas/LineItemArticle'
        measurementUnitKey:
          description: Identifier for items unit of measurement.
          example: liter
          type: string
        originId:
          description: >-
            The id of the line item this line item was originated from, before
            any split has happened. This can be used to restore the ‘pre-split’
            status.
          example: df671041-10dd-4600-a2ff-e9ffe2556bba
          nullable: true
          type: string
        quantity:
          description: quantity of this item
          example: 21
          format: int64
          minimum: 1
          type: integer
        secondaryMeasurementUnitKey:
          description: >-
            Identifier for items unit of measurement. E.g. measurementUnitKey is
            pieces and secondaryQuantity is gram
          example: gram
          type: string
        secondaryQuantity:
          description: >-
            secondary quantity of this item, E.g. quantity is the count and
            secondaryQuantity is the weight
          example: 200
          format: int64
          minimum: 1
          type: integer
        stickers:
          items:
            $ref: '#/components/schemas/Sticker'
          type: array
        tags:
          items:
            $ref: '#/components/schemas/TagReference'
          type: array
      required:
        - quantity
        - article
      type: object
      xml:
        name: PackingSourceContainerLineItemForCreation
      title: PackingSourceContainerLineItemForCreation
    PackingSourceContainerType:
      description: Type of the packing source container
      enum:
        - VIRTUAL
        - PHYSICAL
      type: string
      title: PackingSourceContainerType
    PackingSourceContainerWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          $ref: '#/components/schemas/PackingSourceContainer'
      required:
        - payload
      type: object
      title: PackingSourceContainerWebHookEvent
      description: PackingSourceContainerWebHookEvent
    PackingTargetContainer:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
        - $ref: '#/components/schemas/PackingTargetContainerForCreation'
      properties:
        nameLocalized:
          $ref: '#/components/schemas/LocaleString'
        descriptionLocalized:
          $ref: '#/components/schemas/LocaleString'
        description:
          description: >-
            Description of the packing source container in the locale the client
            requests. Automatically filled upon request.
          type: string
        dimensions:
          $ref: '#/components/schemas/ContainerDimensions'
        documentsRef:
          description: Reference to the documents collection from this entity
          type: string
        facilityRef:
          description: >-
            The id of the facility reference. The given ID has to be present in
            the system. But it is not updatable via PUT request
          example: Esb20gpHBL94X5NdMp3C
          type: string
        iconUrl:
          description: >-
            Url to the icon of the packing source container  (inherited from
            operative container type).
          type: string
        id:
          description: >-
            The id of this packing source container. It is generated during
            creation automatically and suits as the primary identifier of the
            described entity.
          type: string
        lineItems:
          items:
            $ref: '#/components/schemas/PackingTargetContainerLineItem'
        name:
          description: >-
            Name of the packing source container in the locale the client
            requests. Automatically filled upon request.
          type: string
        operativeProcessRef:
          description: >-
            Reference to the operative process this packing target container is
            related to.
          type: string
        packJobRef:
          description: >-
            Reference to the packJob this packing source container is related
            to.
          type: string
        parcels:
          items:
            $ref: '#/components/schemas/Parcel'
          type: array
        shortId:
          description: Short identifier for the container
          type: string
        type:
          $ref: '#/components/schemas/PackingTargetContainerType'
        weightLimitInG:
          description: 'Maximal weight in gramm(gr) the container can be loaded with. '
          example: 2500
          minimum: 1
          type: number
      required:
        - id
        - nameLocalized
        - version
        - facilityRef
        - packJobRef
        - lineItems
        - type
      type: object
      title: PackingTargetContainer
      description: PackingTargetContainer
    PackingTargetContainerActionsParameter:
      anyOf:
        - $ref: '#/components/schemas/UpdatePackingTargetContainerLineItemAction'
        - $ref: >-
            #/components/schemas/ReplacePackingTargetContainerLineItemCodesAction
      title: PackingTargetContainerActionsParameter
      description: PackingTargetContainerActionsParameter
    PackingTargetContainerAttributeItem:
      allOf:
        - $ref: '#/components/schemas/ArticleAttributeItem'
      title: PackingTargetContainerAttributeItem
      description: PackingTargetContainerAttributeItem
    PackingTargetContainerForCreation:
      properties:
        codes:
          items:
            description: List of codes
            minItems: 1
            type: string
          type: array
        lineItems:
          items:
            $ref: '#/components/schemas/PackingTargetContainerLineItemForCreation'
        operativeContainerTypeRef:
          type: string
        packingContainerTypeRef:
          description: deprecated - use operativeContainerTypeRef instead
          type: string
        storageLocationRef:
          description: >-
            Reference to the location where the packing target container is
            located.
          type: string
      required:
        - codes
      type: object
      title: PackingTargetContainerForCreation
      description: PackingTargetContainerForCreation
    PackingTargetContainerLineItem:
      allOf:
        - $ref: '#/components/schemas/MandatoryLineItem'
      properties:
        article:
          $ref: '#/components/schemas/PackingTargetContainerLineItemArticle'
        id:
          description: >-
            The id of this lineItem. It is generated during creation
            automatically and suits as the primary identifier of the described
            entity.
          example: climk4dcQFiPdA5ULuhS
          type: string
        measurementUnitKey:
          description: Identifier for items unit of measurement.
          example: liter
          type: string
        quantity:
          description: quantity of the item
          example: 21
          format: int64
          minimum: 1
          type: integer
      required:
        - id
        - article
        - quantity
      title: PackingTargetContainerLineItem
      description: PackingTargetContainerLineItem
    PackingTargetContainerLineItemArticle:
      allOf:
        - $ref: '#/components/schemas/AbstractArticle'
        - properties:
            attributes:
              items:
                $ref: '#/components/schemas/PackingTargetContainerAttributeItem'
              maxItems: 40
              type: array
          type: object
      xml:
        name: PackingTargetContainerLineItemArticle
      title: PackingTargetContainerLineItemArticle
      description: PackingTargetContainerLineItemArticle
    PackingTargetContainerLineItemForCreation:
      allOf:
        - $ref: '#/components/schemas/MandatoryLineItemForCreation'
      properties:
        article:
          $ref: '#/components/schemas/PackingTargetContainerLineItemArticle'
        measurementUnitKey:
          description: Identifier for items unit of measurement.
          example: liter
          type: string
        quantity:
          description: quantity of the item
          example: 21
          format: int64
          minimum: 1
          type: integer
      required:
        - article
        - quantity
      title: PackingTargetContainerLineItemForCreation
      description: PackingTargetContainerLineItemForCreation
    PackingTargetContainerPatchActions:
      properties:
        actions:
          items:
            anyOf:
              - $ref: '#/components/schemas/ReplaceCodesInPackingTargetContainer'
              - $ref: '#/components/schemas/AddLineItemToPackingTargetContainer'
              - $ref: '#/components/schemas/RemoveLineItemFromPackingTargetContainer'
              - $ref: '#/components/schemas/UpdateLineItemOnPackingTargetContainer'
              - $ref: >-
                  #/components/schemas/UpdatePackingTargetContainerLineItemRecordableAttributes
          minItems: 1
          type: array
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          format: int64
          type: integer
      required:
        - version
        - actions
      type: object
      xml:
        name: PackingTargetContainerPatchActions
      title: PackingTargetContainerPatchActions
      description: PackingTargetContainerPatchActions
    PackingTargetContainerType:
      description: Type of the packing taret container
      enum:
        - VIRTUAL
        - PHYSICAL
      type: string
      title: PackingTargetContainerType
    PackingTargetContainerWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          $ref: '#/components/schemas/PackingTargetContainer'
      required:
        - payload
      type: object
      title: PackingTargetContainerWebHookEvent
      description: PackingTargetContainerWebHookEvent
    PackJob:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
        - properties:
            anonymized:
              description: Indicates if gdpr related data was anonymized
              example: false
              type: boolean
            assignedUsers:
              description: Assigned users for this entity
              items:
                $ref: '#/components/schemas/AssignedUser'
              type: array
            customAttributes:
              description: >-
                Attributes that can be added to the pack job. These attributes
                cannot be used within fulfillment processes, but it could be
                useful to have the informations carried here.
              type: object
            deliveryChannel:
              enum:
                - COLLECT
                - SHIPPING
              type: string
            documentHandling:
              $ref: '#/components/schemas/DocumentHandling'
            documentsRef:
              description: Reference to the documents collection from this entity
              type: string
            editor:
              $ref: '#/components/schemas/Editor'
            facilityRef:
              description: >-
                Reference to the facility you want to get the corresponding
                packjob
              example: Esb50gpH7794X5NdMp3C
              type: string
            id:
              description: >-
                The id of this pack job. It is generated during creation
                automatically and suits as the primary identifier of the
                described entity.
              example: Esb20gpHBL94X5NdMp3C
              type: string
            invoice:
              $ref: '#/components/schemas/ConsumerAddress'
            lineItems:
              items:
                $ref: '#/components/schemas/PackLineItem'
              type: array
            operativeProcessRef:
              type: string
            orderDate:
              description: Date when the order was placed.
              example: 2020-02-03T09:45:51.525Z
              format: date-time
              type: string
            orderRef:
              description: The id of the order
              type: string
            packingSourceContainers:
              items:
                $ref: '#/components/schemas/StrippedPackingSourceContainer'
            pickJobRef:
              description: Reference to a pick job
              example: Pic50gpH7794X5NdMp3C
              type: string
            processId:
              description: >-
                Id of the global process related to this entity. For example
                used for starting the GDPR process and others.
              type: string
            recipient:
              $ref: '#/components/schemas/ConsumerAddress'
            recipientName:
              description: The name of the recipient
              type: string
            shortId:
              description: The short identifier of the shipment.
              type: string
            status:
              $ref: '#/components/schemas/PackJobStatus'
            stickers:
              items:
                $ref: '#/components/schemas/Sticker'
              type: array
            targetTime:
              description: Until when the pack job must be finished.
              example: 2020-02-03T09:45:51.525Z
              format: date-time
              type: string
            tenantOrderId:
              type: string
            transfers:
              items:
                $ref: '#/components/schemas/OperativeTransfer'
              minItems: 0
              type: array
            tags:
              items:
                $ref: '#/components/schemas/TagReference'
              minItems: 1
              type: array
          required:
            - id
            - facilityRef
            - documentsRef
            - status
            - lineItems
            - processId
          type: object
          xml:
            name: PackJob
      title: PackJob
      description: PackJob
    PackJobActionsParameter:
      anyOf:
        - $ref: '#/components/schemas/PackJobReplaceAssignedUsersActionParameter'
        - $ref: '#/components/schemas/PackJobSplitLineItemsActionParameter'
        - $ref: >-
            #/components/schemas/UpdatePackLineItemRecordableAttributesActionParameter
      title: PackJobActionsParameter
      description: PackJobActionsParameter
    PackJobCreationPerTag:
      properties:
        matchingValues:
          items:
            minItems: 1
            type: string
          type: array
        packJobCreationDisabled:
          type: boolean
        tagRef:
          type: string
      required:
        - packJobCreationDisabled
        - matchingValues
        - tagRef
      type: object
      title: PackJobCreationPerTag
      description: PackJobCreationPerTag
    PackJobForCreation:
      additionalProperties: false
      properties:
        assignedUsers:
          description: Assigned users for this entity
          items:
            anyOf:
              - $ref: '#/components/schemas/AssignedUserForCreationByName'
              - $ref: '#/components/schemas/AssignedUserForCreationById'
          type: array
        customAttributes:
          description: >-
            Attributes that can be added to the pack job. These attributes
            cannot be used within fulfillment processes, but it could be useful
            to have the informations carried here.
          type: object
        deliveryChannel:
          enum:
            - COLLECT
            - SHIPPING
          type: string
        facilityRef:
          description: Reference to the facility you want to get the corresponding packjob
          example: Esb50gpH7794X5NdMp3C
          type: string
        invoice:
          $ref: '#/components/schemas/ConsumerAddress'
        lineItems:
          items:
            $ref: '#/components/schemas/PackLineItemForCreation'
          type: array
        operativeProcessRef:
          type: string
        orderDate:
          description: Date when the order was placed.
          example: 2020-02-03T09:45:51.525Z
          format: date-time
          type: string
        orderRef:
          description: The id of the order
          type: string
        pickJobRef:
          description: Reference to a pick job
          example: Pic50gpH7794X5NdMp3C
          type: string
        processId:
          description: >-
            Id of the global process related to this entity. For example used
            for starting the GDPR process and others.
          type: string
        recipient:
          $ref: '#/components/schemas/ConsumerAddress'
        recipientName:
          description: The name of the recipient
          type: string
        shortId:
          description: The short identifier of the shipment.
          type: string
        status:
          $ref: '#/components/schemas/PackJobStatus'
        targetTime:
          description: Until when the pack job must be finished.
          example: 2020-02-03T09:45:51.525Z
          format: date-time
          type: string
        tenantOrderId:
          type: string
        transfers:
          items:
            $ref: '#/components/schemas/OperativeTransfer'
          minItems: 0
          type: array
        tags:
          description: >-
            Tags can only be set when there is no process related with this
            packJob. Setting processId and tags will lead to an validationError.
          items:
            $ref: '#/components/schemas/TagReference'
          minItems: 1
          type: array
      required:
        - facilityRef
        - lineItems
      type: object
      xml:
        name: PackJobForCreation
      title: PackJobForCreation
      description: PackJobForCreation
    PackJobInvoiceFilter:
      properties:
        companyName:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by companyName
        email:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by email
        firstName:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by firstName
        lastName:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by lastName
      title: PackJobInvoiceFilter
      type: object
      description: PackJobInvoiceFilter
    PackJobLineItemsArticleFilter:
      properties:
        tenantArticleId:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by tenantArticleId
        title:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by title
      title: PackJobLineItemsArticleFilter
      type: object
      description: PackJobLineItemsArticleFilter
    PackJobLineItemsFilter:
      properties:
        article:
          allOf:
            - $ref: '#/components/schemas/PackJobLineItemsArticleFilter'
          description: Nested search by article
      title: PackJobLineItemsFilter
      type: object
      description: PackJobLineItemsFilter
    PackJobLineItemsListFilter:
      properties:
        contains:
          allOf:
            - $ref: '#/components/schemas/PackJobLineItemsFilter'
          description: Contains returns if at least one entry matches
      title: PackJobLineItemsListFilter
      type: object
      description: PackJobLineItemsListFilter
    PackJobOrderBy:
      description: Attribute to order a packJobs by
      enum:
        - TARGET_TIME_DESC
        - TARGET_TIME_ASC
        - LAST_MODIFIED_DESC
        - LAST_MODIFIED_ASC
        - ORDER_DATE_DESC
        - ORDER_DATE_ASC
      type: string
      xml:
        name: PackJobOrderBy
      title: PackJobOrderBy
    PackJobPackingSourceContainersFilter:
      properties:
        codes:
          allOf:
            - $ref: '#/components/schemas/StringListFilter'
          description: Search by codes
      title: PackJobPackingSourceContainersFilter
      type: object
      description: PackJobPackingSourceContainersFilter
    PackJobPackingSourceContainersListFilter:
      properties:
        contains:
          allOf:
            - $ref: '#/components/schemas/PackJobPackingSourceContainersFilter'
          description: Contains returns if at least one entry matches
      title: PackJobPackingSourceContainersListFilter
      type: object
      description: PackJobPackingSourceContainersListFilter
    PackJobPaginatedResult:
      properties:
        packJobs:
          items:
            $ref: '#/components/schemas/PackJob'
          type: array
        pageInfo:
          allOf:
            - $ref: '#/components/schemas/PageInfo'
          description: Pagination information for the search result.
        total:
          description: >-
            The total number of items matching the search criteria. Only filled,
            if withTotal is set to true in the search options.
          minimum: 0
          type: number
      required:
        - pageInfo
        - packJobs
      title: PackJobPaginatedResult
      type: object
      description: PackJobPaginatedResult
    PackJobPatchActions:
      properties:
        actions:
          items:
            anyOf:
              - $ref: '#/components/schemas/ModifyPackJob'
              - $ref: '#/components/schemas/ModifyPackLineItem'
              - $ref: '#/components/schemas/PausePackJob'
          minItems: 1
          type: array
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          format: int64
          type: integer
      required:
        - version
        - actions
      type: object
      xml:
        name: PackJobPatchActions
      title: PackJobPatchActions
      description: PackJobPatchActions
    PackJobRecipientFilter:
      properties:
        companyName:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by companyName
        email:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by email
        firstName:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by firstName
        lastName:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by lastName
      title: PackJobRecipientFilter
      type: object
      description: PackJobRecipientFilter
    PackJobReplaceAssignedUsersActionEnum:
      enum:
        - REPLACE_ASSIGNED_USERS
      type: string
      title: PackJobReplaceAssignedUsersActionEnum
      description: PackJobReplaceAssignedUsersActionEnum
    PackJobReplaceAssignedUsersActionParameter:
      additionalProperties: false
      description: Action to replace the assigned users.
      properties:
        assignedUsers:
          description: Assigned users for this entity
          items:
            anyOf:
              - $ref: '#/components/schemas/AssignedUserForCreationByName'
              - $ref: '#/components/schemas/AssignedUserForCreationById'
          type: array
        name:
          $ref: '#/components/schemas/PackJobReplaceAssignedUsersActionEnum'
        version:
          description: Version of the entity to be changed
          minimum: 0
          type: integer
      required:
        - name
        - version
        - assignedUsers
      title: PackJobReplaceAssignedUsersActionParameter
    PackJobs:
      properties:
        packJobs:
          items:
            $ref: '#/components/schemas/PackJobWithSearchPath'
          type: array
        total:
          description: Total number of found entities for this query
          example: 42
          type: integer
      type: object
      title: PackJobs
      description: PackJobs
    PackJobSearchPayload:
      properties:
        after:
          deprecated: false
          description: >-
            The cursor to start after. The value is provided in the
            `pageInfo.endCursor` field of the response.
          type: string
        options:
          $ref: '#/components/schemas/SearchOptions'
        query:
          $ref: '#/components/schemas/PackJobSearchQuery'
        size:
          default: 20
          description: Number of items to return.
          maximum: 250
          minimum: 1
          type: number
        sort:
          description: Use for sorting the result.
          items:
            $ref: '#/components/schemas/PackJobSort'
          maxItems: 1
          minItems: 1
          type: array
        startAfterId:
          deprecated: true
          description: >-
            The ID to start after. Deprecated, use `after` with the value
            provided in `pageInfo.endCursor` instead.
          type: string
      required:
        - query
      title: PackJobSearchPayload
      type: object
      description: PackJobSearchPayload
    PackJobSearchQuery:
      properties:
        and:
          items:
            $ref: '#/components/schemas/PackJobSearchQuery'
          type: array
        facilityRef:
          allOf:
            - $ref: '#/components/schemas/StringEqFilter'
          description: Search by facilityRef
        id:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by id
        invoice:
          allOf:
            - $ref: '#/components/schemas/PackJobInvoiceFilter'
          description: Nested search by invoice
        lastModified:
          allOf:
            - $ref: '#/components/schemas/DateFilter'
          description: Search by lastModified
        lineItems:
          allOf:
            - $ref: '#/components/schemas/PackJobLineItemsListFilter'
          description: Nested list search by lineItems
        or:
          items:
            $ref: '#/components/schemas/PackJobSearchQuery'
          type: array
        orderDate:
          allOf:
            - $ref: '#/components/schemas/DateFilter'
          description: >-
            Search entries by orderDate. Applying a narrow and well-considered
            filter value is strongly recommended, as it can greatly improve
            response times, especially when working with large datasets.
        packingSourceContainers:
          allOf:
            - $ref: '#/components/schemas/PackJobPackingSourceContainersListFilter'
          description: Nested list search by packingSourceContainers
        recipient:
          allOf:
            - $ref: '#/components/schemas/PackJobRecipientFilter'
          description: Nested search by recipient
        shortId:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by shortId
        status:
          allOf:
            - $ref: '#/components/schemas/PackJobStatusEnumFilter'
          description: Search by status
        targetTime:
          allOf:
            - $ref: '#/components/schemas/DateFilter'
          description: Search by targetTime
        tenantOrderId:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by tenantOrderId
      title: PackJobSearchQuery
      type: object
      description: PackJobSearchQuery
    PackJobSort:
      properties:
        lastModified:
          enum:
            - ASC
            - DESC
          type: string
        orderDate:
          enum:
            - ASC
            - DESC
          type: string
        targetTime:
          enum:
            - ASC
            - DESC
          type: string
      title: PackJobSort
      type: object
      description: PackJobSort
    PackJobSplitLineItemsActionEnum:
      enum:
        - SPLIT_LINES_PACK_JOB
      type: string
      title: PackJobSplitLineItemsActionEnum
      description: PackJobSplitLineItemsActionEnum
    PackJobSplitLineItemsActionParameter:
      additionalProperties: false
      properties:
        name:
          $ref: '#/components/schemas/PackJobSplitLineItemsActionEnum'
        splitLineItemsInfo:
          items:
            $ref: '#/components/schemas/PackJobSplitLineItemsInfo'
          type: array
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          type: integer
      required:
        - name
        - version
        - splitLineItemsInfo
      title: PackJobSplitLineItemsActionParameter
      type: object
      description: PackJobSplitLineItemsActionParameter
    PackJobSplitLineItemsInfo:
      additionalProperties: false
      properties:
        lineItemId:
          description: references the id of the packLineItem of a packJob
          type: string
        packed:
          description: The amount of articles that were packed for this line item.
          example: 20
          format: int64
          minimum: 0
          type: integer
        quantity:
          description: quantity of the specific item that has been ordered
          example: 21
          minimum: 1
          type: integer
      required:
        - lineItemId
        - quantity
      type: object
      title: PackJobSplitLineItemsInfo
      description: PackJobSplitLineItemsInfo
    PackJobStatus:
      description: >-
        A pack job initially has the status OPEN and packing can start. When
        packing has started, the pack job changes its status to IN_PROGRESS.
        After a pack job has been completely packed its status becomes CLOSED.
      enum:
        - OPEN
        - IN_PROGRESS
        - CLOSED
        - OBSOLETE
        - CANCELED
        - PAUSED
      type: string
      xml:
        name: PackJobStatus
      title: PackJobStatus
    PackJobStatusEnumFilter:
      properties:
        eq:
          description: Search by status
          enum:
            - OPEN
            - IN_PROGRESS
            - CLOSED
            - OBSOLETE
            - CANCELED
            - PAUSED
          type: string
        in:
          description: Search by status
          items:
            enum:
              - OPEN
              - IN_PROGRESS
              - CLOSED
              - OBSOLETE
              - CANCELED
              - PAUSED
            type: string
          type: array
        notEq:
          description: Search by status
          enum:
            - OPEN
            - IN_PROGRESS
            - CLOSED
            - OBSOLETE
            - CANCELED
            - PAUSED
          type: string
      title: PackJobStatusEnumFilter
      type: object
      description: PackJobStatusEnumFilter
    PackJobTagConfiguration:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
        - $ref: '#/components/schemas/TagConfiguration'
        - properties:
            lineItemStickerConfiguration:
              $ref: '#/components/schemas/StickerConfiguration'
            packJobCreationPerTag:
              description: >-
                All entries with a match in their matchingValues will be
                combined when determining what documents belong to an entity
              items:
                $ref: '#/components/schemas/PackJobCreationPerTag'
              type: array
            stickerConfiguration:
              $ref: '#/components/schemas/StickerConfiguration'
          required:
            - packJobCreationPerTag
          type: object
      title: PackJobTagConfiguration
      description: PackJobTagConfiguration
    PackJobWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          $ref: '#/components/schemas/PackJob'
      required:
        - payload
      type: object
      title: PackJobWebHookEvent
      description: PackJobWebHookEvent
    PackJobWithSearchPath:
      allOf:
        - $ref: '#/components/schemas/PackJob'
        - additionalProperties: false
      properties:
        searchPaths:
          items:
            type: string
          minItems: 0
          type: array
      xml:
        name: PackJobWithPath
      title: PackJobWithSearchPath
      description: PackJobWithSearchPath
    PackLineItem:
      allOf:
        - $ref: '#/components/schemas/MandatoryLineItem'
        - properties:
            article:
              $ref: '#/components/schemas/PackLineItemArticle'
            id:
              description: >-
                The id of this lineItem. It is generated during creation
                automatically and suits as the primary identifier of the
                described entity.
              example: climk4dcQFiPdA5ULuhS
              type: string
            measurementUnitKey:
              description: Identifier for items unit of measurement.
              example: liter
              type: string
            originId:
              description: >-
                The id of the line item this line item was originated from,
                before any split has happened. This can be used to restore the
                ‘pre-split’ status.
              example: df671041-10dd-4600-a2ff-e9ffe2556bba
              nullable: true
              type: string
            packed:
              description: The amount of articles that were packed for this packline.
              example: 20
              format: int32
              minimum: 0
              type: integer
            quantity:
              description: quantity of this item
              example: 21
              format: int64
              minimum: 1
              type: integer
            serviceJobRefs:
              description: Reference to the service job that has altered this line item
              items:
                type: string
              type: array
            stickers:
              items:
                $ref: '#/components/schemas/Sticker'
              type: array
            tags:
              items:
                $ref: '#/components/schemas/TagReference'
              type: array
          required:
            - id
            - quantity
            - article
      type: object
      xml:
        name: PackLineItem
      title: PackLineItem
      description: PackLineItem
    PackLineItemArticle:
      allOf:
        - $ref: '#/components/schemas/AbstractArticle'
        - properties:
            attributes:
              items:
                $ref: '#/components/schemas/ArticleAttributeItem'
              maxItems: 40
              type: array
          type: object
      xml:
        name: PackLineItemArticle
      title: PackLineItemArticle
      description: PackLineItemArticle
    PackLineItemForCreation:
      allOf:
        - $ref: '#/components/schemas/MandatoryLineItemForCreation'
      properties:
        article:
          $ref: '#/components/schemas/PackLineItemArticle'
        measurementUnitKey:
          description: Identifier for items unit of measurement.
          example: liter
          type: string
        quantity:
          description: quantity of this item
          example: 21
          format: int64
          minimum: 1
          type: integer
        serviceJobRefs:
          description: Reference to the service job that has altered this line item
          items:
            type: string
          type: array
        stickers:
          items:
            $ref: '#/components/schemas/Sticker'
          type: array
        tags:
          items:
            $ref: '#/components/schemas/TagReference'
          type: array
      required:
        - quantity
        - article
      type: object
      xml:
        name: PackLineItemForCreation
      title: PackLineItemForCreation
      description: PackLineItemForCreation
    PackLineItemForUpdate:
      properties:
        id:
          description: references the id of the packLineItem of a packJob
          type: string
        packed:
          description: >-
            The amount of articles that were packed for this packline. Can't be
            more than picked before.
          example: 20
          format: int64
          minimum: 0
          type: integer
      required:
        - id
        - packed
      type: object
      xml:
        name: PackLineItemForUpdate
      title: PackLineItemForUpdate
      description: PackLineItemForUpdate
    PageInfo:
      properties:
        endCursor:
          description: >-
            The cursor to use to fetch the next page of items. Use with
            parameter `after`.
          type: string
        hasNextPage:
          description: If true, there are more items after the current page.
          type: boolean
        hasPreviousPage:
          description: If true, there are more items before the current page.
          type: boolean
        startCursor:
          description: The cursor to use to fetch the previous page of items.
          type: string
      required:
        - hasNextPage
        - hasPreviousPage
        - startCursor
        - endCursor
      title: PageInfo
      type: object
      description: PageInfo
    PaginatedPackingSourceContainers:
      properties:
        packingSourceContainers:
          items:
            $ref: '#/components/schemas/PackingSourceContainer'
          type: array
        total:
          description: Total number of found entities for this query
          example: 42
          type: integer
      type: object
      title: PaginatedPackingSourceContainers
      description: PaginatedPackingSourceContainers
    Parcel:
      additionalProperties: false
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
        - properties:
            anonymized:
              description: Indicates if gdpr related data was anonymized
              example: false
              type: boolean
            carrierProduct:
              description: Desired product of given carrier to choose when ordering a label
              example: EXPRESS
              type: string
            carrierRef:
              description: Reference to the carrier this parcel should be send by
              example: cf00e102-34f2-45c1-a846-6a21f384321e
              type: string
            customAttributes:
              description: >-
                Attributes that can be added to the parcel. These attributes
                cannot be used within fulfillment processes, but it could be
                useful to have the information carried here.
              type: object
            customProductValue:
              description: >-
                Set this value if you want to overwrite the calculated product
                value of the parcel. This field uses the smallest denomination,
                e.g. Euro Cents. So a value of 1250 represents 12,50€.
              example: 12.5
              type: number
            dimensions:
              $ref: '#/components/schemas/ParcelDimensions'
            documentsRef:
              description: Reference to the documents collection from this entity
              type: string
            facilityRef:
              type: string
            id:
              description: >-
                The id of this parcel. It is generated during creation
                automatically and suits as the primary identifier of the
                described entity.
              example: 95EWrieX09OmeriXIUbb
              type: string
            invoice:
              $ref: '#/components/schemas/ConsumerAddress'
            items:
              items:
                $ref: '#/components/schemas/ParcelItem'
              type: array
            loadUnitRefs:
              description: Reference to array of load unit Refs
              items:
                type: string
              type: array
            operativeProcessRef:
              type: string
            paymentInformation:
              $ref: '#/components/schemas/PaymentInformation'
            pickUpInformation:
              $ref: '#/components/schemas/ParcelPickUpInformation'
            postalCharges:
              $ref: '#/components/schemas/ParcelPostalCharge'
            processRef:
              type: string
            productValue:
              description: >-
                Monetary value of all goods in this parcel. Needed for sending
                cross border packages (customs) To be interpreted as money in
                the currency given under paymentInformation.currency. This field
                uses the smallest denomination, e.g. Euro Cents. So a value of
                1250 represents 12,50€.
              example: 1250
              type: number
            productValueCurrency:
              $ref: '#/components/schemas/ProductValueCurrency'
            productValueType:
              $ref: '#/components/schemas/ProductValueType'
            recipient:
              $ref: '#/components/schemas/ConsumerAddress'
            result:
              $ref: '#/components/schemas/ParcelResult'
            returnAddress:
              $ref: '#/components/schemas/FacilityAddress'
            sender:
              $ref: '#/components/schemas/FacilityAddress'
            services:
              $ref: '#/components/schemas/ParcelServices'
            shipmentRef:
              description: The id of this shipment this parcel has been created for.
              example: 95EWrieX09OmeriXIUbb
              type: string
            shortId:
              example: AA12-1
              type: string
            status:
              $ref: '#/components/schemas/ParcelStatus'
            transfers:
              items:
                $ref: '#/components/schemas/OperativeTransfer'
              minItems: 0
              type: array
          required:
            - id
            - status
            - carrierRef
            - processRef
            - sender
            - recipient
            - loadUnitRefs
          type: object
      title: Parcel
      description: Parcel
    ParcelActionsParameter:
      anyOf:
        - $ref: '#/components/schemas/ParcelSplitItemsActionParameter'
        - $ref: >-
            #/components/schemas/UpdateParcelItemRecordableAttributesActionParameter
      title: ParcelActionsParameter
      description: ParcelActionsParameter
    ParcelArticleAttributeItemForUpdate:
      additionalProperties: false
      allOf:
        - $ref: '#/components/schemas/ArticleAttributeItem'
      required:
        - key
        - value
        - category
      title: ParcelArticleAttributeItemForUpdate
      description: ParcelArticleAttributeItemForUpdate
    ParcelDimensions:
      additionalProperties: false
      nullable: true
      properties:
        customWeight:
          description: >-
            Set this value if you want to overwrite the calculated weight of the
            parcel (in g).
          example: 1700
          type: number
        height:
          description: The height of the package (in cm)
          example: 50
          type: number
        length:
          description: The length of the package (in cm)
          example: 100
          type: number
        weight:
          description: The weight of the package (in g)
          example: 1700
          type: number
        width:
          description: The width of the package (in cm)
          example: 25
          type: number
      type: object
      title: ParcelDimensions
      description: ParcelDimensions
    ParcelForCreation:
      additionalProperties: false
      properties:
        carrierProduct:
          description: Desired product of given carrier to choose when ordering a label
          example: EXPRESS
          type: string
        carrierRef:
          description: >-
            references the carrier to be used for sending. Can not be set when
            creating a parcel for an existing shipment.
          type: string
        customAttributes:
          description: >-
            Attributes that can be added to the parcel. These attributes cannot
            be used within fulfillment processes, but it could be useful to have
            the information carried here.
          type: object
        customProductValue:
          description: >-
            Set this value if you want to overwrite the calculated product value
            of the parcel.
          example: 12.5
          type: number
        dimensions:
          $ref: '#/components/schemas/ParcelDimensions'
        invoice:
          $ref: '#/components/schemas/ConsumerAddress'
        items:
          items:
            $ref: '#/components/schemas/ParcelItemForCreation'
          type: array
        loadUnitRefs:
          description: Reference to array of load unit Refs
          items:
            type: string
          type: array
        paymentInformation:
          $ref: '#/components/schemas/PaymentInformation'
        pickUpInformation:
          $ref: '#/components/schemas/ParcelPickUpInformation'
        productValue:
          description: >-
            Monetary value of all goods in this parcel. Needed for sending cross
            border packages (customs) To be interpreted as money in the currency
            given under paymentInformation.currency. This value is calculated
            from the items in the parcel.
          example: 12.5
          type: number
        productValueCurrency:
          $ref: '#/components/schemas/ProductValueCurrency'
        productValueType:
          $ref: '#/components/schemas/ProductValueType'
        recipient:
          $ref: '#/components/schemas/ConsumerAddress'
        result:
          $ref: '#/components/schemas/ParcelResult'
        returnAddress:
          $ref: '#/components/schemas/FacilityAddress'
        sender:
          $ref: '#/components/schemas/FacilityAddress'
        services:
          $ref: '#/components/schemas/ParcelServices'
        shortId:
          example: AA12-1
          type: string
        status:
          $ref: '#/components/schemas/ParcelStatus'
        transfers:
          items:
            $ref: '#/components/schemas/OperativeTransfer'
          minItems: 0
          type: array
      type: object
      title: ParcelForCreation
      description: ParcelForCreation
    ParcelForDirectCreation:
      additionalProperties: false
      properties:
        carrierProduct:
          description: Desired product of given carrier to choose when ordering a label
          example: EXPRESS
          type: string
        carrierRef:
          description: >-
            references the carrier to be used for sending. Can not be set when
            creating a parcel for an existing shipment.
          type: string
        customAttributes:
          description: >-
            Attributes that can be added to the parcel. These attributes cannot
            be used within fulfillment processes, but it could be useful to have
            the information carried here.
          type: object
        customProductValue:
          description: >-
            Set this value if you want to overwrite the calculated product value
            of the parcel.
          example: 12.5
          type: number
        dimensions:
          $ref: '#/components/schemas/ParcelDimensions'
        facilityRef:
          description: Reference to the facility this parcel is created for
          example: 95EWrieX09OmeriXIUbb
          type: string
        invoice:
          $ref: '#/components/schemas/ConsumerAddress'
        items:
          items:
            $ref: '#/components/schemas/ParcelItemForCreation'
          type: array
        loadUnitRefs:
          description: Reference to array of load unit Refs
          items:
            type: string
          type: array
        operativeProcessRef:
          description: Reference to the operative process this parcel is created for
          example: 95EWrieX09OmeriXIUbb
          type: string
        orderDate:
          description: >-
            Date when the order for the given parcel has been placed Mandatory
            when no shipmentRef was provided
          example: 2020-02-03T08:45:50.525Z
          format: date-time
          type: string
        paymentInformation:
          $ref: '#/components/schemas/PaymentInformation'
        pickUpInformation:
          $ref: '#/components/schemas/ParcelPickUpInformation'
        processRef:
          description: Reference to the process this parcel is created for
          example: 95EWrieX09OmeriXIUbb
          type: string
        productValue:
          description: >-
            Monetary value of all goods in this parcel. Needed for sending cross
            border packages (customs) To be interpreted as money in the currency
            given under paymentInformation.currency. This value is calculated
            from the items in the parcel.
          example: 12.5
          type: number
        productValueCurrency:
          $ref: '#/components/schemas/ProductValueCurrency'
        productValueType:
          $ref: '#/components/schemas/ProductValueType'
        recipient:
          $ref: '#/components/schemas/ConsumerAddress'
        result:
          $ref: '#/components/schemas/ParcelResult'
        returnAddress:
          $ref: '#/components/schemas/FacilityAddress'
        sender:
          $ref: '#/components/schemas/FacilityAddress'
        services:
          $ref: '#/components/schemas/ParcelServices'
        shipmentRef:
          description: >-
            Reference to the shipment this parcel is created for. If non
            provided, a shipment will be created automatically.
          example: 95EWrieX09OmeriXIUbb
          type: string
        shortId:
          example: AA12-1
          type: string
        status:
          $ref: '#/components/schemas/ParcelStatus'
        targetTime:
          description: >-
            The target time for the parcel to be delivered. If not provided, the
            current time will be used.
          example: 2020-02-03T08:45:50.525Z
          format: date-time
          type: string
      required:
        - facilityRef
        - carrierRef
        - recipient
        - sender
      type: object
      title: ParcelForDirectCreation
      description: ParcelForDirectCreation
    ParcelInvoiceFilter:
      properties:
        companyName:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by companyName
        email:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by email
        firstName:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by firstName
        lastName:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by lastName
      title: ParcelInvoiceFilter
      type: object
      description: ParcelInvoiceFilter
    ParcelItem:
      allOf:
        - $ref: '#/components/schemas/LineItem'
      properties:
        article:
          $ref: '#/components/schemas/ParcelItemArticle'
        countryOfManufacture:
          deprecated: true
          description: Deprecated - use article.attribute.countryOfManufacture instead
          type: string
        description:
          deprecated: true
          description: >-
            Description - article.title will be used instead - of the given
            item/items
          example: Item Description
          type: string
        hsCode:
          deprecated: true
          description: Deprecated - use article.attribute.hsCode instead
          maxLength: 50
          type: string
        id:
          description: The id of this parcelItem.
          example: ae3ba67c-a42c-4816-96ac-16231e49640c
          type: string
        originId:
          description: >-
            The id of the line item this line item was originated from, before
            any split has happened. This can be used to restore the ‘pre-split’
            status.
          example: df671041-10dd-4600-a2ff-e9ffe2556bba
          nullable: true
          type: string
        parcelItemValue:
          $ref: '#/components/schemas/ParcelItemValue'
          deprecated: true
          description: >-
            Deprecated - use article.attribute.pricePerUnit and
            article.attribute.currency instead
        quantity:
          description: amount of the given items
          example: 5
          minimum: 1
          type: integer
        weightInGram:
          deprecated: true
          description: >-
            Deprecated - use article.attribute.weightPerUnit instead - Weight of
            a single item in gram
          example: 10000
          type: integer
      required:
        - id
        - quantity
      type: object
      xml:
        name: ParcelItem
      title: ParcelItem
      description: ParcelItem
    ParcelItemArticle:
      allOf:
        - $ref: '#/components/schemas/AbstractArticle'
        - properties:
            attributes:
              items:
                $ref: '#/components/schemas/ArticleAttributeItem'
              maxItems: 40
              type: array
          type: object
      xml:
        name: ParcelItemArticle
      title: ParcelItemArticle
      description: ParcelItemArticle
    ParcelItemForCreation:
      allOf:
        - $ref: '#/components/schemas/LineItemForCreation'
      properties:
        article:
          $ref: '#/components/schemas/ParcelItemArticle'
        countryOfManufacture:
          type: string
        description:
          description: Description of the given item/items
          example: Item Description
          type: string
        hsCode:
          maxLength: 50
          type: string
        parcelItemValue:
          $ref: '#/components/schemas/ParcelItemValue'
          deprecated: true
          description: >-
            Deprecated - use article.attribute.pricePerUnit and
            article.attribute.currency instead
        quantity:
          description: amount of the given items
          example: 5
          minimum: 1
          type: integer
        weightInGram:
          description: Weight of a single item in gram
          example: 10000
          type: integer
      required:
        - quantity
      type: object
      xml:
        name: ParcelItemForCreation
      title: ParcelItemForCreation
      description: ParcelItemForCreation
    ParcelItemForUpdate:
      additionalProperties: false
      properties:
        id:
          description: >-
            The id of this parcelItem. It is generated during creation
            automatically and suits as the primary identifier of the described
            entity.
          example: ae3ba67c-a42c-4816-96ac-16231e49640c
          type: string
        parcelItemArticleAttributes:
          items:
            $ref: '#/components/schemas/ArticleAttributeItem'
          maxItems: 40
          type: array
        parcelItemValue:
          $ref: '#/components/schemas/ParcelItemValue'
          deprecated: true
          description: >-
            Deprecated - use article.attribute.pricePerUnit and
            article.attribute.currency instead
        weightInGram:
          description: Weight of a single item in gram
          example: 10000
          nullable: true
          type: integer
      required:
        - id
      type: object
      title: ParcelItemForUpdate
      description: ParcelItemForUpdate
    ParcelItemsArticleFilter:
      properties:
        tenantArticleId:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by tenantArticleId
        title:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by title
      title: ParcelItemsArticleFilter
      type: object
      description: ParcelItemsArticleFilter
    ParcelItemsFilter:
      properties:
        article:
          allOf:
            - $ref: '#/components/schemas/ParcelItemsArticleFilter'
          description: Nested search by article
      title: ParcelItemsFilter
      type: object
      description: ParcelItemsFilter
    ParcelItemsListFilter:
      properties:
        contains:
          allOf:
            - $ref: '#/components/schemas/ParcelItemsFilter'
          description: Contains returns if at least one entry matches
      title: ParcelItemsListFilter
      type: object
      description: ParcelItemsListFilter
    ParcelItemValue:
      description: >-
        deprecated, use
        MandatoryShippingArticleAttribute.attributes.pricePerUnit instead
      nullable: true
      properties:
        currency:
          description: Currency of the given value
          example: EUR
          type: string
        decimalPlaces:
          description: Number of decimal places for the given currency
          example: 2
          type: integer
        type:
          $ref: '#/components/schemas/ProductValueType'
        value:
          description: Monetary Value of a single item in the given currency
          example: 15.5
          type: number
      required:
        - value
        - currency
      type: object
      title: ParcelItemValue
    ParcelLabelClassification:
      additionalProperties: false
      properties:
        nameLocalized:
          $ref: '#/components/schemas/LocaleString'
          description: Localized name for parcel label classification
          example:
            de_DE: S-Paket
            en_US: S-Parcel
            ru_RU: S-пакет
        dimensions:
          $ref: '#/components/schemas/ParcelDimensions'
        name:
          description: Name of the parcel label classification
          example: S-Parcel
          type: string
        services:
          $ref: '#/components/schemas/ParcelLabelClassificationServices'
      required:
        - nameLocalized
        - dimensions
      type: object
      title: ParcelLabelClassification
      description: ParcelLabelClassification
    ParcelLabelClassificationForCreation:
      additionalProperties: false
      properties:
        nameLocalized:
          $ref: '#/components/schemas/LocaleString'
          description: Localized name for parcel label classification
          example:
            de_DE: S-Paket
            en_US: S-Parcel
            ru_RU: S-пакет
        dimensions:
          $ref: '#/components/schemas/ParcelDimensions'
        services:
          $ref: '#/components/schemas/ParcelLabelClassificationServices'
      required:
        - nameLocalized
        - dimensions
      type: object
      title: ParcelLabelClassificationForCreation
      description: ParcelLabelClassificationForCreation
    ParcelLabelClassificationServices:
      additionalProperties: false
      properties:
        bulkyGoods:
          default: false
          type: boolean
      type: object
      title: ParcelLabelClassificationServices
      description: ParcelLabelClassificationServices
    ParcelLabelTypeEnum:
      description: The type of possible Parcel Labels
      enum:
        - return.pdf
        - all.pdf
        - send.pdf
        - customs.pdf
      type: string
      title: ParcelLabelTypeEnum
    ParcelPaginatedResult:
      properties:
        pageInfo:
          allOf:
            - $ref: '#/components/schemas/PageInfo'
          description: Pagination information for the search result.
        parcels:
          items:
            $ref: '#/components/schemas/Parcel'
          type: array
        total:
          description: >-
            The total number of items matching the search criteria. Only filled,
            if withTotal is set to true in the search options.
          minimum: 0
          type: number
      required:
        - pageInfo
        - parcels
      title: ParcelPaginatedResult
      type: object
      description: ParcelPaginatedResult
    ParcelPatchActions:
      properties:
        actions:
          items:
            anyOf:
              - $ref: '#/components/schemas/ModifyParcel'
              - $ref: '#/components/schemas/ModifyParcelLoadUnit'
          minItems: 1
          type: array
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          format: int64
          type: integer
      required:
        - version
        - actions
      type: object
      xml:
        name: ParcelPatchActions
      title: ParcelPatchActions
      description: ParcelPatchActions
    ParcelPickUpInformation:
      additionalProperties: false
      nullable: true
      properties:
        endTime:
          description: needs to be after start time
          format: date-time
          type: string
        startTime:
          description: needs to be before end time
          format: date-time
          type: string
      required:
        - startTime
        - endTime
      xml:
        name: ParcelItemForCreation
      title: ParcelPickUpInformation
      description: ParcelPickUpInformation
    ParcelPostalCharge:
      properties:
        currency:
          description: Currency of the given value
          example: EUR
          type: string
        value:
          description: Monetary Value in the given currency
          example: 15.5
          type: number
      required:
        - currency
        - value
      title: ParcelPostalCharge
      description: ParcelPostalCharge
    ParcelProductValue:
      properties:
        currency:
          allOf:
            - $ref: '#/components/schemas/CurrencyCode'
          description: The currency of the price as an ISO 4217 code.
          example: EUR
          nullable: true
        decimalPlaces:
          description: Number of decimal places for the given currency
          example: 2
          minimum: 0
          type: integer
        value:
          description: >-
            Total value that should be shipped. Value is configured in the
            smallest subunit, e.g. cents.
          example: 25000
          minimum: 1
          type: integer
      required:
        - value
        - currency
        - decimalPlaces
      type: object
      title: ParcelProductValue
      description: ParcelProductValue
    ParcelRecipientFilter:
      properties:
        companyName:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by companyName
        email:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by email
        firstName:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by firstName
        lastName:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by lastName
      title: ParcelRecipientFilter
      type: object
      description: ParcelRecipientFilter
    ParcelResult:
      description: >-
        Within this object you can find the result of the request after it has
        been processed (status = DONE or FAILED)
      properties:
        carrierParcelRef:
          description: The reference number of the parcel by the carrier
          example: '84168117830018'
          maxLength: 120
          minLength: 1
          type: string
        carrierTrackingNumber:
          example: '84168117830018'
          type: string
        carrierTrackingStatus:
          oneOf:
            - $ref: '#/components/schemas/TrackingStatus'
            - $ref: '#/components/schemas/DhlTrackingStatus'
        customsDocumentId:
          description: The customs document id
          example: 3a186c51d4281acbecf5ed38805b1db92a9d668b
          type: string
        customsDocumentUrl:
          description: The original customs document URL
          example: someCepProvider.com/pathToReturnLabel.pdf
          type: string
        labelUrl:
          description: >-
            The URL where you can download the label relative to the path of
            this resource
          example: '%%HOST%%/api/parcels/{parcelId}/labels/84168117830018.pdf'
          type: string
        proxyId:
          description: The ID of the corresponding job at the CEP proxy (if used)
          example: 3a186c51d4281acbecf5ed38805b1db92a9d668b
          type: string
        returnLabelId:
          description: The original return label id
          example: 3a186c51d4281acbecf5ed38805b1db92a9d668b
          type: string
        returnLabelUrl:
          description: The original return label URL
          example: someCepProvider.com/pathToReturnLabel.pdf
          type: string
        returnTrackingUrl:
          description: The URL to track the return of this parcel
          example: http://track.io/3a186c51d4
          type: string
        sendLabelUrl:
          description: The original send label URL
          example: someCepProvider.com/pathToSendLabel.pdf
          type: string
        summary:
          description: Summary of the result of the request in a human readable form.
          example: Package label was successfully requested at DHL.
          type: string
        trackingStatus:
          $ref: '#/components/schemas/TrackingStatus'
        trackingUrl:
          description: The URL to track this parcel
          example: http://track.io/3a186c51d4
          type: string
      required:
        - summary
      type: object
      title: ParcelResult
    ParcelSearchPayload:
      properties:
        after:
          deprecated: false
          description: >-
            The cursor to start after. The value is provided in the
            `pageInfo.endCursor` field of the response.
          type: string
        options:
          $ref: '#/components/schemas/SearchOptions'
        query:
          $ref: '#/components/schemas/ParcelSearchQuery'
        size:
          default: 20
          description: Number of items to return.
          maximum: 250
          minimum: 1
          type: number
        sort:
          description: Use for sorting the result.
          items:
            $ref: '#/components/schemas/ParcelSort'
          maxItems: 1
          minItems: 1
          type: array
        startAfterId:
          deprecated: true
          description: >-
            The ID to start after. Deprecated, use `after` with the value
            provided in `pageInfo.endCursor` instead.
          type: string
      required:
        - query
      title: ParcelSearchPayload
      type: object
      description: ParcelSearchPayload
    ParcelSearchQuery:
      properties:
        and:
          items:
            $ref: '#/components/schemas/ParcelSearchQuery'
          type: array
        carrierRef:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by carrierRef
        created:
          allOf:
            - $ref: '#/components/schemas/DateFilter'
          description: >-
            Search entries by created. Applying a narrow and well-considered
            filter value is strongly recommended, as it can greatly improve
            response times, especially when working with large datasets.
        facilityRef:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by facilityRef
        id:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by id
        invoice:
          allOf:
            - $ref: '#/components/schemas/ParcelInvoiceFilter'
          description: Nested search by invoice
        items:
          allOf:
            - $ref: '#/components/schemas/ParcelItemsListFilter'
          description: Nested list search by items
        lastModified:
          allOf:
            - $ref: '#/components/schemas/DateFilter'
          description: Search by lastModified
        or:
          items:
            $ref: '#/components/schemas/ParcelSearchQuery'
          type: array
        recipient:
          allOf:
            - $ref: '#/components/schemas/ParcelRecipientFilter'
          description: Nested search by recipient
        shipmentRef:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by shipmentRef
        shortId:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by shortId
        status:
          allOf:
            - $ref: '#/components/schemas/ParcelStatusEnumFilter'
          description: Search by status
      title: ParcelSearchQuery
      type: object
      description: ParcelSearchQuery
    ParcelServices:
      additionalProperties: false
      nullable: true
      properties:
        adultSignature:
          description: Signature from some adult
          type: boolean
        bulkyGoods:
          type: boolean
        customerSignature:
          description: Signature from the ordering customer needed
          type: boolean
        identityCheckCompany:
          description: Identity check that can be done by a person of receiving company
          type: boolean
        identityCheckPrivate:
          description: Identity check that can be done by the receiving person
          type: boolean
        saturdayDelivery:
          description: Saturday Delivery
          type: boolean
        signature:
          description: Signature from anyone needed
          type: boolean
      title: ParcelServices
      description: ParcelServices
    ParcelSort:
      properties:
        created:
          enum:
            - ASC
            - DESC
          type: string
        lastModified:
          enum:
            - ASC
            - DESC
          type: string
      title: ParcelSort
      type: object
      description: ParcelSort
    ParcelSplitItemsActionEnum:
      enum:
        - SPLIT_LINES_PARCEL
      type: string
      title: ParcelSplitItemsActionEnum
      description: ParcelSplitItemsActionEnum
    ParcelSplitItemsActionParameter:
      additionalProperties: false
      properties:
        name:
          $ref: '#/components/schemas/ParcelSplitItemsActionEnum'
        splitItemsInfo:
          items:
            $ref: '#/components/schemas/ParcelSplitItemsInfo'
          type: array
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          type: integer
      required:
        - name
        - version
        - splitItemsInfo
      title: ParcelSplitItemsActionParameter
      type: object
      description: ParcelSplitItemsActionParameter
    ParcelSplitItemsInfo:
      additionalProperties: false
      properties:
        itemId:
          description: references the id of the item of a parcel
          type: string
        quantity:
          description: quantity of the specific item that has been ordered
          example: 21
          minimum: 1
          type: integer
      required:
        - itemId
        - quantity
      type: object
      title: ParcelSplitItemsInfo
      description: ParcelSplitItemsInfo
    ParcelStatus:
      enum:
        - OPEN
        - PROCESSING
        - DONE
        - FAILED
        - CANCELED
        - OBSOLETE
        - WAITING_FOR_INPUT
      type: string
      title: ParcelStatus
      description: ParcelStatus
    ParcelStatusEnumFilter:
      properties:
        eq:
          description: Search by status
          enum:
            - OPEN
            - PROCESSING
            - DONE
            - FAILED
            - CANCELED
            - OBSOLETE
            - WAITING_FOR_INPUT
          type: string
        in:
          description: Search by status
          items:
            enum:
              - OPEN
              - PROCESSING
              - DONE
              - FAILED
              - CANCELED
              - OBSOLETE
              - WAITING_FOR_INPUT
            type: string
          type: array
        notEq:
          description: Search by status
          enum:
            - OPEN
            - PROCESSING
            - DONE
            - FAILED
            - CANCELED
            - OBSOLETE
            - WAITING_FOR_INPUT
          type: string
      title: ParcelStatusEnumFilter
      type: object
      description: ParcelStatusEnumFilter
    ParcelTagConfiguration:
      additionalProperties: false
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        alternativeReturnAddressConfiguration:
          $ref: '#/components/schemas/AlternativeReturnAddressConfiguration'
      required:
        - alternativeReturnAddressConfiguration
      title: ParcelTagConfiguration
      description: ParcelTagConfiguration
    ParcelTagConfigurationForUpsert:
      additionalProperties: false
      properties:
        alternativeReturnAddressConfiguration:
          $ref: '#/components/schemas/AlternativeReturnAddressConfiguration'
        version:
          example: 0
          type: number
      required:
        - alternativeReturnAddressConfiguration
      title: ParcelTagConfigurationForUpsert
      description: ParcelTagConfigurationForUpsert
    ParcelWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          $ref: '#/components/schemas/Parcel'
      required:
        - payload
      type: object
      title: ParcelWebHookEvent
      description: ParcelWebHookEvent
    PartialStock:
      allOf:
        - $ref: '#/components/schemas/PartialStockForCreation'
      properties:
        eventLastModified:
          description: >-
            The date when the inventory domain comunicated a change in this
            partial stock
          example: 2020-02-03T08:45:50.525Z
          format: date-time
          type: string
        stockinformation:
          $ref: '#/components/schemas/StockInformation'
      required:
        - tenantPartialStockId
        - stockinformation
      type: object
      xml:
        name: PartialStock
      title: PartialStock
      description: PartialStock
    PartialStockForCreation:
      additionalProperties: false
      properties:
        location:
          $ref: '#/components/schemas/Location'
        scores:
          items:
            $ref: '#/components/schemas/Score'
          type: array
        stockinformation:
          $ref: '#/components/schemas/StockInformationForCreation'
        tenantPartialStockId:
          description: The id associated with the partial stock
          type: string
      required:
        - tenantPartialStockId
        - stockinformation
      type: object
      xml:
        name: PartialStock
      title: PartialStockForCreation
      description: PartialStockForCreation
    PartialStockPatchActions:
      properties:
        actions:
          items:
            $ref: '#/components/schemas/ModifyPartialStock'
          maxItems: 1
          minItems: 1
          type: array
        version:
          description: >-
            The version of the listing where we want to patch the partialStocks,
            to be used in optimistic locking mechanisms.
          example: 42
          format: int64
          type: integer
      required:
        - version
        - actions
      type: object
      xml:
        name: PartialStockPatchActions
      title: PartialStockPatchActions
      description: PartialStockPatchActions
    PartialStocksForReplacement:
      additionalProperties: false
      properties:
        partialStocks:
          items:
            $ref: '#/components/schemas/PartialStockForCreation'
          minItems: 1
          type: array
        version:
          description: >-
            The version of the listing where we want to put the partialStocks,
            to be used in optimistic locking mechanisms.
          example: 42
          format: int64
          type: integer
      required:
        - partialStocks
        - version
      type: object
      xml:
        name: PartialStocksForReplacement
      title: PartialStocksForReplacement
      description: PartialStocksForReplacement
    PauseItemReturnActionEnum:
      enum:
        - PauseItemReturn
      type: string
      title: PauseItemReturnActionEnum
      description: PauseItemReturnActionEnum
    PauseItemReturnActionParameter:
      additionalProperties: false
      description: Action to pause an ItemReturn.
      properties:
        itemReturnJobVersion:
          description: Version of the entity to be changed
          minimum: 0
          type: integer
        name:
          $ref: '#/components/schemas/PauseItemReturnActionEnum'
      required:
        - name
        - itemReturnJobVersion
      title: PauseItemReturnActionParameter
    PausePackJob:
      allOf:
        - $ref: '#/components/schemas/AbstractModificationAction'
        - additionalProperties: false
          properties:
            action:
              description: Use value 'PausePackJob', because you want to pause a packjob
              enum:
                - PausePackJob
              type: string
            packLineItemsUpdate:
              items:
                $ref: '#/components/schemas/PackLineItemForUpdate'
              type: array
          required:
            - action
          type: object
      description: Action to pause a PackJob
      title: PausePackJob
      xml:
        name: PausePackJob
    PauseStowJobAction:
      description: Sets the status of the stowjob to PAUSED
      properties:
        name:
          description: The name of the action that should be performed
          enum:
            - PAUSE_STOW_JOB
          type: string
        version:
          description: The current version of the stow job that should be modified
          type: number
      required:
        - version
        - name
      title: PauseStowJobAction
      type: object
    PaymentInformation:
      properties:
        currency:
          description: The currency in which the consumer paid with
          example: EUR
          type: string
      type: object
      title: PaymentInformation
      description: PaymentInformation
    PdfBackgroundConfiguration:
      properties:
        firstPageBackgroundFileUrl:
          description: >-
            File url of the background image that will be used for the first
            page
          type: string
        followingPageBackgroundFileUrl:
          description: File url of background image that will be used for 2-n pages
          type: string
      type: object
      title: PdfBackgroundConfiguration
      description: PdfBackgroundConfiguration
    PdfBackgroundConfigurationForUpsert:
      properties:
        firstPageBackgroundFile:
          $ref: '#/components/schemas/NamedFile'
        followingPageBackgroundFile:
          $ref: '#/components/schemas/NamedFile'
      type: object
      title: PdfBackgroundConfigurationForUpsert
      description: PdfBackgroundConfigurationForUpsert
    Permission:
      properties:
        description:
          description: The localized description of the permission
          type: string
        group:
          description: The group of the permission
          enum:
            - INVENTORY
            - ORDER_MANAGEMENT
            - ADMIN
            - CORE
            - USER_MANAGEMENT
            - OPERATIONS
          type: string
        key:
          description: The key of the permission
          enum:
            - USER_READ
            - USERS_READ
            - USER_WRITE
            - USER_MODIFY
            - CURRENT_USER_READ
            - CURRENT_USER_MODIFY
            - ROLE_READ
            - ROLE_WRITE
            - FACILITY_READ
            - FACILITY_WRITE
            - FACILITY_CREATE
            - FACILITY_DELETE
            - FACILITY_GROUP_READ
            - FACILITY_GROUP_WRITE
            - ORDER_READ
            - ORDER_WRITE
            - ORDER_FORCE_CANCEL
            - ORDER_UNLOCK
            - ORDER_CANCEL
            - ORDER_CONSUMER_WRITE
            - ORDER_CUSTOM_ATTRIBUTES_WRITE
            - AUDIT_READ
            - NOTIFICATION_READ
            - NOTIFICATION_WRITE
            - EXPIRIES_READ
            - EXPIRIES_WRITE
            - CONFIG_READ
            - CONFIG_WRITE
            - ROUTING_CONFIG_READ
            - ROUTING_CONFIG_WRITE
            - PROMISES_CONFIG_READ
            - PROMISES_CONFIG_WRITE
            - OIDC_PROVIDERS_CONFIG_READ
            - OIDC_PROVIDERS_CONFIG_WRITE
            - LOCALE_WRITE
            - CARRIER_READ
            - CARRIER_WRITE
            - RETURN_WRITE
            - RETURN_READ
            - ROUTING_READ
            - ROUTING_WRITE
            - PARCEL_READ
            - PARCEL_WRITE
            - SHIPMENT_READ
            - SHIPMENT_WRITE
            - HANDOVERJOB_READ
            - HANDOVERJOB_WRITE
            - PICKJOB_READ
            - PICKJOB_WRITE
            - PICKJOB_REROUTE
            - REMOTE_CONFIG_READ
            - REMOTE_CONFIG_WRITE
            - PICKRUN_READ
            - PICKRUN_WRITE
            - LOADUNITTYPE_READ
            - LOADUNITTYPE_WRITE
            - LOADUNIT_READ
            - LOADUNIT_WRITE
            - MEASUREMENTUNIT_READ
            - MEASUREMENTUNIT_WRITE
            - EVENT_READ
            - SUBSCRIPTION_READ
            - SUBSCRIPTION_WRITE
            - SUBSTITUTE_READ
            - SUBSTITUTE_WRITE
            - PROCESS_READ
            - PROCESS_WRITE
            - PROCESS_REROUTE
            - EXTERNAL_ACTIONS_READ
            - EXTERNAL_ACTIONS_WRITE
            - OPERATIVE_PROCESS_READ
            - OPERATIVE_PROCESS_WRITE
            - DELIVERYNOTE_WRITE
            - PACKJOB_READ
            - PACKJOB_WRITE
            - PACKINGCONTAINER_TYPE_WRITE
            - PACKING_SOURCE_CONTAINER_READ
            - PACKING_SOURCE_CONTAINER_WRITE
            - RESTOW_ITEM_READ
            - RESTOW_ITEM_WRITE
            - TAG_READ
            - TAG_WRITE
            - STOCK_READ
            - STOCK_WRITE
            - EXTERNAL_STOCK_CHANGE_REASONS_READ
            - EXTERNAL_STOCK_CHANGE_REASONS_WRITE
            - STORAGE_LOCATION_READ
            - STORAGE_LOCATION_WRITE
            - STOW_JOB_READ
            - STOW_JOB_OPERATIVE_WRITE
            - STOW_JOB_FULL_WRITE
            - NOTIFICATION_CENTER_CONFIG_READ
            - NOTIFICATION_CENTER_CONFIG_WRITE
            - DOMS_TOOLKIT_READ
            - DOMS_TOOLKIT_WRITE
            - ANALYTICS_DASHBOARD_READ
            - DOCUMENT_SET_READ
            - DOCUMENT_SET_WRITE
            - INBOUND_PROCESS_READ
            - INBOUND_PROCESS_WRITE
            - ADMIN_DATA_RESET
            - ADMIN_MODULES_READ
            - ADMIN_MODULES_WRITE
            - TENANT_CONNECTOR_CONFIG_READ
            - CUSTOM_SERVICE_WRITE
            - CUSTOM_SERVICE_READ
            - VALIDATIONS_READ
            - SERVICE_JOB_READ
            - SERVICE_JOB_WRITE
            - LINKED_SERVICE_JOBS_READ
            - LINKED_SERVICE_JOBS_WRITE
            - OPERATION_STATISTICS_READ
            - DOMS_STATISTICS_READ
            - AVAILABILITY_CHANNEL_READ
            - AVAILABILITY_CHANNEL_WRITE
            - HANDOVER_CONTAINER_READ
            - HANDOVER_CONTAINER_WRITE
            - STACKS_READ
            - STACKS_WRITE
            - CATEGORY_READ
            - CATEGORY_WRITE
            - PERMISSION_READ
            - RESERVATION_WRITE
            - RESERVATION_READ
            - FILTER_ENTITY_READ
            - BRAND_READ
            - STOCK_AVAILABILITIES_READ
            - LISTING_READ
            - LISTING_WRITE
            - LISTING_DELETE
            - PURCHASE_PRICE_READ
            - ZONE_READ
            - ZONE_WRITE
            - SAFETY_STOCK_READ
            - SAFETY_STOCK_WRITE
          type: string
        operation:
          description: The operation of the permission
          enum:
            - READ
            - WRITE
            - DELETE
            - REROUTE
            - LIST
            - MODIFY
            - CREATE
            - RESET
            - FORCE_CANCEL
            - UNLOCK
            - CANCEL
            - CONSUMER_WRITE
            - CUSTOM_ATTRIBUTES_WRITE
          type: string
        subGroup:
          description: The subgroup of the permission
          enum:
            - ORDER
            - USER
            - CURRENT_USER
            - ROLE
            - EXPIRY
            - AUDIT
            - FACILITY
            - FACILITY_GROUP
            - CONFIG
            - ROUTING_CONFIG
            - ROUTING
            - OIDC_PROVIDER_CONFIG
            - PROMISES_CONFIG
            - LOCALE
            - CARRIER
            - RETURN
            - PARCEL
            - SHIPMENT
            - HANDOVERJOB
            - HANDOVER_JOB
            - PICKJOB
            - PICK_JOB
            - PICKRUN
            - PICK_RUN
            - PACKJOB
            - PACK_JOB
            - PACKING_SOURCE_CONTAINER
            - PACKINGCONTAINER_TYPE
            - PACKING_CONTAINER_TYPE
            - RESTOW_ITEM
            - TAG
            - STOCK
            - EXTERNAL_STOCK_CHANGE_REASONS
            - STORAGE_LOCATION
            - STOW_JOB
            - NOTIFICATION
            - NOTIFICATION_CENTER_CONFIG
            - DOMS_TOOLKIT
            - ANALYTICS_DASHBOARD
            - DOCUMENT_SET
            - INBOUND_PROCESS
            - TENANT_CONNECTOR_CONFIG
            - ADMIN_MODULES
            - CUSTOM_SERVICE
            - VALIDATIONS
            - SERVICE_JOB
            - LINKED_SERVICE_JOBS
            - OPERATION_STATISTICS
            - DOMS_STATISTICS
            - AVAILABILITY_CHANNEL
            - HANDOVER_CONTAINER
            - STACKS
            - CATEGORY
            - PERMISSION
            - LOADUNIT_TYPE
            - LOAD_UNIT_TYPE
            - LOADUNIT
            - LOAD_UNIT
            - MEASUREMENT_UNIT
            - EVENT
            - SUBSCRIPTION
            - SUBSTITUTE
            - PROCESS
            - EXTERNAL_ACTIONS
            - OPERATIVE_PROCESS
            - DELIVERYNOTE
            - REMOTE_CONFIG
            - ADMIN_DATA
            - RESERVATION
            - FILTER_ENTITY
            - BRAND
            - STOCK_AVAILABILITIES
            - LISTING
            - PURCHASE_PRICE
            - ZONE
            - SAFETY_STOCK
          type: string
      required:
        - operation
        - key
        - group
        - subGroup
      title: Permission
      type: object
      description: Permission
    PermissionsResponse:
      properties:
        permissions:
          description: The list of permissions
          items:
            $ref: '#/components/schemas/Permission'
          type: array
        total:
          description: The total number of (filtered) permissions
          type: number
      required:
        - permissions
        - total
      title: PermissionsResponse
      type: object
      description: PermissionsResponse
    PickingConfigurations:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        backofficePickingConfiguration:
          $ref: '#/components/schemas/BackofficePickingConfiguration'
        loadUnitAssignmentConfiguration:
          $ref: '#/components/schemas/LoadUnitAssignmentConfiguration'
        multiOrderPickingConfiguration:
          $ref: '#/components/schemas/MultiOrderPickingConfiguration'
        pickingMethodsConfiguration:
          $ref: '#/components/schemas/PickingMethodsConfiguration'
        pickingShortPickConfiguration:
          $ref: '#/components/schemas/PickingShortPickConfiguration'
        restartPickJobConfiguration:
          $ref: '#/components/schemas/RestartPickJobConfiguration'
        scanCodeValidationConfiguration:
          $ref: '#/components/schemas/PickingScanCodeValidationConfiguration'
        scanningConfiguration:
          $ref: '#/components/schemas/PickingScanningConfiguration'
        scheduledPickJobReleaseConfiguration:
          $ref: '#/components/schemas/ScheduledPickJobReleaseConfiguration'
        stockUpdateConfiguration:
          $ref: '#/components/schemas/PickingStockUpdateConfiguration'
        storageLocationAssignmentConfiguration:
          $ref: '#/components/schemas/StorageLocationAssignmentConfiguration'
        takeOverPickJobConfiguration:
          $ref: '#/components/schemas/TakeOverPickJobConfiguration'
      type: object
      title: PickingConfigurations
      description: PickingConfigurations
    PickingLoadUnit:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
        - $ref: '#/components/schemas/PickingLoadUnitForCreation'
      properties:
        nameLocalized:
          $ref: '#/components/schemas/LocaleString'
        descriptionLocalized:
          $ref: '#/components/schemas/LocaleString'
        description:
          type: string
        facilityRef:
          description: >-
            The id of the facility reference. The given ID has to be present in
            the system. But it is not updatable via PUT request
          example: Esb20gpHBL94X5NdMp3C
          type: string
        iconUrl:
          type: string
        id:
          type: string
        loadUnitLineItems:
          items:
            $ref: '#/components/schemas/LoadUnitLineItem'
          type: array
        name:
          type: string
      required:
        - id
        - nameLocalized
        - version
        - facilityRef
      type: object
      title: PickingLoadUnit
      description: PickingLoadUnit
    PickingLoadUnitForCreation:
      properties:
        codes:
          items:
            description: List of codes
            type: string
          minItems: 1
          type: array
        customAttributes:
          description: >-
            Attributes that can be added to the PickingLoadUnit. These
            attributes cannot be used within fulfillment processes, but it could
            be useful to have the informations carried here.
          type: object
        loadUnitLineItems:
          items:
            $ref: '#/components/schemas/LoadUnitLineItemForCreation'
          type: array
        loadUnitTypeRef:
          type: string
        operativeContainerTypeRef:
          description: the reference to the operativeContainerType
          type: string
        stackRef:
          description: the reference to the stackRef this loadUnit is part of
          type: string
        storageLocationRef:
          description: >-
            the reference to the storage location this load unit as been placed
            into
          type: string
      required:
        - codes
      type: object
      title: PickingLoadUnitForCreation
      description: PickingLoadUnitForCreation
    PickingMethodEnum:
      description: >-
        Way in which the picking should be handled Deprecated: BATCH_PICKING,
        use BATCH instead
      enum:
        - SINGLE_ORDER
        - MULTI_ORDER
        - BATCH_PICKING
        - BATCH
      example: SINGLE_ORDER
      type: string
      title: PickingMethodEnum
    PickingMethodsConfiguration:
      properties:
        defaultPickingMethod:
          $ref: '#/components/schemas/PickingMethodEnum'
      required:
        - defaultPickingMethod
      type: object
      title: PickingMethodsConfiguration
      description: PickingMethodsConfiguration
    PickingPatchActions:
      properties:
        actions:
          items:
            anyOf:
              - $ref: '#/components/schemas/ModifyPickLineItem'
              - $ref: '#/components/schemas/ModifyPickJob'
              - $ref: '#/components/schemas/ModifyPickJobLastEditor'
              - $ref: '#/components/schemas/RestartPickJob'
              - $ref: '#/components/schemas/ResetPickJob'
              - $ref: '#/components/schemas/AbortPickJob'
          minItems: 1
          type: array
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          format: int64
          type: integer
      required:
        - version
        - actions
      type: object
      xml:
        name: PickingPatchActions
      title: PickingPatchActions
      description: PickingPatchActions
    PickingScanCodeValidationConfiguration:
      properties:
        pickingScanCodeValidationType:
          $ref: '#/components/schemas/PickingScanCodeValidationEnum'
      required:
        - pickingScanCodeValidationType
      type: object
      title: PickingScanCodeValidationConfiguration
      description: PickingScanCodeValidationConfiguration
    PickingScanCodeValidationEnum:
      description: State that defines if unknown scan codes can be accepted
      enum:
        - NO_VALIDATION
        - CODE_MUST_BE_KNOWN
      type: string
      title: PickingScanCodeValidationEnum
    PickingScanningConfiguration:
      properties:
        rolesWithOverwritingScanningPermission:
          items:
            $ref: '#/components/schemas/UserRoleNames'
          minItems: 1
          type: array
        scanningRule:
          $ref: '#/components/schemas/ScanningRuleConfiguration'
        scanningType:
          $ref: '#/components/schemas/PickingScanningConfigurationEnum'
      type: object
      title: PickingScanningConfiguration
      description: PickingScanningConfiguration
    PickingScanningConfigurationEnum:
      description: Way in which the scanning of articles during picking is enforced
      enum:
        - MUST_SCAN_FIRST
        - MUST_SCAN_EACH
        - SCAN_NOT_REQUIRED
      example: MUST_SCAN_FIRST
      type: string
      title: PickingScanningConfigurationEnum
    PickingShortPickConfiguration:
      properties:
        confirmationOnShortPick:
          default: false
          description: >-
            Does the picker needs to confirm a stock correction before adding a
            short pick
          type: boolean
        shortPickReasons:
          items:
            $ref: '#/components/schemas/ShortPickReason'
          type: array
      required:
        - confirmationOnShortPick
      type: object
      title: PickingShortPickConfiguration
      description: PickingShortPickConfiguration
    PickingStartBase:
      properties:
        carrierRef:
          type: string
        targetTime:
          example: 2020-02-03T08:45:50.525Z
          format: date-time
          type: string
      required:
        - targetTime
      type: object
      title: PickingStartBase
      description: PickingStartBase
    PickingStockProperty:
      additionalProperties:
        type: string
      description: Picking Stock Property.
      example:
        color: yellow
      title: PickingStockProperty
      type: object
    PickingStockPropertyPreset:
      description: Preset of Picking Stock Property.
      properties:
        expiry:
          type: string
      title: PickingStockPropertyPreset
      type: object
    PickingStockUpdateConfiguration:
      properties:
        active:
          default: false
          description: Enable or disable stock update check for pick jobs
          type: boolean
      required:
        - active
      type: object
      title: PickingStockUpdateConfiguration
      description: PickingStockUpdateConfiguration
    PickingTimes:
      description: >-
        Time ranges defining the picking times per weekday. No overlapping
        ranges are allowed. There must be no overlaps for time ranges on a day
      properties:
        friday:
          items:
            $ref: '#/components/schemas/TimeRange'
          type: array
        monday:
          items:
            $ref: '#/components/schemas/TimeRange'
          type: array
        saturday:
          items:
            $ref: '#/components/schemas/TimeRange'
          type: array
        sunday:
          items:
            $ref: '#/components/schemas/TimeRange'
          type: array
        thursday:
          items:
            $ref: '#/components/schemas/TimeRange'
          type: array
        tuesday:
          items:
            $ref: '#/components/schemas/TimeRange'
          type: array
        wednesday:
          items:
            $ref: '#/components/schemas/TimeRange'
          type: array
      type: object
      title: PickingTimes
    PickingZone:
      description: Zones from which items can be picked
      properties:
        zoneRef:
          type: string
      required:
        - zoneRef
      title: PickingZone
    PickJob:
      allOf:
        - $ref: '#/components/schemas/PickJobForCreation'
        - $ref: '#/components/schemas/VersionedResource'
        - properties:
            anonymized:
              description: Indicates if gdpr related data was anonymized
              example: false
              type: boolean
            assignedUsers:
              description: Assigned users for this entity
              items:
                $ref: '#/components/schemas/AssignedUser'
              type: array
            deliveryinformation:
              $ref: '#/components/schemas/PickjobDeliveryInformation'
            documentHandling:
              $ref: '#/components/schemas/DocumentHandling'
            documentsRef:
              description: Reference to the documents collection from this entity
              type: string
            editor:
              $ref: '#/components/schemas/Editor'
            expectedPickLineItems:
              items:
                $ref: '#/components/schemas/ExpectedPickLineItem'
              type: array
            id:
              description: >-
                The id of this pickjob. It is generated during creation
                automatically and suits as the primary identifier of the
                described entity.
              example: Esb20gpHBL94X5NdMp3C
              type: string
            pickingZones:
              items:
                $ref: '#/components/schemas/PickingZone'
              type: array
            pickLineItems:
              items:
                $ref: '#/components/schemas/PickLineItem'
              type: array
            pickRunRef:
              description: Pick run id to which the pick job belongs
              type: string
            resetBlocked:
              default: false
              description: Indicates if pickJob can still be resetted or restarted
              type: boolean
            shortId:
              description: >-
                A short identifier that helps assigning a pickJob to a customer.
                This is automatically created during creation.
              example: AS12
              type: string
            status:
              $ref: '#/components/schemas/PickJobStatus'
            statusReason:
              description: >-
                The reason for the current status. Currently, only reroute
                reasons are supported.
              type: string
            usersModificationHistory:
              items:
                $ref: '#/components/schemas/UserModificationHistory'
              type: array
            tags:
              items:
                $ref: '#/components/schemas/TagReference'
              minItems: 1
              type: array
          required:
            - id
            - status
            - pickLineItems
            - shortId
            - deliveryinformation
            - documentsRef
          type: object
      title: PickJob
      description: PickJob
    PickJobAbortActionEnum:
      enum:
        - ABORT
      type: string
      title: PickJobAbortActionEnum
      description: PickJobAbortActionEnum
    PickJobAbortActionParameter:
      additionalProperties: false
      description: Action to Abort a Pickjob.
      properties:
        name:
          $ref: '#/components/schemas/PickJobAbortActionEnum'
        version:
          description: Version of the entity to be changed
          minimum: 0
          type: integer
      required:
        - name
        - version
      title: PickJobAbortActionParameter
    PickJobActionsParameter:
      anyOf:
        - $ref: '#/components/schemas/PickJobAbortActionParameter'
        - $ref: '#/components/schemas/PickJobRestartActionParameter'
        - $ref: '#/components/schemas/PickJobResetActionParameter'
        - $ref: '#/components/schemas/PickJobObsoleteActionParameter'
        - $ref: '#/components/schemas/ModifyPickLineItemsActionParameter'
        - $ref: '#/components/schemas/PickJobReplaceAssignedUsersActionParameter'
        - $ref: '#/components/schemas/PickJobPauseActionParameter'
        - $ref: '#/components/schemas/PickJobSplitLineItemsActionParameter'
        - $ref: '#/components/schemas/PickJobMergeLineItemsActionParameter'
        - $ref: >-
            #/components/schemas/UpdatePickLineItemRecordableAttributesActionParameter
      title: PickJobActionsParameter
      description: PickJobActionsParameter
    PickjobDeliveryInformation:
      allOf:
        - $ref: '#/components/schemas/PickjobDeliveryInformationForCreation'
        - required:
            - channel
      title: PickjobDeliveryInformation
      description: PickjobDeliveryInformation
    PickjobDeliveryInformationForCreation:
      properties:
        channel:
          enum:
            - COLLECT
            - SHIPPING
          type: string
        details:
          properties:
            collect:
              properties:
                identifier:
                  description: Includes information about Click & Collect recipient
                  type: string
                paid:
                  default: false
                  description: Indicates if the order is already paid.
                  type: boolean
              type: object
            shipping:
              properties:
                carrierKey:
                  type: string
                carrierProduct:
                  description: >-
                    Desired product of given carrier to choose when ordering a
                    label, this is specific to a carrier
                  example: EXPRESS
                  type: string
                carrierProductCategory:
                  $ref: '#/components/schemas/CarrierProductCategory'
                carrierServices:
                  items:
                    $ref: '#/components/schemas/CarrierServices'
                  type: array
                identifier:
                  description: >-
                    Includes information on how to identify Ship from Store
                    recipient (Name, PIN, Reference number, ...)
                  type: string
                invoiceAddress:
                  $ref: '#/components/schemas/ConsumerAddress'
                postalAddress:
                  $ref: '#/components/schemas/ConsumerAddress'
                recipientaddress:
                  $ref: '#/components/schemas/ConsumerAddress'
                serviceLevel:
                  description: TBD
                  enum:
                    - DELIVERY
                    - SAMEDAY
                  type: string
              type: object
          type: object
        targetTime:
          description: At which time the result is expected.
          example: 2020-02-03T09:45:51.525Z
          format: date-time
          type: string
        targetTimeBaseDate:
          description: The start date for the targetTime calculation.
          example: 2020-02-03T08:45:50.525Z
          format: date-time
          type: string
      type: object
      title: PickjobDeliveryInformationForCreation
      description: PickjobDeliveryInformationForCreation
    PickJobForCreation:
      additionalProperties: false
      properties:
        assignedUsers:
          description: Assigned users for this entity
          items:
            anyOf:
              - $ref: '#/components/schemas/AssignedUserForCreationByName'
              - $ref: '#/components/schemas/AssignedUserForCreationById'
          type: array
        customAttributes:
          description: >-
            Attributes that can be added to the pickjob. These attributes cannot
            be used within fulfillment processes, but it could be useful to have
            the informations carried here.
          type: object
        deliveryinformation:
          $ref: '#/components/schemas/PickjobDeliveryInformationForCreation'
        expectedPickLineItems:
          items:
            $ref: '#/components/schemas/ExpectedPickLineItemForCreation'
          minItems: 0
          type: array
        facilityRef:
          description: >-
            The id of the facility reference. The given ID has to be present in
            the system.
          example: Esb20gpHBL94X5NdMp3C
          type: string
        operativeProcessRef:
          type: string
        orderDate:
          description: The date this order was created at the supplying system.
          example: 2020-02-03T08:45:50.525Z
          format: date-time
          type: string
        orderRef:
          description: >-
            The id of the order reference. The given ID has to be present in the
            system.
          example: LGMl2DuvPnfPoSHhYFOm
          type: string
        paymentInformation:
          $ref: '#/components/schemas/PaymentInformation'
        pickingTimes:
          $ref: '#/components/schemas/PickJobPickingTimes'
        pickLineItems:
          items:
            $ref: '#/components/schemas/PickLineItemForCreation'
          minItems: 0
          type: array
        preferredPickingMethods:
          description: Preferred way of picking a given pickJob.
          items:
            $ref: '#/components/schemas/PickingMethodEnum'
          type: array
        processId:
          description: >-
            Id of the global process related to this entity. For example used
            for starting the GDPR process and others.
          type: string
        routingPlanRef:
          description: Reference to the routingplan which created this pickjob
          type: string
        shortId:
          description: A short identifier that helps assigning a pick job to a customer.
          example: AS12
          type: string
        status:
          $ref: '#/components/schemas/PickJobStatus'
        stickers:
          items:
            $ref: '#/components/schemas/Sticker'
          minItems: 0
          type: array
        tenantOrderId:
          description: >-
            Field can be used as a reference number in foreign systems, for
            example as a reference to the source system's identifier for this
            order.
          example: R456728546
          type: string
        transfers:
          items:
            $ref: '#/components/schemas/OperativeTransfer'
          minItems: 0
          type: array
        tags:
          description: >-
            Tags can only be set when there is no process related with this
            pickJob. Setting processId and tags will lead to an validationError.
          items:
            $ref: '#/components/schemas/TagReference'
          minItems: 1
          type: array
      required:
        - orderDate
        - facilityRef
        - pickLineItems
      type: object
      xml:
        name: Pickjob
      title: PickJobForCreation
      description: PickJobForCreation
    PickJobLineItemPartialStockLocation:
      allOf:
        - $ref: '#/components/schemas/PickJobLineItemPartialStockLocationForCreation'
      properties:
        picked:
          example: 21
          format: int64
          minimum: 0
          type: number
        stockEmptied:
          example: true
          type: boolean
        zoneName:
          type: string
        zoneRef:
          type: string
      required:
        - tenantPartialStockId
        - stockRef
      type: object
      title: PickJobLineItemPartialStockLocation
      description: PickJobLineItemPartialStockLocation
    PickJobLineItemPartialStockLocationForCreation:
      properties:
        available:
          example: 21
          format: int64
          minimum: 0
          type: number
        location:
          $ref: '#/components/schemas/Location'
        quantity:
          description: >-
            quantity of the specific article that should be picked from given
            stockLocation
          example: 21
          format: int64
          minimum: 0
          type: number
        ratingScore:
          type: number
        sequenceScore:
          type: number
        stockProperties:
          anyOf:
            - $ref: '#/components/schemas/PickingStockPropertyPreset'
            - $ref: '#/components/schemas/PickingStockProperty'
        stockRef:
          type: string
        tenantPartialStockId:
          type: string
      required:
        - tenantPartialStockId
        - stockRef
      type: object
      title: PickJobLineItemPartialStockLocationForCreation
      description: PickJobLineItemPartialStockLocationForCreation
    PickJobLineItemPartialStockLocationForUpdate:
      properties:
        picked:
          example: 21
          format: int64
          minimum: 0
          type: number
        stockEmptied:
          example: true
          type: boolean
        stockRef:
          type: string
        tenantPartialStockId:
          type: string
      required:
        - tenantPartialStockId
        - picked
      type: object
      title: PickJobLineItemPartialStockLocationForUpdate
      description: PickJobLineItemPartialStockLocationForUpdate
    PickJobMergeLineItemsActionEnum:
      enum:
        - MERGE_LINE_ITEMS_PICK_JOB
      type: string
      title: PickJobMergeLineItemsActionEnum
      description: PickJobMergeLineItemsActionEnum
    PickJobMergeLineItemsActionParameter:
      additionalProperties: false
      properties:
        lineItemIds:
          description: Ids of the line items that should be merged
          items:
            type: string
          type: array
        name:
          $ref: '#/components/schemas/PickJobMergeLineItemsActionEnum'
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          type: integer
      required:
        - name
        - version
        - lineItemIds
      title: PickJobMergeLineItemsActionParameter
      type: object
      description: PickJobMergeLineItemsActionParameter
    PickJobObsoleteActionEnum:
      enum:
        - OBSOLETE
      type: string
      title: PickJobObsoleteActionEnum
      description: PickJobObsoleteActionEnum
    PickJobObsoleteActionParameter:
      additionalProperties: false
      description: Action to set the status to Obsolete of a Pickjob.
      properties:
        name:
          $ref: '#/components/schemas/PickJobObsoleteActionEnum'
        version:
          description: Version of the entity to be changed
          minimum: 0
          type: integer
      required:
        - name
        - version
      title: PickJobObsoleteActionParameter
    PickJobOrderBy:
      description: Attribute to order a pickJobs by
      enum:
        - TARGET_TIME_DESC
        - TARGET_TIME_ASC
        - LAST_MODIFIED_DESC
        - LAST_MODIFIED_ASC
        - ORDER_DATE_DESC
        - ORDER_DATE_ASC
        - LAST_MODIFIED_BY_USER_DESC
        - LAST_MODIFIED_BY_USER_ASC
      type: string
      xml:
        name: PickJobOrderBy
      title: PickJobOrderBy
    PickJobPaginatedResult:
      properties:
        pageInfo:
          allOf:
            - $ref: '#/components/schemas/PageInfo'
          description: Pagination information for the search result.
        pickJobs:
          items:
            $ref: '#/components/schemas/PickJob'
          type: array
        total:
          description: >-
            The total number of items matching the search criteria. Only filled,
            if withTotal is set to true in the search options.
          minimum: 0
          type: number
      required:
        - pageInfo
        - pickJobs
      title: PickJobPaginatedResult
      type: object
      description: PickJobPaginatedResult
    PickJobPauseActionEnum:
      enum:
        - PAUSE
      type: string
      title: PickJobPauseActionEnum
      description: PickJobPauseActionEnum
    PickJobPauseActionParameter:
      additionalProperties: false
      description: Action to pause a Pickjob.
      properties:
        name:
          $ref: '#/components/schemas/PickJobPauseActionEnum'
        version:
          description: Version of the entity to be changed
          minimum: 0
          type: integer
      required:
        - name
        - version
      title: PickJobPauseActionParameter
    PickJobPickingTimes:
      additionalProperties: false
      properties:
        startLatestAt:
          description: The date this pickJob should be started at last.
          example: 2024-02-03T09:45:51.525Z
          format: date-time
          type: string
      type: object
      title: PickJobPickingTimes
      description: PickJobPickingTimes
    PickjobPickLinePickedWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          $ref: '#/components/schemas/PickLineItem'
        pickJobRef:
          type: string
      required:
        - payload
        - pickJobRef
      type: object
      title: PickjobPickLinePickedWebHookEvent
      description: PickjobPickLinePickedWebHookEvent
    PickJobReplaceAssignedUsersActionEnum:
      enum:
        - REPLACE_ASSIGNED_USERS
      type: string
      title: PickJobReplaceAssignedUsersActionEnum
      description: PickJobReplaceAssignedUsersActionEnum
    PickJobReplaceAssignedUsersActionParameter:
      additionalProperties: false
      description: Action to replace the assigned users.
      properties:
        assignedUsers:
          description: Assigned users for this entity
          items:
            anyOf:
              - $ref: '#/components/schemas/AssignedUserForCreationByName'
              - $ref: '#/components/schemas/AssignedUserForCreationById'
          type: array
        name:
          $ref: '#/components/schemas/PickJobReplaceAssignedUsersActionEnum'
        version:
          description: Version of the entity to be changed
          minimum: 0
          type: integer
      required:
        - name
        - version
        - assignedUsers
      title: PickJobReplaceAssignedUsersActionParameter
    PickJobResetActionEnum:
      enum:
        - RESET
      type: string
      title: PickJobResetActionEnum
      description: PickJobResetActionEnum
    PickJobResetActionParameter:
      additionalProperties: false
      description: Action to reset a Pickjob.
      properties:
        name:
          $ref: '#/components/schemas/PickJobResetActionEnum'
        version:
          description: Version of the entity to be changed
          minimum: 0
          type: integer
      required:
        - name
        - version
      title: PickJobResetActionParameter
    PickJobRestartActionEnum:
      enum:
        - RESTART
      type: string
      title: PickJobRestartActionEnum
      description: PickJobRestartActionEnum
    PickJobRestartActionParameter:
      additionalProperties: false
      description: Action to Restart a Pickjob.
      properties:
        name:
          $ref: '#/components/schemas/PickJobRestartActionEnum'
        version:
          description: Version of the entity to be changed
          minimum: 0
          type: integer
      required:
        - name
        - version
      title: PickJobRestartActionParameter
    PickJobSearchPayload:
      properties:
        after:
          deprecated: false
          description: >-
            The cursor to start after. The value is provided in the
            `pageInfo.endCursor` field of the response.
          type: string
        options:
          $ref: '#/components/schemas/SearchOptions'
        query:
          $ref: '#/components/schemas/PickJobSearchQuery'
        size:
          default: 20
          description: Number of items to return.
          maximum: 250
          minimum: 1
          type: number
        sort:
          description: Use for sorting the result.
          items:
            $ref: '#/components/schemas/PickJobSort'
          maxItems: 1
          minItems: 1
          type: array
        startAfterId:
          deprecated: true
          description: >-
            The ID to start after. Deprecated, use `after` with the value
            provided in `pageInfo.endCursor` instead.
          type: string
      required:
        - query
      title: PickJobSearchPayload
      type: object
      description: PickJobSearchPayload
    PickJobSearchQuery:
      properties:
        and:
          items:
            $ref: '#/components/schemas/PickJobSearchQuery'
          type: array
        consumerName:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by consumerName
        id:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by id
        or:
          items:
            $ref: '#/components/schemas/PickJobSearchQuery'
          type: array
        targetTime:
          allOf:
            - $ref: '#/components/schemas/DateFilter'
          description: Search by targetTime
        tenantArticleIds:
          allOf:
            - $ref: '#/components/schemas/StringListFilter'
          description: Search by tenantArticleIds
        tenantOrderId:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by tenantOrderId
        transfers:
          allOf:
            - $ref: '#/components/schemas/PickJobTransfersListFilter'
          description: Nested list search by transfers
      title: PickJobSearchQuery
      type: object
      description: PickJobSearchQuery
    PickJobSort:
      properties:
        targetTime:
          enum:
            - ASC
            - DESC
          type: string
        tenantOrderId:
          enum:
            - ASC
            - DESC
          type: string
      title: PickJobSort
      type: object
      description: PickJobSort
    PickJobSplitLineItemsActionEnum:
      enum:
        - SPLIT_LINE_ITEMS_PICK_JOB
      type: string
      title: PickJobSplitLineItemsActionEnum
      description: PickJobSplitLineItemsActionEnum
    PickJobSplitLineItemsActionParameter:
      additionalProperties: false
      properties:
        name:
          $ref: '#/components/schemas/PickJobSplitLineItemsActionEnum'
        splitLineItemsInfo:
          items:
            $ref: '#/components/schemas/PickJobSplitLineItemsInfo'
          type: array
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          type: integer
      required:
        - name
        - version
        - splitLineItemsInfo
      title: PickJobSplitLineItemsActionParameter
      type: object
      description: PickJobSplitLineItemsActionParameter
    PickJobSplitLineItemsInfo:
      additionalProperties: false
      properties:
        lineItemId:
          description: references the id of the pickLineItem of a pickJob
          type: string
        picked:
          description: The amount of articles that were picked for this line item.
          example: 20
          format: int64
          minimum: 0
          type: integer
        quantity:
          description: quantity of the specific item that has been ordered
          example: 21
          minimum: 1
          type: integer
      required:
        - lineItemId
        - quantity
        - picked
      type: object
      title: PickJobSplitLineItemsInfo
      description: PickJobSplitLineItemsInfo
    PickJobStatus:
      description: The status of a pickjob.
      enum:
        - ABORTED
        - OPEN
        - IN_PROGRESS
        - CLOSED
        - PICKED
        - REROUTED
        - REJECTED
        - RESTOWED
        - EXPIRED
        - CANCELED
        - OBSOLETE
        - WAITING_FOR_INPUT
        - PAUSED
      type: string
      xml:
        name: PickJobStatus
      title: PickJobStatus
    PickJobStatusUnprotected:
      description: >-
        The status of a pickjob. These are the status that are still allowed to
        be used in the deprecated status field of ModifyPickJob actions
      enum:
        - OPEN
        - IN_PROGRESS
        - CLOSED
        - PICKED
        - REROUTED
        - REJECTED
        - RESTOWED
        - EXPIRED
        - PAUSED
        - WAITING_FOR_INPUT
      type: string
      xml:
        name: PickJobStatusUnprotected
      title: PickJobStatusUnprotected
    PickJobTagConfiguration:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        lineItemScanningConfiguration:
          $ref: '#/components/schemas/TagScanningConfiguration'
        lineItemStickerConfiguration:
          $ref: '#/components/schemas/StickerConfiguration'
        offeredDocumentsByDefault:
          description: >-
            This configuration is a fallback and applies only if none of the
            entries in offeredDocumentsPerTag can be applied
          items:
            $ref: '#/components/schemas/OfferedDocument'
          type: array
        offeredDocumentsPerTag:
          description: >-
            All entries with a match in their matchingValues will be combined
            when determining what documents belong to an entity
          items:
            $ref: '#/components/schemas/OfferedDocumentPerTag'
          type: array
        preferredPickingMethodsConfiguration:
          $ref: '#/components/schemas/PreferredPickingMethodsConfiguration'
        stickerConfiguration:
          $ref: '#/components/schemas/StickerConfiguration'
      required:
        - offeredDocumentsPerTag
        - offeredDocumentsByDefault
      title: PickJobTagConfiguration
      description: PickJobTagConfiguration
    PickJobTransfersFilter:
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/StringEqFilter'
          description: Search by id
      title: PickJobTransfersFilter
      type: object
      description: PickJobTransfersFilter
    PickJobTransfersListFilter:
      properties:
        contains:
          allOf:
            - $ref: '#/components/schemas/PickJobTransfersFilter'
          description: Contains returns if at least one entry matches
      title: PickJobTransfersListFilter
      type: object
      description: PickJobTransfersListFilter
    PickjobWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          $ref: '#/components/schemas/PickJob'
      required:
        - payload
      type: object
      title: PickjobWebHookEvent
      description: PickjobWebHookEvent
    PickLineItem:
      allOf:
        - $ref: '#/components/schemas/MandatoryLineItem'
        - properties:
            allowedSubstitutes:
              items:
                $ref: '#/components/schemas/Substitute'
              type: array
            article:
              $ref: '#/components/schemas/PickLineItemArticle'
            customAttributes:
              description: >-
                Attributes that can be added to the pick line. These attributes
                cannot be used within fulfillment processes, but it could be
                useful to have the information carried here.
              type: object
            globalLineItemId:
              description: >-
                This id is used to identify if this line item is related to the
                line item of other operational entities.
              example: a81f818e-2405-4570-8cde-b0c80fd3de31
              type: string
            id:
              description: >-
                The id of this lineItem. It is generated during creation
                automatically and suits as the primary identifier of the
                described entity.
              example: climk4dcQFiPdA5ULuhS
              type: string
            measurementUnitKey:
              description: Identifier for items unit of measurement.
              example: liter
              type: string
            measurementValidation:
              $ref: '#/components/schemas/MeasurementValidation'
            originId:
              description: >-
                The id of the line item this line item was originated from,
                before any split has happened. This can be used to restore the
                ‘pre-split’ status.
              example: df671041-10dd-4600-a2ff-e9ffe2556bba
              nullable: true
              type: string
            partialStockLocations:
              description: >-
                Indicates where the items to pick could be found and from where
                the picking should be started.
              items:
                $ref: '#/components/schemas/PickJobLineItemPartialStockLocation'
            picked:
              description: The amount of articles that were picked for this pickline.
              example: 20
              format: int64
              minimum: 0
              type: integer
            pickedAt:
              description: Date when the line has been picked.
              example: 2024-02-03T08:45:51.525Z
              format: date-time
              type: string
            pickJobLineItemRef:
              description: used for line items in pick runs to be split up correctly again
              example: '12345'
              type: string
            quantity:
              description: quantity of the specific article that has been ordered
              example: 21
              format: int64
              minimum: 1
              type: integer
            recordableAttributes:
              items:
                $ref: '#/components/schemas/RecordableAttribute'
              nullable: true
              type: array
            scannableCodes:
              items:
                description: Codes, that identify the article
                type: string
              type: array
            scannedCodes:
              items:
                $ref: '#/components/schemas/PickLineItemScannedCode'
              minimum: 0
              type: array
            scanningRule:
              $ref: '#/components/schemas/ScanningRuleConfiguration'
              deprecated: true
              description: >-
                This part of the API is deprecated. For details please check the
                <a
                href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
                target="_blank">api-release-life-cycle documentation</a>.<br
                /><br />Deprecated: Use scanningRules instead. This value
                indicates which scanning rule should be applied for this pick
                line. Only generated on demand on separate call, no persistence.
            scanningRules:
              properties:
                scanningMode:
                  $ref: '#/components/schemas/PickingScanningConfigurationEnum'
                scanningType:
                  items:
                    $ref: '#/components/schemas/ScanningRuleValue'
                  type: array
            secondaryMeasurementUnitKey:
              description: Identifier for items unit of measurement.
              example: liter
              type: string
            secondaryPicked:
              description: >-
                The secondary amount of articles that were picked for this
                pickline.
              example: 20
              format: int64
              minimum: 0
              type: integer
            secondaryQuantity:
              description: quantity of the specific article that has been ordered
              example: 21
              format: int64
              minimum: 0
              type: integer
            shortPickReason:
              $ref: '#/components/schemas/PickLineShortPickReason'
            status:
              $ref: '#/components/schemas/PickLineItemStatus'
            stickers:
              items:
                $ref: '#/components/schemas/Sticker'
              type: array
            stockEmptied:
              example: true
              type: boolean
            substituteLineItems:
              description: >-
                This part of the API is in Beta status. For details please check
                the <a
                href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
                target="_blank">api-release-life-cycle documentation</a>.<br
                /><br />
              items:
                $ref: '#/components/schemas/SubstituteLineItem'
              type: array
              x-badges:
                - color: orange
                  label: BETA
            tags:
              items:
                $ref: '#/components/schemas/TagReference'
              type: array
          required:
            - id
            - picked
            - status
            - quantity
            - article
          type: object
      title: PickLineItem
      description: PickLineItem
    PickLineItemArticle:
      allOf:
        - $ref: '#/components/schemas/LineItemArticle'
      properties:
        prices:
          deprecated: true
          items:
            $ref: '#/components/schemas/ArticlePrice'
          type: array
          description: >-
            This part of the API is deprecated. For details please check the <a
            href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
            target="_blank">api-release-life-cycle documentation</a>.<br /><br
            />
      type: object
      xml:
        name: PickLineItemArticle
      title: PickLineItemArticle
      description: PickLineItemArticle
    PickLineItemForCreation:
      additionalProperties: false
      allOf:
        - $ref: '#/components/schemas/MandatoryLineItemForCreation'
      properties:
        allowedSubstitutes:
          items:
            $ref: '#/components/schemas/Substitute'
          type: array
        article:
          $ref: '#/components/schemas/PickLineItemArticle'
        customAttributes:
          description: >-
            Attributes that can be added to the lineItem. These attributes
            cannot be used within fulfillment processes, but it could be useful
            to have the information carried here.
          type: object
        globalLineItemId:
          description: >-
            This id is used to identify if this line item is related to the line
            item of other operational entities.
          type: string
        measurementUnitKey:
          description: Identifier for items unit of measurement.
          example: liter
          type: string
        measurementValidation:
          $ref: '#/components/schemas/MeasurementValidation'
        partialStockLocations:
          description: >-
            Indicates where the items to pick could be found and from where the
            picking should be started.
          items:
            $ref: >-
              #/components/schemas/PickJobLineItemPartialStockLocationForCreation
        quantity:
          description: quantity of the specific article that has been ordered
          example: 21
          format: int64
          minimum: 1
          type: integer
        recordableAttributes:
          description: >-
            Customizable information about the lineItem that can be set during
            the process.
          items:
            $ref: '#/components/schemas/RecordableAttributeForCreation'
          type: array
        scannableCodes:
          description: Codes that can be used for scanning this lineItem
          items:
            type: string
          type: array
        secondaryMeasurementUnitKey:
          description: Identifier for items unit of measurement.
          example: liter
          type: string
        secondaryQuantity:
          description: quantity of the specific article that has been ordered
          example: 21
          format: int64
          minimum: 0
          type: integer
        stickers:
          items:
            $ref: '#/components/schemas/Sticker'
          type: array
        tags:
          items:
            $ref: '#/components/schemas/TagReference'
          type: array
      required:
        - quantity
        - article
      type: object
      title: PickLineItemForCreation
      description: PickLineItemForCreation
    PickLineItemScannedCode:
      properties:
        code:
          description: scannable code i.e. barcode
          example: 1245678
          type: string
        quantity:
          description: scanned quantity
          example: 7
          format: int64
          minimum: 0
          type: integer
      required:
        - code
        - quantity
      type: object
      title: PickLineItemScannedCode
      description: PickLineItemScannedCode
    PickLineItemStatus:
      description: >-
        A pickjob line item initially has the status OPEN and picking can start.
        When a line item is opened within the picking app, the item changes its
        status to IN_PROGRESS. When the commissioning is finished the state is
        CLOSED
      enum:
        - OPEN
        - IN_PROGRESS
        - CLOSED
      type: string
      xml:
        name: PickLineItemStatus
      title: PickLineItemStatus
    PickLineItemUpdate:
      additionalProperties: false
      properties:
        customAttributes:
          description: >-
            Attributes that can be added to the pick ine item. These attributes
            cannot be used within fulfillment processes, but it could be useful
            to have the informations carried here.
          type: object
        id:
          description: >-
            The id of this lineItem. It is generated during creation
            automatically and suits as the primary identifier of the described
            entity.
          example: climk4dcQFiPdA5ULuhS
          type: string
        partialStockLocations:
          items:
            $ref: '#/components/schemas/PickJobLineItemPartialStockLocationForUpdate'
        picked:
          description: The amount of articles that were picked for this pickline.
          example: 20
          format: int64
          minimum: 0
          type: integer
        pickedAt:
          description: >-
            Date when the line has been picked. example:
            '2024-02-03T08:45:51.525Z' format: date-time type: string
        scannedCodes:
          description: Scanned Codes of the given picked line item
          items:
            $ref: '#/components/schemas/PickLineItemScannedCode'
          minItems: 0
        secondaryPicked:
          type: integer
        shortPickReason:
          properties:
            reasonLocalized:
              $ref: '#/components/schemas/LocaleString'
              description: Localized reason
              example: '{ en_US: ''SomeName'' }'
        status:
          $ref: '#/components/schemas/PickLineItemStatus'
        stickers:
          items:
            $ref: '#/components/schemas/Sticker'
          type: array
        stockEmptied:
          example: true
          type: boolean
        substituteLineItems:
          description: >-
            This part of the API is in Beta status. For details please check the
            <a
            href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
            target="_blank">api-release-life-cycle documentation</a>.<br /><br
            />
          items:
            $ref: '#/components/schemas/SubstituteLineItemForCreation'
          type: array
          x-badges:
            - color: orange
              label: BETA
      required:
        - id
      type: object
      title: PickLineItemUpdate
      description: PickLineItemUpdate
    PickLineShortPickReason:
      additionalProperties: false
      properties:
        reasonLocalized:
          $ref: '#/components/schemas/LocaleString'
          description: Localized reason
          example: '{ en_US: ''SomeName'' }'
        reason:
          description: translated reasonLocalized according to the given locale
          type: string
      required:
        - reasonLocalized
      title: PickLineShortPickReason
      description: PickLineShortPickReason
    PickRun:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
        - properties:
            editor:
              $ref: '#/components/schemas/Editor'
            facilityRef:
              type: string
            id:
              type: string
            pickJobRefs:
              items:
                type: string
              type: array
            pickLineItems:
              items:
                $ref: '#/components/schemas/PickRunLineItem'
              type: array
            pickRunType:
              $ref: '#/components/schemas/PickRunType'
            status:
              $ref: '#/components/schemas/PickRunStatus'
      required:
        - pickLineItems
        - pickJobRefs
        - facilityRef
        - status
        - id
      type: object
      title: PickRun
      description: PickRun
    PickRunActionsParameter:
      anyOf:
        - $ref: '#/components/schemas/PickRunStartActionParameter'
        - $ref: '#/components/schemas/PickRunFinishActionParameter'
        - $ref: '#/components/schemas/PickRunCancelActionParameter'
        - $ref: '#/components/schemas/PickRunRemovePickJobActionParameter'
        - $ref: '#/components/schemas/PickRunSplitLineItemsActionParameter'
      title: PickRunActionsParameter
      description: PickRunActionsParameter
    PickRunCancelActionEnum:
      enum:
        - CANCEL
      type: string
      title: PickRunCancelActionEnum
      description: PickRunCancelActionEnum
    PickRunCancelActionParameter:
      additionalProperties: false
      description: Action to cancel a PickRun.
      properties:
        name:
          $ref: '#/components/schemas/PickRunCancelActionEnum'
        version:
          description: Version of the entity to be changed
          minimum: 0
          type: integer
      required:
        - name
        - version
      title: PickRunCancelActionParameter
    PickRunFinishActionEnum:
      enum:
        - FINISH
      type: string
      title: PickRunFinishActionEnum
      description: PickRunFinishActionEnum
    PickRunFinishActionParameter:
      additionalProperties: false
      description: Action to finish a PickRun.
      properties:
        name:
          $ref: '#/components/schemas/PickRunFinishActionEnum'
        version:
          description: Version of the entity to be changed
          minimum: 0
          type: integer
      required:
        - name
        - version
      title: PickRunFinishActionParameter
    PickRunForCreation:
      properties:
        facilityRef:
          type: string
        pickJobRefs:
          items:
            type: string
          minItems: 1
          type: array
        pickRunType:
          $ref: '#/components/schemas/PickRunType'
        status:
          $ref: '#/components/schemas/PickRunStatus'
      required:
        - pickJobRefs
        - facilityRef
      type: object
      title: PickRunForCreation
      description: PickRunForCreation
    PickRunLineItem:
      allOf:
        - $ref: '#/components/schemas/PickLineItem'
        - properties:
            pickJobRef:
              type: string
      title: PickRunLineItem
      description: PickRunLineItem
    PickRunPatchAction:
      properties:
        actions:
          items:
            anyOf:
              - $ref: '#/components/schemas/ModifyPickRunLineItem'
              - $ref: '#/components/schemas/StartPickRun'
              - $ref: '#/components/schemas/CancelPickRun'
              - $ref: '#/components/schemas/FinishPickRun'
          minItems: 1
          type: array
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          format: int64
          type: integer
      required:
        - version
        - actions
      type: object
      xml:
        name: PickRunPatchAction
      title: PickRunPatchAction
      description: PickRunPatchAction
    PickRunPickJobsPatchAction:
      properties:
        actions:
          items:
            anyOf:
              - $ref: '#/components/schemas/RemovePickJobFromPickRun'
          maxItems: 1
          minItems: 1
          type: array
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          format: int64
          type: integer
      required:
        - version
        - actions
      type: object
      xml:
        name: PickRunPickJobsPatchAction
      title: PickRunPickJobsPatchAction
      description: PickRunPickJobsPatchAction
    PickRunRemovePickJobActionEnum:
      enum:
        - REMOVE_PICK_JOB
      type: string
      title: PickRunRemovePickJobActionEnum
      description: PickRunRemovePickJobActionEnum
    PickRunRemovePickJobActionParameter:
      additionalProperties: false
      description: Action to Remove a Pickjob from a PickRun.
      properties:
        name:
          $ref: '#/components/schemas/PickRunRemovePickJobActionEnum'
        payload:
          additionalProperties: false
          properties:
            pickJobId:
              example: 4baaa052-7286-4dc2-937f-6e703ece25ac
              type: string
          required:
            - pickJobId
        version:
          description: Version of the entity to be changed
          minimum: 0
          type: integer
      required:
        - name
        - version
        - payload
      title: PickRunRemovePickJobActionParameter
    PickRunSplitLineItemsActionEnum:
      enum:
        - SPLIT_LINES_PICK_RUN
      type: string
      title: PickRunSplitLineItemsActionEnum
      description: PickRunSplitLineItemsActionEnum
    PickRunSplitLineItemsActionParameter:
      additionalProperties: false
      properties:
        name:
          $ref: '#/components/schemas/PickRunSplitLineItemsActionEnum'
        splitLineItemsInfo:
          items:
            $ref: '#/components/schemas/PickRunSplitLineItemsInfo'
          type: array
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          type: integer
      required:
        - name
        - version
        - splitLineItemsInfo
      title: PickRunSplitLineItemsActionParameter
      type: object
      description: PickRunSplitLineItemsActionParameter
    PickRunSplitLineItemsInfo:
      additionalProperties: false
      properties:
        lineItemId:
          description: references the id of the pickLineItem of a pickRun
          type: string
        picked:
          description: The amount of articles that were picked for this line item.
          example: 20
          format: int64
          minimum: 0
          type: integer
        quantity:
          description: quantity of the specific item that has been ordered
          example: 21
          minimum: 1
          type: integer
      required:
        - lineItemId
        - quantity
        - picked
      type: object
      title: PickRunSplitLineItemsInfo
      description: PickRunSplitLineItemsInfo
    PickRunStartActionEnum:
      enum:
        - START
      type: string
      title: PickRunStartActionEnum
      description: PickRunStartActionEnum
    PickRunStartActionParameter:
      additionalProperties: false
      description: Action to start a PickRun.
      properties:
        name:
          $ref: '#/components/schemas/PickRunStartActionEnum'
        version:
          description: Version of the entity to be changed
          minimum: 0
          type: integer
      required:
        - name
        - version
      title: PickRunStartActionParameter
    PickRunStatus:
      description: The state of the PickRun
      enum:
        - OPEN
        - IN_PROGRESS
        - CLOSED
        - CANCELED
        - OBSOLETE
      type: string
      title: PickRunStatus
    PickRunType:
      default: batchPick
      description: >-
        Deprecated: batchPick, use batch instead Deprecated: multiOrderPick, use
        multiOrder instead
      enum:
        - multiOrderPick
        - multiOrder
        - batchPick
        - batch
      type: string
      title: PickRunType
    PostalCodeValidation:
      properties:
        country:
          description: Country in Format [A-Z]{2}
          example: DE
          type: string
        postalCode:
          description: Postal code for validation
          example: '50667'
          type: string
      required:
        - country
        - postalCode
      type: object
      xml:
        name: PostalCodeValidation
      title: PostalCodeValidation
      description: PostalCodeValidation
    PostNlCarrierConfiguration:
      allOf:
        - $ref: '#/components/schemas/CarrierConfiguration'
      description: Configuration of PostNL Carrier
      properties:
        trackAndTraceUrl:
          type: string
      title: PostNlCarrierConfiguration
    PostNLCarrierCredentials:
      allOf:
        - $ref: '#/components/schemas/AbstractCarrierCredentials'
        - properties:
            apiKey:
              description: PostNL API Key
              type: string
          required:
            - apiKey
          type: object
      description: Post NL Carrier Credentials
      title: PostNLCarrierCredentials
      xml:
        name: PostNLCarrierCredentials
    PreferredCarrier:
      description: Keys of the preferred carriers to handle out the order
      type: string
      title: PreferredCarrier
    PreferredCarrierWithProduct:
      additionalProperties: false
      properties:
        carrierKey:
          example: DPD
          type: string
        carrierProduct:
          example: WORLDWIDE
          type: string
        carrierServices:
          items:
            $ref: '#/components/schemas/CarrierServices'
          type: array
      required:
        - carrierKey
      title: PreferredCarrierWithProduct
      description: PreferredCarrierWithProduct
    PreferredPickingMethodsConfiguration:
      properties:
        PreferredPickingMethodsPerTag:
          items:
            $ref: '#/components/schemas/PreferredPickingMethodsPerTag'
          type: array
      title: PreferredPickingMethodsConfiguration
      description: PreferredPickingMethodsConfiguration
    PreferredPickingMethodsPerTag:
      additionalProperties: false
      properties:
        matchingValues:
          items:
            type: string
          minItems: 1
          type: array
        pickingMethods:
          items:
            $ref: '#/components/schemas/PickingMethodEnum'
          minItems: 1
          type: array
        tagRef:
          type: string
      required:
        - tagRef
        - pickingMethods
        - matchingValues
      title: PreferredPickingMethodsPerTag
      description: PreferredPickingMethodsPerTag
    PreselectedFacility:
      anyOf:
        - required:
            - facilityRef
        - required:
            - tenantFacilityId
      properties:
        facilityRef:
          description: Reference to the facility which is supposed to fulfill the order.
          type: string
        tenantFacilityId:
          description: Reference to the facility which is supposed to fulfill the order.
          type: string
      type: object
      title: PreselectedFacility
      description: PreselectedFacility
    PriceRange:
      additionalProperties: false
      properties:
        currency:
          allOf:
            - $ref: '#/components/schemas/CurrencyCode'
          description: The currency of the price as an ISO 4217 code.
          example: EUR
          nullable: true
        decimalPlaces:
          description: Number of decimal places for the given currency
          example: 2
          minimum: 0
          type: integer
        from:
          description: >-
            Lowest total parcel value that this carrier will be selected for.
            Value is in configured in the smallest subunit, e.g. cents.
          example: 1299
          minimum: 0
          type: integer
        to:
          description: >-
            Highest total parcel value that this carrier will be selected for.
            Value is configured in the smallest subunit, e.g. cents.
          example: 25000
          minimum: 1
          type: integer
      required:
        - from
        - to
        - currency
        - decimalPlaces
      type: object
      title: PriceRange
      description: PriceRange
    PrintableDocument:
      properties:
        customAttributes:
          description: >-
            Attributes that can be added to the document. These attributes
            cannot be used within fulfillment processes, but it could be useful
            to have the informations carried here.
          type: object
        documentCategory:
          $ref: '#/components/schemas/DocumentCategory'
        documentType:
          $ref: '#/components/schemas/DocumentType'
        id:
          type: string
        name:
          type: string
        operations:
          description: Offered operations for this document
          items:
            $ref: '#/components/schemas/DocumentOperations'
          type: array
        path:
          type: string
        priority:
          minimum: 0
          type: number
        status:
          $ref: '#/components/schemas/DocumentStatus'
      required:
        - documentType
        - id
        - status
        - documentCategory
      type: object
      title: PrintableDocument
      description: PrintableDocument
    PrintableDocumentForUpdate:
      additionalProperties: false
      properties:
        customAttributes:
          description: >-
            Attributes that can be added to the document. These attributes
            cannot be used within fulfillment processes, but it could be useful
            to have the informations carried here.
          type: object
        operations:
          description: Offered operations for this document
          items:
            $ref: '#/components/schemas/DocumentOperations'
          minItems: 1
          type: array
        priority:
          description: Sorting display order of document
          example: 42
          format: int64
          type: integer
        status:
          $ref: '#/components/schemas/DocumentStatus'
        version:
          description: Version of the documentSet you want to update a document of
          example: 42
          format: int64
          type: integer
      required:
        - version
      type: object
      title: PrintableDocumentForUpdate
      description: PrintableDocumentForUpdate
    PrioritizationRule:
      description: >-
        You can select a default Prioritization Rule from the catalog. When you
        decide to select 'CUSTOM' you must also provide a vmExpression to match
        the type CustomPrioritizationRule.
      properties:
        active:
          type: boolean
        id:
          description: >-
            This value identifies this very instance of the prioritization rule.
            It is set autmatically by the server when the configuration is
            updated.
          example: 9156fafb-d0b4-4f99-815e-5f231cb50fae
          type: string
        implementation:
          $ref: '#/components/schemas/PrioritizationRuleImplementation'
        name:
          type: string
      required:
        - active
        - name
        - implementation
      type: object
      title: PrioritizationRule
    PrioritizationRuleImplementation:
      enum:
        - CUSTOM
      type: string
      xml:
        name: PrioritizationRuleImplementation
      title: PrioritizationRuleImplementation
      description: PrioritizationRuleImplementation
    Process:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        deletionDate:
          description: >-
            The date that defines when the entities will be or have been
            deleted.
          example: 2020-02-03T08:45:50.525Z
          format: date-time
          type: string
        documentRefs:
          description: References to documents that are attached to this process.
          items:
            type: string
          type: array
        domainStatuses:
          additionalProperties:
            $ref: '#/components/schemas/DomainStatus'
          description: Overview of the different domain adherent status of the process.
          type: object
        domainStatusHistory:
          description: >-
            History of process status changes caused by changes on the related
            domains.
          items:
            $ref: '#/components/schemas/DomainStatusHistoryItem'
          type: array
        domsStatus:
          $ref: '#/components/schemas/ProcessStatus'
          default: CREATED
          description: Overall DOMS status of the process.
        externalActionRefs:
          description: >-
            References to the external actions connected to this process (if
            any).
          items:
            type: string
          type: array
        facilityRefs:
          description: References of the Facilities connected to this process (if any).
          items:
            type: string
          type: array
        flatRefs:
          description: >-
            This field references all IDs of any entity connected to this
            process.
          items:
            type: string
          type: array
        gdprCleanupDate:
          description: >-
            The date that defines when the entities will be or have been
            anonymized.
          example: 2020-02-03T08:45:50.525Z
          format: date-time
          type: string
        handoverJobRefs:
          description: References to Handoverjobs connected to this process (if present).
          items:
            type: string
          type: array
        id:
          description: ID of this process
          type: string
        inventoryStatus:
          $ref: '#/components/schemas/ProcessStatus'
          default: CREATED
          description: Overall inventory status of the process
        isAnonymized:
          description: Indicates if the entities have been anonymized.
          type: boolean
        itemReturnJobsRef:
          description: >-
            References to the Item Return Job connected to this process (if
            present).
          items:
            type: string
          type: array
        lastDomainEntityStatuses:
          description: The last domain statuses of each domain
          items:
            $ref: '#/components/schemas/LastDomainEntityStatusItem'
          type: array
        operativeStatus:
          $ref: '#/components/schemas/ProcessStatus'
          default: CREATED
          description: Overall operative status of the process
        orderRef:
          description: References to the Order connected to this process (if present).
          type: string
        packJobRefs:
          description: References of the Packjobs connected to this process (if present).
          items:
            type: string
          type: array
        pickJobRefs:
          description: References to the Pickjobs connected to this process (if present).
          items:
            type: string
          type: array
        returnRefs:
          description: References to the Returns connected to this process (if present).
          items:
            type: string
          type: array
        returnStatus:
          $ref: '#/components/schemas/ProcessStatus'
          default: NOT_AVAILABLE
          description: Overall return status of the process
        routingPlanRefs:
          description: >-
            References the RoutingPlans that were used during this process (if
            present).
          items:
            type: string
          type: array
        serviceJobRefs:
          description: >-
            References to the Service Jobs connected to this process (if
            present).
          items:
            type: string
          type: array
        shipmentRefs:
          description: References to the Shipments connected to this process (if present).
          items:
            type: string
          type: array
        status:
          $ref: '#/components/schemas/ProcessStatus'
          default: CREATED
          description: Overall status of the process.
        tenantOrderId:
          description: The tenantOrderId referencing this process.
          type: string
        tags:
          items:
            $ref: '#/components/schemas/TagReference'
          minItems: 1
          type: array
      required:
        - gdprCleanupDate
        - id
      type: object
      title: Process
      description: Process
    ProcessAddressSort:
      properties:
        country:
          enum:
            - ASC
            - DESC
          type: string
      title: ProcessAddressSort
      type: object
      description: ProcessAddressSort
    ProcessBrandSort:
      properties:
        name:
          enum:
            - ASC
            - DESC
          type: string
      title: ProcessBrandSort
      type: object
      description: ProcessBrandSort
    ProcessCarrierSort:
      properties:
        name:
          enum:
            - ASC
            - DESC
          type: string
      title: ProcessCarrierSort
      type: object
      description: ProcessCarrierSort
    ProcessConsumerAddressSort:
      properties:
        country:
          enum:
            - ASC
            - DESC
          type: string
      title: ProcessConsumerAddressSort
      type: object
      description: ProcessConsumerAddressSort
    ProcessDomainStatusesDomainStatusEnumFilter:
      properties:
        eq:
          description: Search by order
          enum:
            - PENDING
            - CREATED
            - IN_PROGRESS
            - STUCK
            - FINISHED
            - CANCELED
            - OBSOLETE
          type: string
        in:
          description: Search by order
          items:
            enum:
              - PENDING
              - CREATED
              - IN_PROGRESS
              - STUCK
              - FINISHED
              - CANCELED
              - OBSOLETE
            type: string
          type: array
        notEq:
          description: Search by order
          enum:
            - PENDING
            - CREATED
            - IN_PROGRESS
            - STUCK
            - FINISHED
            - CANCELED
            - OBSOLETE
          type: string
      title: ProcessDomainStatusesDomainStatusEnumFilter
      type: object
      description: ProcessDomainStatusesDomainStatusEnumFilter
    ProcessDomainStatusesDomainStatusEnumListFilter:
      properties:
        contains:
          allOf:
            - $ref: '#/components/schemas/ProcessDomainStatusesDomainStatusEnumFilter'
          description: Search by order
      title: ProcessDomainStatusesDomainStatusEnumListFilter
      type: object
      description: ProcessDomainStatusesDomainStatusEnumListFilter
    ProcessDomainStatusesFilter:
      properties:
        handover:
          allOf:
            - $ref: >-
                #/components/schemas/ProcessDomainStatusesDomainStatusEnumListFilter
          description: Search by handover
        order:
          allOf:
            - $ref: >-
                #/components/schemas/ProcessDomainStatusesDomainStatusEnumListFilter
          description: Search by order
        packing:
          allOf:
            - $ref: >-
                #/components/schemas/ProcessDomainStatusesDomainStatusEnumListFilter
          description: Search by packing
        picking:
          allOf:
            - $ref: >-
                #/components/schemas/ProcessDomainStatusesDomainStatusEnumListFilter
          description: Search by picking
        return:
          allOf:
            - $ref: >-
                #/components/schemas/ProcessDomainStatusesDomainStatusEnumListFilter
          description: Search by return
        routing:
          allOf:
            - $ref: >-
                #/components/schemas/ProcessDomainStatusesDomainStatusEnumListFilter
          description: Search by routing
        shipping:
          allOf:
            - $ref: >-
                #/components/schemas/ProcessDomainStatusesDomainStatusEnumListFilter
          description: Search by shipping
      title: ProcessDomainStatusesFilter
      type: object
      description: ProcessDomainStatusesFilter
    Processes:
      properties:
        processes:
          items:
            $ref: '#/components/schemas/Process'
          type: array
        total:
          description: Total number of found entities for this query
          example: 42
          type: integer
      type: object
      title: Processes
      description: Processes
    ProcessFacilitySort:
      properties:
        address:
          $ref: '#/components/schemas/ProcessAddressSort'
        name:
          enum:
            - ASC
            - DESC
          type: string
      title: ProcessFacilitySort
      type: object
      description: ProcessFacilitySort
    ProcessOrderSort:
      properties:
        desiredDeliveryTime:
          enum:
            - ASC
            - DESC
          type: string
        orderDate:
          enum:
            - ASC
            - DESC
          type: string
        provisioningTime:
          enum:
            - ASC
            - DESC
          type: string
        tenantOrderId:
          enum:
            - ASC
            - DESC
          type: string
      title: ProcessOrderSort
      type: object
      description: ProcessOrderSort
    ProcessPaginatedResult:
      properties:
        pageInfo:
          allOf:
            - $ref: '#/components/schemas/PageInfo'
          description: Pagination information for the search result.
        processes:
          items:
            $ref: '#/components/schemas/Process'
          type: array
        total:
          description: >-
            The total number of items matching the search criteria. Only filled,
            if withTotal is set to true in the search options.
          minimum: 0
          type: number
      required:
        - pageInfo
        - processes
      title: ProcessPaginatedResult
      type: object
      description: ProcessPaginatedResult
    ProcessPatchActions:
      properties:
        actions:
          items:
            anyOf:
              - $ref: '#/components/schemas/AddTagsToProcess'
              - $ref: '#/components/schemas/AssignFacilityToProcess'
              - $ref: '#/components/schemas/UpdateGdprCleanupDateAction'
          minItems: 1
          type: array
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          format: int64
          type: integer
      required:
        - version
        - actions
      type: object
      xml:
        name: ProcessPatchActions
      title: ProcessPatchActions
      description: ProcessPatchActions
    ProcessProgressLog:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        attributes:
          type: object
        domain:
          $ref: '#/components/schemas/DomainType'
        domainEntityProcessStatus:
          $ref: '#/components/schemas/DomainStatus'
        domainLastModified:
          description: The last modified date of the related domain entity
          example: 2020-02-03T09:45:51.525Z
          format: date-time
          type: string
        domainRef:
          type: string
        domainStatus:
          type: string
        domainVersion:
          description: The version of the related domain entity
          example: 1
          format: int64
          type: integer
        id:
          type: string
        processRef:
          type: string
        statusChangeReasonKey:
          description: >-
            This property captures the reason for the entity’s status change.
            Each domain can define its own set of reasons, represented as an
            ENUM
          type: string
      required:
        - id
        - domainVersion
        - processRef
        - domainEntityProcessStatus
        - domain
        - domainRef
        - domainStatus
      title: ProcessProgressLog
      description: ProcessProgressLog
    ProcessReferencedBrandFilter:
      properties:
        name:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by name
      title: ProcessReferencedBrandFilter
      type: object
      description: ProcessReferencedBrandFilter
    ProcessReferencedCarrierFilter:
      properties:
        carrierTrackingNumber:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by carrierTrackingNumber
        name:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by name
      title: ProcessReferencedCarrierFilter
      type: object
      description: ProcessReferencedCarrierFilter
    ProcessReferencedConsumerAddressFilter:
      properties:
        country:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by country
        deliveryCountry:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by deliveryCountry
      title: ProcessReferencedConsumerAddressFilter
      type: object
      description: ProcessReferencedConsumerAddressFilter
    ProcessReferencedFacilityAddressFilter:
      properties:
        country:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by country
      title: ProcessReferencedFacilityAddressFilter
      type: object
      description: ProcessReferencedFacilityAddressFilter
    ProcessReferencedFacilityFilter:
      properties:
        address:
          allOf:
            - $ref: '#/components/schemas/ProcessReferencedFacilityAddressFilter'
          description: Nested search by address
        name:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by name
      title: ProcessReferencedFacilityFilter
      type: object
      description: ProcessReferencedFacilityFilter
    ProcessReferencedFilter:
      properties:
        brand:
          allOf:
            - $ref: '#/components/schemas/ProcessReferencedBrandFilter'
          description: Nested search by brand
        carrier:
          allOf:
            - $ref: '#/components/schemas/ProcessReferencedCarrierFilter'
          description: Nested search by carrier
        consumerAddress:
          allOf:
            - $ref: '#/components/schemas/ProcessReferencedConsumerAddressFilter'
          description: Nested search by consumerAddress
        facility:
          allOf:
            - $ref: '#/components/schemas/ProcessReferencedFacilityFilter'
          description: Nested search by facility
        order:
          allOf:
            - $ref: '#/components/schemas/ProcessReferencedOrderFilter'
          description: Nested search by order
        parcelTrackingStatus:
          allOf:
            - $ref: >-
                #/components/schemas/ProcessReferencedParcelTrackingStatusEnumListFilter
          description: Search by parcelTrackingStatus
        serviceLevel:
          allOf:
            - $ref: '#/components/schemas/ProcessReferencedServiceLevelEnumListFilter'
          description: Search by serviceLevel
        serviceType:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by serviceType
        sticker:
          allOf:
            - $ref: '#/components/schemas/ProcessReferencedStickerFilter'
          description: Nested search by sticker
        targetTime:
          allOf:
            - $ref: '#/components/schemas/DateFilter'
          description: Search by targetTime
        tenantArticleId:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by tenantArticleId
      title: ProcessReferencedFilter
      type: object
      description: ProcessReferencedFilter
    ProcessReferencedOrderFilter:
      properties:
        desiredDeliveryTime:
          allOf:
            - $ref: '#/components/schemas/DateFilter'
          description: Search by desiredDeliveryTime
        orderDate:
          allOf:
            - $ref: '#/components/schemas/DateFilter'
          description: Search by orderDate
        provisioningTime:
          allOf:
            - $ref: '#/components/schemas/DateFilter'
          description: Search by provisioningTime
        status:
          allOf:
            - $ref: >-
                #/components/schemas/ProcessReferencedOrderOrderStatusEnumListFilter
          description: Search by status
        tenantOrderId:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by tenantOrderId
      title: ProcessReferencedOrderFilter
      type: object
      description: ProcessReferencedOrderFilter
    ProcessReferencedOrderOrderStatusEnumFilter:
      properties:
        eq:
          description: Search by status
          enum:
            - OPEN
            - CANCELLED
            - PROMISED
            - LOCKED
            - OBSOLETE
          type: string
        in:
          description: Search by status
          items:
            enum:
              - OPEN
              - CANCELLED
              - PROMISED
              - LOCKED
              - OBSOLETE
            type: string
          type: array
        notEq:
          description: Search by status
          enum:
            - OPEN
            - CANCELLED
            - PROMISED
            - LOCKED
            - OBSOLETE
          type: string
      title: ProcessReferencedOrderOrderStatusEnumFilter
      type: object
      description: ProcessReferencedOrderOrderStatusEnumFilter
    ProcessReferencedOrderOrderStatusEnumListFilter:
      properties:
        contains:
          allOf:
            - $ref: '#/components/schemas/ProcessReferencedOrderOrderStatusEnumFilter'
          description: Search by status
      title: ProcessReferencedOrderOrderStatusEnumListFilter
      type: object
      description: ProcessReferencedOrderOrderStatusEnumListFilter
    ProcessReferencedParcelTrackingStatusEnumFilter:
      properties:
        eq:
          description: Search by parcelTrackingStatus
          enum:
            - REGISTERED
            - PICKED_UP
            - DELIVERED
            - NOT_DELIVERED
            - TRANSIT
            - EXCEPTION
            - OUT_FOR_DELIVERY
            - DESTROYED
            - UNKNOWN
            - CANCELED
            - AWAITS_PICKUP_BY_RECEIVER
            - DELAYED
            - NOTIFICATION
          type: string
        in:
          description: Search by parcelTrackingStatus
          items:
            enum:
              - REGISTERED
              - PICKED_UP
              - DELIVERED
              - NOT_DELIVERED
              - TRANSIT
              - EXCEPTION
              - OUT_FOR_DELIVERY
              - DESTROYED
              - UNKNOWN
              - CANCELED
              - AWAITS_PICKUP_BY_RECEIVER
              - DELAYED
              - NOTIFICATION
            type: string
          type: array
        notEq:
          description: Search by parcelTrackingStatus
          enum:
            - REGISTERED
            - PICKED_UP
            - DELIVERED
            - NOT_DELIVERED
            - TRANSIT
            - EXCEPTION
            - OUT_FOR_DELIVERY
            - DESTROYED
            - UNKNOWN
            - CANCELED
            - AWAITS_PICKUP_BY_RECEIVER
            - DELAYED
            - NOTIFICATION
          type: string
      title: ProcessReferencedParcelTrackingStatusEnumFilter
      type: object
      description: ProcessReferencedParcelTrackingStatusEnumFilter
    ProcessReferencedParcelTrackingStatusEnumListFilter:
      properties:
        contains:
          allOf:
            - $ref: >-
                #/components/schemas/ProcessReferencedParcelTrackingStatusEnumFilter
          description: Search by parcelTrackingStatus
      title: ProcessReferencedParcelTrackingStatusEnumListFilter
      type: object
      description: ProcessReferencedParcelTrackingStatusEnumListFilter
    ProcessReferencedServiceLevelEnumFilter:
      properties:
        eq:
          description: Search by serviceLevel
          enum:
            - DELIVERY
            - SAMEDAY
          type: string
        in:
          description: Search by serviceLevel
          items:
            enum:
              - DELIVERY
              - SAMEDAY
            type: string
          type: array
        notEq:
          description: Search by serviceLevel
          enum:
            - DELIVERY
            - SAMEDAY
          type: string
      title: ProcessReferencedServiceLevelEnumFilter
      type: object
      description: ProcessReferencedServiceLevelEnumFilter
    ProcessReferencedServiceLevelEnumListFilter:
      properties:
        contains:
          allOf:
            - $ref: '#/components/schemas/ProcessReferencedServiceLevelEnumFilter'
          description: Search by serviceLevel
      title: ProcessReferencedServiceLevelEnumListFilter
      type: object
      description: ProcessReferencedServiceLevelEnumListFilter
    ProcessReferencedSort:
      properties:
        brand:
          $ref: '#/components/schemas/ProcessBrandSort'
        carrier:
          $ref: '#/components/schemas/ProcessCarrierSort'
        consumerAddress:
          $ref: '#/components/schemas/ProcessConsumerAddressSort'
        facility:
          $ref: '#/components/schemas/ProcessFacilitySort'
        order:
          $ref: '#/components/schemas/ProcessOrderSort'
        parcelTrackingStatus:
          enum:
            - ASC
            - DESC
          type: string
        sticker:
          $ref: '#/components/schemas/ProcessStickerSort'
        targetTime:
          enum:
            - ASC
            - DESC
          type: string
      title: ProcessReferencedSort
      type: object
      description: ProcessReferencedSort
    ProcessReferencedStickerFilter:
      properties:
        name:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by name
      title: ProcessReferencedStickerFilter
      type: object
      description: ProcessReferencedStickerFilter
    ProcessSearchPayload:
      properties:
        after:
          deprecated: false
          description: >-
            The cursor to start after. The value is provided in the
            `pageInfo.endCursor` field of the response.
          type: string
        options:
          $ref: '#/components/schemas/SearchOptions'
        query:
          $ref: '#/components/schemas/ProcessSearchQuery'
        size:
          default: 20
          description: Number of items to return.
          maximum: 250
          minimum: 1
          type: number
        sort:
          description: Use for sorting the result.
          items:
            $ref: '#/components/schemas/ProcessSort'
          maxItems: 1
          minItems: 1
          type: array
        startAfterId:
          deprecated: true
          description: >-
            The ID to start after. Deprecated, use `after` with the value
            provided in `pageInfo.endCursor` instead.
          type: string
      required:
        - query
      title: ProcessSearchPayload
      type: object
      description: ProcessSearchPayload
    ProcessSearchQuery:
      properties:
        and:
          items:
            $ref: '#/components/schemas/ProcessSearchQuery'
          type: array
        created:
          allOf:
            - $ref: '#/components/schemas/DateFilter'
          description: Search by created
        documentRefs:
          allOf:
            - $ref: '#/components/schemas/StringListFilter'
          description: Search by documentRefs
        domainStatuses:
          allOf:
            - $ref: '#/components/schemas/ProcessDomainStatusesFilter'
          description: Nested search by domainStatuses
        domsStatus:
          allOf:
            - $ref: '#/components/schemas/ProcessStatusEnumFilter'
          description: Search by domsStatus
        externalActionRefs:
          allOf:
            - $ref: '#/components/schemas/StringListFilter'
          description: Search by externalActionRefs
        facilityRefs:
          allOf:
            - $ref: '#/components/schemas/StringListFilter'
          description: Search by facilityRefs
        facilityRefsWithActiveOperations:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by facilityRefsWithActiveOperations
        flatRefs:
          allOf:
            - $ref: '#/components/schemas/StringListFilter'
          description: Search by flatRefs
        handoverJobRefs:
          allOf:
            - $ref: '#/components/schemas/StringListFilter'
          description: Search by handoverJobRefs
        itemReturnJobsRef:
          allOf:
            - $ref: '#/components/schemas/StringListFilter'
          description: Search by itemReturnJobsRef
        operativeStatus:
          allOf:
            - $ref: '#/components/schemas/ProcessStatusEnumFilter'
          description: Search by operativeStatus
        or:
          items:
            $ref: '#/components/schemas/ProcessSearchQuery'
          type: array
        orderRef:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by orderRef
        packJobRefs:
          allOf:
            - $ref: '#/components/schemas/StringListFilter'
          description: Search by packJobRefs
        pickJobRefs:
          allOf:
            - $ref: '#/components/schemas/StringListFilter'
          description: Search by pickJobRefs
        processId:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by processId
        referenced:
          allOf:
            - $ref: '#/components/schemas/ProcessReferencedFilter'
          description: Nested search by referenced
        returnRefs:
          allOf:
            - $ref: '#/components/schemas/StringListFilter'
          description: Search by returnRefs
        returnStatus:
          allOf:
            - $ref: '#/components/schemas/ProcessStatusEnumFilter'
          description: Search by returnStatus
        routingPlanRefs:
          allOf:
            - $ref: '#/components/schemas/StringListFilter'
          description: Search by routingPlanRefs
        searchTerm:
          allOf:
            - $ref: '#/components/schemas/SearchFilter'
          description: Full-text search for this entity
        serviceJobRefs:
          allOf:
            - $ref: '#/components/schemas/StringListFilter'
          description: Search by serviceJobRefs
        shipmentRefs:
          allOf:
            - $ref: '#/components/schemas/StringListFilter'
          description: Search by shipmentRefs
        status:
          allOf:
            - $ref: '#/components/schemas/ProcessStatusEnumFilter'
          description: Search by status
        tags:
          allOf:
            - $ref: '#/components/schemas/ProcessTagsListFilter'
          description: Nested list search by tags
      title: ProcessSearchQuery
      type: object
      description: ProcessSearchQuery
    ProcessSearchResult:
      properties:
        created:
          description: Information about the time, when a routing plan status is set
          example: 2024-05-12T08:45:50.525Z
          format: date-time
          type: string
        id:
          type: string
        lastModified:
          description: Information about the time, when a routing plan status is set
          example: 2024-05-12T08:45:50.525Z
          format: date-time
          type: string
        processSearchResultEntities:
          type: object
        version:
          type: integer
      required:
        - id
        - version
        - created
        - lastModified
        - processSearchResultEntities
      title: ProcessSearchResult
      type: object
      description: ProcessSearchResult
    ProcessSort:
      properties:
        domsStatus:
          enum:
            - ASC
            - DESC
          type: string
        operativeStatus:
          enum:
            - ASC
            - DESC
          type: string
        processId:
          enum:
            - ASC
            - DESC
          type: string
        referenced:
          $ref: '#/components/schemas/ProcessReferencedSort'
        returnStatus:
          enum:
            - ASC
            - DESC
          type: string
        status:
          enum:
            - ASC
            - DESC
          type: string
      title: ProcessSort
      type: object
      description: ProcessSort
    ProcessStatus:
      enum:
        - CREATED
        - IN_PROGRESS
        - FINISHED
        - CANCELED
        - ERROR
        - NOT_AVAILABLE
      type: string
      title: ProcessStatus
      description: ProcessStatus
    ProcessStatusEnumFilter:
      properties:
        eq:
          description: Search by status
          enum:
            - CREATED
            - IN_PROGRESS
            - FINISHED
            - CANCELED
            - ERROR
            - NOT_AVAILABLE
          type: string
        in:
          description: Search by status
          items:
            enum:
              - CREATED
              - IN_PROGRESS
              - FINISHED
              - CANCELED
              - ERROR
              - NOT_AVAILABLE
            type: string
          type: array
        notEq:
          description: Search by status
          enum:
            - CREATED
            - IN_PROGRESS
            - FINISHED
            - CANCELED
            - ERROR
            - NOT_AVAILABLE
          type: string
      title: ProcessStatusEnumFilter
      type: object
      description: ProcessStatusEnumFilter
    ProcessStickerSort:
      properties:
        name:
          enum:
            - ASC
            - DESC
          type: string
      title: ProcessStickerSort
      type: object
      description: ProcessStickerSort
    ProcessTagsFilter:
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by id
        value:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by value
      title: ProcessTagsFilter
      type: object
      description: ProcessTagsFilter
    ProcessTagsListFilter:
      properties:
        contains:
          allOf:
            - $ref: '#/components/schemas/ProcessTagsFilter'
          description: Contains returns if at least one entry matches
      title: ProcessTagsListFilter
      type: object
      description: ProcessTagsListFilter
    ProductInformation:
      properties:
        additionalShippingArticleAttributes:
          items:
            $ref: '#/components/schemas/AdditionalShippingArticleAttribute'
          type: array
        additionalShippingAttributes:
          items:
            $ref: '#/components/schemas/AdditionalShippingAttribute'
          type: array
        carrierCountryServiceMappingRef:
          description: Id of the used CarrierCountryServiceMapping
          type: string
        mandatoryShippingArticleAttributes:
          items:
            $ref: '#/components/schemas/MandatoryShippingArticleAttribute'
          type: array
        mandatoryShippingAttributes:
          items:
            $ref: '#/components/schemas/MandatoryShippingAttribute'
          type: array
        mandatoryShippingItemAttributes:
          items:
            $ref: '#/components/schemas/MandatoryShippingItemAttribute'
          type: array
        productName:
          description: The name of the product used by the carrier
          example: Express
          type: string
      title: ProductInformation
      description: ProductInformation
    ProductValueCurrency:
      additionalProperties: false
      properties:
        currency:
          description: Currency of the given value
          example: EUR
          type: string
        decimalPlaces:
          description: Number of decimal places for the given currency
          example: 2
          type: integer
      required:
        - currency
      type: object
      title: ProductValueCurrency
      description: ProductValueCurrency
    ProductValueType:
      enum:
        - INSURANCE
        - CUSTOMS
        - SHOP_PRICE
      example: INSURANCE
      type: string
      title: ProductValueType
      description: ProductValueType
    PromiseCarrier:
      additionalProperties: false
      properties:
        carrierKey:
          type: string
        carrierName:
          type: string
        carrierRef:
          type: string
        deliveryPromiseValidUntil:
          format: date-time
          type: string
        products:
          items:
            $ref: '#/components/schemas/PromiseDeliveryOptions'
          type: array
      required:
        - carrierRef
        - carrierKey
        - carrierName
        - products
      type: object
      xml:
        name: PromiseCarrier
      title: PromiseCarrier
      description: PromiseCarrier
    PromiseConfirmActionParameter:
      allOf:
        - $ref: '#/components/schemas/AbstractOrderActionsParameter'
      description: Action to confirm a promise.
      properties:
        name:
          enum:
            - CONFIRM_PROMISE
          type: string
        tenantOrderId:
          description: The tenantOrderId to be used for the resulting order
          type: string
      required:
        - name
        - version
      title: PromiseConfirmActionParameter
    PromiseDeliveryOptions:
      additionalProperties: false
      properties:
        carrierProductCategory:
          $ref: '#/components/schemas/CarrierProductCategory'
        deliveryCosts:
          items:
            $ref: '#/components/schemas/DeliveryCost'
          type: array
        estimatedDeliveryTime:
          $ref: '#/components/schemas/EstimatedDeliveryTime'
        transitTime:
          $ref: '#/components/schemas/CarrierTransitTime'
      required:
        - carrierProductCategory
        - deliveryCosts
      type: object
      xml:
        name: PromiseDeliveryOptions
      title: PromiseDeliveryOptions
      description: PromiseDeliveryOptions
    PromiseExtendActionParameter:
      allOf:
        - $ref: '#/components/schemas/AbstractOrderActionsParameter'
      description: Action to extend a promise.
      properties:
        name:
          enum:
            - EXTEND_PROMISE
          type: string
      required:
        - name
        - version
      title: PromiseExtendActionParameter
    PromisesConfiguration:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        id:
          type: string
        invalidAfterTime:
          default: PT8H
          description: >-
            Default amount of time in ISO 8601 duration format after which an
            promised order becomes invalid and is cancelled. The duration need
            to be a multiple of 60 seconds.
          pattern: ^P(?:(\d+W)|(\d+Y)?(\d+M)?(\d+D)?(?:T(\d+H)?(\d+M)?(\d+S)?)?)$
          type: string
      required:
        - invalidAfterTime
      title: PromisesConfiguration
      description: PromisesConfiguration
    PurchaseOrder:
      properties:
        cancelled:
          deprecated: true
          description: >-
            This field is deprecated. Set the status to 'CANCELED' Set the
            purchaseOrder to 'cancelled'. No further deliveries will be
            expected. Already received goods are unaffected.
          type: boolean
        created:
          format: date-time
          type: string
        customAttributes:
          description: >-
            Attributes that can be added to this entity. These attributes
            **cannot** be used within fulfillment processes, but enable you to
            attach custom data from your systems to fulfillmenttools entities.
          nullable: true
          type: object
        facilityRef:
          type: string
        id:
          type: string
        inboundProcessRef:
          type: string
        lastModified:
          format: date-time
          type: string
        orderDate:
          description: >-
            Time and date at which the order was placed. Note: This does not
            refer to the creation date of this entity in the system.
          format: date-time
          type: string
        requestedDate:
          allOf:
            - $ref: '#/components/schemas/InputRequestedDate'
          description: >-
            Time and date at which the order is expected to arrive. Use 'ASAP'
            for deliveries with unknown date, but be aware that some features
            will not include these orders.
        requestedItems:
          description: Line items which are expected to be delivered.
          items:
            $ref: '#/components/schemas/InboundLineItem'
          maxItems: 200
          type: array
        status:
          enum:
            - OPEN
            - CANCELED
          type: string
        supplier:
          $ref: '#/components/schemas/InboundProcessPurchaseOrderSupplier'
        transfer:
          allOf:
            - $ref: '#/components/schemas/InboundProcessPurchaseOrderTransfer'
          description: >-
            Includes data about transfer between different facilities in the
            tenant's network.
        version:
          type: number
      required:
        - orderDate
        - requestedDate
        - requestedItems
        - status
        - cancelled
        - id
        - created
        - lastModified
        - version
        - facilityRef
        - inboundProcessRef
      title: PurchaseOrder
      type: object
      description: PurchaseOrder
    PurchaseOrderEventPayload:
      properties:
        canceled:
          type: boolean
        created:
          format: date-time
          type: string
        customAttributes:
          type: object
        facilityRef:
          type: string
        id:
          type: string
        inboundProcessRef:
          type: string
        lastModified:
          format: date-time
          type: string
        orderDate:
          format: date-time
          type: string
        requestedDate:
          $ref: '#/components/schemas/RequestedDate'
        requestedItems:
          items:
            $ref: '#/components/schemas/InboundLineItem'
          type: array
        status:
          type: string
        supplier:
          $ref: '#/components/schemas/PurchaseOrderSupplier'
        tenantInboundProcessId:
          type: string
        transfer:
          $ref: '#/components/schemas/PurchaseOrderTransfer'
        version:
          type: number
      required:
        - id
        - orderDate
        - requestedDate
        - requestedItems
        - inboundProcessRef
        - facilityRef
        - created
        - lastModified
        - canceled
        - status
        - version
      title: PurchaseOrderEventPayload
      type: object
      description: PurchaseOrderEventPayload
    PurchaseOrderForCreation:
      properties:
        cancelled:
          deprecated: true
          description: >-
            This field is deprecated. Set the status to 'CANCELED' Set the
            purchaseOrder to 'cancelled'. No further deliveries will be
            expected. Already received goods are unaffected.
          type: boolean
        customAttributes:
          description: >-
            Attributes that can be added to this entity. These attributes
            **cannot** be used within fulfillment processes, but enable you to
            attach custom data from your systems to fulfillmenttools entities.
          nullable: true
          type: object
        facilityRef:
          minLength: 1
          type: string
        orderDate:
          description: >-
            Time and date at which the order was placed. Note: This does not
            refer to the creation date of this entity in the system.
          format: date-time
          type: string
        requestedDate:
          allOf:
            - $ref: '#/components/schemas/InputRequestedDate'
          description: >-
            Time and date at which the order is expected to arrive. Use 'ASAP'
            for deliveries with unknown date, but be aware that some features
            will not include these orders.
        requestedItems:
          description: Line items which are expected to be delivered.
          items:
            $ref: '#/components/schemas/InboundLineItem'
          maxItems: 200
          type: array
        status:
          enum:
            - OPEN
            - CANCELED
          type: string
        supplier:
          $ref: '#/components/schemas/InboundProcessPurchaseOrderSupplier'
      required:
        - orderDate
        - requestedDate
        - requestedItems
        - facilityRef
      title: PurchaseOrderForCreation
      type: object
      description: PurchaseOrderForCreation
    PurchaseOrderForPartialUpdate:
      properties:
        cancelled:
          deprecated: true
          description: >-
            This field is deprecated. Set the status to 'CANCELED' Set the
            purchaseOrder to 'cancelled'. No further deliveries will be
            expected. Already received goods are unaffected.
          type: boolean
        customAttributes:
          description: >-
            Attributes that can be added to this entity. These attributes
            **cannot** be used within fulfillment processes, but enable you to
            attach custom data from your systems to fulfillmenttools entities.
          nullable: true
          type: object
        orderDate:
          format: date-time
          type: string
        requestedDate:
          $ref: '#/components/schemas/InputRequestedDate'
        requestedItems:
          items:
            $ref: '#/components/schemas/InboundLineItem'
          type: array
        status:
          enum:
            - OPEN
            - CANCELED
          type: string
        supplier:
          $ref: '#/components/schemas/InboundProcessPurchaseOrderSupplier'
        version:
          type: number
      required:
        - version
      title: PurchaseOrderForPartialUpdate
      type: object
      description: PurchaseOrderForPartialUpdate
    PurchaseOrderForUpdate:
      properties:
        cancelled:
          deprecated: true
          description: >-
            This field is deprecated. Set the status to 'CANCELED' Set the
            purchaseOrder to 'cancelled'. No further deliveries will be
            expected. Already received goods are unaffected.
          type: boolean
        customAttributes:
          description: >-
            Attributes that can be added to this entity. These attributes
            **cannot** be used within fulfillment processes, but enable you to
            attach custom data from your systems to fulfillmenttools entities.
          nullable: true
          type: object
        orderDate:
          description: >-
            Time and date at which the order was placed. Note: This does not
            refer to the creation date of this entity in the system.
          format: date-time
          type: string
        requestedDate:
          allOf:
            - $ref: '#/components/schemas/InputRequestedDate'
          description: >-
            Time and date at which the order is expected to arrive. Use 'ASAP'
            for deliveries with unknown date, but be aware that some features
            will not include these orders.
        requestedItems:
          description: Line items which are expected to be delivered.
          items:
            $ref: '#/components/schemas/InboundLineItem'
          maxItems: 200
          type: array
        status:
          enum:
            - OPEN
            - CANCELED
          type: string
        supplier:
          $ref: '#/components/schemas/InboundProcessPurchaseOrderSupplier'
        version:
          type: number
      required:
        - orderDate
        - requestedDate
        - requestedItems
        - version
      title: PurchaseOrderForUpdate
      type: object
      description: PurchaseOrderForUpdate
    PurchaseOrderSupplier:
      properties:
        facilityRef:
          type: string
        name:
          type: string
      title: PurchaseOrderSupplier
      type: object
      description: PurchaseOrderSupplier
    PurchaseOrderTransfer:
      properties:
        id:
          type: string
      required:
        - id
      title: PurchaseOrderTransfer
      type: object
      description: PurchaseOrderTransfer
    PurchaseOrderWebHookEvent:
      properties:
        payload:
          $ref: '#/components/schemas/PurchaseOrderEventPayload'
      required:
        - payload
      title: PurchaseOrderWebHookEvent
      type: object
      description: PurchaseOrderWebHookEvent
    PurchasePrice:
      properties:
        currency:
          $ref: '#/components/schemas/CurrencyCode'
          description: The currency of the purchase price.
        decimalPlaces:
          description: The number of decimal places for the purchase price.
          type: number
        value:
          description: The value of the purchase price.
          type: number
      required:
        - value
        - currency
        - decimalPlaces
      title: PurchasePrice
      type: object
      description: PurchasePrice
    PurchasePriceResult:
      properties:
        pageInfo:
          allOf:
            - $ref: '#/components/schemas/PageInfo'
          description: Pagination information for the purchase prices.
        purchasePrices:
          description: The calculated purchase prices for the target listing.
          items:
            $ref: '#/components/schemas/CalculatedPurchasePrice'
          type: array
      required:
        - purchasePrices
        - pageInfo
      title: PurchasePriceResult
      type: object
      description: PurchasePriceResult
    Quantity:
      properties:
        unit:
          description: >-
            The unit of the quantity. In some purchaseOrder and receipt it is
            validated to match again the measurement unit of the article as
            provided in the listing, if present.
          type: string
        value:
          description: The amount, provided in the unit of the quantity.
          format: int32
          minimum: 0
          type: integer
      required:
        - value
      title: Quantity
      type: object
      description: Quantity
    Rating:
      additionalProperties: false
      description: >-
        A rating is used to rate a set of possible facilities against each other
        during routing of orders.
      properties:
        active:
          type: boolean
        configuration:
          $ref: '#/components/schemas/AbstractRatingConfiguration'
        description:
          type: string
        id:
          description: >-
            This value identifies this very instance of the rating. It is set
            automatically by the server when the configuration is updated.
          example: 579ff115-8941-4221-8530-04f8b4adf59f
          type: string
        implementation:
          $ref: '#/components/schemas/RatingImplementation'
        maxPenalty:
          example: 100
          minimum: 0
          type: number
        name:
          type: string
      required:
        - name
        - active
        - implementation
        - maxPenalty
        - id
      type: object
      title: Rating
    RatingImplementation:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />
      enum:
        - STOCK-BALANCING
        - GEO-DISTANCE
        - TURNOVER
        - STOCK-AVAILABILITY
        - WORKLOAD-BALANCING
        - MATCHING-BUSINESSTYPE
        - PREFER-STORE
        - PREFER-WAREHOUSE
        - ZONE
        - EXPIRY-DATE
        - CAPACITY
        - DELIVERY-COSTS
        - DELIVERY-TIME
        - COST-COMPONENTS
        - NUMBER-OF-DELIVERIES
      type: string
      xml:
        name: RatingImplementation
      title: RatingImplementation
      x-badges:
        - color: orange
          label: BETA
    RatingResult:
      properties:
        id:
          type: string
        name:
          type: string
        penalty:
          type: number
        routingStrategyNodeId:
          type: string
        type:
          description: The type of the rating, e.g. 'StandardRating' or 'ToolkitRating'
          type: string
      required:
        - penalty
        - id
        - type
        - routingStrategyNodeId
        - name
      title: RatingResult
      description: RatingResult
    RatingResultType:
      enum:
        - STANDARD
        - TOOLKIT
      type: string
      title: RatingResultType
      description: RatingResultType
    RatingStatistic:
      properties:
        durationMs:
          description: Duration in Milliseconds
          type: number
        maxPenalty:
          type: number
        maxScore:
          type: number
        minScore:
          type: number
        name:
          type: string
      required:
        - name
        - maxPenalty
        - durationMs
      title: RatingStatistic
      description: RatingStatistic
    ReactiveErrorReason:
      enum:
        - BACKORDER_LISTING
        - PREORDER_LISTING
      title: ReactiveErrorReason
      description: ReactiveErrorReason
    ReassignmentInformation:
      properties:
        reassignedItems:
          items:
            $ref: '#/components/schemas/AssignmentItem'
          type: array
        sourceFacility:
          $ref: '#/components/schemas/DecisionLogFacilityInfo'
      required:
        - sourceFacility
        - reassignedItems
      title: ReassignmentInformation
      description: ReassignmentInformation
    Receipt:
      properties:
        asnRef:
          description: enables mapping a receipt to one of the ASNs in this inbound process
          type: string
        comments:
          description: comments regarding the receipt itself
          items:
            $ref: '#/components/schemas/InboundReceiptComment'
          maxItems: 20
          type: array
        created:
          format: date-time
          type: string
        customAttributes:
          description: >-
            Attributes that can be added to this entity. These attributes
            **cannot** be used within fulfillment processes, but enable you to
            attach custom data from your systems to fulfillmenttools entities.
          nullable: true
          type: object
        id:
          type: string
        inboundProcessRef:
          type: string
        lastModified:
          format: date-time
          type: string
        receivedDate:
          description: date-time of the arrival of the items in the facility
          format: date-time
          type: string
        receivedItems:
          description: list of item that arrived in the facility
          items:
            $ref: '#/components/schemas/InboundReceiptLineItem'
          maxItems: 200
          type: array
        status:
          description: >-
            status of this receipt, only receipts with status 'FINISHED' are
            booked. IN_PROGRESS can be used to save partial receipts.
          enum:
            - OPEN
            - IN_PROGRESS
            - FINISHED
          type: string
        version:
          type: number
      required:
        - receivedDate
        - receivedItems
        - comments
        - id
        - inboundProcessRef
        - version
        - created
        - lastModified
      title: Receipt
      type: object
      description: Receipt
    ReceiptForCreation:
      properties:
        asnRef:
          description: enables mapping a receipt to one of the ASNs in this inbound process
          type: string
        comments:
          description: comments regarding the receipt itself
          items:
            $ref: '#/components/schemas/InboundReceiptCommentForCreation'
          maxItems: 20
          type: array
        customAttributes:
          description: >-
            Attributes that can be added to this entity. These attributes
            **cannot** be used within fulfillment processes, but enable you to
            attach custom data from your systems to fulfillmenttools entities.
          nullable: true
          type: object
        facilityRef:
          type: string
        receivedDate:
          description: date-time of the arrival of the items in the facility
          format: date-time
          type: string
        receivedItems:
          description: list of item that arrived in the facility
          items:
            $ref: '#/components/schemas/InboundReceiptLineItemForCreation'
          maxItems: 200
          type: array
        status:
          description: >-
            status of this receipt, only receipts with status 'FINISHED' are
            booked. IN_PROGRESS can be used to save partial receipts.
          enum:
            - OPEN
            - IN_PROGRESS
            - FINISHED
          type: string
      required:
        - receivedDate
        - receivedItems
        - comments
        - facilityRef
      title: ReceiptForCreation
      type: object
      description: ReceiptForCreation
    RecordableAttribute:
      additionalProperties: false
      properties:
        keyLocalized:
          allOf:
            - $ref: '#/components/schemas/LocaleString'
          description: The translations of the key
        group:
          description: The group of the attribute
          example: general
          minLength: 1
          nullable: true
          type: string
        id:
          description: id of the recordable attribute
          example: 17ebfdfb-e1b4-4913-9962-3aef2b49f16f
          type: string
        key:
          description: >-
            The translated key of the attribute. This field gets filled
            automatically on request
          example: country of origin
          type: string
        originId:
          description: The id of the original lineItem the attribute was split from.
          example: 17ebfdfb-e1b4-4913-9962-3aef2b49f16f
          nullable: true
          type: string
        recordingRule:
          description: Indicates whether the value has to be recorded or not
          enum:
            - OPTIONAL
            - MANDATORY
          example: MANDATORY
          type: string
        value:
          description: The value of the attribute
          example: Germany
          minLength: 1
          nullable: true
          type: string
      required:
        - id
        - keyLocalized
        - recordingRule
      title: RecordableAttribute
      type: object
      description: RecordableAttribute
    RecordableAttributeForCreation:
      additionalProperties: false
      properties:
        keyLocalized:
          allOf:
            - $ref: '#/components/schemas/LocaleString'
          description: The translations of the key
        group:
          description: The group of the attribute
          example: general
          minLength: 1
          nullable: true
          type: string
        recordingRule:
          description: Indicates whether the value has to be recorded or not
          enum:
            - OPTIONAL
            - MANDATORY
          example: MANDATORY
          type: string
        value:
          description: The value of the attribute
          example: Germany
          nullable: true
          type: string
      required:
        - keyLocalized
        - recordingRule
      title: RecordableAttributeForCreation
      type: object
      description: RecordableAttributeForCreation
    RecordableAttributeForUpdate:
      additionalProperties: false
      properties:
        keyLocalized:
          allOf:
            - $ref: '#/components/schemas/LocaleString'
          description: The translations of the key
        group:
          description: The group of the attribute to set
          example: general
          minLength: 1
          nullable: true
          type: string
        recordableAttributeId:
          description: id of the recordable attribute to update
          example: 17ebfdfb-e1b4-4913-9962-3aef2b49f16f
          type: string
        recordingRule:
          description: Indicates whether the value has to be recorded or not
          enum:
            - OPTIONAL
            - MANDATORY
          example: MANDATORY
          type: string
        value:
          description: The value of the attribute to set
          example: Germany
          nullable: true
          type: string
      required:
        - recordableAttributeId
      title: RecordableAttributeForUpdate
      type: object
      description: RecordableAttributeForUpdate
    RefundTrigger:
      additionalProperties: false
      properties:
        created:
          description: Date when the refund was triggered
          example: 2020-02-03T08:45:51.525Z
          format: date-time
          type: string
        itemReturnJobRef:
          description: >-
            reference to the item return job which is connected to the item
            return
          example: a69006ba-7100-4b4d-a610-1ca28016a4eb
          type: string
        itemReturnJobVersion:
          description: version of the item return job had during the refund trigger
          example: 1
          type: integer
        itemReturnRef:
          description: reference to the item return that should be refunded
          example: a69006ba-7100-4b4d-a610-1ca28016a4eb
          type: string
        refundedLineItems:
          description: The line items that should be refunded
          items:
            $ref: '#/components/schemas/ItemReturnLineItem'
          type: array
        returnFacilityRef:
          description: The facility where the return was processed
          example: a69006ba-7100-4b4d-a610-1ca28016a4eb
          type: string
        tenantOrderId:
          description: The tenant order id of the order that should be refunded
          example: a69006ba-7100-4b4d-a610-1ca28016a4eb
          maxLength: 256
          minLength: 1
          type: string
      required:
        - refundedLineItems
        - itemReturnRef
        - created
        - returnFacilityRef
      type: object
      title: RefundTrigger
      description: RefundTrigger
    RefundTriggeredWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          $ref: '#/components/schemas/RefundTrigger'
      required:
        - payload
      type: object
      title: RefundTriggeredWebHookEvent
      description: RefundTriggeredWebHookEvent
    RefusedItem:
      properties:
        reasonLocalized:
          $ref: '#/components/schemas/LocaleString'
        comment:
          type: string
        quantity:
          minimum: 0
          type: integer
        reason:
          type: string
      required:
        - quantity
      title: RefusedItem
      description: RefusedItem
    RefusedItemForUpdate:
      properties:
        reasonLocalized:
          $ref: '#/components/schemas/LocaleString'
        comment:
          type: string
        quantity:
          minimum: 0
          type: integer
      required:
        - quantity
      title: RefusedItemForUpdate
      description: RefusedItemForUpdate
    RegionInformation:
      properties:
        countryCode:
          $ref: '#/components/schemas/CountryCode'
        postalCodes:
          items:
            type: string
          type: array
      required:
        - countryCode
      type: object
      title: RegionInformation
      description: RegionInformation
    RelatedRefs:
      properties:
        orderRefs:
          items:
            type: string
          type: array
        pickJobRefs:
          items:
            type: string
          type: array
        processRefs:
          items:
            type: string
          type: array
        routingPlanRefs:
          items:
            type: string
          type: array
        transferRefs:
          items:
            type: string
          type: array
      title: RelatedRefs
      type: object
      description: RelatedRefs
    RemoteConfiguration:
      additionalProperties: false
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        flattenScopeIds:
          description: >-
            generated flatten unique ids of all scope sub elements (userRef,
            facilityRef)
          items:
            example:
              - INVENTORY
              - 67151fc3-3ce1-400e-8b23-23c29e0cde90
            type: string
          type: array
        groups:
          items:
            example: INVENTORY
            type: string
          minItems: 1
          type: array
        id:
          description: auto generated unique identifier
          example: LGMl2DuvPnfPoSHhYFOm
          type: string
        key:
          description: unique business key of this entity
          example: PICKING_SHOW_NEW_SCAN_VIEW
          type: string
        scopes:
          items:
            $ref: '#/components/schemas/RemoteConfigurationScope'
          type: array
        value:
          oneOf:
            - type: string
            - type: number
            - type: boolean
            - type: object
            - type: integer
        valueType:
          $ref: '#/components/schemas/RemoteConfigurationValueType'
      required:
        - id
        - key
        - version
        - value
        - valueType
        - groups
        - flattenScopeIds
      type: object
      title: RemoteConfiguration
      description: RemoteConfiguration
    RemoteConfigurationForCreation:
      additionalProperties: false
      properties:
        groups:
          items:
            example: INVENTORY
            type: string
          minItems: 1
          type: array
        key:
          description: unique business key of this entity
          example: PICKING_SHOW_NEW_SCAN_VIEW
          type: string
        scopes:
          items:
            $ref: '#/components/schemas/RemoteConfigurationScopeForCreation'
          type: array
        value:
          oneOf:
            - type: string
            - type: integer
            - type: number
            - type: boolean
            - type: object
        valueType:
          $ref: '#/components/schemas/RemoteConfigurationValueType'
      required:
        - key
        - value
        - valueType
        - groups
      type: object
      title: RemoteConfigurationForCreation
      description: RemoteConfigurationForCreation
    RemoteConfigurationForPut:
      additionalProperties: false
      properties:
        groups:
          items:
            example: INVENTORY
            type: string
          minItems: 1
          type: array
        scopes:
          items:
            $ref: '#/components/schemas/RemoteConfigurationScopeForCreation'
          type: array
        value:
          oneOf:
            - type: string
            - type: integer
            - type: number
            - type: boolean
            - type: object
        valueType:
          $ref: '#/components/schemas/RemoteConfigurationValueType'
        version:
          type: integer
      required:
        - version
        - value
        - valueType
        - groups
      type: object
      title: RemoteConfigurationForPut
      description: RemoteConfigurationForPut
    RemoteConfigurationForUpdate:
      additionalProperties: false
      properties:
        groups:
          items:
            example: INVENTORY
            type: string
          minItems: 1
          type: array
        scopes:
          items:
            $ref: '#/components/schemas/RemoteConfigurationScopeForCreation'
          type: array
        value:
          oneOf:
            - type: string
            - type: integer
            - type: number
            - type: boolean
            - type: object
        valueType:
          $ref: '#/components/schemas/RemoteConfigurationValueType'
        version:
          type: integer
      required:
        - version
      type: object
      title: RemoteConfigurationForUpdate
      description: RemoteConfigurationForUpdate
    RemoteConfigurations:
      properties:
        remoteConfigurations:
          items:
            $ref: '#/components/schemas/RemoteConfiguration'
          type: array
        total:
          description: Total number of found entities for this query
          example: 42
          type: integer
      type: object
      title: RemoteConfigurations
      description: RemoteConfigurations
    RemoteConfigurationScope:
      additionalProperties: false
      allOf:
        - $ref: '#/components/schemas/RemoteConfigurationScopeForCreation'
      properties:
        id:
          description: auto generated unique identifier
          example: LGMl2DuvPnfPoSHhYFOm
          type: string
      required:
        - id
      type: object
      title: RemoteConfigurationScope
      description: RemoteConfigurationScope
    RemoteConfigurationScopeForCreation:
      additionalProperties: false
      properties:
        facilityRefs:
          items:
            description: Reference of a Facility
            example: 928f3730-bc48-4d85-b83f-3fd86b776178
            type: string
          type: array
        userRefs:
          items:
            description: Reference of a user
            example: 928f3730-bc48-4d85-b83f-3fd86b776178
            type: string
          type: array
      type: object
      title: RemoteConfigurationScopeForCreation
      description: RemoteConfigurationScopeForCreation
    RemoteConfigurationValueType:
      enum:
        - BOOLEAN
        - STRING
        - JSON
        - NUMBER
        - INT
      type: string
      title: RemoteConfigurationValueType
      description: RemoteConfigurationValueType
    RemoveFacilityCoordinatesActionParameter:
      allOf:
        - $ref: '#/components/schemas/AbstractFacilityActionsParameter'
      description: Remove facility Coordinates.
      properties:
        name:
          enum:
            - REMOVE_FACILITY_COORDINATES
          type: string
      required:
        - name
        - version
      title: RemoveFacilityCoordinatesActionParameter
    RemoveLineItemFromPackingTargetContainer:
      allOf:
        - $ref: '#/components/schemas/AbstractModificationAction'
        - additionalProperties: false
          properties:
            action:
              description: >-
                Use RemoveLineItemFromPackingTargetContainer to remove a line
                item from an existing packing container
              enum:
                - RemoveLineItemFromPackingTargetContainer
              type: string
            lineItemRef:
              description: Id of the PackLineItem you want to remove.
              type: string
          required:
            - action
            - lineItemRef
          type: object
      description: Action to a remove a line item from a packing target container.
      title: RemoveLineItemFromPackingTargetContainer
      xml:
        name: RemoveLineItemFromPackingTargetContainer
    RemovePickJobFromPickRun:
      allOf:
        - $ref: '#/components/schemas/AbstractModificationAction'
        - additionalProperties: false
          properties:
            action:
              description: >-
                Use value 'RemovePickJobFromPickRun', because you want to remove
                a pickjob
              enum:
                - RemovePickJobFromPickRun
              type: string
            pickJobRef:
              description: PickJob reference of the PickJob you want to remove.
              type: string
          required:
            - action
            - pickJobRef
          type: object
      deprecated: true
      description: >-
        This part of the API is deprecated. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />@deprecated Use /api/pickruns/{pickRunId}/actions instead
      title: RemovePickJobFromPickRun
      xml:
        name: RemovePickJobFromPickRun
    RemoveServiceDataAvailableLineItemsActionEnum:
      enum:
        - REMOVE_SERVICE_DATA_AVAILABLE_LINE_ITEMS
      type: string
      title: RemoveServiceDataAvailableLineItemsActionEnum
      description: RemoveServiceDataAvailableLineItemsActionEnum
    RemoveServiceDataAvailableLineItemsActionParameter:
      additionalProperties: false
      properties:
        name:
          $ref: '#/components/schemas/RemoveServiceDataAvailableLineItemsActionEnum'
        serviceDataAvailableLineItemIds:
          description: Ids of the service data available line items to be removed
          items:
            type: string
          minItems: 1
          type: array
        serviceDataVersion:
          description: Version of the service data
          minimum: 0
          type: integer
      required:
        - name
        - serviceDataAvailableLineItemIds
        - serviceDataVersion
      title: RemoveServiceDataAvailableLineItemsActionParameter
      description: RemoveServiceDataAvailableLineItemsActionParameter
    ReopenStowJobAction:
      description: Sets the status of the stowjob to OPEN
      properties:
        name:
          description: The name of the action that should be performed
          enum:
            - OPEN_STOW_JOB
          type: string
        version:
          description: The current version of the stow job that should be modified
          type: number
      required:
        - version
        - name
      title: ReopenStowJobAction
      type: object
    ReplaceCodesInPackingTargetContainer:
      allOf:
        - $ref: '#/components/schemas/AbstractModificationAction'
        - additionalProperties: false
          properties:
            action:
              description: >-
                Use ReplaceCodesInPackingTargetContainer to add a code to an
                existing packing container
              enum:
                - ReplaceCodesInPackingTargetContainer
              type: string
            codes:
              items:
                description: List of codes
                minItems: 1
                type: string
              type: array
          required:
            - action
          type: object
      description: Action to replace codes in packing target container.
      title: ReplaceCodesInPackingTargetContainer
      xml:
        name: ReplaceCodesInPackingTargetContainer
    ReplaceLoadUnitLineItems:
      allOf:
        - $ref: '#/components/schemas/AbstractModificationAction'
        - additionalProperties: false
          properties:
            action:
              description: >-
                Use value 'ReplaceLoadUnitLineItems', because you want to
                replace loadunit line items
              enum:
                - ReplaceLoadUnitLineItems
              type: string
            loadUnitLineItems:
              items:
                $ref: '#/components/schemas/LoadUnitLineItem'
              type: array
          required:
            - action
            - loadUnitLineItems
          type: object
      xml:
        name: ReplaceLoadUnitLineItems
      title: ReplaceLoadUnitLineItems
      description: ReplaceLoadUnitLineItems
    ReplacePackingTargetContainerLineItemCodesAction:
      additionalProperties: false
      description: Action to replace packing target container codes of a line item.
      properties:
        name:
          $ref: '#/components/schemas/ReplacePackingTargetContainerLineItemCodesEnum'
        payload:
          additionalProperties: false
          properties:
            codes:
              items:
                description: List of codes
                minItems: 1
                type: string
              type: array
          required:
            - codes
        version:
          description: Version of the entity to be changed
          minimum: 0
          type: integer
      required:
        - payload
        - version
        - name
      title: ReplacePackingTargetContainerLineItemCodesAction
    ReplacePackingTargetContainerLineItemCodesEnum:
      enum:
        - ReplaceLineItemCodes
      type: string
      title: ReplacePackingTargetContainerLineItemCodesEnum
      description: ReplacePackingTargetContainerLineItemCodesEnum
    ReplaceReturnedLineItems:
      additionalProperties: false
      properties:
        itemReturnJobVersion:
          description: Version of the entity to be changed
          minimum: 0
          type: integer
        returnedLineItems:
          items:
            $ref: '#/components/schemas/ItemReturnLineItemForCreation'
          minItems: 1
          type: array
      required:
        - itemReturnJobVersion
        - returnedLineItems
      title: ReplaceReturnedLineItems
      description: ReplaceReturnedLineItems
    RequestedDate:
      properties:
        type:
          enum:
            - ASAP
            - TIME_POINT
          type: string
        value:
          format: date-time
          type: string
      required:
        - type
        - value
      title: RequestedDate
      type: object
      description: RequestedDate
    RequestedDateASAP:
      properties:
        type:
          enum:
            - ASAP
            - TIME_POINT
          type: string
      required:
        - type
      title: RequestedDateASAP
      type: object
      description: RequestedDateASAP
    RequestedDateTimePoint:
      properties:
        type:
          enum:
            - ASAP
            - TIME_POINT
          type: string
        value:
          format: date-time
          type: string
      required:
        - type
        - value
      title: RequestedDateTimePoint
      type: object
      description: RequestedDateTimePoint
    RequiredLineItem:
      additionalProperties: false
      properties:
        article:
          $ref: '#/components/schemas/ServiceDataItemArticle'
        assignedItems:
          description: >-
            line items that have been assigned from the matching service data
            object
          items:
            $ref: '#/components/schemas/AssignedRequiredLineItem'
          type: array
        id:
          description: Unique ID of the required line item
          example: 41d43211-g5a1-gg22-a716-ba095e30ds1d
          type: string
        quantity:
          description: Needed quantity of the items
          example: 12
          minimum: 1
          type: integer
        scannableCodes:
          description: Codes that can be used for scanning this lineItem
          items:
            type: string
          type: array
      required:
        - id
        - article
        - quantity
      type: object
      title: RequiredLineItem
      description: RequiredLineItem
    RequiredLineItemForCreation:
      additionalProperties: false
      properties:
        article:
          $ref: '#/components/schemas/ServiceDataItemArticle'
        quantity:
          description: Needed quantity of the items
          example: 12
          minimum: 1
          type: integer
        scannableCodes:
          description: Codes that can be used for scanning this lineItem
          items:
            type: string
          type: array
      required:
        - article
        - quantity
      type: object
      title: RequiredLineItemForCreation
      description: RequiredLineItemForCreation
    RerouteConfiguration:
      properties:
        active:
          type: boolean
        leadTimeBeforeTimeTriggeredReroute:
          description: >-
            How many minutes before a time triggered reroute a notification
            should be sent. Should be smaller than rerouteAfterMinutes
          example: '480'
          minimum: 1
          type: number
        rerouteAfterMinutes:
          default: 1440
          description: The amount of minutes after which an automated reroute is executed
          example: '60'
          minimum: 5
          type: number
        rerouteStartedJobs:
          $ref: '#/components/schemas/RerouteStartedJobsConfiguration'
        rerouteTargetTimeHours:
          default: 48
          description: >-
            Only pickjobs within the target time window are considered for
            reroute.
          example: '48'
          minimum: 1
          type: number
      required:
        - active
        - rerouteTargetTimeHours
        - rerouteAfterMinutes
      title: RerouteConfiguration
      description: RerouteConfiguration
    RerouteDescription:
      allOf:
        - $ref: '#/components/schemas/AbstractReason'
      properties:
        action:
          enum:
            - REROUTE
          type: string
      required:
        - action
      type: object
      xml:
        name: RerouteDescription
      title: RerouteDescription
      description: RerouteDescription
    RerouteDescriptionForCreation:
      allOf:
        - $ref: '#/components/schemas/AbstractReasonForCreation'
      type: object
      xml:
        name: RerouteDescriptionForCreation
      title: RerouteDescriptionForCreation
      description: RerouteDescriptionForCreation
    RerouteDescriptionForModification:
      allOf:
        - $ref: '#/components/schemas/AbstractReasonForModification'
      type: object
      xml:
        name: RerouteDescriptionForModification
      title: RerouteDescriptionForModification
      description: RerouteDescriptionForModification
    RerouteDescriptions:
      allOf:
        - $ref: '#/components/schemas/AbstractReasons'
      properties:
        reasons:
          items:
            $ref: '#/components/schemas/RerouteDescription'
          type: array
        rerouteDescriptions:
          items:
            $ref: '#/components/schemas/RerouteDescription'
          type: array
      required:
        - reasons
        - rerouteDescriptions
      type: object
      title: RerouteDescriptions
      description: RerouteDescriptions
    RerouteReason:
      enum:
        - PROCESSREROUTE
        - MANUAL
        - SHORTPICK
        - TIMETRIGGERED
        - STOCKZEROED
        - ABORTED
        - RECALCULATION
      type: string
      title: RerouteReason
      description: RerouteReason
    RerouteRoutingPlan:
      properties:
        allReroutable:
          description: >-
            if set to true every reroutable routing plan is rerouted. overrules
            every other identifier
          type: boolean
        orderRefs:
          items:
            type: string
          maxItems: 10
          type: array
        routingPlanIds:
          items:
            type: string
          maxItems: 10
          type: array
        tenantOrderIds:
          items:
            type: string
          maxItems: 10
          type: array
      type: object
      title: RerouteRoutingPlan
      description: RerouteRoutingPlan
    RerouteShortPickConfiguration:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      description: Reroute ShortPick Configuration
      properties:
        blacklistAssignedFacilities:
          default: false
          description: >-
            Does not consider facilities which previously owned the pickjob
            during routing.
          type: boolean
        clickAndCollectReroute:
          $ref: '#/components/schemas/ClickAndCollectRerouteConfiguration'
        id:
          type: string
        rerouteZeroPicksOnly:
          default: false
          description: >-
            Specifies whether only pick jobs with zero items picked are eligible
            for rerouting.
          type: boolean
        restowAfterMinutes:
          description: The amount of minutes after which an automated restow is executed
          example: '60'
          type: number
        shipFromStoreReroute:
          $ref: '#/components/schemas/ShipFromStoreRerouteConfiguration'
      required:
        - clickAndCollectReroute
        - shipFromStoreReroute
      title: RerouteShortPickConfiguration
      type: object
    RerouteStartedJobsConfiguration:
      properties:
        active:
          default: false
          description: >-
            If true, the reroute will be executed for jobs that are already
            started.
          example: true
          type: boolean
        minimumStartedTimeInMinutes:
          description: >-
            The minimum time in minutes that a job must be in a started status
            (eg. PAUSED, IN_PROGRESS) before it should be rerouted. This is to
            ensure that jobs are not rerouted too quickly after they have last
            been modified. Minimum value is 60 minutes.
          example: '60'
          minimum: 60
          type: number
      required:
        - active
      title: RerouteStartedJobsConfiguration
      description: RerouteStartedJobsConfiguration
    RerouteTimeTriggeredConfiguration:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        clickAndCollectReroute:
          $ref: '#/components/schemas/RerouteConfiguration'
        id:
          type: string
        shipFromStoreDeliveryReroute:
          $ref: '#/components/schemas/RerouteConfiguration'
        shipFromStoreSamedayReroute:
          $ref: '#/components/schemas/RerouteConfiguration'
      required:
        - clickAndCollectReroute
        - shipFromStoreDeliveryReroute
        - shipFromStoreSamedayReroute
      title: RerouteTimeTriggeredConfiguration
      description: RerouteTimeTriggeredConfiguration
    RerouteType:
      description: |-
        The type of reroute to apply to the order
          * `REROUTE`- the complete routing plan is rerouted.
          * `ORDERSPLIT`- the order is splitted. The short picked line items will be moved to a new routing plan and rerouted
      enum:
        - REROUTE
        - ORDERSPLIT
      type: string
      title: RerouteType
    Reservation:
      properties:
        created:
          description: >-
            The date this entity was created at the platform. This value is
            generated by the service.
          example: 2020-02-03T08:45:51.525Z
          format: date-time
          type: string
        customAttributes:
          description: >-
            Attributes that can be added to this entity. These attributes
            **cannot** be used within fulfillment processes, but enable you to
            attach custom data from your systems to fulfillmenttools entities.
          nullable: true
          type: object
        facilityRef:
          type: string
        host:
          $ref: '#/components/schemas/ReservationHost'
        id:
          type: string
        lastModified:
          description: >-
            The date this entity was modified last. This value is generated by
            the service.
          example: 2020-02-03T09:45:51.525Z
          format: date-time
          type: string
        quantity:
          type: number
        relatedRefs:
          $ref: '#/components/schemas/RelatedRefs'
        tenantArticleId:
          type: string
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          format: int64
          type: integer
      required:
        - version
        - facilityRef
        - host
        - id
        - quantity
        - relatedRefs
        - tenantArticleId
      title: Reservation
      type: object
      description: Reservation
    ReservationAction:
      properties:
        name:
          description: Which action to perform
          enum:
            - REMOVE_RESERVATIONS_REDUCE_STOCKS
            - REMOVE_RESERVATIONS_KEEP_STOCKS
          type: string
        reservationSelector:
          allOf:
            - $ref: '#/components/schemas/ReservationActionSelector'
          minProperties: 1
      required:
        - name
        - reservationSelector
      title: ReservationAction
      type: object
      description: ReservationAction
    ReservationActionResult:
      properties:
        reservation:
          $ref: '#/components/schemas/StrippedReservation'
        status:
          enum:
            - DELETED
          type: string
        stockOperations:
          items:
            $ref: '#/components/schemas/ReservationActionStockOperation'
          type: array
      required:
        - status
        - reservation
      title: ReservationActionResult
      type: object
      description: ReservationActionResult
    ReservationActionSelector:
      properties:
        orderRefs:
          items:
            type: string
          maxItems: 1
          minItems: 1
          type: array
        reservationPredicate:
          $ref: '#/components/schemas/ReservationSearchQuery'
        reservationRefs:
          items:
            type: string
          maxItems: 100
          minItems: 1
          type: array
        routingPlanRefs:
          items:
            type: string
          maxItems: 1
          minItems: 1
          type: array
        tenantOrderIds:
          items:
            type: string
          maxItems: 1
          minItems: 1
          type: array
      title: ReservationActionSelector
      type: object
      description: ReservationActionSelector
    ReservationActionStockOperation:
      properties:
        status:
          enum:
            - REDUCED
            - DELETED
          type: string
        stock:
          $ref: '#/components/schemas/ReservationStock'
      required:
        - status
        - stock
      title: ReservationActionStockOperation
      type: object
      description: ReservationActionStockOperation
    ReservationHost:
      properties:
        reference:
          type: string
        type:
          enum:
            - STOCK
            - EXPECTED_STOCK
            - NONE
          type: string
      required:
        - reference
        - type
      title: ReservationHost
      type: object
      description: ReservationHost
    ReservationPaginatedResult:
      properties:
        pageInfo:
          allOf:
            - $ref: '#/components/schemas/PageInfo'
          description: Pagination information for the search result.
        reservations:
          items:
            $ref: '#/components/schemas/Reservation'
          type: array
        total:
          description: >-
            The total number of items matching the search criteria. Only filled,
            if withTotal is set to true in the search options.
          minimum: 0
          type: number
      required:
        - pageInfo
        - reservations
      title: ReservationPaginatedResult
      type: object
      description: ReservationPaginatedResult
    ReservationRelatedRefsFilter:
      properties:
        orderRefs:
          allOf:
            - $ref: '#/components/schemas/StringListFilter'
          description: Search by orderRefs
        pickJobRefs:
          allOf:
            - $ref: '#/components/schemas/StringListFilter'
          description: Search by pickJobRefs
        routingPlanRefs:
          allOf:
            - $ref: '#/components/schemas/StringListFilter'
          description: Search by routingPlanRefs
        transferRefs:
          allOf:
            - $ref: '#/components/schemas/StringListFilter'
          description: Search by transferRefs
      title: ReservationRelatedRefsFilter
      type: object
      description: ReservationRelatedRefsFilter
    ReservationsBulkWebHookEvent:
      properties:
        payload:
          $ref: '#/components/schemas/ReservationsBulkWebHookEventPayload'
      required:
        - payload
      title: ReservationsBulkWebHookEvent
      type: object
      description: ReservationsBulkWebHookEvent
    ReservationsBulkWebHookEventPayload:
      properties:
        items:
          items:
            $ref: '#/components/schemas/Reservation'
          type: array
      required:
        - items
      title: ReservationsBulkWebHookEventPayload
      type: object
      description: ReservationsBulkWebHookEventPayload
    ReservationSearchPayload:
      properties:
        after:
          deprecated: false
          description: >-
            The cursor to start after. The value is provided in the
            `pageInfo.endCursor` field of the response.
          type: string
        options:
          $ref: '#/components/schemas/SearchOptions'
        query:
          $ref: '#/components/schemas/ReservationSearchQuery'
        size:
          default: 20
          description: Number of items to return.
          maximum: 250
          minimum: 1
          type: number
        sort:
          description: Use for sorting the result.
          items:
            $ref: '#/components/schemas/ReservationSort'
          maxItems: 1
          minItems: 1
          type: array
        startAfterId:
          deprecated: true
          description: >-
            The ID to start after. Deprecated, use `after` with the value
            provided in `pageInfo.endCursor` instead.
          type: string
      required:
        - query
      title: ReservationSearchPayload
      type: object
      description: ReservationSearchPayload
    ReservationSearchQuery:
      properties:
        and:
          items:
            $ref: '#/components/schemas/ReservationSearchQuery'
          type: array
        facilityRef:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by facilityRef
        id:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by id
        or:
          items:
            $ref: '#/components/schemas/ReservationSearchQuery'
          type: array
        relatedRefs:
          allOf:
            - $ref: '#/components/schemas/ReservationRelatedRefsFilter'
          description: Nested search by relatedRefs
        tenantArticleId:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by tenantArticleId
      title: ReservationSearchQuery
      type: object
      description: ReservationSearchQuery
    ReservationSort:
      properties:
        created:
          enum:
            - ASC
            - DESC
          type: string
        lastModified:
          enum:
            - ASC
            - DESC
          type: string
      title: ReservationSort
      type: object
      description: ReservationSort
    ReservationsPaginatedResult:
      properties:
        pageInfo:
          $ref: '#/components/schemas/PageInfo'
        reservations:
          items:
            $ref: '#/components/schemas/Reservation'
          type: array
        total:
          minimum: 0
          type: number
      required:
        - total
        - pageInfo
        - reservations
      title: ReservationsPaginatedResult
      type: object
      description: ReservationsPaginatedResult
    ReservationStock:
      properties:
        id:
          type: string
        version:
          type: number
      required:
        - id
        - version
      title: ReservationStock
      type: object
      description: ReservationStock
    ResetPickJob:
      allOf:
        - $ref: '#/components/schemas/AbstractModificationAction'
        - additionalProperties: false
          properties:
            action:
              description: >-
                Use value 'ResetPickJob' to reset the pickJob and set it back to
                status OPEN and reset the pick line items.
              enum:
                - ResetPickJob
              type: string
          required:
            - action
          type: object
      deprecated: true
      description: >-
        This part of the API is deprecated. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />@deprecated Use api/pickjobs/:id/actions instead
      title: ResetPickJob
      xml:
        name: ResetPickJob
    ResolvedSubstitutes:
      properties:
        substitutes:
          items:
            $ref: '#/components/schemas/Substitute'
          type: array
        tenantArticleId:
          type: string
      required:
        - substitutes
        - tenantArticleId
      type: object
      xml:
        name: ResolvedSubstitutes
      title: ResolvedSubstitutes
      description: ResolvedSubstitutes
    ResourceInvestment:
      description: How much resources should be invested during the optimization?
      properties:
        level:
          description: >-
            [abstract values]: how many resources should we invest in
            optimization. With a higher level the results will be better,
            nevertheless we need to invest more time for the optimization.
          example: 0.2
          exclusiveMinimum: true
          maximum: 1
          minimum: 0
          type: number
      required:
        - level
      type: object
      title: ResourceInvestment
    ResponseForCNCCheckoutOptions:
      properties:
        facilities:
          description: Facilities offering Click & Collect (CNC)
          items:
            $ref: '#/components/schemas/CheckoutOptionsFacilityForCNC'
          type: array
      required:
        - facilities
      title: ResponseForCNCCheckoutOptions
      type: object
      description: ResponseForCNCCheckoutOptions
    ResponseForDeliveryPromise:
      additionalProperties: false
      properties:
        backOrdered:
          $ref: '#/components/schemas/Backordered'
        collect:
          $ref: '#/components/schemas/DeliveryPromiseCollect'
        orderRef:
          type: string
        orderVersion:
          type: number
        promisesOptions:
          $ref: '#/components/schemas/OrderPromisesOptions'
        shipToCustomer:
          items:
            $ref: '#/components/schemas/DeliveryPromiseShipment'
          type: array
        shipToStore:
          items:
            $ref: '#/components/schemas/DeliveryPromiseShipment'
          type: array
        sourcingOption:
          $ref: '#/components/schemas/SourcingOption'
      required:
        - orderRef
        - orderVersion
      type: object
      xml:
        name: ResponseForDeliveryPromise
      title: ResponseForDeliveryPromise
      description: ResponseForDeliveryPromise
    ResponseForSFSCheckoutOptions:
      properties:
        facilities:
          description: Facilities offering Ship From Store (SFS)
          items:
            $ref: '#/components/schemas/CheckoutOptionsFacilityForSFS'
          type: array
      required:
        - facilities
      title: ResponseForSFSCheckoutOptions
      type: object
      description: ResponseForSFSCheckoutOptions
    RestartItemReturnJobActionEnum:
      enum:
        - RestartItemReturnJob
      type: string
      title: RestartItemReturnJobActionEnum
      description: RestartItemReturnJobActionEnum
    RestartItemReturnJobActionParameter:
      additionalProperties: false
      description: Action to restart a ItemReturnJob.
      properties:
        name:
          $ref: '#/components/schemas/RestartItemReturnJobActionEnum'
        version:
          description: Version of the entity to be changed
          minimum: 0
          type: integer
      required:
        - name
        - version
      title: RestartItemReturnJobActionParameter
    RestartPickJob:
      allOf:
        - $ref: '#/components/schemas/AbstractModificationAction'
        - additionalProperties: false
          properties:
            action:
              description: >-
                Use value 'RestartPickJob' to restart the pickJob and set it
                back to status IN_PROGRESS.
              enum:
                - RestartPickJob
              type: string
          required:
            - action
          type: object
      deprecated: true
      description: >-
        This part of the API is deprecated. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />@deprecated Use api/pickjobs/:id/actions instead
      title: RestartPickJob
      xml:
        name: RestartPickJob
    RestartPickJobConfiguration:
      properties:
        active:
          default: true
          type: boolean
      required:
        - active
      type: object
      title: RestartPickJobConfiguration
      description: RestartPickJobConfiguration
    RestowAttributeItem:
      allOf:
        - $ref: '#/components/schemas/ArticleAttributeItem'
      title: RestowAttributeItem
      description: RestowAttributeItem
    RestowedItems:
      properties:
        restowedItems:
          items:
            $ref: '#/components/schemas/RestowItem'
          type: array
        total:
          description: Total number of found entities for this query
          example: 42
          type: integer
      type: object
      title: RestowedItems
      description: RestowedItems
    RestowingProcessConfiguration:
      properties:
        restowingProcessTypes:
          items:
            $ref: '#/components/schemas/RestowingProcessTypeEnum'
          minItems: 0
          type: array
      required:
        - restowingProcessTypes
      type: object
      title: RestowingProcessConfiguration
      description: RestowingProcessConfiguration
    RestowingProcessTypeEnum:
      description: Where restow items should be created during the operational process
      enum:
        - PICKING
        - PACKING
        - HANDOVER
      type: string
      title: RestowingProcessTypeEnum
    RestowItem:
      allOf:
        - $ref: '#/components/schemas/MandatoryLineItem'
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        article:
          $ref: '#/components/schemas/RestowItemArticle'
        facilityRef:
          description: >-
            The id of the facility reference. The given ID has to be present in
            the system.
          example: Esb20gpHBL94X5NdMp3C
          type: string
        id:
          example: LGMl2DuvPnfPoSHhYFOm
          type: string
        location:
          $ref: '#/components/schemas/Location'
        measurementUnitKey:
          description: Identifier for items unit of measurement.
          example: liter
          type: string
        operativeProcessRef:
          description: id of the connected operative process if available
          type: string
        processRef:
          description: id of the connected process if available
          type: string
        quantity:
          default: 1
          example: 1
          format: int64
          minimum: 1
          type: integer
        restowed:
          default: false
          description: Indicates if the restowItem has been restowed
          example: true
          type: boolean
        status:
          $ref: '#/components/schemas/RestowItemStatus'
        stockRef:
          description: id of the stock entity for this line item
          type: string
      required:
        - id
        - article
        - restowed
        - facilityRef
        - quantity
        - status
      type: object
      title: RestowItem
      description: RestowItem
    RestowItemActionsParameter:
      anyOf:
        - $ref: '#/components/schemas/RestowItemRestowActionParameter'
        - $ref: '#/components/schemas/RestowItemCancelActionParameter'
      title: RestowItemActionsParameter
      description: RestowItemActionsParameter
    RestowItemArticle:
      allOf:
        - $ref: '#/components/schemas/AbstractArticle'
        - properties:
            attributes:
              items:
                $ref: '#/components/schemas/RestowAttributeItem'
              type: array
          type: object
      xml:
        name: RestowItemArticle
      title: RestowItemArticle
      description: RestowItemArticle
    RestowItemCancelActionEnum:
      enum:
        - CANCEL
      type: string
      title: RestowItemCancelActionEnum
      description: RestowItemCancelActionEnum
    RestowItemCancelActionParameter:
      additionalProperties: false
      description: Action to cancel a RestowItem.
      properties:
        name:
          $ref: '#/components/schemas/RestowItemCancelActionEnum'
        version:
          description: Version of the entity to be changed
          minimum: 0
          type: integer
      required:
        - name
        - version
      title: RestowItemCancelActionParameter
    RestowItemForCreation:
      additionalProperties: false
      allOf:
        - $ref: '#/components/schemas/MandatoryLineItemForCreation'
      properties:
        article:
          $ref: '#/components/schemas/RestowItemArticle'
        customAttributes:
          description: >-
            Attributes that can be added to the lineItem. These attributes
            cannot be used within fulfillment processes, but it could be useful
            to have the information carried here.
          type: object
        facilityRef:
          description: >-
            The id of the facility reference. The given ID has to be present in
            the system.
          example: Esb20gpHBL94X5NdMp3C
          type: string
        globalLineItemId:
          description: >-
            This id is used to identify if this line item is related to the line
            item of other operational entities.
          type: string
        location:
          $ref: '#/components/schemas/Location'
        measurementUnitKey:
          description: Identifier for items unit of measurement.
          example: liter
          type: string
        quantity:
          default: 1
          example: 1
          format: int64
          minimum: 1
          type: integer
        recordableAttributes:
          items:
            $ref: '#/components/schemas/RecordableAttributeForCreation'
          nullable: true
          type: array
        restowed:
          default: false
          description: Indicates if the restowItem has been restowed
          example: true
          type: boolean
        scannableCodes:
          items:
            description: Codes, that identify the article
            type: string
          type: array
      required:
        - facilityRef
        - article
        - quantity
      type: object
      title: RestowItemForCreation
      description: RestowItemForCreation
    RestowItemPatchActions:
      description: >-
        Deprecated Actions to modify restow items - please use
        /api/restowitem/{id}/actions
      properties:
        actions:
          items:
            anyOf:
              - $ref: '#/components/schemas/ModifyRestowItemAction'
          minItems: 1
          type: array
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          format: int64
          type: integer
      required:
        - version
        - actions
      title: RestowItemPatchActions
      type: object
      xml:
        name: RestowItemPatchActions
    RestowItemRestowActionEnum:
      enum:
        - RESTOW
      type: string
      title: RestowItemRestowActionEnum
      description: RestowItemRestowActionEnum
    RestowItemRestowActionParameter:
      additionalProperties: false
      description: Action to restow a RestowItem.
      properties:
        location:
          $ref: '#/components/schemas/Location'
        name:
          $ref: '#/components/schemas/RestowItemRestowActionEnum'
        version:
          description: Version of the entity to be changed
          minimum: 0
          type: integer
      required:
        - name
        - version
      title: RestowItemRestowActionParameter
    RestowItemsSortOptionsEnum:
      enum:
        - CREATED_DESC
        - CREATED_ASC
        - LAST_MODIFIED_DESC
        - LAST_MODIFIED_ASC
      type: string
      title: RestowItemsSortOptionsEnum
      description: RestowItemsSortOptionsEnum
    RestowItemStatus:
      description: Status of the restow item
      enum:
        - CANCELED
        - CLOSED
        - OPEN
      type: string
      title: RestowItemStatus
    ReturnArticleAttributeItem:
      allOf:
        - $ref: '#/components/schemas/ArticleAttributeItem'
      title: ReturnArticleAttributeItem
      description: ReturnArticleAttributeItem
    ReturnConfiguration:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        active:
          default: true
          deprecated: true
          description: >-
            This part of the API is deprecated. For details please check the <a
            href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
            target="_blank">api-release-life-cycle documentation</a>.<br /><br
            />Enable or disable legacy returns. Use returnTypeConfiguration
            instead
          type: boolean
        allowTriggerRefund:
          default: false
          description: >-
            If true, a refund can be triggered. If false, the endpoints to
            trigger a refund are disabled.
          type: boolean
        availableItemConditions:
          items:
            $ref: '#/components/schemas/AvailableItemCondition'
        availableReturnReasons:
          items:
            $ref: '#/components/schemas/AvailableReturnReason'
        returnTypeConfiguration:
          $ref: '#/components/schemas/ReturnTypeConfiguration'
      required:
        - active
      type: object
      title: ReturnConfiguration
      description: ReturnConfiguration
    ReturnConfigurationType:
      description: ReturnConfigurationType RETURN is deprecated.
      enum:
        - RETURN
        - ITEM_RETURN
      type: string
      title: ReturnConfigurationType
    Returned:
      properties:
        reason:
          description: Reason of return.
          example: Zu klein
          type: string
        returnedAmount:
          description: Amount of item which is returned
          example: 5
          minimum: 0
          type: number
      required:
        - returnedAmount
      type: object
      title: Returned
      description: Returned
    ReturnedLineItemRefund:
      additionalProperties: false
      description: Either price or percent must be set, not both.
      properties:
        percent:
          description: 0.0 - 100.0 amount of the line item price that should be refunded
          example: 80.6
          type: number
        price:
          $ref: '#/components/schemas/ReturnedLineItemRefundPrice'
        status:
          $ref: '#/components/schemas/ReturnedLineItemRefundStatus'
      required:
        - status
      title: ReturnedLineItemRefund
    ReturnedLineItemRefundPrice:
      additionalProperties: false
      properties:
        currency:
          allOf:
            - $ref: '#/components/schemas/CurrencyCode'
          description: The currency of the price as an ISO 4217 code.
          example: EUR
        value:
          description: 0.0 till line item price that should be refunded
          example: 20.55
          type: number
      required:
        - value
        - currency
      title: ReturnedLineItemRefundPrice
      description: ReturnedLineItemRefundPrice
    ReturnedLineItemRefundStatus:
      enum:
        - OPEN
        - IN_PROGRESS
        - CLOSED
      type: string
      title: ReturnedLineItemRefundStatus
      description: ReturnedLineItemRefundStatus
    ReturnItemArticle:
      allOf:
        - $ref: '#/components/schemas/AbstractArticle'
        - properties:
            attributes:
              items:
                $ref: '#/components/schemas/ReturnArticleAttributeItem'
              maxItems: 40
              type: array
          type: object
      xml:
        name: ReturnItemArticle
      title: ReturnItemArticle
      description: ReturnItemArticle
    ReturnJob:
      allOf:
        - $ref: '#/components/schemas/ReturnJobForCreation'
        - $ref: '#/components/schemas/VersionedResource'
        - properties:
            anonymized:
              description: Indicates if gdpr related data was anonymized
              example: false
              type: boolean
            facilityRef:
              description: >-
                Reference to the facility which could have been given via
                tenantFacilityID while creating
              type: string
            id:
              description: >-
                The id of this returnJob. It is generated during creation
                automatically and suits as the primary identifier of the
                described entity.
              example: Esb20gpHBL94X5NdMp3C
              minItems: 1
              type: string
          required:
            - id
          type: object
      xml:
        name: ReturnJob
      title: ReturnJob
      description: ReturnJob
    ReturnJobForCreation:
      additionalProperties: false
      properties:
        carrierTrackingNumber:
          example: '84168117830018'
          type: string
        consumerAddress:
          $ref: '#/components/schemas/ConsumerAddress'
        customAttributes:
          description: >-
            Attributes that can be added to the return job. These attributes
            cannot be used within fulfillment processes, but it could be useful
            to have the information carried here.
        facilityAddress:
          $ref: '#/components/schemas/FacilityAddress'
        orderRef:
          description: The id of the order
          example: LGMl2DuvPnfPoSHhYFOm
          type: string
        processId:
          description: >-
            Id of the global process related to this entity. For example used
            for starting the GDPR process and others.
          type: string
        returnLines:
          items:
            $ref: '#/components/schemas/ReturnLine'
          minItems: 1
          type: array
        status:
          $ref: '#/components/schemas/ReturnStatus'
        tenantFacilityId:
          description: >-
            The id of the facility reference. The given ID has to be present in
            the system.
          example: Esb20gpHBL94X5NdMp3C
          type: string
        tenantOrderId:
          type: string
      required:
        - returnLines
      type: object
      title: ReturnJobForCreation
      description: ReturnJobForCreation
    ReturnJobs:
      properties:
        returnJobs:
          items:
            $ref: '#/components/schemas/ReturnJob'
          type: array
        total:
          description: Total number of found entities for this query
          example: 42
          type: integer
      required:
        - returnJobs
        - total
      title: ReturnJobs
      description: ReturnJobs
    ReturnJobWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          $ref: '#/components/schemas/ReturnJob'
      required:
        - payload
      type: object
      title: ReturnJobWebHookEvent
      description: ReturnJobWebHookEvent
    ReturnLine:
      properties:
        article:
          $ref: '#/components/schemas/ReturnItemArticle'
        customAttributes:
          description: >-
            Attributes that can be added to the return job. These attributes
            cannot be used within fulfillment processes, but it could be useful
            to have the information carried here.
        delivered:
          description: The amount of articles that were delivered
          example: 20
          format: int64
          minimum: 0
          type: integer
        id:
          description: >-
            The id of this return Item. It is generated during creation
            automatically and suits as the primary identifier of the described
            entity.
          example: climk4dcQFiPdA5ULuhS
          type: string
        pickJobRefs:
          items:
            description: List of corresponding pickjob Ids
            type: string
          minItems: 1
          type: array
        returned:
          $ref: '#/components/schemas/Returned'
        scannableCodes:
          items:
            description: Codes, that identify the article
            type: string
          type: array
        status:
          $ref: '#/components/schemas/ReturnLineStatus'
      required:
        - pickJobRefs
        - id
        - status
        - delivered
        - returned
        - scannableCodes
        - article
      type: object
      title: ReturnLine
      description: ReturnLine
    ReturnLineStatus:
      description: A return item line initially has the status INITIAL.
      enum:
        - INITIAL
        - ADVISED
        - ACCEPTED
        - DECLINED
        - CANCELED
      type: string
      xml:
        name: ReturnItemStatus
      title: ReturnLineStatus
    ReturnNote:
      properties:
        companyAddress:
          $ref: '#/components/schemas/CompanyAddress'
        deliveryAddress:
          $ref: '#/components/schemas/DeliveryAddress'
        deliveryAddresses:
          description: >-
            if this field is filled, the delivery address will be taken from
            here according to this sorting: INVOICE_ADDRESS > POSTAL_ADDRESS.
            Each type is only allowed once.
          items:
            $ref: '#/components/schemas/DeliveryAddressWithType'
          type: array
        items:
          items:
            $ref: '#/components/schemas/ReturnNoteItem'
          type: array
        orderInformation:
          $ref: '#/components/schemas/OrderInformation'
        qrCodeContent:
          type: string
      required:
        - orderInformation
        - items
      type: object
      title: ReturnNote
      description: ReturnNote
    ReturnNoteConfiguration:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      description: Return Note Configuration
      properties:
        articleIdLabel:
          $ref: '#/components/schemas/LocaleString'
        articleTitleLabel:
          $ref: '#/components/schemas/LocaleString'
        companyAddress:
          $ref: '#/components/schemas/CompanyAddress'
        disclaimer:
          $ref: '#/components/schemas/LocaleString'
        disclaimerHeadline:
          $ref: '#/components/schemas/LocaleString'
        displayPageLabel:
          default: false
          description: Determines if the page label should be shown
          type: boolean
        headline:
          $ref: '#/components/schemas/LocaleString'
        id:
          example: delivery-note
          type: string
        logoUrl:
          type: string
        orderDateLabel:
          $ref: '#/components/schemas/LocaleString'
        orderNumberLabel:
          $ref: '#/components/schemas/LocaleString'
        pageLabel:
          $ref: '#/components/schemas/LocaleString'
        pdfBackgroundConfiguration:
          $ref: '#/components/schemas/PdfBackgroundConfiguration'
        quantityLabel:
          $ref: '#/components/schemas/LocaleString'
        reasons:
          deprecated: true
          description: Deprecated - use ReturnConfiguration.availableReturnReasons instead
          items:
            $ref: '#/components/schemas/LocaleString'
          type: array
        returnReasonExplanation:
          $ref: '#/components/schemas/LocaleString'
        returnReasonExplanationHeadline:
          $ref: '#/components/schemas/LocaleString'
        returnReasonLabel:
          $ref: '#/components/schemas/LocaleString'
        substituteText:
          $ref: '#/components/schemas/LocaleString'
      required:
        - id
        - orderDateLabel
        - orderNumberLabel
        - headline
        - quantityLabel
        - articleIdLabel
        - articleTitleLabel
        - returnReasonLabel
        - disclaimerHeadline
        - disclaimer
        - pageLabel
      title: ReturnNoteConfiguration
      type: object
    ReturnNoteConfigurationForUpsert:
      additionalProperties: false
      properties:
        articleIdLabel:
          $ref: '#/components/schemas/LocaleString'
        articleTitleLabel:
          $ref: '#/components/schemas/LocaleString'
        companyAddress:
          $ref: '#/components/schemas/CompanyAddress'
        disclaimer:
          $ref: '#/components/schemas/LocaleString'
        disclaimerHeadline:
          $ref: '#/components/schemas/LocaleString'
        displayPageLabel:
          default: false
          description: Determines if the page label should be shown
          type: boolean
        headline:
          $ref: '#/components/schemas/LocaleString'
        logo:
          $ref: '#/components/schemas/NamedFile'
        orderDateLabel:
          $ref: '#/components/schemas/LocaleString'
        orderNumberLabel:
          $ref: '#/components/schemas/LocaleString'
        pageLabel:
          $ref: '#/components/schemas/LocaleString'
        pdfBackgroundConfiguration:
          $ref: '#/components/schemas/PdfBackgroundConfigurationForUpsert'
        quantityLabel:
          $ref: '#/components/schemas/LocaleString'
        reasons:
          deprecated: true
          description: Deprecated - use ReturnConfiguration.availableReturnReasons instead
          items:
            $ref: '#/components/schemas/LocaleString'
          type: array
        returnReasonExplanation:
          $ref: '#/components/schemas/LocaleString'
        returnReasonExplanationHeadline:
          $ref: '#/components/schemas/LocaleString'
        returnReasonLabel:
          $ref: '#/components/schemas/LocaleString'
        substituteText:
          $ref: '#/components/schemas/LocaleString'
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          format: int64
          type: integer
      required:
        - orderDateLabel
        - orderNumberLabel
        - headline
        - quantityLabel
        - articleIdLabel
        - articleTitleLabel
        - returnReasonLabel
        - disclaimerHeadline
        - disclaimer
        - pageLabel
        - version
      type: object
      title: ReturnNoteConfigurationForUpsert
      description: ReturnNoteConfigurationForUpsert
    ReturnNoteItem:
      properties:
        id:
          type: string
        quantity:
          description: optional parameter for picked quantity of the given line item
          type: integer
        substitutes:
          description: Titel of the item which is substituted through this item
          type: string
        title:
          type: string
      required:
        - title
      type: object
      title: ReturnNoteItem
      description: ReturnNoteItem
    ReturnPatchActions:
      description: >-
        You can choose from patch actions for the ReturnLineItems
        (ModifyReturnLineItemAction, action value: 'ModifyReturnLineItem') or
        the return itself (ModifyReturnAction, action value 'ModifyReturn').
      properties:
        actions:
          items:
            anyOf:
              - $ref: '#/components/schemas/ModifyReturn'
              - $ref: '#/components/schemas/ModifyReturnLineItem'
          minItems: 1
          type: array
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          format: int64
          type: integer
      required:
        - version
        - actions
      type: object
      xml:
        name: ReturnPatchActions
      title: ReturnPatchActions
    ReturnStatus:
      description: >-
        A return initially has the status INITIAL. As soon as one of the
        returnlines is returned partly or in full the state changes to CLAIMED.
        When the return option voids the state could change to CLOSED. Please
        note that this last step might depend on configuration values.
      enum:
        - INITIAL
        - IN_PROGRESS
        - CLAIMED
        - CLOSED
        - CANCELED
        - OBSOLETE
      type: string
      xml:
        name: ReturnItemStatus
      title: ReturnStatus
    ReturnTypeConfiguration:
      properties:
        type:
          $ref: '#/components/schemas/ReturnConfigurationType'
      required:
        - type
      title: ReturnTypeConfiguration
      description: ReturnTypeConfiguration
    Role:
      properties:
        contextLimitations:
          deprecated: true
          description: 'Deprecated: Use contexts instead.'
          items:
            $ref: '#/components/schemas/ContextLimitation'
          type: array
        contexts:
          description: >-
            The contexts of the role, which define what contexts the role is
            restricted to.
          items:
            $ref: '#/components/schemas/ContextLimitation'
          type: array
        created:
          description: The date when the role was created.
          format: date-time
          type: string
        customAttributes:
          description: >-
            The custom attributes of the role, which can be used to store
            additional information.
          type: object
        description:
          description: >-
            The description of the role, which provides more details about its
            purpose.
          maxLength: 100
          type: string
        displayName:
          description: >-
            The display name of the role, which is used for user interfaces and
            may differ from the name (defaults to name if not provided).
          maxLength: 20
          type: string
        lastModified:
          description: The date when the role was last modified.
          format: date-time
          type: string
        name:
          description: >-
            The name of the role, which must be unique and is used to identify
            the role.
          maxLength: 20
          minLength: 3
          type: string
        permissions:
          description: >-
            The permissions associated with the role, which define what actions
            the role can perform.
          items:
            enum:
              - USER_READ
              - USERS_READ
              - USER_WRITE
              - USER_MODIFY
              - CURRENT_USER_READ
              - CURRENT_USER_MODIFY
              - ROLE_READ
              - ROLE_WRITE
              - FACILITY_READ
              - FACILITY_WRITE
              - FACILITY_CREATE
              - FACILITY_DELETE
              - FACILITY_GROUP_READ
              - FACILITY_GROUP_WRITE
              - ORDER_READ
              - ORDER_WRITE
              - ORDER_FORCE_CANCEL
              - ORDER_UNLOCK
              - ORDER_CANCEL
              - ORDER_CONSUMER_WRITE
              - ORDER_CUSTOM_ATTRIBUTES_WRITE
              - AUDIT_READ
              - NOTIFICATION_READ
              - NOTIFICATION_WRITE
              - EXPIRIES_READ
              - EXPIRIES_WRITE
              - CONFIG_READ
              - CONFIG_WRITE
              - ROUTING_CONFIG_READ
              - ROUTING_CONFIG_WRITE
              - PROMISES_CONFIG_READ
              - PROMISES_CONFIG_WRITE
              - OIDC_PROVIDERS_CONFIG_READ
              - OIDC_PROVIDERS_CONFIG_WRITE
              - LOCALE_WRITE
              - CARRIER_READ
              - CARRIER_WRITE
              - RETURN_WRITE
              - RETURN_READ
              - ROUTING_READ
              - ROUTING_WRITE
              - PARCEL_READ
              - PARCEL_WRITE
              - SHIPMENT_READ
              - SHIPMENT_WRITE
              - HANDOVERJOB_READ
              - HANDOVERJOB_WRITE
              - PICKJOB_READ
              - PICKJOB_WRITE
              - PICKJOB_REROUTE
              - REMOTE_CONFIG_READ
              - REMOTE_CONFIG_WRITE
              - PICKRUN_READ
              - PICKRUN_WRITE
              - LOADUNITTYPE_READ
              - LOADUNITTYPE_WRITE
              - LOADUNIT_READ
              - LOADUNIT_WRITE
              - MEASUREMENTUNIT_READ
              - MEASUREMENTUNIT_WRITE
              - EVENT_READ
              - SUBSCRIPTION_READ
              - SUBSCRIPTION_WRITE
              - SUBSTITUTE_READ
              - SUBSTITUTE_WRITE
              - PROCESS_READ
              - PROCESS_WRITE
              - PROCESS_REROUTE
              - EXTERNAL_ACTIONS_READ
              - EXTERNAL_ACTIONS_WRITE
              - OPERATIVE_PROCESS_READ
              - OPERATIVE_PROCESS_WRITE
              - DELIVERYNOTE_WRITE
              - PACKJOB_READ
              - PACKJOB_WRITE
              - PACKINGCONTAINER_TYPE_WRITE
              - PACKING_SOURCE_CONTAINER_READ
              - PACKING_SOURCE_CONTAINER_WRITE
              - RESTOW_ITEM_READ
              - RESTOW_ITEM_WRITE
              - TAG_READ
              - TAG_WRITE
              - STOCK_READ
              - STOCK_WRITE
              - EXTERNAL_STOCK_CHANGE_REASONS_READ
              - EXTERNAL_STOCK_CHANGE_REASONS_WRITE
              - STORAGE_LOCATION_READ
              - STORAGE_LOCATION_WRITE
              - STOW_JOB_READ
              - STOW_JOB_OPERATIVE_WRITE
              - STOW_JOB_FULL_WRITE
              - NOTIFICATION_CENTER_CONFIG_READ
              - NOTIFICATION_CENTER_CONFIG_WRITE
              - DOMS_TOOLKIT_READ
              - DOMS_TOOLKIT_WRITE
              - ANALYTICS_DASHBOARD_READ
              - DOCUMENT_SET_READ
              - DOCUMENT_SET_WRITE
              - INBOUND_PROCESS_READ
              - INBOUND_PROCESS_WRITE
              - ADMIN_DATA_RESET
              - ADMIN_MODULES_READ
              - ADMIN_MODULES_WRITE
              - TENANT_CONNECTOR_CONFIG_READ
              - CUSTOM_SERVICE_WRITE
              - CUSTOM_SERVICE_READ
              - VALIDATIONS_READ
              - SERVICE_JOB_READ
              - SERVICE_JOB_WRITE
              - LINKED_SERVICE_JOBS_READ
              - LINKED_SERVICE_JOBS_WRITE
              - OPERATION_STATISTICS_READ
              - DOMS_STATISTICS_READ
              - AVAILABILITY_CHANNEL_READ
              - AVAILABILITY_CHANNEL_WRITE
              - HANDOVER_CONTAINER_READ
              - HANDOVER_CONTAINER_WRITE
              - STACKS_READ
              - STACKS_WRITE
              - CATEGORY_READ
              - CATEGORY_WRITE
              - PERMISSION_READ
              - RESERVATION_WRITE
              - RESERVATION_READ
              - FILTER_ENTITY_READ
              - BRAND_READ
              - STOCK_AVAILABILITIES_READ
              - LISTING_READ
              - LISTING_WRITE
              - LISTING_DELETE
              - PURCHASE_PRICE_READ
              - ZONE_READ
              - ZONE_WRITE
              - SAFETY_STOCK_READ
              - SAFETY_STOCK_WRITE
            type: string
          type: array
        version:
          description: The version of the role.
          type: number
      required:
        - name
        - permissions
        - version
        - created
        - lastModified
      title: Role
      type: object
      description: Role
    RoleForCreation:
      properties:
        contextLimitations:
          deprecated: true
          description: 'Deprecated: Use contexts instead.'
          items:
            $ref: '#/components/schemas/ContextLimitation'
          type: array
        contexts:
          description: >-
            The contexts of the role, which define what contexts the role is
            restricted to.
          items:
            $ref: '#/components/schemas/ContextLimitation'
          type: array
        customAttributes:
          description: >-
            The custom attributes of the role, which can be used to store
            additional information.
          type: object
        description:
          description: >-
            The description of the role, which provides more details about its
            purpose.
          maxLength: 100
          type: string
        displayName:
          description: >-
            The display name of the role, which is used for user interfaces and
            may differ from the name (defaults to name if not provided).
          maxLength: 20
          type: string
        name:
          description: >-
            The name of the role, which must be unique and is used to identify
            the role.
          maxLength: 20
          minLength: 3
          type: string
        permissions:
          description: >-
            The permissions associated with the role, which define what actions
            the role can perform.
          items:
            enum:
              - USER_READ
              - USERS_READ
              - USER_WRITE
              - USER_MODIFY
              - CURRENT_USER_READ
              - CURRENT_USER_MODIFY
              - ROLE_READ
              - ROLE_WRITE
              - FACILITY_READ
              - FACILITY_WRITE
              - FACILITY_CREATE
              - FACILITY_DELETE
              - FACILITY_GROUP_READ
              - FACILITY_GROUP_WRITE
              - ORDER_READ
              - ORDER_WRITE
              - ORDER_FORCE_CANCEL
              - ORDER_UNLOCK
              - ORDER_CANCEL
              - ORDER_CONSUMER_WRITE
              - ORDER_CUSTOM_ATTRIBUTES_WRITE
              - AUDIT_READ
              - NOTIFICATION_READ
              - NOTIFICATION_WRITE
              - EXPIRIES_READ
              - EXPIRIES_WRITE
              - CONFIG_READ
              - CONFIG_WRITE
              - ROUTING_CONFIG_READ
              - ROUTING_CONFIG_WRITE
              - PROMISES_CONFIG_READ
              - PROMISES_CONFIG_WRITE
              - OIDC_PROVIDERS_CONFIG_READ
              - OIDC_PROVIDERS_CONFIG_WRITE
              - LOCALE_WRITE
              - CARRIER_READ
              - CARRIER_WRITE
              - RETURN_WRITE
              - RETURN_READ
              - ROUTING_READ
              - ROUTING_WRITE
              - PARCEL_READ
              - PARCEL_WRITE
              - SHIPMENT_READ
              - SHIPMENT_WRITE
              - HANDOVERJOB_READ
              - HANDOVERJOB_WRITE
              - PICKJOB_READ
              - PICKJOB_WRITE
              - PICKJOB_REROUTE
              - REMOTE_CONFIG_READ
              - REMOTE_CONFIG_WRITE
              - PICKRUN_READ
              - PICKRUN_WRITE
              - LOADUNITTYPE_READ
              - LOADUNITTYPE_WRITE
              - LOADUNIT_READ
              - LOADUNIT_WRITE
              - MEASUREMENTUNIT_READ
              - MEASUREMENTUNIT_WRITE
              - EVENT_READ
              - SUBSCRIPTION_READ
              - SUBSCRIPTION_WRITE
              - SUBSTITUTE_READ
              - SUBSTITUTE_WRITE
              - PROCESS_READ
              - PROCESS_WRITE
              - PROCESS_REROUTE
              - EXTERNAL_ACTIONS_READ
              - EXTERNAL_ACTIONS_WRITE
              - OPERATIVE_PROCESS_READ
              - OPERATIVE_PROCESS_WRITE
              - DELIVERYNOTE_WRITE
              - PACKJOB_READ
              - PACKJOB_WRITE
              - PACKINGCONTAINER_TYPE_WRITE
              - PACKING_SOURCE_CONTAINER_READ
              - PACKING_SOURCE_CONTAINER_WRITE
              - RESTOW_ITEM_READ
              - RESTOW_ITEM_WRITE
              - TAG_READ
              - TAG_WRITE
              - STOCK_READ
              - STOCK_WRITE
              - EXTERNAL_STOCK_CHANGE_REASONS_READ
              - EXTERNAL_STOCK_CHANGE_REASONS_WRITE
              - STORAGE_LOCATION_READ
              - STORAGE_LOCATION_WRITE
              - STOW_JOB_READ
              - STOW_JOB_OPERATIVE_WRITE
              - STOW_JOB_FULL_WRITE
              - NOTIFICATION_CENTER_CONFIG_READ
              - NOTIFICATION_CENTER_CONFIG_WRITE
              - DOMS_TOOLKIT_READ
              - DOMS_TOOLKIT_WRITE
              - ANALYTICS_DASHBOARD_READ
              - DOCUMENT_SET_READ
              - DOCUMENT_SET_WRITE
              - INBOUND_PROCESS_READ
              - INBOUND_PROCESS_WRITE
              - ADMIN_DATA_RESET
              - ADMIN_MODULES_READ
              - ADMIN_MODULES_WRITE
              - TENANT_CONNECTOR_CONFIG_READ
              - CUSTOM_SERVICE_WRITE
              - CUSTOM_SERVICE_READ
              - VALIDATIONS_READ
              - SERVICE_JOB_READ
              - SERVICE_JOB_WRITE
              - LINKED_SERVICE_JOBS_READ
              - LINKED_SERVICE_JOBS_WRITE
              - OPERATION_STATISTICS_READ
              - DOMS_STATISTICS_READ
              - AVAILABILITY_CHANNEL_READ
              - AVAILABILITY_CHANNEL_WRITE
              - HANDOVER_CONTAINER_READ
              - HANDOVER_CONTAINER_WRITE
              - STACKS_READ
              - STACKS_WRITE
              - CATEGORY_READ
              - CATEGORY_WRITE
              - PERMISSION_READ
              - RESERVATION_WRITE
              - RESERVATION_READ
              - FILTER_ENTITY_READ
              - BRAND_READ
              - STOCK_AVAILABILITIES_READ
              - LISTING_READ
              - LISTING_WRITE
              - LISTING_DELETE
              - PURCHASE_PRICE_READ
              - ZONE_READ
              - ZONE_WRITE
              - SAFETY_STOCK_READ
              - SAFETY_STOCK_WRITE
            type: string
          type: array
      required:
        - name
        - permissions
      title: RoleForCreation
      type: object
      description: RoleForCreation
    RoleForPatch:
      properties:
        contextLimitations:
          deprecated: true
          description: 'Deprecated: Use contexts instead.'
          items:
            $ref: '#/components/schemas/ContextLimitation'
          type: array
        contexts:
          description: >-
            The contexts of the role, which define what contexts the role is
            restricted to.
          items:
            $ref: '#/components/schemas/ContextLimitation'
          type: array
        customAttributes:
          description: >-
            The custom attributes of the role, which can be used to store
            additional information.
          type: object
        description:
          description: >-
            The description of the role, which provides more details about its
            purpose.
          maxLength: 100
          type: string
        displayName:
          description: >-
            The display name of the role, which is used for user interfaces and
            may differ from the name (defaults to name if not provided).
          maxLength: 100
          type: string
        name:
          description: >-
            The name of the role, which must be unique and is used to identify
            the role.
          type: string
        permissions:
          description: >-
            The permissions associated with the role, which define what actions
            the role can perform.
          items:
            enum:
              - USER_READ
              - USERS_READ
              - USER_WRITE
              - USER_MODIFY
              - CURRENT_USER_READ
              - CURRENT_USER_MODIFY
              - ROLE_READ
              - ROLE_WRITE
              - FACILITY_READ
              - FACILITY_WRITE
              - FACILITY_CREATE
              - FACILITY_DELETE
              - FACILITY_GROUP_READ
              - FACILITY_GROUP_WRITE
              - ORDER_READ
              - ORDER_WRITE
              - ORDER_FORCE_CANCEL
              - ORDER_UNLOCK
              - ORDER_CANCEL
              - ORDER_CONSUMER_WRITE
              - ORDER_CUSTOM_ATTRIBUTES_WRITE
              - AUDIT_READ
              - NOTIFICATION_READ
              - NOTIFICATION_WRITE
              - EXPIRIES_READ
              - EXPIRIES_WRITE
              - CONFIG_READ
              - CONFIG_WRITE
              - ROUTING_CONFIG_READ
              - ROUTING_CONFIG_WRITE
              - PROMISES_CONFIG_READ
              - PROMISES_CONFIG_WRITE
              - OIDC_PROVIDERS_CONFIG_READ
              - OIDC_PROVIDERS_CONFIG_WRITE
              - LOCALE_WRITE
              - CARRIER_READ
              - CARRIER_WRITE
              - RETURN_WRITE
              - RETURN_READ
              - ROUTING_READ
              - ROUTING_WRITE
              - PARCEL_READ
              - PARCEL_WRITE
              - SHIPMENT_READ
              - SHIPMENT_WRITE
              - HANDOVERJOB_READ
              - HANDOVERJOB_WRITE
              - PICKJOB_READ
              - PICKJOB_WRITE
              - PICKJOB_REROUTE
              - REMOTE_CONFIG_READ
              - REMOTE_CONFIG_WRITE
              - PICKRUN_READ
              - PICKRUN_WRITE
              - LOADUNITTYPE_READ
              - LOADUNITTYPE_WRITE
              - LOADUNIT_READ
              - LOADUNIT_WRITE
              - MEASUREMENTUNIT_READ
              - MEASUREMENTUNIT_WRITE
              - EVENT_READ
              - SUBSCRIPTION_READ
              - SUBSCRIPTION_WRITE
              - SUBSTITUTE_READ
              - SUBSTITUTE_WRITE
              - PROCESS_READ
              - PROCESS_WRITE
              - PROCESS_REROUTE
              - EXTERNAL_ACTIONS_READ
              - EXTERNAL_ACTIONS_WRITE
              - OPERATIVE_PROCESS_READ
              - OPERATIVE_PROCESS_WRITE
              - DELIVERYNOTE_WRITE
              - PACKJOB_READ
              - PACKJOB_WRITE
              - PACKINGCONTAINER_TYPE_WRITE
              - PACKING_SOURCE_CONTAINER_READ
              - PACKING_SOURCE_CONTAINER_WRITE
              - RESTOW_ITEM_READ
              - RESTOW_ITEM_WRITE
              - TAG_READ
              - TAG_WRITE
              - STOCK_READ
              - STOCK_WRITE
              - EXTERNAL_STOCK_CHANGE_REASONS_READ
              - EXTERNAL_STOCK_CHANGE_REASONS_WRITE
              - STORAGE_LOCATION_READ
              - STORAGE_LOCATION_WRITE
              - STOW_JOB_READ
              - STOW_JOB_OPERATIVE_WRITE
              - STOW_JOB_FULL_WRITE
              - NOTIFICATION_CENTER_CONFIG_READ
              - NOTIFICATION_CENTER_CONFIG_WRITE
              - DOMS_TOOLKIT_READ
              - DOMS_TOOLKIT_WRITE
              - ANALYTICS_DASHBOARD_READ
              - DOCUMENT_SET_READ
              - DOCUMENT_SET_WRITE
              - INBOUND_PROCESS_READ
              - INBOUND_PROCESS_WRITE
              - ADMIN_DATA_RESET
              - ADMIN_MODULES_READ
              - ADMIN_MODULES_WRITE
              - TENANT_CONNECTOR_CONFIG_READ
              - CUSTOM_SERVICE_WRITE
              - CUSTOM_SERVICE_READ
              - VALIDATIONS_READ
              - SERVICE_JOB_READ
              - SERVICE_JOB_WRITE
              - LINKED_SERVICE_JOBS_READ
              - LINKED_SERVICE_JOBS_WRITE
              - OPERATION_STATISTICS_READ
              - DOMS_STATISTICS_READ
              - AVAILABILITY_CHANNEL_READ
              - AVAILABILITY_CHANNEL_WRITE
              - HANDOVER_CONTAINER_READ
              - HANDOVER_CONTAINER_WRITE
              - STACKS_READ
              - STACKS_WRITE
              - CATEGORY_READ
              - CATEGORY_WRITE
              - PERMISSION_READ
              - RESERVATION_WRITE
              - RESERVATION_READ
              - FILTER_ENTITY_READ
              - BRAND_READ
              - STOCK_AVAILABILITIES_READ
              - LISTING_READ
              - LISTING_WRITE
              - LISTING_DELETE
              - PURCHASE_PRICE_READ
              - ZONE_READ
              - ZONE_WRITE
              - SAFETY_STOCK_READ
              - SAFETY_STOCK_WRITE
            type: string
          type: array
        version:
          description: The version of the role.
          type: number
      required:
        - version
        - name
      title: RoleForPatch
      type: object
      description: RoleForPatch
    RoleForUpdate:
      properties:
        contextLimitations:
          deprecated: true
          description: 'Deprecated: Use contexts instead.'
          items:
            $ref: '#/components/schemas/ContextLimitation'
          type: array
        contexts:
          description: >-
            The contexts of the role, which define what contexts the role is
            restricted to.
          items:
            $ref: '#/components/schemas/ContextLimitation'
          type: array
        customAttributes:
          description: >-
            The custom attributes of the role, which can be used to store
            additional information.
          type: object
        description:
          description: >-
            The description of the role, which provides more details about its
            purpose.
          maxLength: 100
          type: string
        displayName:
          description: >-
            The display name of the role, which is used for user interfaces and
            may differ from the name (defaults to name if not provided).
          maxLength: 20
          type: string
        name:
          description: >-
            The name of the role, which must be unique and is used to identify
            the role.
          maxLength: 20
          minLength: 3
          type: string
        permissions:
          description: >-
            The permissions associated with the role, which define what actions
            the role can perform.
          items:
            enum:
              - USER_READ
              - USERS_READ
              - USER_WRITE
              - USER_MODIFY
              - CURRENT_USER_READ
              - CURRENT_USER_MODIFY
              - ROLE_READ
              - ROLE_WRITE
              - FACILITY_READ
              - FACILITY_WRITE
              - FACILITY_CREATE
              - FACILITY_DELETE
              - FACILITY_GROUP_READ
              - FACILITY_GROUP_WRITE
              - ORDER_READ
              - ORDER_WRITE
              - ORDER_FORCE_CANCEL
              - ORDER_UNLOCK
              - ORDER_CANCEL
              - ORDER_CONSUMER_WRITE
              - ORDER_CUSTOM_ATTRIBUTES_WRITE
              - AUDIT_READ
              - NOTIFICATION_READ
              - NOTIFICATION_WRITE
              - EXPIRIES_READ
              - EXPIRIES_WRITE
              - CONFIG_READ
              - CONFIG_WRITE
              - ROUTING_CONFIG_READ
              - ROUTING_CONFIG_WRITE
              - PROMISES_CONFIG_READ
              - PROMISES_CONFIG_WRITE
              - OIDC_PROVIDERS_CONFIG_READ
              - OIDC_PROVIDERS_CONFIG_WRITE
              - LOCALE_WRITE
              - CARRIER_READ
              - CARRIER_WRITE
              - RETURN_WRITE
              - RETURN_READ
              - ROUTING_READ
              - ROUTING_WRITE
              - PARCEL_READ
              - PARCEL_WRITE
              - SHIPMENT_READ
              - SHIPMENT_WRITE
              - HANDOVERJOB_READ
              - HANDOVERJOB_WRITE
              - PICKJOB_READ
              - PICKJOB_WRITE
              - PICKJOB_REROUTE
              - REMOTE_CONFIG_READ
              - REMOTE_CONFIG_WRITE
              - PICKRUN_READ
              - PICKRUN_WRITE
              - LOADUNITTYPE_READ
              - LOADUNITTYPE_WRITE
              - LOADUNIT_READ
              - LOADUNIT_WRITE
              - MEASUREMENTUNIT_READ
              - MEASUREMENTUNIT_WRITE
              - EVENT_READ
              - SUBSCRIPTION_READ
              - SUBSCRIPTION_WRITE
              - SUBSTITUTE_READ
              - SUBSTITUTE_WRITE
              - PROCESS_READ
              - PROCESS_WRITE
              - PROCESS_REROUTE
              - EXTERNAL_ACTIONS_READ
              - EXTERNAL_ACTIONS_WRITE
              - OPERATIVE_PROCESS_READ
              - OPERATIVE_PROCESS_WRITE
              - DELIVERYNOTE_WRITE
              - PACKJOB_READ
              - PACKJOB_WRITE
              - PACKINGCONTAINER_TYPE_WRITE
              - PACKING_SOURCE_CONTAINER_READ
              - PACKING_SOURCE_CONTAINER_WRITE
              - RESTOW_ITEM_READ
              - RESTOW_ITEM_WRITE
              - TAG_READ
              - TAG_WRITE
              - STOCK_READ
              - STOCK_WRITE
              - EXTERNAL_STOCK_CHANGE_REASONS_READ
              - EXTERNAL_STOCK_CHANGE_REASONS_WRITE
              - STORAGE_LOCATION_READ
              - STORAGE_LOCATION_WRITE
              - STOW_JOB_READ
              - STOW_JOB_OPERATIVE_WRITE
              - STOW_JOB_FULL_WRITE
              - NOTIFICATION_CENTER_CONFIG_READ
              - NOTIFICATION_CENTER_CONFIG_WRITE
              - DOMS_TOOLKIT_READ
              - DOMS_TOOLKIT_WRITE
              - ANALYTICS_DASHBOARD_READ
              - DOCUMENT_SET_READ
              - DOCUMENT_SET_WRITE
              - INBOUND_PROCESS_READ
              - INBOUND_PROCESS_WRITE
              - ADMIN_DATA_RESET
              - ADMIN_MODULES_READ
              - ADMIN_MODULES_WRITE
              - TENANT_CONNECTOR_CONFIG_READ
              - CUSTOM_SERVICE_WRITE
              - CUSTOM_SERVICE_READ
              - VALIDATIONS_READ
              - SERVICE_JOB_READ
              - SERVICE_JOB_WRITE
              - LINKED_SERVICE_JOBS_READ
              - LINKED_SERVICE_JOBS_WRITE
              - OPERATION_STATISTICS_READ
              - DOMS_STATISTICS_READ
              - AVAILABILITY_CHANNEL_READ
              - AVAILABILITY_CHANNEL_WRITE
              - HANDOVER_CONTAINER_READ
              - HANDOVER_CONTAINER_WRITE
              - STACKS_READ
              - STACKS_WRITE
              - CATEGORY_READ
              - CATEGORY_WRITE
              - PERMISSION_READ
              - RESERVATION_WRITE
              - RESERVATION_READ
              - FILTER_ENTITY_READ
              - BRAND_READ
              - STOCK_AVAILABILITIES_READ
              - LISTING_READ
              - LISTING_WRITE
              - LISTING_DELETE
              - PURCHASE_PRICE_READ
              - ZONE_READ
              - ZONE_WRITE
              - SAFETY_STOCK_READ
              - SAFETY_STOCK_WRITE
            type: string
          type: array
        version:
          description: The version of the role.
          type: number
      required:
        - name
        - permissions
        - version
      title: RoleForUpdate
      type: object
      description: RoleForUpdate
    RolePaginatedResult:
      properties:
        pageInfo:
          allOf:
            - $ref: '#/components/schemas/PageInfo'
          description: Pagination information for the search result.
        roles:
          items:
            $ref: '#/components/schemas/Role'
          type: array
        total:
          description: >-
            The total number of items matching the search criteria. Only filled,
            if withTotal is set to true in the search options.
          minimum: 0
          type: number
      required:
        - pageInfo
        - roles
      title: RolePaginatedResult
      type: object
      description: RolePaginatedResult
    RoleSearchPayload:
      properties:
        after:
          deprecated: false
          description: >-
            The cursor to start after. The value is provided in the
            `pageInfo.endCursor` field of the response.
          type: string
        options:
          $ref: '#/components/schemas/SearchOptions'
        query:
          $ref: '#/components/schemas/RoleSearchQuery'
        size:
          default: 20
          description: Number of items to return.
          maximum: 250
          minimum: 1
          type: number
        sort:
          description: Use for sorting the result.
          items:
            $ref: '#/components/schemas/RoleSort'
          maxItems: 1
          minItems: 1
          type: array
        startAfterId:
          deprecated: true
          description: >-
            The ID to start after. Deprecated, use `after` with the value
            provided in `pageInfo.endCursor` instead.
          type: string
      required:
        - query
      title: RoleSearchPayload
      type: object
      description: RoleSearchPayload
    RoleSearchQuery:
      properties:
        and:
          items:
            $ref: '#/components/schemas/RoleSearchQuery'
          type: array
        description:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by description
        displayName:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by displayName
        name:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by name
        or:
          items:
            $ref: '#/components/schemas/RoleSearchQuery'
          type: array
      title: RoleSearchQuery
      type: object
      description: RoleSearchQuery
    RoleSort:
      properties:
        displayName:
          enum:
            - ASC
            - DESC
          type: string
      title: RoleSort
      type: object
      description: RoleSort
    RoutingConfiguration:
      additionalProperties: false
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />This is the configuration for the distributing order management
        system. By changing the configuration you are able to change the
        behavior of the routing of orders henceforth.
      properties:
        created:
          description: >-
            The date this order was created at the platform. This value is
            generated by the service.
          example: 2020-02-03T08:45:51.525Z
          format: date-time
          type: string
        globalRoutingConfiguration:
          $ref: '#/components/schemas/GlobalRoutingConfiguration'
        id:
          type: string
        lastModified:
          description: >-
            The date this order was modified last. This value is generated by
            the service.
          example: 2020-02-03T09:45:51.525Z
          format: date-time
          type: string
        prioritizationRules:
          deprecated: true
          description: >-
            This part of the API is deprecated. For details please check the <a
            href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
            target="_blank">api-release-life-cycle documentation</a>.<br /><br
            />@deprecated Contains the routing configuration for prioritization
            & routing for the whole tenant
          items:
            $ref: '#/components/schemas/PrioritizationRule'
          type: array
        routingRule:
          $ref: '#/components/schemas/RoutingRule'
        timingMode:
          $ref: '#/components/schemas/RoutingConfigurationTiming'
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          format: int64
          type: integer
      required:
        - version
        - prioritizationRules
        - routingRule
        - globalRoutingConfiguration
      type: object
      title: RoutingConfiguration
      x-badges:
        - color: orange
          label: BETA
    RoutingConfigurationsPatchActions:
      properties:
        actions:
          items:
            anyOf:
              - $ref: '#/components/schemas/ModifyFenceAction'
              - $ref: '#/components/schemas/ModifyRatingAction'
              - $ref: '#/components/schemas/ModifyTimingModeAction'
              - $ref: '#/components/schemas/ModifyOrderSplitAction'
              - $ref: '#/components/schemas/ModifyPrioritizationAction'
              - $ref: '#/components/schemas/ModifyGlobalRoutingConfigurationAction'
          minItems: 1
          type: array
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          format: int64
          type: integer
      required:
        - version
        - actions
      type: object
      xml:
        name: RoutingConfigurationsPatchActions
      title: RoutingConfigurationsPatchActions
      description: RoutingConfigurationsPatchActions
    RoutingConfigurationTiming:
      description: Configuration for the timing of routing decisions
      properties:
        options:
          type: object
        type:
          $ref: '#/components/schemas/RoutingConfigurationTimingType'
      required:
        - type
      type: object
      title: RoutingConfigurationTiming
    RoutingConfigurationTimingType:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />The
        available types for routing timing.
      enum:
        - DIRECT
        - MANUAL
      type: string
      xml:
        name: RoutingConfigurationTimingType
      title: RoutingConfigurationTimingType
      x-badges:
        - color: orange
          label: BETA
    RoutingDecisionContext:
      enum:
        - LISTING
        - CARRIER
      title: RoutingDecisionContext
      description: RoutingDecisionContext
    RoutingDecisionLog:
      properties:
        created:
          description: >-
            The date this order was created at the platform. This value is
            generated by the service.
          example: 2020-02-03T08:45:51.525Z
          format: date-time
          type: string
        executionResults:
          $ref: '#/components/schemas/SourcingOptionsExecutionResults'
        id:
          type: string
        lastModified:
          description: >-
            The date this order was modified last. This value is generated by
            the service.
          example: 2020-02-03T09:45:51.525Z
          format: date-time
          type: string
        relatedRefs:
          $ref: '#/components/schemas/RoutingDecisionLogRelatedRefs'
        routingStrategyEvaluationResult:
          $ref: '#/components/schemas/RoutingStrategyEvaluationResult'
        sourcingOptions:
          items:
            $ref: '#/components/schemas/SourcingOption'
          type: array
      required:
        - id
        - created
        - lastModified
        - relatedRefs
        - sourcingOptions
        - executionResults
      type: object
      xml:
        name: RoutingDecisionLog
      title: RoutingDecisionLog
      description: RoutingDecisionLog
    RoutingDecisionLogRelatedRefs:
      properties:
        orderRef:
          description: The orderRef of the order this decision log is related to.
          type: string
        processRef:
          description: The processRef of the process this decision log is related to.
          type: string
        routingPlanRefs:
          description: >-
            The routingPlanRefs of the routing plans this decision log is
            related to.
          items:
            type: string
          type: array
        sourcingOptionsRef:
          description: >-
            The sourcingOptionsRef of the request this decision log is related
            to.
          type: string
        tenantOrderId:
          description: The tenantOrderId of the order this decision log is related to.
          type: string
      type: object
      xml:
        name: RoutingDecisionLogRelatedRefs
      title: RoutingDecisionLogRelatedRefs
      description: RoutingDecisionLogRelatedRefs
    RoutingDecisionLogs:
      properties:
        decisionLogs:
          items:
            $ref: '#/components/schemas/RoutingDecisionLog'
          type: array
        total:
          description: Total number of found decision logs for this query
          example: 42
          type: integer
      required:
        - decisionLogs
        - total
      type: object
      title: RoutingDecisionLogs
      description: RoutingDecisionLogs
    RoutingPlan:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        activeConfig:
          $ref: '#/components/schemas/RoutingStrategyNodeConfig'
        anonymized:
          description: Indicates if gdpr related data was anonymized
          example: false
          type: boolean
        childRoutingPlanRef:
          type: string
        consolidatedStatus:
          $ref: '#/components/schemas/ConsolidatedRoutingPlanStatus'
        customServices:
          items:
            $ref: '#/components/schemas/CustomServiceReference'
          minItems: 1
          type: array
        decisionLogs:
          items:
            $ref: '#/components/schemas/DecisionLogRef'
          type: array
        deliveryPreferences:
          $ref: '#/components/schemas/DeliveryPreferences'
        earliestPickingStart:
          $ref: '#/components/schemas/EarliestPickingStart'
        expectedLineItems:
          items:
            $ref: '#/components/schemas/ExpectedLineItem'
          type: array
        facilityBlackList:
          items:
            description: Contains a list of facilities to ignore when rerouting happens.
            type: string
          type: array
        facilityRef:
          description: >-
            The id of the facility reference. The given ID has to be present in
            the system.
          example: Esb20gpHBL94X5NdMp3C
          type: string
        finalizeRun:
          description: The iteration through the finalizer process
          example: 5
          minimum: 0
          type: number
        firstRoutingAttempt:
          description: The date of the first routing attempt.
          example: 2020-02-03T08:45:50.525Z
          format: date-time
          type: string
        history:
          items:
            $ref: '#/components/schemas/RoutingPlanHistory'
          type: array
        id:
          type: string
        latestPickingStart:
          $ref: '#/components/schemas/LatestPickingStart'
        orderDate:
          description: The date this order was created at the supplying system.
          example: 2020-02-03T08:45:50.525Z
          format: date-time
          type: string
        orderLineItems:
          items:
            $ref: '#/components/schemas/RoutingPlanLineItem'
          type: array
        orderRef:
          description: >-
            The id of the order that lead to the creation of this pickjob. Can
            be empty / not present when the pickjob was created without having
            an order.
          example: LGMl2DuvPnfPoSHhYFOm
          type: string
        parentRoutingPlanRef:
          type: string
        pickJobRef:
          description: The id of the pickjob that has been created from the routing plan.
          example: Esb20gpHBL94X5NdMp3C
          type: string
        predecessorRerouteRoutingPlanRefs:
          description: Refs of the predecessor routing plans, in the case of a reroute.
          items:
            type: string
          type: array
        priority:
          description: priority of return plan
          minimum: 0
          type: number
        processId:
          description: >-
            Id of the global process related to this entity. For example used
            for starting the GDPR process and others.
          type: string
        provisioningTime:
          description: The point in time by which the order is supposed to be provisioned.
          example: 2020-02-03T08:45:50.525Z
          format: date-time
          type: string
        rerouteDescription:
          $ref: '#/components/schemas/RerouteDescription'
        reRoutedFacilityRef:
          description: The id of the facility the order was rerouted from.
          example: 1DEYZgmfAcXRVYv6KEka36
          type: string
        reRoutedPickJobRef:
          description: The id of the original pickjob that was rerouted.
          example: Eghhj20878dhbd989NdMp3C
          type: string
        reRoutedRoutingPlanRef:
          description: The id of the original routingplan that was rerouted.
          example: Eghhj20878dhbd989NdMp3C
          type: string
        reRouteReason:
          $ref: '#/components/schemas/RerouteReason'
        routingRun:
          description: The iteration through the routing process
          type: number
        runId:
          description: ID of the routing run this plan was created in
          type: string
        runType:
          description: The rule type of a decision log entry
          enum:
            - DEFAULT
            - REROUTE
            - ORDERSPLIT_ON_SHORTPICK
            - MANUAL_ASSIGNMENT
            - PROCESS_MANUALASSIGNMENT
            - REACTIVATION
          type: string
        splitCount:
          default: 0
          description: >-
            The number of order splits that happened before this routingplan was
            created
          example: 5
          minimum: 0
          type: number
        status:
          $ref: '#/components/schemas/RoutingPlanStatus'
        statusHistory:
          deprecated: true
          description: >-
            This part of the API is deprecated. For details please check the <a
            href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
            target="_blank">api-release-life-cycle documentation</a>.<br /><br
            />@deprecated
             For more detailed information, use the History field. Saves all status changes when creating or updating a routing plan
          items:
            $ref: '#/components/schemas/RoutingPlanStatus'
          type: array
        statusReasons:
          items:
            $ref: '#/components/schemas/RoutingPlanStatusReason'
          type: array
        successorRerouteRoutingPlanRefs:
          description: Refs of the succeeding routing plans, in the case of a reroute.
          items:
            type: string
          type: array
        targetAddress:
          $ref: '#/components/schemas/TargetAddress'
        targetAddressesByDeliveryEvent:
          items:
            $ref: '#/components/schemas/DeliveryEventTargetAddress'
          type: array
        targetTimeBaseDate:
          description: This date is used as base/start to calculate the target time date.
          example: 2020-02-03T08:45:50.525Z
          format: date-time
          type: string
        tenantOrderId:
          description: >-
            The id of the order in the tenant system that lead to the creation
            of this routingplan.
          type: string
        transfers:
          items:
            $ref: '#/components/schemas/Transfer'
          type: array
      required:
        - id
        - orderDate
        - created
        - lastModified
        - version
        - orderRef
        - priority
        - status
        - consolidatedStatus
        - decisionLogs
        - routingRun
        - finalizeRun
        - processId
        - predecessorRerouteRoutingPlanRefs
        - successorRerouteRoutingPlanRefs
      type: object
      title: RoutingPlan
      description: RoutingPlan
    RoutingPlanCustomServicesArticleItemsFilter:
      properties:
        tenantArticleRef:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by tenantArticleRef
      title: RoutingPlanCustomServicesArticleItemsFilter
      type: object
      description: RoutingPlanCustomServicesArticleItemsFilter
    RoutingPlanCustomServicesArticleItemsListFilter:
      properties:
        contains:
          allOf:
            - $ref: '#/components/schemas/RoutingPlanCustomServicesArticleItemsFilter'
          description: Contains returns if at least one entry matches
      title: RoutingPlanCustomServicesArticleItemsListFilter
      type: object
      description: RoutingPlanCustomServicesArticleItemsListFilter
    RoutingPlanCustomServicesCustomServiceDefinitionAdditionalInformationFilter:
      properties:
        additionalInformationRef:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by additionalInformationRef
      title: >-
        RoutingPlanCustomServicesCustomServiceDefinitionAdditionalInformationFilter
      type: object
      description: >-
        RoutingPlanCustomServicesCustomServiceDefinitionAdditionalInformationFilter
    RoutingPlanCustomServicesCustomServiceDefinitionAdditionalInformationListFilter:
      properties:
        contains:
          allOf:
            - $ref: >-
                #/components/schemas/RoutingPlanCustomServicesCustomServiceDefinitionAdditionalInformationFilter
          description: Contains returns if at least one entry matches
      title: >-
        RoutingPlanCustomServicesCustomServiceDefinitionAdditionalInformationListFilter
      type: object
      description: >-
        RoutingPlanCustomServicesCustomServiceDefinitionAdditionalInformationListFilter
    RoutingPlanCustomServicesCustomServiceDefinitionFilter:
      properties:
        additionalInformation:
          allOf:
            - $ref: >-
                #/components/schemas/RoutingPlanCustomServicesCustomServiceDefinitionAdditionalInformationListFilter
          description: Nested list search by additionalInformation
        customServiceRef:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by customServiceRef
      title: RoutingPlanCustomServicesCustomServiceDefinitionFilter
      type: object
      description: RoutingPlanCustomServicesCustomServiceDefinitionFilter
    RoutingPlanCustomServicesCustomServiceItemsArticleItemsFilter:
      properties:
        tenantArticleRef:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by tenantArticleRef
      title: RoutingPlanCustomServicesCustomServiceItemsArticleItemsFilter
      type: object
      description: RoutingPlanCustomServicesCustomServiceItemsArticleItemsFilter
    RoutingPlanCustomServicesCustomServiceItemsArticleItemsListFilter:
      properties:
        contains:
          allOf:
            - $ref: >-
                #/components/schemas/RoutingPlanCustomServicesCustomServiceItemsArticleItemsFilter
          description: Contains returns if at least one entry matches
      title: RoutingPlanCustomServicesCustomServiceItemsArticleItemsListFilter
      type: object
      description: RoutingPlanCustomServicesCustomServiceItemsArticleItemsListFilter
    RoutingPlanCustomServicesCustomServiceItemsFilter:
      properties:
        articleItems:
          allOf:
            - $ref: >-
                #/components/schemas/RoutingPlanCustomServicesCustomServiceItemsArticleItemsListFilter
          description: Nested list search by articleItems
      title: RoutingPlanCustomServicesCustomServiceItemsFilter
      type: object
      description: RoutingPlanCustomServicesCustomServiceItemsFilter
    RoutingPlanCustomServicesCustomServiceItemsListFilter:
      properties:
        contains:
          allOf:
            - $ref: >-
                #/components/schemas/RoutingPlanCustomServicesCustomServiceItemsFilter
          description: Contains returns if at least one entry matches
      title: RoutingPlanCustomServicesCustomServiceItemsListFilter
      type: object
      description: RoutingPlanCustomServicesCustomServiceItemsListFilter
    RoutingPlanCustomServicesFilter:
      properties:
        articleItems:
          allOf:
            - $ref: >-
                #/components/schemas/RoutingPlanCustomServicesArticleItemsListFilter
          description: Nested list search by articleItems
        customServiceDefinition:
          allOf:
            - $ref: >-
                #/components/schemas/RoutingPlanCustomServicesCustomServiceDefinitionFilter
          description: Nested search by customServiceDefinition
        customServiceItems:
          allOf:
            - $ref: >-
                #/components/schemas/RoutingPlanCustomServicesCustomServiceItemsListFilter
          description: Nested list search by customServiceItems
      title: RoutingPlanCustomServicesFilter
      type: object
      description: RoutingPlanCustomServicesFilter
    RoutingPlanCustomServicesListFilter:
      properties:
        contains:
          allOf:
            - $ref: '#/components/schemas/RoutingPlanCustomServicesFilter'
          description: Contains returns if at least one entry matches
      title: RoutingPlanCustomServicesListFilter
      type: object
      description: RoutingPlanCustomServicesListFilter
    RoutingPlanDeliveryPreferencesCollectFilter:
      properties:
        facilityRef:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by facilityRef
        paid:
          allOf:
            - $ref: '#/components/schemas/BooleanFilter'
          description: Search by paid
        supplyingFacilities:
          allOf:
            - $ref: '#/components/schemas/StringListFilter'
          description: Search by supplyingFacilities
      title: RoutingPlanDeliveryPreferencesCollectFilter
      type: object
      description: RoutingPlanDeliveryPreferencesCollectFilter
    RoutingPlanDeliveryPreferencesCollectListFilter:
      properties:
        contains:
          allOf:
            - $ref: '#/components/schemas/RoutingPlanDeliveryPreferencesCollectFilter'
          description: Contains returns if at least one entry matches
      title: RoutingPlanDeliveryPreferencesCollectListFilter
      type: object
      description: RoutingPlanDeliveryPreferencesCollectListFilter
    RoutingPlanDeliveryPreferencesFilter:
      properties:
        collect:
          allOf:
            - $ref: >-
                #/components/schemas/RoutingPlanDeliveryPreferencesCollectListFilter
          description: Nested list search by collect
        shipping:
          allOf:
            - $ref: >-
                #/components/schemas/RoutingPlanDeliveryPreferencesShippingFilter
          description: Nested search by shipping
        supplyingFacilities:
          allOf:
            - $ref: '#/components/schemas/StringListFilter'
          description: Search by supplyingFacilities
        targetTime:
          allOf:
            - $ref: '#/components/schemas/DateFilter'
          description: Search by targetTime
      title: RoutingPlanDeliveryPreferencesFilter
      type: object
      description: RoutingPlanDeliveryPreferencesFilter
    RoutingPlanDeliveryPreferencesShippingFilter:
      properties:
        preferredCarriers:
          allOf:
            - $ref: '#/components/schemas/StringListFilter'
          description: Search by preferredCarriers
        preferredCarriersWithProduct:
          allOf:
            - $ref: >-
                #/components/schemas/RoutingPlanDeliveryPreferencesShippingPreferredCarriersWithProductListFilter
          description: Nested list search by preferredCarriersWithProduct
      title: RoutingPlanDeliveryPreferencesShippingFilter
      type: object
      description: RoutingPlanDeliveryPreferencesShippingFilter
    RoutingPlanDeliveryPreferencesShippingPreferredCarriersWithProductFilter:
      properties:
        carrierKey:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by carrierKey
      title: RoutingPlanDeliveryPreferencesShippingPreferredCarriersWithProductFilter
      type: object
      description: RoutingPlanDeliveryPreferencesShippingPreferredCarriersWithProductFilter
    RoutingPlanDeliveryPreferencesShippingPreferredCarriersWithProductListFilter:
      properties:
        contains:
          allOf:
            - $ref: >-
                #/components/schemas/RoutingPlanDeliveryPreferencesShippingPreferredCarriersWithProductFilter
          description: Contains returns if at least one entry matches
      title: >-
        RoutingPlanDeliveryPreferencesShippingPreferredCarriersWithProductListFilter
      type: object
      description: >-
        RoutingPlanDeliveryPreferencesShippingPreferredCarriersWithProductListFilter
    RoutingPlanEarliestPickingStartFilter:
      properties:
        carrierRef:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by carrierRef
        earliestPickingStartDate:
          allOf:
            - $ref: '#/components/schemas/DateFilter'
          description: Search by earliestPickingStartDate
        targetTime:
          allOf:
            - $ref: '#/components/schemas/DateFilter'
          description: Search by targetTime
      title: RoutingPlanEarliestPickingStartFilter
      type: object
      description: RoutingPlanEarliestPickingStartFilter
    RoutingPlanFallbackRoutingWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          $ref: '#/components/schemas/RoutingPlan'
      required:
        - payload
      type: object
      title: RoutingPlanFallbackRoutingWebHookEvent
      description: RoutingPlanFallbackRoutingWebHookEvent
    RoutingPlanHistory:
      properties:
        created:
          description: Information about the time, when a routing plan status is set
          example: 2024-05-12T08:45:50.525Z
          format: date-time
          type: string
        status:
          $ref: '#/components/schemas/RoutingPlanStatus'
      required:
        - status
        - created
      title: RoutingPlanHistory
      description: RoutingPlanHistory
    RoutingPlanHistoryFilter:
      properties:
        created:
          allOf:
            - $ref: '#/components/schemas/DateFilter'
          description: >-
            Search entries by created. Applying a narrow and well-considered
            filter value is strongly recommended, as it can greatly improve
            response times, especially when working with large datasets.
        status:
          allOf:
            - $ref: >-
                #/components/schemas/RoutingPlanHistoryRoutingPlanStatusEnumFilter
          description: Search by status
      title: RoutingPlanHistoryFilter
      type: object
      description: RoutingPlanHistoryFilter
    RoutingPlanHistoryListFilter:
      properties:
        contains:
          allOf:
            - $ref: '#/components/schemas/RoutingPlanHistoryFilter'
          description: Contains returns if at least one entry matches
      title: RoutingPlanHistoryListFilter
      type: object
      description: RoutingPlanHistoryListFilter
    RoutingPlanHistoryRoutingPlanStatusEnumFilter:
      properties:
        eq:
          description: Search by status
          enum:
            - INITIAL
            - PRIORITIZED
            - ROUTING
            - PROPOSED
            - PLANNED
            - ROUTED
            - NOT_ROUTABLE
            - MANUAL_PLANNED
            - FAILED
            - REDUNDANT_REROUTE
            - FAILED_REROUTE
            - RETRYABLE
            - FALLBACK_ROUTING
            - WAITING
            - OBSOLETE
            - CANCELED
            - LOCKED
            - PROMISED
            - REROUTED
          type: string
        in:
          description: Search by status
          items:
            enum:
              - INITIAL
              - PRIORITIZED
              - ROUTING
              - PROPOSED
              - PLANNED
              - ROUTED
              - NOT_ROUTABLE
              - MANUAL_PLANNED
              - FAILED
              - REDUNDANT_REROUTE
              - FAILED_REROUTE
              - RETRYABLE
              - FALLBACK_ROUTING
              - WAITING
              - OBSOLETE
              - CANCELED
              - LOCKED
              - PROMISED
              - REROUTED
            type: string
          type: array
        notEq:
          description: Search by status
          enum:
            - INITIAL
            - PRIORITIZED
            - ROUTING
            - PROPOSED
            - PLANNED
            - ROUTED
            - NOT_ROUTABLE
            - MANUAL_PLANNED
            - FAILED
            - REDUNDANT_REROUTE
            - FAILED_REROUTE
            - RETRYABLE
            - FALLBACK_ROUTING
            - WAITING
            - OBSOLETE
            - CANCELED
            - LOCKED
            - PROMISED
            - REROUTED
          type: string
      title: RoutingPlanHistoryRoutingPlanStatusEnumFilter
      type: object
      description: RoutingPlanHistoryRoutingPlanStatusEnumFilter
    RoutingPlanLatestPickingStartFilter:
      properties:
        carrierRef:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by carrierRef
        latestPickingStartDate:
          allOf:
            - $ref: '#/components/schemas/DateFilter'
          description: Search by latestPickingStartDate
        targetTime:
          allOf:
            - $ref: '#/components/schemas/DateFilter'
          description: Search by targetTime
      title: RoutingPlanLatestPickingStartFilter
      type: object
      description: RoutingPlanLatestPickingStartFilter
    RoutingPlanLineItem:
      allOf:
        - $ref: '#/components/schemas/OrderLineItem'
      properties:
        availabilityTimeframe:
          $ref: '#/components/schemas/AvailabilityTimeframe'
        available:
          type: number
        outOfStockBehaviour:
          $ref: '#/components/schemas/OutOfStockBehaviour'
        picked:
          type: number
        pieces:
          description: '@deprecated This property has been deprecated and has no meaning.'
          items:
            $ref: '#/components/schemas/RoutingPlanLineItemPiece'
          type: array
      title: RoutingPlanLineItem
      description: RoutingPlanLineItem
    RoutingPlanLineItemPiece:
      properties:
        available:
          type: number
        location:
          $ref: '#/components/schemas/Location'
        mandatoryScore:
          type: number
        partialStockRef:
          type: string
        picked:
          type: number
        quantity:
          type: number
        sequenceScore:
          type: number
      type: object
      title: RoutingPlanLineItemPiece
      description: RoutingPlanLineItemPiece
    RoutingPlanNotRoutableWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          $ref: '#/components/schemas/RoutingPlan'
      required:
        - payload
      type: object
      title: RoutingPlanNotRoutableWebHookEvent
      description: RoutingPlanNotRoutableWebHookEvent
    RoutingPlanOrderLineItemsFilter:
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by id
      title: RoutingPlanOrderLineItemsFilter
      type: object
      description: RoutingPlanOrderLineItemsFilter
    RoutingPlanOrderLineItemsListFilter:
      properties:
        contains:
          allOf:
            - $ref: '#/components/schemas/RoutingPlanOrderLineItemsFilter'
          description: Contains returns if at least one entry matches
      title: RoutingPlanOrderLineItemsListFilter
      type: object
      description: RoutingPlanOrderLineItemsListFilter
    RoutingPlanPaginatedResult:
      properties:
        pageInfo:
          allOf:
            - $ref: '#/components/schemas/PageInfo'
          description: Pagination information for the search result.
        routingPlans:
          items:
            $ref: '#/components/schemas/RoutingPlan'
          type: array
        total:
          description: >-
            The total number of items matching the search criteria. Only filled,
            if withTotal is set to true in the search options.
          minimum: 0
          type: number
      required:
        - pageInfo
        - routingPlans
      title: RoutingPlanPaginatedResult
      type: object
      description: RoutingPlanPaginatedResult
    RoutingPlanPatchActions:
      properties:
        actions:
          items:
            $ref: '#/components/schemas/ModifyRoutingPlanAction'
          minItems: 1
          type: array
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          format: int64
          type: integer
      required:
        - version
        - actions
      type: object
      xml:
        name: RoutingPlanPatchActions
      title: RoutingPlanPatchActions
      description: RoutingPlanPatchActions
    RoutingPlanRerouteCreatedWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          $ref: '#/components/schemas/RoutingPlan'
      required:
        - payload
      type: object
      title: RoutingPlanRerouteCreatedWebHookEvent
      description: RoutingPlanRerouteCreatedWebHookEvent
    RoutingPlanRoutedWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          $ref: '#/components/schemas/RoutingPlan'
      required:
        - payload
      type: object
      title: RoutingPlanRoutedWebHookEvent
      description: RoutingPlanRoutedWebHookEvent
    RoutingPlans:
      properties:
        routingPlans:
          items:
            $ref: '#/components/schemas/RoutingPlan'
          type: array
        total:
          description: Total number of found entities for this query
          example: 42
          type: integer
      type: object
      title: RoutingPlans
      description: RoutingPlans
    RoutingPlanSearchPayload:
      properties:
        after:
          deprecated: false
          description: >-
            The cursor to start after. The value is provided in the
            `pageInfo.endCursor` field of the response.
          type: string
        options:
          $ref: '#/components/schemas/SearchOptions'
        query:
          $ref: '#/components/schemas/RoutingPlanSearchQuery'
        size:
          default: 20
          description: Number of items to return.
          maximum: 250
          minimum: 1
          type: number
        sort:
          description: Use for sorting the result.
          items:
            $ref: '#/components/schemas/RoutingPlanSort'
          maxItems: 1
          minItems: 1
          type: array
        startAfterId:
          deprecated: true
          description: >-
            The ID to start after. Deprecated, use `after` with the value
            provided in `pageInfo.endCursor` instead.
          type: string
      required:
        - query
      title: RoutingPlanSearchPayload
      type: object
      description: RoutingPlanSearchPayload
    RoutingPlanSearchQuery:
      properties:
        and:
          items:
            $ref: '#/components/schemas/RoutingPlanSearchQuery'
          type: array
        anonymized:
          allOf:
            - $ref: '#/components/schemas/BooleanFilter'
          description: Search by anonymized
        customServices:
          allOf:
            - $ref: '#/components/schemas/RoutingPlanCustomServicesListFilter'
          description: Nested list search by customServices
        deliveryPreferences:
          allOf:
            - $ref: '#/components/schemas/RoutingPlanDeliveryPreferencesFilter'
          description: Nested search by deliveryPreferences
        earliestPickingStart:
          allOf:
            - $ref: '#/components/schemas/RoutingPlanEarliestPickingStartFilter'
          description: Nested search by earliestPickingStart
        history:
          allOf:
            - $ref: '#/components/schemas/RoutingPlanHistoryListFilter'
          description: Nested list search by history
        latestPickingStart:
          allOf:
            - $ref: '#/components/schemas/RoutingPlanLatestPickingStartFilter'
          description: Nested search by latestPickingStart
        or:
          items:
            $ref: '#/components/schemas/RoutingPlanSearchQuery'
          type: array
        orderDate:
          allOf:
            - $ref: '#/components/schemas/DateFilter'
          description: >-
            Search entries by orderDate. Applying a narrow and well-considered
            filter value is strongly recommended, as it can greatly improve
            response times, especially when working with large datasets.
        orderLineItems:
          allOf:
            - $ref: '#/components/schemas/RoutingPlanOrderLineItemsListFilter'
          description: Nested list search by orderLineItems
        orderRef:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by orderRef
        pickJobRef:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by pickJobRef
        priority:
          allOf:
            - $ref: '#/components/schemas/NumberFilter'
          description: Search by priority
        processId:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by processId
        provisioningTime:
          allOf:
            - $ref: '#/components/schemas/DateFilter'
          description: Search by provisioningTime
        reRouteReason:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by reRouteReason
        splitCount:
          allOf:
            - $ref: '#/components/schemas/NumberFilter'
          description: Search by splitCount
        status:
          allOf:
            - $ref: '#/components/schemas/RoutingPlanStatusEnumFilter'
          description: Search by status
        statusReasons:
          allOf:
            - $ref: '#/components/schemas/RoutingPlanStatusReasonsListFilter'
          description: Nested list search by statusReasons
        targetAddress:
          allOf:
            - $ref: '#/components/schemas/RoutingPlanTargetAddressFilter'
          description: Nested search by targetAddress
      title: RoutingPlanSearchQuery
      type: object
      description: RoutingPlanSearchQuery
    RoutingPlansGraph:
      additionalProperties: false
      description: >-
        A graph representation of the routing plans. The nodes are the routing
        plans and the edges are the rerouting reasons.
      properties:
        edges:
          items:
            $ref: '#/components/schemas/RoutingPlansGraphEdge'
          type: array
        nodes:
          items:
            $ref: '#/components/schemas/RoutingPlansGraphNode'
          type: array
      required:
        - nodes
        - edges
      title: RoutingPlansGraph
    RoutingPlansGraphEdge:
      additionalProperties: false
      properties:
        from:
          type: string
        reason:
          $ref: '#/components/schemas/RoutingPlansGraphEdgeReason'
        to:
          type: string
      required:
        - from
        - to
        - reason
      type: object
      title: RoutingPlansGraphEdge
      description: RoutingPlansGraphEdge
    RoutingPlansGraphEdgeReason:
      enum:
        - SPLIT
        - REROUTE
        - INTER_FACILITY_TRANSFER
      type: string
      title: RoutingPlansGraphEdgeReason
      description: RoutingPlansGraphEdgeReason
    RoutingPlansGraphNode:
      additionalProperties: false
      properties:
        routingPlanRef:
          type: string
      required:
        - routingPlanRef
      type: object
      title: RoutingPlansGraphNode
      description: RoutingPlansGraphNode
    RoutingPlanSort:
      properties:
        anonymized:
          enum:
            - ASC
            - DESC
          type: string
        orderDate:
          enum:
            - ASC
            - DESC
          type: string
        orderRef:
          enum:
            - ASC
            - DESC
          type: string
        processId:
          enum:
            - ASC
            - DESC
          type: string
        provisioningTime:
          enum:
            - ASC
            - DESC
          type: string
        status:
          enum:
            - ASC
            - DESC
          type: string
      title: RoutingPlanSort
      type: object
      description: RoutingPlanSort
    RoutingPlanSplittedWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          $ref: '#/components/schemas/RoutingPlan'
      required:
        - payload
      type: object
      title: RoutingPlanSplittedWebHookEvent
      description: RoutingPlanSplittedWebHookEvent
    RoutingPlanStatus:
      description: >-
        A routing plan line initially has the status INITIAL. Final state is
        ROUTED
      enum:
        - INITIAL
        - PRIORITIZED
        - ROUTING
        - PROPOSED
        - PLANNED
        - ROUTED
        - NOT_ROUTABLE
        - MANUAL_PLANNED
        - FAILED
        - REDUNDANT_REROUTE
        - FAILED_REROUTE
        - RETRYABLE
        - FALLBACK_ROUTING
        - WAITING
        - OBSOLETE
        - CANCELED
        - LOCKED
        - PROMISED
        - REROUTED
      type: string
      xml:
        name: RoutingPlanStatus
      title: RoutingPlanStatus
    RoutingPlanStatusEnumFilter:
      properties:
        eq:
          description: Search by status
          enum:
            - INITIAL
            - PRIORITIZED
            - ROUTING
            - PROPOSED
            - PLANNED
            - ROUTED
            - NOT_ROUTABLE
            - MANUAL_PLANNED
            - FAILED
            - REDUNDANT_REROUTE
            - FAILED_REROUTE
            - RETRYABLE
            - FALLBACK_ROUTING
            - WAITING
            - OBSOLETE
            - CANCELED
            - LOCKED
            - PROMISED
            - REROUTED
          type: string
        in:
          description: Search by status
          items:
            enum:
              - INITIAL
              - PRIORITIZED
              - ROUTING
              - PROPOSED
              - PLANNED
              - ROUTED
              - NOT_ROUTABLE
              - MANUAL_PLANNED
              - FAILED
              - REDUNDANT_REROUTE
              - FAILED_REROUTE
              - RETRYABLE
              - FALLBACK_ROUTING
              - WAITING
              - OBSOLETE
              - CANCELED
              - LOCKED
              - PROMISED
              - REROUTED
            type: string
          type: array
        notEq:
          description: Search by status
          enum:
            - INITIAL
            - PRIORITIZED
            - ROUTING
            - PROPOSED
            - PLANNED
            - ROUTED
            - NOT_ROUTABLE
            - MANUAL_PLANNED
            - FAILED
            - REDUNDANT_REROUTE
            - FAILED_REROUTE
            - RETRYABLE
            - FALLBACK_ROUTING
            - WAITING
            - OBSOLETE
            - CANCELED
            - LOCKED
            - PROMISED
            - REROUTED
          type: string
      title: RoutingPlanStatusEnumFilter
      type: object
      description: RoutingPlanStatusEnumFilter
    RoutingPlanStatusReason:
      description: Obsolete Status Reason
      properties:
        reason:
          $ref: '#/components/schemas/RoutingPlanStatusReasonReason'
        status:
          $ref: '#/components/schemas/RoutingPlanStatusReasonStatus'
      required:
        - reason
        - status
      title: RoutingPlanStatusReason
    RoutingPlanStatusReasonReason:
      enum:
        - REROUTE_AFTER_SHORTPICK
        - MANUALLY_REROUTED
        - MANUALLY_ASSIGNED
      type: string
      title: RoutingPlanStatusReasonReason
      description: RoutingPlanStatusReasonReason
    RoutingPlanStatusReasonsFilter:
      properties:
        reason:
          allOf:
            - $ref: >-
                #/components/schemas/RoutingPlanStatusReasonsRoutingPlanStatusReasonReasonEnumFilter
          description: Search by reason
        status:
          allOf:
            - $ref: >-
                #/components/schemas/RoutingPlanStatusReasonsRoutingPlanStatusReasonStatusEnumFilter
          description: Search by status
      title: RoutingPlanStatusReasonsFilter
      type: object
      description: RoutingPlanStatusReasonsFilter
    RoutingPlanStatusReasonsListFilter:
      properties:
        contains:
          allOf:
            - $ref: '#/components/schemas/RoutingPlanStatusReasonsFilter'
          description: Contains returns if at least one entry matches
      title: RoutingPlanStatusReasonsListFilter
      type: object
      description: RoutingPlanStatusReasonsListFilter
    RoutingPlanStatusReasonsRoutingPlanStatusReasonReasonEnumFilter:
      properties:
        eq:
          description: Search by reason
          enum:
            - REROUTE_AFTER_SHORTPICK
            - MANUALLY_REROUTED
            - MANUALLY_ASSIGNED
          type: string
        in:
          description: Search by reason
          items:
            enum:
              - REROUTE_AFTER_SHORTPICK
              - MANUALLY_REROUTED
              - MANUALLY_ASSIGNED
            type: string
          type: array
        notEq:
          description: Search by reason
          enum:
            - REROUTE_AFTER_SHORTPICK
            - MANUALLY_REROUTED
            - MANUALLY_ASSIGNED
          type: string
      title: RoutingPlanStatusReasonsRoutingPlanStatusReasonReasonEnumFilter
      type: object
      description: RoutingPlanStatusReasonsRoutingPlanStatusReasonReasonEnumFilter
    RoutingPlanStatusReasonsRoutingPlanStatusReasonStatusEnumFilter:
      properties:
        eq:
          description: Search by status
          enum:
            - OBSOLETE
          type: string
        in:
          description: Search by status
          items:
            enum:
              - OBSOLETE
            type: string
          type: array
        notEq:
          description: Search by status
          enum:
            - OBSOLETE
          type: string
      title: RoutingPlanStatusReasonsRoutingPlanStatusReasonStatusEnumFilter
      type: object
      description: RoutingPlanStatusReasonsRoutingPlanStatusReasonStatusEnumFilter
    RoutingPlanStatusReasonStatus:
      enum:
        - OBSOLETE
      type: string
      title: RoutingPlanStatusReasonStatus
      description: RoutingPlanStatusReasonStatus
    RoutingPlanTargetAddressFilter:
      properties:
        city:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by city
        country:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by country
        customAttributes:
          additionalProperties:
            anyOf:
              - $ref: '#/components/schemas/BooleanFilter'
              - $ref: '#/components/schemas/StringEqFilter'
              - $ref: '#/components/schemas/NumberEqFilter'
              - $ref: '#/components/schemas/DateFilter'
          description: Search by custom attributes
          type: object
        province:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by province
        street:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by street
      title: RoutingPlanTargetAddressFilter
      type: object
      description: RoutingPlanTargetAddressFilter
    RoutingPlanWaitingWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          $ref: '#/components/schemas/RoutingPlan'
      required:
        - payload
      type: object
      title: RoutingPlanWaitingWebHookEvent
      description: RoutingPlanWaitingWebHookEvent
    RoutingResults:
      properties:
        assignedItems:
          items:
            $ref: '#/components/schemas/AssignmentItem'
          type: array
        bestAvailableFacility:
          $ref: '#/components/schemas/DecisionLogFacilityInfo'
        bestRatedFacility:
          $ref: '#/components/schemas/DecisionLogFacilityInfo'
        bestReassignmentFacility:
          $ref: '#/components/schemas/DecisionLogFacilityInfo'
        routingPlanStatus:
          $ref: '#/components/schemas/RoutingPlanStatus'
      required:
        - assignedItems
      title: RoutingResults
      description: RoutingResults
    RoutingRule:
      additionalProperties: false
      properties:
        fences:
          items:
            $ref: '#/components/schemas/Fence'
          type: array
        orderSplit:
          $ref: '#/components/schemas/OrderSplit'
        ratings:
          items:
            $ref: '#/components/schemas/Rating'
          type: array
      required:
        - ratings
        - fences
      type: object
      title: RoutingRule
      description: RoutingRule
    RoutingStatistics:
      properties:
        durationMs:
          type: number
        fenceStatistics:
          items:
            $ref: '#/components/schemas/FenceStatistic'
          type: array
        ratingStatistics:
          items:
            $ref: '#/components/schemas/RatingStatistic'
          type: array
      required:
        - fenceStatistics
        - ratingStatistics
        - lineItemFenceStatistics
      title: RoutingStatistics
      description: RoutingStatistics
    RoutingStrategy:
      additionalProperties: true
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
        - properties:
            nameLocalized:
              $ref: '#/components/schemas/LocaleString'
            globalConfiguration:
              $ref: '#/components/schemas/RoutingStrategyGlobalConfiguration'
            id:
              type: string
            inUse:
              description: Only one strategy can be inUse
              type: boolean
            name:
              type: string
            revision:
              description: The revision of the routing strategy
              example: 1
              type: integer
            rootNode:
              $ref: '#/components/schemas/RoutingStrategyNode'
          required:
            - inUse
            - revision
            - id
            - nameLocalized
            - rootNode
            - globalConfiguration
      type: object
      title: RoutingStrategy
      description: RoutingStrategy
    RoutingStrategyActionsParameter:
      oneOf:
        - $ref: '#/components/schemas/RoutingStrategyActivateActionParameter'
        - $ref: '#/components/schemas/RoutingStrategyCreateCopyActionParameter'
      title: RoutingStrategyActionsParameter
      description: RoutingStrategyActionsParameter
    RoutingStrategyActivateActionParameter:
      allOf:
        - $ref: '#/components/schemas/AbstractRoutingStrategyActionsParameter'
      description: Action to activate a routing strategy.
      properties:
        name:
          enum:
            - ACTIVATE
          type: string
      required:
        - name
        - version
      title: RoutingStrategyActivateActionParameter
    RoutingStrategyCondition:
      additionalProperties: false
      properties:
        descriptionLocalized:
          $ref: '#/components/schemas/LocaleString'
        nameLocalized:
          $ref: '#/components/schemas/LocaleString'
        activationTimeFrames:
          items:
            $ref: '#/components/schemas/ActivationTimeFrame'
          maxItems: 1
          type: array
        active:
          type: boolean
        description:
          type: string
        id:
          type: string
        name:
          type: string
        nextCondition:
          $ref: '#/components/schemas/RoutingStrategyCondition'
        nextNode:
          $ref: '#/components/schemas/RoutingStrategyNode'
        rule:
          $ref: '#/components/schemas/RoutingStrategyConditionRule'
      required:
        - nextNode
        - active
        - rule
        - id
        - nameLocalized
      title: RoutingStrategyCondition
      description: RoutingStrategyCondition
    RoutingStrategyConditionForCreation:
      additionalProperties: false
      properties:
        descriptionLocalized:
          $ref: '#/components/schemas/LocaleString'
        nameLocalized:
          $ref: '#/components/schemas/LocaleString'
        activationTimeFrames:
          items:
            $ref: '#/components/schemas/ActivationTimeFrame'
          maxItems: 1
          type: array
        active:
          type: boolean
        description:
          type: string
        name:
          type: string
        nextCondition:
          $ref: '#/components/schemas/RoutingStrategyConditionForCreation'
        nextNode:
          $ref: '#/components/schemas/RoutingStrategyNodeForCreation'
        rule:
          $ref: '#/components/schemas/RoutingStrategyConditionRule'
      required:
        - nextNode
        - active
        - rule
        - nameLocalized
      title: RoutingStrategyConditionForCreation
      description: RoutingStrategyConditionForCreation
    RoutingStrategyConditionForModification:
      additionalProperties: false
      properties:
        descriptionLocalized:
          $ref: '#/components/schemas/LocaleString'
        nameLocalized:
          $ref: '#/components/schemas/LocaleString'
        activationTimeFrames:
          items:
            $ref: '#/components/schemas/ActivationTimeFrame'
          maxItems: 1
          type: array
        active:
          type: boolean
        description:
          type: string
        name:
          type: string
        nextCondition:
          $ref: '#/components/schemas/RoutingStrategyConditionForModification'
        nextNode:
          $ref: '#/components/schemas/RoutingStrategyNodeForModification'
        rule:
          $ref: '#/components/schemas/RoutingStrategyConditionRule'
      required:
        - nextNode
        - active
        - rule
        - nameLocalized
      title: RoutingStrategyConditionForModification
      description: RoutingStrategyConditionForModification
    RoutingStrategyConditionPredicate:
      description: The predicate for a routing strategy condition rule
      properties:
        entityOperator:
          $ref: '#/components/schemas/ToolkitEntityOperatorType'
        expectedValue:
          oneOf:
            - type: string
            - type: number
            - type: boolean
        propertyPath:
          minLength: 1
          type: string
        transformation:
          $ref: '#/components/schemas/ToolkitTransformationType'
        transformationArgs:
          items:
            oneOf:
              - type: string
              - type: number
              - type: boolean
          type: array
      required:
        - propertyPath
        - entityOperator
      type: object
      xml:
        name: RoutingStrategyConditionPredicate
      title: RoutingStrategyConditionPredicate
    RoutingStrategyConditionRule:
      additionalProperties: false
      properties:
        predicateConnector:
          $ref: '#/components/schemas/ToolkitPredicateConnector'
        predicates:
          items:
            $ref: '#/components/schemas/RoutingStrategyConditionPredicate'
          minItems: 1
          type: array
      required:
        - predicates
      type: object
      xml:
        name: RoutingStrategyConditionRule
      title: RoutingStrategyConditionRule
      description: RoutingStrategyConditionRule
    RoutingStrategyCreateCopyActionParameter:
      allOf:
        - $ref: '#/components/schemas/AbstractRoutingStrategyActionsParameter'
      description: Action to create a copy of a routing strategy.
      properties:
        nameLocalized:
          $ref: '#/components/schemas/LocaleString'
        name:
          enum:
            - COPY
          type: string
      required:
        - name
        - nameLocalized
        - version
      title: RoutingStrategyCreateCopyActionParameter
    RoutingStrategyEvaluationResult:
      properties:
        evaluatedConfig:
          $ref: '#/components/schemas/RoutingStrategyNodeConfig'
        evaluatedPath:
          items:
            $ref: '#/components/schemas/RoutingStrategyPathElement'
          type: array
      required:
        - evaluatedConfig
        - evaluatedPath
      type: object
      title: RoutingStrategyEvaluationResult
      description: RoutingStrategyEvaluationResult
    RoutingStrategyEvaluationResultType:
      enum:
        - NODE_INACTIVE
        - NODE_ACTIVE
        - CONDITION_INACTIVE
        - CONDITION_FALSE
        - CONDITION_TRUE
      type: string
      title: RoutingStrategyEvaluationResultType
      description: RoutingStrategyEvaluationResultType
    RoutingStrategyFacilityRerouteConfig:
      additionalProperties: false
      properties:
        active:
          type: boolean
        rerouteType:
          $ref: '#/components/schemas/RoutingStrategyRerouteType'
      required:
        - rerouteType
      type: object
      title: RoutingStrategyFacilityRerouteConfig
      description: RoutingStrategyFacilityRerouteConfig
    RoutingStrategyFallbackFacilityConfig:
      properties:
        active:
          default: false
          type: boolean
        facilityRefs:
          items:
            type: string
          maxItems: 1
          minItems: 1
          type: array
        fallbackAfterTime:
          default: PT0H
          description: >-
            Default amount of time in ISO 8601 duration format after which a not
            routable routingplan is routed to a configured fallback facility.
          pattern: ^P(?:(\d+W)|(\d+Y)?(\d+M)?(\d+D)?(?:T(\d+H)?(\d+M)?(\d+S)?)?)$
          type: string
      required:
        - facilityRefs
        - active
        - fallbackAfterTime
      title: RoutingStrategyFallbackFacilityConfig
      description: RoutingStrategyFallbackFacilityConfig
    RoutingStrategyForCreation:
      additionalProperties: false
      properties:
        nameLocalized:
          $ref: '#/components/schemas/LocaleString'
      required:
        - nameLocalized
      type: object
      xml:
        name: RoutingStrategy
      title: RoutingStrategyForCreation
      description: RoutingStrategyForCreation
    RoutingStrategyForModification:
      additionalProperties: false
      properties:
        nameLocalized:
          $ref: '#/components/schemas/LocaleString'
        globalConfiguration:
          $ref: '#/components/schemas/RoutingStrategyGlobalConfiguration'
        rootNode:
          $ref: '#/components/schemas/RoutingStrategyNodeForModification'
        version:
          type: integer
      required:
        - rootNode
        - nameLocalized
        - version
      xml:
        name: RoutingStrategyForModification
      title: RoutingStrategyForModification
      description: RoutingStrategyForModification
    RoutingStrategyGlobalConfiguration:
      additionalProperties: false
      properties:
        defaultPrice:
          default: 10
          description: >-
            The price applied when no specific price is defined in the order or
            listing
          type: number
        stopRoutingAttemptsAfterTime:
          default: PT8H
          description: >-
            The amount of time, specified in ISO 8601 duration format, after
            which a routing plan is considered not routable. Note: The duration
            must be a multiple of 60 seconds.
          pattern: ^P(?:(\d+W)|(\d+Y)?(\d+M)?(\d+D)?(?:T(\d+H)?(\d+M)?(\d+S)?)?)$
          type: string
        timeTriggered:
          $ref: '#/components/schemas/RoutingStrategyRerouteTimeTriggeredConfig'
      required:
        - defaultPrice
      type: object
      xml:
        name: RoutingStrategyGlobalConfiguration
      title: RoutingStrategyGlobalConfiguration
      description: RoutingStrategyGlobalConfiguration
    RoutingStrategyNode:
      additionalProperties: false
      properties:
        descriptionLocalized:
          $ref: '#/components/schemas/LocaleString'
        nameLocalized:
          $ref: '#/components/schemas/LocaleString'
        activationTimeFrames:
          items:
            $ref: '#/components/schemas/ActivationTimeFrame'
          maxItems: 1
          type: array
        active:
          type: boolean
        categoryRef:
          type: string
        config:
          $ref: '#/components/schemas/RoutingStrategyNodeConfig'
        description:
          type: string
        id:
          type: string
        name:
          type: string
        nextCondition:
          $ref: '#/components/schemas/RoutingStrategyCondition'
      required:
        - active
        - config
        - id
        - nameLocalized
      type: object
      title: RoutingStrategyNode
      description: RoutingStrategyNode
    RoutingStrategyNodeConfig:
      additionalProperties: false
      properties:
        fallbackFacility:
          $ref: '#/components/schemas/RoutingStrategyFallbackFacilityConfig'
        fences:
          items:
            anyOf:
              - $ref: '#/components/schemas/RoutingStrategyStandardFence'
              - $ref: '#/components/schemas/RoutingStrategyToolkitFence'
            discriminator:
              propertyName: type
              mapping:
                StandardFence: '#/components/schemas/RoutingStrategyStandardFence'
                ToolkitFence: '#/components/schemas/RoutingStrategyToolkitFence'
          type: array
        orderSplit:
          $ref: '#/components/schemas/RoutingStrategyOrderSplitConfig'
        ratings:
          items:
            anyOf:
              - $ref: '#/components/schemas/RoutingStrategyStandardRating'
              - $ref: '#/components/schemas/RoutingStrategyToolkitRating'
            discriminator:
              propertyName: type
              mapping:
                StandardRating: '#/components/schemas/RoutingStrategyStandardRating'
                ToolkitRating: '#/components/schemas/RoutingStrategyToolkitRating'
          type: array
        reroute:
          $ref: '#/components/schemas/RoutingStrategyRerouteConfig'
      required:
        - fences
        - ratings
      type: object
      title: RoutingStrategyNodeConfig
      description: RoutingStrategyNodeConfig
    RoutingStrategyNodeConfigCategory:
      allOf:
        - $ref: '#/components/schemas/RoutingStrategyNodeConfigCategoryForCreation'
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        id:
          type: string
      required:
        - id
      title: RoutingStrategyNodeConfigCategory
      description: RoutingStrategyNodeConfigCategory
    RoutingStrategyNodeConfigCategoryForCreation:
      additionalProperties: false
      properties:
        nameLocalized:
          $ref: '#/components/schemas/LocaleString'
        color:
          type: string
      required:
        - nameLocalized
        - color
      type: object
      title: RoutingStrategyNodeConfigCategoryForCreation
      description: RoutingStrategyNodeConfigCategoryForCreation
    RoutingStrategyNodeConfigCategoryForModification:
      additionalProperties: false
      properties:
        nameLocalized:
          $ref: '#/components/schemas/LocaleString'
        color:
          type: string
        version:
          type: number
      required:
        - nameLocalized
        - color
        - version
      type: object
      title: RoutingStrategyNodeConfigCategoryForModification
      description: RoutingStrategyNodeConfigCategoryForModification
    RoutingStrategyNodeConfigCategoryForResponse:
      allOf:
        - $ref: '#/components/schemas/RoutingStrategyNodeConfigCategory'
      properties:
        name:
          type: string
      title: RoutingStrategyNodeConfigCategoryForResponse
      description: RoutingStrategyNodeConfigCategoryForResponse
    RoutingStrategyNodeConfigCategoryTransporter:
      properties:
        routingStrategyNodeConfigCategories:
          items:
            $ref: '#/components/schemas/RoutingStrategyNodeConfigCategoryForResponse'
          type: array
        total:
          description: Total number of entities found for this query
          example: 42
          type: integer
      required:
        - routingStrategyNodeConfigCategories
        - total
      type: object
      xml:
        name: RoutingStrategyNodeConfigCategoryTransporter
      title: RoutingStrategyNodeConfigCategoryTransporter
      description: RoutingStrategyNodeConfigCategoryTransporter
    RoutingStrategyNodeConfigForUpsert:
      additionalProperties: false
      properties:
        fallbackFacility:
          $ref: '#/components/schemas/RoutingStrategyFallbackFacilityConfig'
        fences:
          items:
            anyOf:
              - $ref: '#/components/schemas/RoutingStrategyStandardFenceForUpsert'
              - $ref: '#/components/schemas/RoutingStrategyToolkitFence'
            discriminator:
              propertyName: type
              mapping:
                StandardFence: '#/components/schemas/RoutingStrategyStandardFenceForUpsert'
                ToolkitFence: '#/components/schemas/RoutingStrategyToolkitFence'
          type: array
        orderSplit:
          $ref: '#/components/schemas/RoutingStrategyOrderSplitConfig'
        ratings:
          items:
            anyOf:
              - $ref: '#/components/schemas/RoutingStrategyRatingForUpsert'
              - $ref: '#/components/schemas/RoutingStrategyToolkitRating'
            discriminator:
              propertyName: type
              mapping:
                StandardRating: '#/components/schemas/RoutingStrategyRatingForUpsert'
                ToolkitRating: '#/components/schemas/RoutingStrategyToolkitRating'
          type: array
        reroute:
          $ref: '#/components/schemas/RoutingStrategyRerouteConfig'
      required:
        - fences
        - ratings
      type: object
      title: RoutingStrategyNodeConfigForUpsert
      description: RoutingStrategyNodeConfigForUpsert
    RoutingStrategyNodeForCreation:
      additionalProperties: false
      properties:
        descriptionLocalized:
          $ref: '#/components/schemas/LocaleString'
        nameLocalized:
          $ref: '#/components/schemas/LocaleString'
        activationTimeFrames:
          items:
            $ref: '#/components/schemas/ActivationTimeFrame'
          maxItems: 1
          type: array
        active:
          type: boolean
        categoryRef:
          type: string
        config:
          $ref: '#/components/schemas/RoutingStrategyNodeConfigForUpsert'
        description:
          type: string
        name:
          type: string
        nextCondition:
          $ref: '#/components/schemas/RoutingStrategyConditionForCreation'
      required:
        - active
        - config
        - nameLocalized
      type: object
      title: RoutingStrategyNodeForCreation
      description: RoutingStrategyNodeForCreation
    RoutingStrategyNodeForModification:
      additionalProperties: false
      properties:
        descriptionLocalized:
          $ref: '#/components/schemas/LocaleString'
        nameLocalized:
          $ref: '#/components/schemas/LocaleString'
        activationTimeFrames:
          items:
            $ref: '#/components/schemas/ActivationTimeFrame'
          maxItems: 1
          type: array
        active:
          type: boolean
        categoryRef:
          type: string
        config:
          $ref: '#/components/schemas/RoutingStrategyNodeConfigForUpsert'
        description:
          type: string
        name:
          type: string
        nextCondition:
          $ref: '#/components/schemas/RoutingStrategyConditionForModification'
      required:
        - active
        - config
        - nameLocalized
      type: object
      title: RoutingStrategyNodeForModification
      description: RoutingStrategyNodeForModification
    RoutingStrategyOrderSplitConfig:
      additionalProperties: false
      properties:
        active:
          type: boolean
        activeForSameday:
          type: boolean
        maxSplitCount:
          type: integer
        shouldUseWaitingRoomForPreBackOrderItems:
          type: boolean
      required:
        - active
        - maxSplitCount
        - activeForSameday
        - shouldUseWaitingRoomForPreBackOrderItems
      type: object
      title: RoutingStrategyOrderSplitConfig
      description: RoutingStrategyOrderSplitConfig
    RoutingStrategyPathElement:
      properties:
        nameLocalized:
          $ref: '#/components/schemas/LocaleString'
        evaluationResult:
          $ref: '#/components/schemas/RoutingStrategyEvaluationResultType'
        ref:
          type: string
        type:
          $ref: '#/components/schemas/RoutingStrategyPathElementType'
      required:
        - type
        - ref
        - evaluationResult
        - nameLocalized
      type: object
      title: RoutingStrategyPathElement
      description: RoutingStrategyPathElement
    RoutingStrategyPathElementType:
      enum:
        - CONDITION
        - NODE
      type: string
      title: RoutingStrategyPathElementType
      description: RoutingStrategyPathElementType
    RoutingStrategyRatingForUpsert:
      additionalProperties: false
      description: >-
        A rating is used to rate a set of possible facilities against each other
        during routing of orders.
      properties:
        active:
          type: boolean
        configuration:
          $ref: '#/components/schemas/AbstractRatingConfiguration'
        implementation:
          $ref: '#/components/schemas/RatingImplementation'
        maxPenalty:
          example: 100
          minimum: 0
          type: number
        type:
          $ref: '#/components/schemas/RoutingStrategyStandardRatingType'
      required:
        - active
        - implementation
        - maxPenalty
        - type
      title: RoutingStrategyRating
      type: object
    RoutingStrategyRerouteConfig:
      additionalProperties: false
      properties:
        clickAndCollect:
          $ref: '#/components/schemas/RoutingStrategyFacilityRerouteConfig'
        manualReroute:
          type: boolean
        rerouteZeroPicksOnly:
          default: false
          description: >-
            Specifies whether only pick jobs with zero items picked are eligible
            for rerouting.
          type: boolean
        shipFromStore:
          $ref: '#/components/schemas/RoutingStrategyFacilityRerouteConfig'
      type: object
      title: RoutingStrategyRerouteConfig
      description: RoutingStrategyRerouteConfig
    RoutingStrategyRerouteTimeTriggeredConfig:
      additionalProperties: false
      properties:
        clickAndCollectReroute:
          $ref: '#/components/schemas/RerouteConfiguration'
        shipFromStoreDeliveryReroute:
          $ref: '#/components/schemas/RerouteConfiguration'
        shipFromStoreSamedayReroute:
          $ref: '#/components/schemas/RerouteConfiguration'
      required:
        - clickAndCollectReroute
        - shipFromStoreDeliveryReroute
        - shipFromStoreSamedayReroute
      type: object
      title: RoutingStrategyRerouteTimeTriggeredConfig
      description: RoutingStrategyRerouteTimeTriggeredConfig
    RoutingStrategyRerouteType:
      description: |-
        The type of reroute to apply to the order
          * `REROUTE`- the complete routing plan is rerouted.
          * `ORDERSPLIT`- the order is splitted. The split line items will be moved to a new routing plan and rerouted.
      enum:
        - REROUTE
        - ORDERSPLIT
      type: string
      title: RoutingStrategyRerouteType
    RoutingStrategyStandardFence:
      additionalProperties: false
      description: Routing Strategy Fence.
      properties:
        active:
          type: boolean
        activeMode:
          $ref: '#/components/schemas/FenceMode'
        description:
          type: string
        implementation:
          $ref: '#/components/schemas/FenceImplementation'
        name:
          type: string
        supportedModes:
          items:
            $ref: '#/components/schemas/FenceMode'
          type: array
        type:
          $ref: '#/components/schemas/RoutingStrategyStandardFenceType'
      required:
        - active
        - implementation
        - type
      title: RoutingStrategyFence
      type: object
    RoutingStrategyStandardFenceForUpsert:
      additionalProperties: false
      description: Routing Strategy Fence.
      properties:
        active:
          type: boolean
        activeMode:
          $ref: '#/components/schemas/FenceMode'
        implementation:
          $ref: '#/components/schemas/FenceImplementation'
        type:
          $ref: '#/components/schemas/RoutingStrategyStandardFenceType'
      required:
        - active
        - implementation
        - type
      title: RoutingStrategyFence
      type: object
    RoutingStrategyStandardFenceType:
      enum:
        - StandardFence
      type: string
      title: RoutingStrategyStandardFenceType
      description: RoutingStrategyStandardFenceType
    RoutingStrategyStandardRating:
      additionalProperties: false
      description: >-
        A rating is used to rate a set of possible facilities against each other
        during routing of orders.
      properties:
        active:
          type: boolean
        configuration:
          $ref: '#/components/schemas/AbstractRatingConfiguration'
        description:
          type: string
        implementation:
          $ref: '#/components/schemas/RatingImplementation'
        maxPenalty:
          example: 100
          minimum: 0
          type: number
        name:
          type: string
        type:
          $ref: '#/components/schemas/RoutingStrategyStandardRatingType'
      required:
        - active
        - implementation
        - maxPenalty
        - type
      title: RoutingStrategyStandardRating
      type: object
    RoutingStrategyStandardRatingType:
      enum:
        - StandardRating
      type: string
      title: RoutingStrategyStandardRatingType
      description: RoutingStrategyStandardRatingType
    RoutingStrategyToolkitFence:
      additionalProperties: false
      description: Routing Strategy Toolkit Fence.
      properties:
        descriptionLocalized:
          $ref: '#/components/schemas/LocaleString'
        nameLocalized:
          $ref: '#/components/schemas/LocaleString'
        active:
          default: false
          description: Indicates whether this fence is active or not.
          type: boolean
        comparisonRule:
          $ref: '#/components/schemas/ToolkitComparisonRule'
        description:
          description: The description of this fence.
          example: Some text that describes what the fence does.
          type: string
        entity1:
          $ref: '#/components/schemas/ToolkitAllowedEntities'
          deprecated: true
          description: >-
            This field is obsolete, was replaced by the entity fields at
            predicate level.
        entity2:
          $ref: '#/components/schemas/ToolkitAllowedEntities'
          deprecated: true
          description: >-
            This field is obsolete, was replaced by the entity fields at
            predicate level.
        name:
          description: The name of the fence.
          example: CustomFence
          type: string
        order:
          description: Order in which this fence is executed
          example: 1
          type: integer
        referenceId:
          type: string
        rule:
          $ref: '#/components/schemas/ToolkitRule'
        type:
          $ref: '#/components/schemas/RoutingStrategyToolkitFenceType'
      required:
        - nameLocalized
        - active
        - order
        - type
        - referenceId
      title: RoutingStrategyToolkitFence
    RoutingStrategyToolkitFenceType:
      enum:
        - ToolkitFence
      type: string
      title: RoutingStrategyToolkitFenceType
      description: RoutingStrategyToolkitFenceType
    RoutingStrategyToolkitRating:
      additionalProperties: false
      description: Routing Strategy Toolkit Rating.
      properties:
        descriptionLocalized:
          $ref: '#/components/schemas/LocaleString'
        nameLocalized:
          $ref: '#/components/schemas/LocaleString'
        active:
          default: false
          description: Indicates whether this fence is active or not
          type: boolean
        comparisonRule:
          $ref: '#/components/schemas/ToolkitComparisonRule'
        description:
          description: The description of this rating
          example: Some text that describes what the rating does.
          type: string
        entity1:
          $ref: '#/components/schemas/ToolkitAllowedEntities'
          deprecated: true
          description: >-
            This field is obsolete, was replaced by the entity fields at
            predicate level.
        entity2:
          $ref: '#/components/schemas/ToolkitAllowedEntities'
          deprecated: true
          description: >-
            This field is obsolete, was replaced by the entity fields at
            predicate level.
        maxPenalty:
          description: The maximum penalty this rating can have
          example: 100
          type: integer
        name:
          description: The name of the rating
          example: CustomRating
          type: string
        referenceId:
          type: string
        rule:
          $ref: '#/components/schemas/ToolkitRule'
        type:
          $ref: '#/components/schemas/RoutingStrategyToolkitRatingType'
      required:
        - type
        - nameLocalized
        - active
        - maxPenalty
        - referenceId
      title: RoutingStrategyToolkitRating
    RoutingStrategyToolkitRatingType:
      enum:
        - ToolkitRating
      type: string
      title: RoutingStrategyToolkitRatingType
      description: RoutingStrategyToolkitRatingType
    RoutingStrategyTransporter:
      properties:
        routingStrategies:
          items:
            $ref: '#/components/schemas/RoutingStrategy'
          type: array
        total:
          description: Total number of entities found for this query
          example: 42
          type: integer
      required:
        - routingStrategies
        - total
      type: object
      xml:
        name: RoutingStrategyTransporter
      title: RoutingStrategyTransporter
      description: RoutingStrategyTransporter
    SafetyStock:
      properties:
        created:
          format: date-time
          type: string
        facilityRef:
          type: string
        id:
          type: string
        lastModified:
          format: date-time
          type: string
        tenantArticleId:
          type: string
        value:
          type: number
        version:
          type: number
      required:
        - tenantArticleId
        - value
        - created
        - id
        - lastModified
        - version
      title: SafetyStock
      type: object
      description: SafetyStock
    SafetyStockBulkOperation:
      properties:
        facilityRef:
          type: string
        tenantArticleId:
          type: string
        value:
          type: number
      required:
        - tenantArticleId
        - value
      title: SafetyStockBulkOperation
      type: object
      description: SafetyStockBulkOperation
    SafetyStockBulkOperationResult:
      properties:
        error:
          $ref: '#/components/schemas/BulkOperationError'
        facilityRef:
          type: string
        status:
          enum:
            - UPDATED
            - CREATED
            - FAILED
          type: string
        tenantArticleId:
          type: string
        value:
          type: number
      required:
        - tenantArticleId
        - facilityRef
        - value
        - status
      title: SafetyStockBulkOperationResult
      type: object
      description: SafetyStockBulkOperationResult
    SafetyStockBulkOperations:
      properties:
        operations:
          items:
            $ref: '#/components/schemas/SafetyStockBulkOperation'
          maxItems: 500
          minItems: 1
          type: array
      required:
        - operations
      title: SafetyStockBulkOperations
      type: object
      description: SafetyStockBulkOperations
    SafetyStocksPaginatedResult:
      properties:
        safetyStocks:
          items:
            $ref: '#/components/schemas/SafetyStock'
          type: array
        total:
          minimum: 0
          type: number
      required:
        - total
        - safetyStocks
      title: SafetyStocksPaginatedResult
      type: object
      description: SafetyStocksPaginatedResult
    ScannableIdentifier:
      additionalProperties: false
      properties:
        identifiers:
          items:
            maxItems: 10
            minItems: 1
            type: string
          type: array
        searchType:
          $ref: '#/components/schemas/SearchType'
      required:
        - identifiers
      type: object
      title: ScannableIdentifier
      description: ScannableIdentifier
    ScanningRuleConfiguration:
      description: >-
        Configuration to show the client how the items should be scanned during
        picking
      properties:
        values:
          items:
            $ref: '#/components/schemas/ScanningRuleValue'
          type: array
      title: ScanningRuleConfiguration
    ScanningRuleTypeEnum:
      description: Type of scanning rule
      enum:
        - ARTICLE
        - LOCATION
      example: ARTICLE
      type: string
      title: ScanningRuleTypeEnum
    ScanningRuleValue:
      properties:
        priority:
          description: >-
            This field allows you to rank scanningRuleType against each other.
            The lowest number is the most preferable.
          minimum: 0
          type: number
        scanningRuleType:
          $ref: '#/components/schemas/ScanningRuleTypeEnum'
      required:
        - priority
        - scanningRuleType
      title: ScanningRuleValue
      description: ScanningRuleValue
    ScheduledPickJobReleaseConfiguration:
      properties:
        openPickJobLeadTimeInMinutes:
          description: >-
            This config describes when a scheduled PickJob should be released
            and made available for picking (pickjob.pickingTimes.latest -
            openPickJobLeadTimeInMinutes = time when the PickJob should be
            released).
          type: integer
      required:
        - openPickJobLeadTimeInMinutes
      type: object
      title: ScheduledPickJobReleaseConfiguration
      description: ScheduledPickJobReleaseConfiguration
    ScopedCapability:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        configurations:
          items:
            anyOf:
              - $ref: '#/components/schemas/SubstitutionConfiguration'
              - $ref: '#/components/schemas/CarrierConfiguration'
              - $ref: '#/components/schemas/RerouteShortPickConfiguration'
              - $ref: '#/components/schemas/ReturnNoteConfiguration'
          type: array
        currentUserPermissions:
          items:
            type: string
          type: array
        name:
          type: string
        status:
          $ref: '#/components/schemas/CapabilityStatus'
      required:
        - name
        - status
      type: object
      title: ScopedCapability
      description: ScopedCapability
    Score:
      properties:
        scoreName:
          $ref: '#/components/schemas/ScoreName'
        scoreType:
          $ref: '#/components/schemas/ScoreType'
        scoreValue:
          description: Describes the performance of the score
          type: number
      required:
        - scoreType
        - scoreName
        - scoreValue
      type: object
      xml:
        name: Score
      title: Score
      description: Score
    ScoreName:
      description: Describes the name of the score for humans to identify
      enum:
        - ZONE
        - EXPIRY_DATE
        - RECEIPT_DATE
        - RUNNING_SEQUENCE
        - RESTOW_SEQUENCE
      type: string
      xml:
        name: ScoreName
      title: ScoreName
    ScoreType:
      description: Describes what kind of score is represented
      enum:
        - RATING
        - SEQUENCE
      type: string
      xml:
        name: ScoreType
      title: ScoreType
    SearchFilter:
      properties:
        like:
          description: Search by regex pattern
          maxLength: 256
          type: string
      title: SearchFilter
      type: object
      description: SearchFilter
    SearchOptions:
      properties:
        withTotal:
          description: >-
            Set to true to include the total count of items in the search
            result.
          type: boolean
      title: SearchOptions
      type: object
      description: SearchOptions
    SearchTrackingStatus:
      description: >-
        The state of the KEP, the same as TrackingStatus enum but in uppercase,
        it is used for Search Filters
      enum:
        - REGISTERED
        - PICKED_UP
        - DELIVERED
        - NOT_DELIVERED
        - TRANSIT
        - EXCEPTION
        - OUT_FOR_DELIVERY
        - DESTROYED
        - UNKNOWN
        - CANCELED
        - AWAITS_PICKUP_BY_RECEIVER
        - DELAYED
        - NOTIFICATION
      title: SearchTrackingStatus
      type: string
    SearchType:
      enum:
        - PREFIX
        - SUFFIX
        - CONTAINS
      type: string
      title: SearchType
      description: SearchType
    Section:
      enum:
        - ORDER
        - PACKJOB
        - PICKJOB
        - HANDOVERJOB
        - PARCEL
        - PACKING_TARGET_CONTAINER
      type: string
      title: Section
      description: Section
    ServiceData:
      additionalProperties: false
      properties:
        availableLineItems:
          description: Information about the items that are available for the service job.
          items:
            $ref: '#/components/schemas/ServiceDataAvailableLineItem'
          type: array
        created:
          description: >-
            The date this entity was created at the platform. This value is
            generated by the service.
          example: 2020-02-03T08:45:51.525Z
          format: date-time
          type: string
        id:
          description: ID of the Service Data
          example: 41d43211-g5a1-gg22-a716-ba095e30ds1d
          type: string
        lastModified:
          description: >-
            The date this entity was modified last. This value is generated by
            the service.
          example: 2020-02-03T09:45:51.525Z
          format: date-time
          type: string
        serviceJobRefs:
          description: IDs of all serviceJobs connected to this service data
          items:
            example: cdb1dfc4-8361-4ba9-b3c2-33a6f2fc8d05
            type: string
          minItems: 1
          type: array
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          format: int64
          type: integer
      required:
        - id
        - serviceJobRefs
        - availableLineItems
        - version
        - lastModified
        - created
      type: object
      title: ServiceData
      description: ServiceData
    ServiceDataActionsParameter:
      anyOf:
        - $ref: '#/components/schemas/ServiceItemSelectQuantityActionParameter'
        - $ref: '#/components/schemas/ServiceItemUnselectQuantityActionParameter'
        - $ref: '#/components/schemas/AddServiceDataAvailableLineItemsActionParameter'
        - $ref: >-
            #/components/schemas/RemoveServiceDataAvailableLineItemsActionParameter
        - $ref: >-
            #/components/schemas/UpdateServiceDataAvailableLineItemsActionParameter
      title: ServiceDataActionsParameter
      description: ServiceDataActionsParameter
    ServiceDataAvailableLineItem:
      additionalProperties: false
      allOf:
        - $ref: '#/components/schemas/MandatoryLineItem'
      properties:
        article:
          $ref: '#/components/schemas/ServiceDataItemArticle'
        availableQuantity:
          description: Quantity of the item that is available
          example: 12
          minimum: 0
          type: integer
        executedServiceJobData:
          items:
            $ref: '#/components/schemas/ServiceDataExecutedServiceJobs'
          type: array
        id:
          description: ID of the available line item
          example: 41d43211-g5a1-gg22-a716-ba095e30ds1d
          type: string
        originId:
          description: >-
            The id of the line item this line item was originated from, before
            any split has happened. This can be used to restore the ‘pre-split’
            status.
          example: df671041-10dd-4600-a2ff-e9ffe2556bba
          nullable: true
          type: string
      required:
        - id
        - article
        - quantity
        - availableQuantity
        - executedServiceJobData
      type: object
      title: ServiceDataAvailableLineItem
      description: ServiceDataAvailableLineItem
    ServiceDataAvailableLineItemForCreation:
      additionalProperties: false
      allOf:
        - $ref: '#/components/schemas/MandatoryLineItemForCreation'
      properties:
        article:
          $ref: '#/components/schemas/ServiceDataItemArticle'
        availableQuantity:
          description: Quantity of the item that is available
          example: 12
          minimum: 0
          type: integer
        executedServiceJobData:
          items:
            $ref: '#/components/schemas/ServiceDataExecutedServiceJobs'
          type: array
        originId:
          description: >-
            The id of the line item this line item was originated from, before
            any split has happened. This can be used to restore the ‘pre-split’
            status.
          example: df671041-10dd-4600-a2ff-e9ffe2556bba
          nullable: true
          type: string
        quantity:
          description: The quantity of the lineItem
          type: number
      required:
        - article
        - quantity
        - availableQuantity
        - executedServiceJobData
      type: object
      title: ServiceDataAvailableLineItemForCreation
      description: ServiceDataAvailableLineItemForCreation
    ServiceDataAvailableLineItemForUpdate:
      additionalProperties: false
      properties:
        availableQuantity:
          description: Available quantity of the items
          example: 10
          minimum: 0
          type: integer
        executedServiceJobData:
          items:
            $ref: '#/components/schemas/ServiceDataExecutedServiceJobs'
          type: array
        id:
          description: ID of the available line item to update
          type: string
        quantity:
          description: Quantity of the items
          example: 5
          minimum: 0
          type: integer
      required:
        - id
      type: object
      title: ServiceDataAvailableLineItemForUpdate
      description: ServiceDataAvailableLineItemForUpdate
    ServiceDataExecutedServiceJobs:
      additionalProperties: false
      properties:
        appliedQuantity:
          description: Quantity of the item that has been selected from this service job
          example: 0
          minimum: 0
          type: integer
        itemsReturnable:
          description: >-
            Indicates if the item is returnable based on the used service job
            definition while adding the items
          example: true
          type: boolean
        sequence:
          description: >-
            sequence in which this service job has been executed for this line
            item. the lower, the earlier it has been executed.
          example: 1
          minimum: 1
          type: integer
        serviceJobRef:
          description: >-
            Id of the Service Job, that has been applied to the
            ServiceDataAvailableLineItem.
          example: 41d43211-g5a1-gg22-a716-ba095e30ds1d
          type: string
      required:
        - serviceJobRef
        - sequence
        - appliedQuantity
        - itemsReturnable
      type: object
      title: ServiceDataExecutedServiceJobs
      description: ServiceDataExecutedServiceJobs
    ServiceDataForCreation:
      additionalProperties: false
      properties:
        availableLineItems:
          description: Information about the items that are available for the service job.
          items:
            $ref: '#/components/schemas/ServiceDataAvailableLineItemForCreation'
          type: array
        serviceJobRefs:
          description: IDs of all serviceJobs connected to this service data
          items:
            example: cdb1dfc4-8361-4ba9-b3c2-33a6f2fc8d05
            type: string
          minItems: 1
          type: array
      required:
        - serviceJobRefs
        - availableLineItems
      type: object
      title: ServiceDataForCreation
      description: ServiceDataForCreation
    ServiceDataItemArticle:
      allOf:
        - $ref: '#/components/schemas/AbstractArticle'
        - properties:
            attributes:
              items:
                $ref: '#/components/schemas/ArticleAttributeItem'
              type: array
          required:
            - title
            - tenantArticleId
          type: object
      xml:
        name: ServiceDataAvailableItemArticle
      title: ServiceDataItemArticle
      description: ServiceDataItemArticle
    ServiceItemInfo:
      additionalProperties: false
      properties:
        quantity:
          description: Quantity of the item to be (un-)selected).
          example: 1
          minimum: 1
          type: integer
        serviceItemRef:
          description: Id of the ServiceItem to be (un-)selected).
          example: 41d43211-g5a1-gg22-a716-ba095e30ds1d
          type: string
      required:
        - serviceItemRef
        - quantity
      type: object
      title: ServiceItemInfo
      description: ServiceItemInfo
    ServiceItemSelectQuantityActionEnum:
      enum:
        - SELECT_ITEMS_FOR_SERVICE_JOB
      type: string
      title: ServiceItemSelectQuantityActionEnum
      description: ServiceItemSelectQuantityActionEnum
    ServiceItemSelectQuantityActionParameter:
      additionalProperties: false
      properties:
        name:
          $ref: '#/components/schemas/ServiceItemSelectQuantityActionEnum'
        serviceItemsToSelect:
          description: Service items that are selected to be used in the service job
          items:
            $ref: '#/components/schemas/ServiceItemInfo'
          minItems: 1
          type: array
        serviceJobVersion:
          description: Version of the service job
          minimum: 0
          type: integer
      required:
        - name
        - serviceItemsToSelect
        - serviceJobVersion
      title: ServiceItemSelectQuantityActionParameter
      description: ServiceItemSelectQuantityActionParameter
    ServiceItemUnselectQuantityActionEnum:
      enum:
        - UNSELECT_ITEMS_FOR_SERVICE_JOB
      type: string
      title: ServiceItemUnselectQuantityActionEnum
      description: ServiceItemUnselectQuantityActionEnum
    ServiceItemUnselectQuantityActionParameter:
      additionalProperties: false
      properties:
        name:
          $ref: '#/components/schemas/ServiceItemUnselectQuantityActionEnum'
        serviceItemsToUnselect:
          description: Service items that are unselected from being used in the service job
          items:
            $ref: '#/components/schemas/ServiceItemInfo'
          minItems: 1
          type: array
        serviceJobVersion:
          description: Version of the service job
          minimum: 0
          type: integer
      required:
        - name
        - serviceItemsToUnselect
        - serviceJobVersion
      title: ServiceItemUnselectQuantityActionParameter
      description: ServiceItemUnselectQuantityActionParameter
    ServiceJob:
      additionalProperties: false
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        descriptionLocalized:
          $ref: '#/components/schemas/LocaleString'
        nameLocalized:
          $ref: '#/components/schemas/LocaleString'
        additionalInformation:
          items:
            $ref: '#/components/schemas/ServiceJobAdditionalInformation'
          type: array
        assignedUsers:
          description: Assigned users for this entity
          items:
            $ref: '#/components/schemas/AssignedUser'
          type: array
        customAttributes:
          description: >-
            Attributes that can be added to the service job. These attributes
            cannot be used within fulfillment processes, but it could be useful
            to have the information carried here.
          type: object
        customServiceRef:
          description: Id of the customService this ServiceJob was created from.
          example: 41d43211-g5a1-gg22-a716-ba095e30ds1d
          type: string
        description:
          type: string
        editor:
          $ref: '#/components/schemas/Editor'
        executionTimeInMin:
          type: integer
        facilityRef:
          type: string
        id:
          type: string
        inheritedLineItems:
          deprecated: true
          description: 'deprecated: use availableLineItems on ServiceData instead'
          items:
            $ref: '#/components/schemas/InheritedServiceJobLineItem'
          type: array
        itemsRequired:
          $ref: '#/components/schemas/ItemsRequiredEnum'
        itemsReturnable:
          type: boolean
        lineItems:
          items:
            $ref: '#/components/schemas/ServiceJobLineItem'
          minItems: 1
          type: array
        linkedServiceJobsRef:
          description: ID of the Linked Service Job, the Service Job should reference.
          example: 41d43211-g5a1-gg22-a716-ba095e30ds1d
          type: string
        name:
          type: string
        operativeProcessRef:
          type: string
        processRef:
          type: string
        requiredLineItems:
          description: Information about the items that are required
          items:
            $ref: '#/components/schemas/RequiredLineItem'
          type: array
        shortId:
          example: KD-12-1
          type: string
        status:
          $ref: '#/components/schemas/ServiceJobStatus'
        statusInformation:
          $ref: '#/components/schemas/ServiceJobStatusInformation'
        subStatus:
          $ref: '#/components/schemas/ServiceJobSubStatus'
        targetTime:
          description: At which time the service job is expected to be finished.
          example: 2020-02-03T09:45:51.525Z
          format: date-time
          type: string
        tenantCustomServiceId:
          description: Tenant Id of the customService this ServiceJob was created from.
          example: 41d43211-g5a1-gg22-a716-ba095e30ds1d
          type: string
        tenantOrderId:
          description: ID of the tenant order, the linked service jobs are part of
          example: ocff-order-100
          type: string
      required:
        - id
        - lineItems
        - processRef
        - status
        - nameLocalized
        - itemsRequired
        - facilityRef
        - targetTime
        - customServiceRef
      title: ServiceJob
      description: ServiceJob
    ServiceJobActionsParameter:
      anyOf:
        - $ref: '#/components/schemas/ServiceJobInProgressActionParameter'
        - $ref: '#/components/schemas/ServiceJobFinishedActionParameter'
        - $ref: '#/components/schemas/ServiceJobCancelledActionParameter'
        - $ref: '#/components/schemas/ServiceJobWaitingForInputActionParameter'
        - $ref: '#/components/schemas/ServiceJobObsoleteActionParameter'
        - $ref: '#/components/schemas/ServiceJobOpenActionParameter'
        - $ref: '#/components/schemas/ServiceJobReplaceAssignedUsersActionParameter'
        - $ref: '#/components/schemas/ServiceJobSplitLineItemsActionParameter'
        - $ref: >-
            #/components/schemas/UpdateServiceJobLineItemRecordableAttributesActionParameter
      title: ServiceJobActionsParameter
      description: ServiceJobActionsParameter
    ServiceJobAdditionalInformation:
      allOf:
        - $ref: '#/components/schemas/AdditionalInformation'
      properties:
        value:
          anyOf:
            - type: string
            - type: number
            - type: boolean
          description: Value of the additional information
          example: some value
      type: object
      title: ServiceJobAdditionalInformation
      description: ServiceJobAdditionalInformation
    ServiceJobAdditionalInformationForCreation:
      properties:
        additionalInformationRef:
          description: >-
            ID of the additional information. Either
            tenantAdditionalInformationId or additionalInformationRef must be
            set.
          example: 41d43211-g5a1-gg22-a716-ba095e30ds1d
          type: string
        tenantAdditionalInformationRef:
          description: >-
            external ID of the additional information. Either
            tenantAdditionalInformationId or additionalInformationRef must be
            set.
          example: 41d43211-g5a1-gg22-a716-ba095e30ds1d
          type: string
        value:
          anyOf:
            - type: string
            - type: number
            - type: boolean
          description: Value of the additional information
          example: some value
      type: object
      title: ServiceJobAdditionalInformationForCreation
      description: ServiceJobAdditionalInformationForCreation
    ServiceJobAdditionalInformationForUpdate:
      properties:
        additionalInformationRef:
          description: ID of the additional information
          example: 41d43211-g5a1-gg22-a716-ba095e30ds1d
          type: string
        tenantAdditionalInformationRef:
          description: external ID of the additional information
          example: 41d43211-g5a1-gg22-a716-ba095e30ds1d
          type: string
        value:
          anyOf:
            - type: string
            - type: number
            - type: boolean
          description: Value of the additional information
          example: some value
      type: object
      title: ServiceJobAdditionalInformationForUpdate
      description: ServiceJobAdditionalInformationForUpdate
    ServiceJobCancelledActionEnum:
      enum:
        - CancelServiceJob
      type: string
      title: ServiceJobCancelledActionEnum
      description: ServiceJobCancelledActionEnum
    ServiceJobCancelledActionParameter:
      additionalProperties: false
      properties:
        additionalInformation:
          items:
            $ref: '#/components/schemas/ServiceJobAdditionalInformationForUpdate'
          type: array
        cancelReason:
          $ref: '#/components/schemas/LocaleString'
        name:
          $ref: '#/components/schemas/ServiceJobCancelledActionEnum'
        version:
          description: Version of the entity to be changed
          minimum: 0
          type: integer
      required:
        - name
        - version
      title: ServiceJobCancelledActionParameter
      description: ServiceJobCancelledActionParameter
    ServiceJobCancelReason:
      additionalProperties: false
      properties:
        cancelReasonLocalized:
          $ref: '#/components/schemas/LocaleString'
        active:
          type: boolean
        cancelReason:
          description: translated cancelReason selected from cancelReasonLocalized
          example: Broken Item
          type: string
      required:
        - cancelReasonLocalized
        - active
      title: ServiceJobCancelReason
      description: ServiceJobCancelReason
    ServiceJobFilterChannel:
      enum:
        - COLLECT
        - SHIPPING
      type: string
      xml:
        name: ServiceJobFilterChannel
      title: ServiceJobFilterChannel
      description: ServiceJobFilterChannel
    ServiceJobFinishedActionEnum:
      enum:
        - FinishServiceJob
      type: string
      title: ServiceJobFinishedActionEnum
      description: ServiceJobFinishedActionEnum
    ServiceJobFinishedActionParameter:
      additionalProperties: false
      properties:
        additionalInformation:
          items:
            $ref: '#/components/schemas/ServiceJobAdditionalInformationForUpdate'
          type: array
        name:
          $ref: '#/components/schemas/ServiceJobFinishedActionEnum'
        version:
          description: Version of the entity to be changed
          minimum: 0
          type: integer
      required:
        - name
        - version
      title: ServiceJobFinishedActionParameter
      description: ServiceJobFinishedActionParameter
    ServiceJobForCreation:
      properties:
        additionalInformation:
          items:
            $ref: '#/components/schemas/ServiceJobAdditionalInformationForCreation'
          type: array
        assignedUsers:
          description: Assigned users for this entity
          items:
            anyOf:
              - $ref: '#/components/schemas/AssignedUserForCreationByName'
              - $ref: '#/components/schemas/AssignedUserForCreationById'
          type: array
        customAttributes:
          description: >-
            Attributes that can be added to the service job. These attributes
            cannot be used within fulfillment processes, but it could be useful
            to have the information carried here.
          type: object
        customServiceRef:
          description: >-
            ID of the Custom Service, the Service Job should reference. Either
            this and/or the tenantCustomServiceId must passed.
          example: 41d43211-g5a1-gg22-a716-ba095e30ds1d
          type: string
        facilityRef:
          description: ID of the Facility, the Service Job is executed in.
          example: ba095e30-879f-11ee-b9d1-0242ac120002
          type: string
        lineItems:
          items:
            $ref: '#/components/schemas/ServiceJobLineItemForCreation'
          type: array
        operativeProcessRef:
          type: string
        processRef:
          description: ID of the Process, the Service Job belongs to.
          example: 550e8400-e29b-41d4-a716-446655440000
          type: string
        requiredLineItems:
          description: Information about the items that are required
          items:
            $ref: '#/components/schemas/RequiredLineItemForCreation'
          type: array
        serviceJobLinkRef:
          description: ID of the Service Job Link, the Service Job should reference.
          example: 41d43211-g5a1-gg22-a716-ba095e30ds1d
          type: string
        shortId:
          example: KD-12-1
          type: string
        targetTime:
          description: At which time the service job is expected to be finished.
          example: 2020-02-03T09:45:51.525Z
          format: date-time
          type: string
        tenantCustomServiceId:
          description: >-
            Tenant ID of the Custom Service, the Service Job should reference.
            Either this and/or the customServiceRef must passed.
          example: 41d43211-g5a1-gg22-a716-ba095e30ds1d
          type: string
        tenantOrderId:
          description: ID of the tenant order, the linked service jobs are part of
          example: ocff-order-100
          type: string
      required:
        - facilityRef
        - targetTime
      title: ServiceJobForCreation
      description: ServiceJobForCreation
    ServiceJobInProgressActionEnum:
      enum:
        - StartServiceJob
      type: string
      title: ServiceJobInProgressActionEnum
      description: ServiceJobInProgressActionEnum
    ServiceJobInProgressActionParameter:
      additionalProperties: false
      properties:
        additionalInformation:
          items:
            $ref: '#/components/schemas/ServiceJobAdditionalInformationForUpdate'
          type: array
        name:
          $ref: '#/components/schemas/ServiceJobInProgressActionEnum'
        version:
          description: Version of the entity to be changed
          minimum: 0
          type: integer
      required:
        - name
        - version
      title: ServiceJobInProgressActionParameter
      description: ServiceJobInProgressActionParameter
    ServiceJobLineItem:
      additionalProperties: false
      allOf:
        - $ref: '#/components/schemas/MandatoryLineItem'
      properties:
        article:
          $ref: '#/components/schemas/ServiceJobLineItemArticle'
        id:
          type: string
        originId:
          description: >-
            The id of the line item this line item was originated from, before
            any split has happened. This can be used to restore the ‘pre-split’
            status.
          example: df671041-10dd-4600-a2ff-e9ffe2556bba
          nullable: true
          type: string
        quantity:
          description: Quantity of the items
          example: 12
          minimum: 1
          type: integer
      required:
        - id
        - quantity
        - article
      type: object
      title: ServiceJobLineItem
      description: ServiceJobLineItem
    ServiceJobLineItemArticle:
      allOf:
        - $ref: '#/components/schemas/AbstractArticle'
        - properties:
            attributes:
              items:
                $ref: '#/components/schemas/ArticleAttributeItem'
              type: array
          required:
            - title
            - tenantArticleId
          type: object
      xml:
        name: ServiceLineItemArticle
      title: ServiceJobLineItemArticle
      description: ServiceJobLineItemArticle
    ServiceJobLineItemForCreation:
      allOf:
        - $ref: '#/components/schemas/LineItemForCreation'
      properties:
        article:
          $ref: '#/components/schemas/ServiceJobLineItemArticle'
        quantity:
          description: Quantity of the items
          example: 12
          minimum: 1
          type: integer
      required:
        - quantity
        - article
      type: object
      title: ServiceJobLineItemForCreation
      description: ServiceJobLineItemForCreation
    ServiceJobLink:
      additionalProperties: false
      properties:
        id:
          example: 0ed803c2-fa20-48d9-9c1b-0d243937a9ad
          type: string
        nextServiceJobLinks:
          items:
            $ref: '#/components/schemas/ServiceJobLink'
          minItems: 0
          type: array
        previousServiceJobLinkRefs:
          description: id of the created previous service job links
          items:
            example: 9f197dbf-c724-469b-90f1-dc94f20b2825
            type: string
          maxItems: 1
          minItems: 0
          type: array
        previousServiceJobRefs:
          items:
            example: 9f197dbf-c724-469b-90f1-dc94f20b2825
            type: string
          maxItems: 1
          minItems: 0
          type: array
        serviceJobRef:
          example: 0ed803c2-fa20-48d9-9c1b-0d243937a9ad
          type: string
      required:
        - id
        - serviceJobRef
        - previousServiceJobRefs
        - previousServiceJobLinkRefs
        - nextServiceJobLinks
      title: ServiceJobLink
      description: ServiceJobLink
    ServiceJobLinkForAdding:
      additionalProperties: false
      properties:
        serviceJobRef:
          example: 0ed803c2-fa20-48d9-9c1b-0d243937a9ad
          type: string
      required:
        - serviceJobRef
      title: ServiceJobLinkForAdding
      description: ServiceJobLinkForAdding
    ServiceJobLinkForCreation:
      additionalProperties: false
      properties:
        nextServiceJobLinks:
          items:
            $ref: '#/components/schemas/ServiceJobLinkForCreation'
          minItems: 0
          type: array
        previousServiceJobRefs:
          items:
            example: 9f197dbf-c724-469b-90f1-dc94f20b2825
            type: string
          maxItems: 1
          minItems: 0
          type: array
        serviceJobRef:
          example: 0ed803c2-fa20-48d9-9c1b-0d243937a9ad
          type: string
      required:
        - serviceJobRef
        - previousServiceJobRefs
        - nextServiceJobLinks
      title: ServiceJobLinkForCreation
      description: ServiceJobLinkForCreation
    ServiceJobObsoleteActionEnum:
      enum:
        - ObsoleteServiceJob
      type: string
      title: ServiceJobObsoleteActionEnum
      description: ServiceJobObsoleteActionEnum
    ServiceJobObsoleteActionParameter:
      additionalProperties: false
      properties:
        name:
          $ref: '#/components/schemas/ServiceJobObsoleteActionEnum'
        version:
          description: Version of the entity to be changed
          minimum: 0
          type: integer
      required:
        - name
        - version
      title: ServiceJobObsoleteActionParameter
      description: ServiceJobObsoleteActionParameter
    ServiceJobOpenActionEnum:
      enum:
        - OpenServiceJob
      type: string
      title: ServiceJobOpenActionEnum
      description: ServiceJobOpenActionEnum
    ServiceJobOpenActionParameter:
      additionalProperties: false
      properties:
        additionalInformation:
          items:
            $ref: '#/components/schemas/ServiceJobAdditionalInformationForUpdate'
          type: array
        name:
          $ref: '#/components/schemas/ServiceJobOpenActionEnum'
        version:
          description: Version of the entity to be changed
          minimum: 0
          type: integer
      required:
        - name
        - version
      title: ServiceJobOpenActionParameter
      description: ServiceJobOpenActionParameter
    ServiceJobOrderBy:
      description: Attribute to order service job by
      enum:
        - TARGET_TIME_ASC
        - TARGET_TIME_DESC
        - LAST_MODIFIED_ASC
        - LAST_MODIFIED_DESC
      type: string
      xml:
        name: ServiceJobOrderBy
      title: ServiceJobOrderBy
    ServiceJobReplaceAssignedUsersActionEnum:
      enum:
        - REPLACE_ASSIGNED_USERS
      type: string
      title: ServiceJobReplaceAssignedUsersActionEnum
      description: ServiceJobReplaceAssignedUsersActionEnum
    ServiceJobReplaceAssignedUsersActionParameter:
      additionalProperties: false
      description: Action to replace the assigned users.
      properties:
        assignedUsers:
          description: Assigned users for this entity
          items:
            anyOf:
              - $ref: '#/components/schemas/AssignedUserForCreationByName'
              - $ref: '#/components/schemas/AssignedUserForCreationById'
          type: array
        name:
          $ref: '#/components/schemas/ServiceJobReplaceAssignedUsersActionEnum'
        version:
          description: Version of the entity to be changed
          minimum: 0
          type: integer
      required:
        - name
        - version
        - assignedUsers
      title: ServiceJobReplaceAssignedUsersActionParameter
    ServiceJobs:
      properties:
        serviceJobs:
          items:
            $ref: '#/components/schemas/ServiceJobWithSearchPaths'
          type: array
        total:
          description: Total number of found entities for this query
          example: 42
          type: integer
      type: object
      title: ServiceJobs
      description: ServiceJobs
    ServiceJobSplitLineItemsActionEnum:
      enum:
        - SPLIT_LINES_SERVICE_JOB
      type: string
      title: ServiceJobSplitLineItemsActionEnum
      description: ServiceJobSplitLineItemsActionEnum
    ServiceJobSplitLineItemsActionParameter:
      additionalProperties: false
      properties:
        name:
          $ref: '#/components/schemas/ServiceJobSplitLineItemsActionEnum'
        splitLineItemsInfo:
          items:
            $ref: '#/components/schemas/ServiceJobSplitLineItemsInfo'
          type: array
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          type: integer
      required:
        - name
        - version
        - splitLineItemsInfo
      title: ServiceJobSplitLineItemsActionParameter
      type: object
      description: ServiceJobSplitLineItemsActionParameter
    ServiceJobSplitLineItemsInfo:
      additionalProperties: false
      properties:
        lineItemId:
          description: references the id of the lineItem of a serviceJob
          type: string
        quantity:
          description: quantity of the specific item that has been ordered
          example: 21
          minimum: 1
          type: integer
      required:
        - lineItemId
        - quantity
      type: object
      title: ServiceJobSplitLineItemsInfo
      description: ServiceJobSplitLineItemsInfo
    ServiceJobStatus:
      enum:
        - OPEN
        - IN_PROGRESS
        - FINISHED
        - CANCELLED
        - WAITING_FOR_INPUT
        - OBSOLETE
        - NOT_READY
      type: string
      title: ServiceJobStatus
      description: ServiceJobStatus
    ServiceJobStatusInformation:
      additionalProperties: false
      properties:
        cancelReason:
          $ref: '#/components/schemas/StatusReason'
      title: ServiceJobStatusInformation
      description: ServiceJobStatusInformation
    ServiceJobSubStatus:
      enum:
        - LINE_ITEMS_MISSING
      type: string
      title: ServiceJobSubStatus
      description: ServiceJobSubStatus
    ServiceJobWaitingForInputActionEnum:
      enum:
        - HoldServiceJob
      type: string
      title: ServiceJobWaitingForInputActionEnum
      description: ServiceJobWaitingForInputActionEnum
    ServiceJobWaitingForInputActionParameter:
      additionalProperties: false
      properties:
        additionalInformation:
          items:
            $ref: '#/components/schemas/ServiceJobAdditionalInformationForUpdate'
          type: array
        name:
          $ref: '#/components/schemas/ServiceJobWaitingForInputActionEnum'
        version:
          description: Version of the entity to be changed
          minimum: 0
          type: integer
      required:
        - name
        - version
      title: ServiceJobWaitingForInputActionParameter
      description: ServiceJobWaitingForInputActionParameter
    ServiceJobWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          $ref: '#/components/schemas/ServiceJob'
      required:
        - payload
      type: object
      title: ServiceJobWebHookEvent
      description: ServiceJobWebHookEvent
    ServiceJobWithSearchPaths:
      additionalProperties: false
      allOf:
        - $ref: '#/components/schemas/ServiceJob'
      properties:
        searchPaths:
          items:
            type: string
          type: array
      required:
        - searchPaths
      title: ServiceJobWithSearchPaths
      description: ServiceJobWithSearchPaths
    SetHandoverJobToWaitingForInputActionEnum:
      enum:
        - WAITING_FOR_INPUT
      type: string
      title: SetHandoverJobToWaitingForInputActionEnum
      description: SetHandoverJobToWaitingForInputActionEnum
    SetHandoverJobToWaitingForInputActionParameter:
      additionalProperties: false
      description: Action to set a handoverjob to waiting for input.
      properties:
        name:
          $ref: '#/components/schemas/SetHandoverJobToWaitingForInputActionEnum'
        version:
          description: Version of the entity to be changed
          minimum: 0
          type: integer
      required:
        - name
        - version
      title: SetHandoverJobToWaitingForInputActionParameter
    SevenSendersCarrierConfiguration:
      allOf:
        - $ref: '#/components/schemas/CarrierConfiguration'
      description: Configuration of Seven Senders Carrier
      properties:
        trackAndTraceUrl:
          type: string
        warehouse:
          description: >-
            The name of the warehouse that should be passed to Seven Senders, as
            configured in Seven Senders.
          type: string
      title: SevenSendersCarrierConfiguration
    SevenSendersCredentials:
      allOf:
        - $ref: '#/components/schemas/AbstractCarrierCredentials'
        - properties:
            accessKey:
              description: Access key to communicate with the Seven Senders Api
              type: string
            awsAccessKeyId:
              description: Access key to communicate with the AWS SQS service
              type: string
          required:
            - accessKey
            - awsAccessKeyId
          type: object
      description: Seven Senders Credentials.
      title: SevenSendersCredentials
      xml:
        name: SevenSendersCredentials
    ShipFromStoreRerouteConfiguration:
      properties:
        active:
          type: boolean
        allowManualReroute:
          default: false
          deprecated: true
          description: >-
            @deprecated This config property is deprecated since 26/02/24. Use
            GlobalManualRerouteConfiguration instead.
          type: boolean
        facilityWideRerouteOnShortPick:
          default: false
          type: boolean
        rerouteTargetTime:
          description: >-
            Only pickJobs where the targetTime in not larger than now plus this
            number are rerouted
          example: '48'
          type: number
        rerouteType:
          $ref: '#/components/schemas/RerouteType'
      required:
        - active
        - rerouteType
      type: object
      title: ShipFromStoreRerouteConfiguration
      description: ShipFromStoreRerouteConfiguration
    Shipment:
      allOf:
        - $ref: '#/components/schemas/ShipmentForCreation'
        - $ref: '#/components/schemas/VersionedResource'
        - properties:
            anonymized:
              default: false
              description: Indicates if gdpr related data was anonymized
              example: false
              type: boolean
            carrierKey:
              example: DPD
              type: string
            hasActiveCarrier:
              default: true
              description: >-
                Indicates if there is an active carrier configuration to fulfill
                this shipment
              example: false
              type: boolean
            id:
              description: >-
                The id of this Shipment. It is generated during creation
                automatically and suits as the primary identifier of the
                described entity.
              example: 95EWrieX09OmeriXIUbb
              type: string
            lineItems:
              items:
                $ref: '#/components/schemas/ShipmentLineItem'
              type: array
            parcels:
              items:
                $ref: '#/components/schemas/StrippedParcel'
              type: array
            status:
              $ref: '#/components/schemas/ShipmentStatus'
          required:
            - id
            - status
            - hasActiveCarrier
          type: object
      title: Shipment
      description: Shipment
    ShipmentActionsParameter:
      anyOf:
        - $ref: '#/components/schemas/ShipmentSplitLineItemsActionParameter'
        - $ref: >-
            #/components/schemas/UpdateShipmentLineItemRecordableAttributesActionParameter
      title: ShipmentActionsParameter
      description: ShipmentActionsParameter
    ShipmentForCreation:
      additionalProperties: false
      properties:
        carrierLogoUrl:
          description: The URL to the carrier logo
          type: string
        carrierProduct:
          description: Desired product of given carrier to choose when ordering a label
          example: EXPRESS
          type: string
        carrierRef:
          description: The reference to the carrier for which the shipment is assigned to
          example: ca525716-7208-4a63-a2a6-11274eb37f67-0
          type: string
        carrierServices:
          items:
            $ref: '#/components/schemas/CarrierServices'
          type: array
        customAttributes:
          description: >-
            Attributes that can be added to the shipment. These attributes
            cannot be used within fulfillment processes, but it could be useful
            to have the informations carried here.
          type: object
        facilityRef:
          description: The reference to the facility which the shipment is assigned to.
          type: string
        invoiceAddress:
          $ref: '#/components/schemas/ConsumerAddress'
        lineItems:
          items:
            $ref: '#/components/schemas/ShipmentLineItemForCreation'
          type: array
        operativeProcessRef:
          type: string
        orderDate:
          description: The date this order was created at the supplying system.
          format: date-time
          type: string
        paymentInformation:
          $ref: '#/components/schemas/PaymentInformation'
        pickJobRef:
          description: The id of the facility reference.
          example: Esb20gpHBL94X5NdMp3C
          type: string
        postalAddress:
          $ref: '#/components/schemas/ConsumerAddress'
        processId:
          description: >-
            Id of the global process related to this entity. For example used
            for starting the GDPR process and others.
          type: string
        shortId:
          description: The short identifier of the shipment.
          type: string
        sourceAddress:
          $ref: '#/components/schemas/FacilityAddress'
        targetAddress:
          $ref: '#/components/schemas/ConsumerAddress'
        targetTime:
          description: At which time the result is expected.
          example: 2020-02-03T09:45:51.525Z
          format: date-time
          type: string
        targetTimeBaseDate:
          description: The start date for the targetTime calculation.
          example: 2020-02-03T08:45:50.525Z
          format: date-time
          type: string
        tenantOrderId:
          description: Reference to the order in the tenant system.
          type: string
        transfers:
          items:
            $ref: '#/components/schemas/OperativeTransfer'
          minItems: 0
          type: array
        tags:
          items:
            $ref: '#/components/schemas/TagReference'
          type: array
      required:
        - facilityRef
        - targetTime
        - orderDate
      type: object
      xml:
        name: Shipment
      title: ShipmentForCreation
      description: ShipmentForCreation
    ShipmentLineItem:
      allOf:
        - $ref: '#/components/schemas/ShipmentLineItemForCreation'
        - properties:
            id:
              description: >-
                The id of this lineItem. It is generated during creation
                automatically and suits as the primary identifier of the
                described entity.
              example: climk4dcQFiPdA5ULuhS
              type: string
            recordableAttributes:
              items:
                $ref: '#/components/schemas/RecordableAttribute'
              type: array
          required:
            - id
          type: object
      title: ShipmentLineItem
      description: ShipmentLineItem
    ShipmentLineItemArticle:
      allOf:
        - $ref: '#/components/schemas/AbstractArticle'
        - properties:
            attributes:
              items:
                $ref: '#/components/schemas/ArticleAttributeItem'
              maxItems: 40
              type: array
          type: object
      xml:
        name: ShipmentLineItemArticle
      title: ShipmentLineItemArticle
      description: ShipmentLineItemArticle
    ShipmentLineItemForCreation:
      properties:
        article:
          $ref: '#/components/schemas/ShipmentLineItemArticle'
        customAttributes:
          description: >-
            Attributes that can be added to the orderline. These attributes
            cannot be used within fulfillment processes, but it could be useful
            to have the informations carried here.
          type: object
        measurementUnitKey:
          description: Identifier for items unit of measurement.
          example: liter
          type: string
        quantity:
          description: quantity of the specific article that has been ordered
          example: 21
          format: int64
          minimum: 1
          type: integer
        recordableAttributes:
          items:
            $ref: '#/components/schemas/RecordableAttributeForCreation'
          type: array
        scannableCodes:
          items:
            description: Codes, that identify the article
            type: string
          type: array
        tags:
          items:
            $ref: '#/components/schemas/TagReference'
          type: array
      required:
        - quantity
        - article
      type: object
      title: ShipmentLineItemForCreation
      description: ShipmentLineItemForCreation
    ShipmentOrderBy:
      description: STATUS_TARGET_TIME_LAST_MODIFIED_DATE is depricated
      enum:
        - STATUS_TARGET_TIME_ORDER_DATE
      title: ShipmentOrderBy
    ShipmentPaginatedResult:
      properties:
        pageInfo:
          allOf:
            - $ref: '#/components/schemas/PageInfo'
          description: Pagination information for the search result.
        shipments:
          items:
            $ref: '#/components/schemas/Shipment'
          type: array
        total:
          description: >-
            The total number of items matching the search criteria. Only filled,
            if withTotal is set to true in the search options.
          minimum: 0
          type: number
      required:
        - pageInfo
        - shipments
      title: ShipmentPaginatedResult
      type: object
      description: ShipmentPaginatedResult
    ShipmentParcelsFilter:
      properties:
        status:
          allOf:
            - $ref: '#/components/schemas/ShipmentParcelsParcelStatusEnumFilter'
          description: Search by status
      title: ShipmentParcelsFilter
      type: object
      description: ShipmentParcelsFilter
    ShipmentParcelsListFilter:
      properties:
        contains:
          allOf:
            - $ref: '#/components/schemas/ShipmentParcelsFilter'
          description: Contains returns if at least one entry matches
      title: ShipmentParcelsListFilter
      type: object
      description: ShipmentParcelsListFilter
    ShipmentParcelsParcelStatusEnumFilter:
      properties:
        eq:
          description: Search by status
          enum:
            - OPEN
            - PROCESSING
            - DONE
            - FAILED
            - CANCELED
            - OBSOLETE
            - WAITING_FOR_INPUT
          type: string
        in:
          description: Search by status
          items:
            enum:
              - OPEN
              - PROCESSING
              - DONE
              - FAILED
              - CANCELED
              - OBSOLETE
              - WAITING_FOR_INPUT
            type: string
          type: array
        notEq:
          description: Search by status
          enum:
            - OPEN
            - PROCESSING
            - DONE
            - FAILED
            - CANCELED
            - OBSOLETE
            - WAITING_FOR_INPUT
          type: string
      title: ShipmentParcelsParcelStatusEnumFilter
      type: object
      description: ShipmentParcelsParcelStatusEnumFilter
    ShipmentPatchActions:
      properties:
        actions:
          items:
            $ref: '#/components/schemas/ModifyShipment'
          minItems: 1
          type: array
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          format: int64
          type: integer
      required:
        - version
        - actions
      type: object
      xml:
        name: ShipmentPatchActions
      title: ShipmentPatchActions
      description: ShipmentPatchActions
    ShipmentSearchPayload:
      properties:
        after:
          deprecated: false
          description: >-
            The cursor to start after. The value is provided in the
            `pageInfo.endCursor` field of the response.
          type: string
        options:
          $ref: '#/components/schemas/SearchOptions'
        query:
          $ref: '#/components/schemas/ShipmentSearchQueryWrapper'
        size:
          default: 20
          description: Number of items to return.
          maximum: 250
          minimum: 1
          type: number
        sort:
          description: Use for sorting the result.
          items:
            $ref: '#/components/schemas/ShipmentSort'
          maxItems: 1
          minItems: 1
          type: array
        startAfterId:
          deprecated: true
          description: >-
            The ID to start after. Deprecated, use `after` with the value
            provided in `pageInfo.endCursor` instead.
          type: string
      required:
        - query
      title: ShipmentSearchPayload
      type: object
      description: ShipmentSearchPayload
    ShipmentSearchQuery:
      properties:
        and:
          items:
            $ref: '#/components/schemas/ShipmentSearchQuery'
          type: array
        anonymized:
          allOf:
            - $ref: '#/components/schemas/BooleanFilter'
          description: Search by anonymized
        carrierKey:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by carrierKey
        carrierRef:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by carrierRef
        created:
          allOf:
            - $ref: '#/components/schemas/DateFilter'
          description: >-
            Search entries by created. Applying a narrow and well-considered
            filter value is strongly recommended, as it can greatly improve
            response times, especially when working with large datasets.
        facilityRef:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by facilityRef
        id:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by id
        or:
          items:
            $ref: '#/components/schemas/ShipmentSearchQuery'
          type: array
        parcels:
          allOf:
            - $ref: '#/components/schemas/ShipmentParcelsListFilter'
          description: Nested list search by parcels
        pickJobRef:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by pickJobRef
        status:
          allOf:
            - $ref: '#/components/schemas/ShipmentStatusEnumFilter'
          description: Search by status
        targetTime:
          allOf:
            - $ref: '#/components/schemas/DateFilter'
          description: Search by targetTime
        tenantOrderId:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by tenantOrderId
      title: ShipmentSearchQuery
      type: object
      description: ShipmentSearchQuery
    ShipmentSearchQueryWrapper:
      properties:
        and:
          items:
            $ref: '#/components/schemas/ShipmentSearchQuery'
          type: array
        anonymized:
          allOf:
            - $ref: '#/components/schemas/BooleanFilter'
          description: Search by anonymized
        carrierKey:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by carrierKey
        carrierRef:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by carrierRef
        created:
          allOf:
            - $ref: '#/components/schemas/DateFilter'
          description: Search by created
        facilityRef:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by facilityRef
        id:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by id
        or:
          items:
            $ref: '#/components/schemas/ShipmentSearchQuery'
          type: array
        parcels:
          allOf:
            - $ref: '#/components/schemas/ShipmentParcelsListFilter'
          description: Nested list search by parcels
        pickJobRef:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by pickJobRef
        status:
          allOf:
            - $ref: '#/components/schemas/ShipmentStatusEnumFilter'
          description: Search by status
        targetTime:
          allOf:
            - $ref: '#/components/schemas/DateFilter'
          description: Search by targetTime
        tenantOrderId:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by tenantOrderId
      required:
        - created
      title: ShipmentSearchQueryWrapper
      type: object
      description: ShipmentSearchQueryWrapper
    ShipmentSort:
      properties:
        created:
          enum:
            - ASC
            - DESC
          type: string
        targetTime:
          enum:
            - ASC
            - DESC
          type: string
      title: ShipmentSort
      type: object
      description: ShipmentSort
    ShipmentSplitLineItemsActionEnum:
      enum:
        - SPLIT_LINE_LINES_SHIPMENT
      type: string
      title: ShipmentSplitLineItemsActionEnum
      description: ShipmentSplitLineItemsActionEnum
    ShipmentSplitLineItemsActionParameter:
      additionalProperties: false
      properties:
        name:
          $ref: '#/components/schemas/ShipmentSplitLineItemsActionEnum'
        splitLineItemsInfo:
          items:
            $ref: '#/components/schemas/ShipmentSplitLineItemsInfo'
          type: array
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          type: integer
      required:
        - name
        - version
        - splitLineItemsInfo
      title: ShipmentSplitLineItemsActionParameter
      type: object
      description: ShipmentSplitLineItemsActionParameter
    ShipmentSplitLineItemsInfo:
      additionalProperties: false
      properties:
        lineItemId:
          description: references the id of the item of a shipment
          type: string
        quantity:
          description: quantity of the specific item that has been shipped
          example: 21
          minimum: 1
          type: integer
      required:
        - lineItemId
        - quantity
      type: object
      title: ShipmentSplitLineItemsInfo
      description: ShipmentSplitLineItemsInfo
    ShipmentStatus:
      description: >-
        Every newly created shipment is in state INITIAL. When the parcel labels
        should be requested the state changes to REQUEST and as soon as all
        parcel labels are successfully requested the state changes to CONFIRMED.
        The state COMPLETED is set in the end or the process
      enum:
        - INITIAL
        - REQUEST
        - RETRYABLE
        - CONFIRMED
        - COMPLETED
        - CANCELED
        - OBSOLETE
      type: string
      title: ShipmentStatus
    ShipmentStatusEnumFilter:
      properties:
        eq:
          description: Search by status
          enum:
            - INITIAL
            - REQUEST
            - RETRYABLE
            - CONFIRMED
            - COMPLETED
            - CANCELED
            - OBSOLETE
          type: string
        in:
          description: Search by status
          items:
            enum:
              - INITIAL
              - REQUEST
              - RETRYABLE
              - CONFIRMED
              - COMPLETED
              - CANCELED
              - OBSOLETE
            type: string
          type: array
        notEq:
          description: Search by status
          enum:
            - INITIAL
            - REQUEST
            - RETRYABLE
            - CONFIRMED
            - COMPLETED
            - CANCELED
            - OBSOLETE
          type: string
      title: ShipmentStatusEnumFilter
      type: object
      description: ShipmentStatusEnumFilter
    ShipmentWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          $ref: '#/components/schemas/Shipment'
      required:
        - payload
      type: object
      title: ShipmentWebHookEvent
      description: ShipmentWebHookEvent
    ShipmentWithSearchPath:
      allOf:
        - $ref: '#/components/schemas/Shipment'
        - additionalProperties: false
          properties:
            searchPaths:
              items:
                type: string
              minItems: 0
              type: array
          type: object
      title: ShipmentWithSearchPath
      description: ShipmentWithSearchPath
    ShippingCosts:
      additionalProperties: false
      properties:
        packageCosts:
          description: Costs of the individual packaging units
          items:
            $ref: '#/components/schemas/PackageCost'
          type: array
        totalTransportCost:
          description: Combined total costs of all packagingUnits
          example: 0.99
          type: number
      required:
        - totalTransportCost
      type: object
      title: ShippingCosts
      description: ShippingCosts
    ShortPickReason:
      additionalProperties: false
      properties:
        reasonLocalized:
          $ref: '#/components/schemas/LocaleString'
          description: Localized reason
          example: '{ en_US: ''SomeName'' }'
        active:
          description: Flag to mark a reason as active or inactive
          example: true
          type: boolean
        reason:
          description: translated reasonLocalized according to the given locale
          type: string
      required:
        - active
        - reasonLocalized
      title: ShortPickReason
      description: ShortPickReason
    ShortPickReasonForUpsert:
      additionalProperties: false
      properties:
        reasonLocalized:
          $ref: '#/components/schemas/LocaleString'
      type: object
      title: ShortPickReasonForUpsert
      description: ShortPickReasonForUpsert
    SortDirection:
      enum:
        - ASCENDING
        - DESCENDING
      type: string
      title: SortDirection
      description: SortDirection
    SortParameter:
      properties:
        sortDirection:
          $ref: '#/components/schemas/SortDirection'
        sortParameterName:
          $ref: '#/components/schemas/SortParameterName'
      required:
        - sortDirection
        - sortParameterName
      type: object
      title: SortParameter
      description: SortParameter
    SortParameterName:
      enum:
        - NAME
        - ADDRESS
        - STATUS
        - OPERATIVESTATUS
        - SERVICETYPE
        - ORDEREDAMOUNT
        - ORDERDATE
        - ORDERID
      type: string
      title: SortParameterName
      description: SortParameterName
    SourcingOption:
      properties:
        estimatedDeliveryDate:
          description: Estimated delivery date in format YYYY-MM-DD.
          example: 2025-02-05T00:00:00.000Z
          format: date
          pattern: ^\d{4}-\d{2}-\d{2}$
          type: string
        id:
          type: string
        listingDetails:
          items:
            $ref: '#/components/schemas/SourcingOptionListingDetails'
          type: array
        nodes:
          items:
            $ref: '#/components/schemas/SourcingOptionNode'
          type: array
        nonAssignedOrderLineItems:
          items:
            $ref: '#/components/schemas/HandledItem'
          type: array
        ratingResults:
          items:
            $ref: '#/components/schemas/RatingResult'
          type: array
        runId:
          type: string
        totalCosts:
          $ref: '#/components/schemas/SourcingOptionCosts'
        totalPenalty:
          description: The total calculated penalty we calculated for this option
          example: 187
          type: number
        transfers:
          items:
            $ref: '#/components/schemas/SourcingOptionTransfer'
          type: array
        validUntil:
          description: >-
            The latest date at which this option is still valid in UTC (ISO8601
            format).
          type: string
      required:
        - id
        - runId
        - totalPenalty
        - nodes
        - transfers
        - ratingResults
      type: object
      title: SourcingOption
      description: SourcingOption
    SourcingOptionCosts:
      additionalProperties: false
      properties:
        cost:
          description: Combined total costs of a solution
          example: 10.99
          type: number
        currency:
          description: currency as 3 letter iso code
          example: EUR
          pattern: ^[A-Z]{3}$
          type: string
        salesPrices:
          description: >-
            Sales prices and applied discounts of the individual items in the
            solution. Only present if costComponentRating is enabled.
          items:
            $ref: '#/components/schemas/SourcingOptionSalesPrice'
          type: array
        totalSalesPrice:
          description: Sum of all sales prices of the items in the solution
          example: 10
          type: number
        totalShippingCosts:
          $ref: '#/components/schemas/ShippingCosts'
      required:
        - total
        - salesPrices
      type: object
      title: SourcingOptionCosts
      description: SourcingOptionCosts
    SourcingOptionListingDetails:
      properties:
        customAttributes:
          additionalProperties: true
          type: object
        facilityRef:
          example: abcd-efgh-ijkl-mnop
          type: string
        tenantArticleId:
          example: CGN-4711
          type: string
      title: SourcingOptionListingDetails
      description: SourcingOptionListingDetails
    SourcingOptionNode:
      properties:
        facilityRef:
          example: DE-FAC-4711
          type: string
        id:
          description: id of this node, unique for this Sourcing Option Responses
          example: f439e7b6-119e-47cc-a263-05a31baea0de
          type: string
        lineItems:
          items:
            $ref: '#/components/schemas/HandledItem'
          type: array
        tenantFacilityId:
          example: DE-FAC-4711
          type: string
        type:
          $ref: '#/components/schemas/NodeType'
      required:
        - id
        - type
        - lineItems
      type: object
      title: SourcingOptionNode
      description: SourcingOptionNode
    SourcingOptionSalesPrice:
      additionalProperties: false
      properties:
        amount:
          description: The amount of the item in the solution
          example: 1
          type: number
        discount:
          items:
            oneOf:
              - $ref: '#/components/schemas/FacilityDiscountRelative'
              - $ref: '#/components/schemas/FacilityDiscountAbsoluteForCreation'
          type: array
        salesPricePerUnitWithDiscount:
          description: The sales price of the item after discount has been applied
          example: 9.5
          type: number
        salesPricePerUnitWithoutDiscount:
          description: The sales price of the item
          example: 10
          type: number
        sourceFacilityRef:
          description: The facility reference of the source facility
          example: DE-FAC-4711
          type: string
        sourceTenantFacilityId:
          description: The tenant facility id of the source facility
          example: facility-east
          type: string
        tenantArticleId:
          description: The tenant article id of the item
          example: DE-ZGT-4711
          type: string
      required:
        - tenantArticleId
        - salesPricePerUnitWithoutDiscount
        - amount
        - sourceFacilityRef
      type: object
      title: SourcingOptionSalesPrice
      description: SourcingOptionSalesPrice
    SourcingOptionsExecutionResults:
      properties:
        totalRatingResults:
          items:
            $ref: '#/components/schemas/SourcingOptionTotalRatingResult'
          type: array
      type: object
      title: SourcingOptionsExecutionResults
      description: SourcingOptionsExecutionResults
    SourcingOptionsRequest:
      properties:
        additionalInfo:
          $ref: '#/components/schemas/SourcingOptionsRequestAdditionalInfo'
        optimizationHints:
          $ref: '#/components/schemas/OptimizationHints'
        order:
          $ref: '#/components/schemas/OrderForSourcingOptionsRequest'
        resourceInvestment:
          $ref: '#/components/schemas/ResourceInvestment'
      required:
        - order
      type: object
      title: SourcingOptionsRequest
      description: SourcingOptionsRequest
    SourcingOptionsRequestAdditionalInfo:
      properties:
        includeListingCustomAttributes:
          default: false
          description: >-
            If true, the listing custom attributes are included in the response.
            This is useful for debugging purposes.
          type: boolean
      type: object
      title: SourcingOptionsRequestAdditionalInfo
      description: SourcingOptionsRequestAdditionalInfo
    SourcingOptionsResponse:
      properties:
        id:
          example: 284f32cc-b106-487d-b633-f90d93d8c251
          type: string
        result:
          $ref: '#/components/schemas/SourcingOptionsResult'
      required:
        - id
        - result
      type: object
      title: SourcingOptionsResponse
      description: SourcingOptionsResponse
    SourcingOptionsResult:
      properties:
        options:
          items:
            $ref: '#/components/schemas/SourcingOption'
          type: array
      required:
        - options
      type: object
      title: SourcingOptionsResult
      description: SourcingOptionsResult
    SourcingOptionsTransferDeliverCostCoefficient:
      properties:
        measurementUnit:
          enum:
            - GRAM
          type: string
        value:
          type: number
      required:
        - value
        - measurementUnit
      type: object
      title: SourcingOptionsTransferDeliverCostCoefficient
      description: SourcingOptionsTransferDeliverCostCoefficient
    SourcingOptionsTransferDeliveryCost:
      properties:
        currency:
          type: string
        decimalPlaces:
          type: number
        deliveryCostCoefficient:
          $ref: '#/components/schemas/SourcingOptionsTransferDeliverCostCoefficient'
        value:
          type: number
      required:
        - value
        - currency
      type: object
      title: SourcingOptionsTransferDeliveryCost
      description: SourcingOptionsTransferDeliveryCost
    SourcingOptionsTransferPackagingInformation:
      properties:
        costs:
          type: number
        packagingUnit:
          $ref: '#/components/schemas/SourcingOptionsTransferPackagingUnit'
        packedItems:
          items:
            $ref: '#/components/schemas/HandledItem'
          type: array
      required:
        - packagingUnit
        - costs
        - packedItems
      type: object
      title: SourcingOptionsTransferPackagingInformation
      description: SourcingOptionsTransferPackagingInformation
    SourcingOptionsTransferPackagingUnit:
      properties:
        dimensions:
          $ref: '#/components/schemas/SourcingOptionsTransferPackagingUnitDimensions'
        maxItemQuantity:
          description: >-
            The maximum number of items that can be packed in this packaging
            unit
          example: 10
          type: integer
        name:
          example: Small Box
          type: string
        prices:
          items:
            $ref: '#/components/schemas/SourcingOptionsTransferDeliveryCost'
          type: array
        priority:
          description: The priority of this packaging unit, lower values are preferred
          example: 1
          type: integer
        transitTime:
          $ref: '#/components/schemas/SourcingOptionsTransferTransitTime'
        volumeBufferInPercent:
          description: The volume buffer in percent for this packaging unit
          example: 10
          type: number
      required:
        - name
        - priority
      type: object
      title: SourcingOptionsTransferPackagingUnit
      description: SourcingOptionsTransferPackagingUnit
    SourcingOptionsTransferPackagingUnitDimensions:
      properties:
        height:
          type: number
        length:
          type: number
        maxWeightInGram:
          type: number
        width:
          type: number
      type: object
      title: SourcingOptionsTransferPackagingUnitDimensions
      description: SourcingOptionsTransferPackagingUnitDimensions
    SourcingOptionsTransferTransitTime:
      properties:
        maxTransitDays:
          type: number
        minTransitDays:
          type: number
      required:
        - minTransitDays
        - maxTransitDays
      type: object
      title: SourcingOptionsTransferTransitTime
      description: SourcingOptionsTransferTransitTime
    SourcingOptionTotalRatingResult:
      properties:
        avgPenalty:
          type: number
        id:
          type: string
        maxPenalty:
          type: number
        minPenalty:
          type: number
      required:
        - id
        - minPenalty
        - maxPenalty
        - avgPenalty
      type: object
      title: SourcingOptionTotalRatingResult
      description: SourcingOptionTotalRatingResult
    SourcingOptionTransfer:
      properties:
        carrier:
          properties:
            carrierKey:
              type: string
            carrierName:
              type: string
          type: object
        facilityConnectionRef:
          example: f439e7b6-119e-47cc-a263-05a31baea0de
          type: string
        lineItems:
          items:
            $ref: '#/components/schemas/HandledItem'
          type: array
        packagingInformation:
          items:
            $ref: '#/components/schemas/SourcingOptionsTransferPackagingInformation'
          type: array
        sourceNodeRef:
          example: f439e7b6-119e-47cc-a263-05a31baea0de
          type: string
        targetNodeRef:
          example: ad6c5038-15ee-41b8-a180-4c86290d04c3
          type: string
        timeLine:
          $ref: '#/components/schemas/TransferTimeLine'
      required:
        - sourceNodeRef
        - targetNodeRef
        - lineItems
        - packagingInformation
      type: object
      title: SourcingOptionTransfer
      description: SourcingOptionTransfer
    SplitInformation:
      properties:
        splitCount:
          type: number
        splittedItems:
          items:
            $ref: '#/components/schemas/AssignmentItem'
          type: array
        targetFacility:
          $ref: '#/components/schemas/DecisionLogFacilityInfo'
        targetRoutingPlanRef:
          type: string
      required:
        - splitCount
        - targetRoutingPlanRef
        - splittedItems
      title: SplitInformation
      description: SplitInformation
    SplitResultType:
      enum:
        - SPLIT
        - DO_NOT_SPLIT
        - DO_NOT_SPLIT_USE_BEST_RATED
        - DO_NOT_SPLIT_BECAUSE_AVAILABILITY_USE_BEST_RATED
        - DO_NOT_SPLIT_USE_BEST_AVAILABLE
        - REASSIGN_TO_PARENT
        - REASSIGN_TO_PARENT_COMPLETELY
        - FAIL
        - INVALID_SPLIT
        - PARK_IN_WAITING_ROOM
      title: SplitResultType
      description: SplitResultType
    Stack:
      additionalProperties: false
      allOf:
        - $ref: '#/components/schemas/StackForCreation'
      properties:
        created:
          description: >-
            The date this entity was created at the platform. This value is
            generated by the service.
          example: 2020-02-03T08:45:51.525Z
          format: date-time
          type: string
        id:
          type: string
        lastModified:
          description: >-
            The date this entity was modified last. This value is generated by
            the service.
          example: 2020-02-03T09:45:51.525Z
          format: date-time
          type: string
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          format: int64
          type: integer
      required:
        - id
        - version
        - created
        - lastModified
        - facilityRef
        - processRef
      type: object
      title: Stack
      description: Stack
    StackForCreation:
      additionalProperties: false
      properties:
        facilityRefs:
          description: Linked Facilities through reference
          items:
            type: string
          type: array
        processRefs:
          description: Linked Processes through reference
          items:
            type: string
          type: array
      required:
        - facilityRefs
        - processRefs
      type: object
      title: StackForCreation
      description: StackForCreation
    StacksResponse:
      additionalProperties: false
      properties:
        stacks:
          items:
            $ref: '#/components/schemas/Stack'
          type: array
        total:
          description: total number for the given filter
          type: integer
      required:
        - stacks
        - total
      title: StacksResponse
      description: StacksResponse
    StartItemReturnActionEnum:
      enum:
        - StartItemReturn
      type: string
      title: StartItemReturnActionEnum
      description: StartItemReturnActionEnum
    StartItemReturnActionParameter:
      additionalProperties: false
      description: Action to start an ItemReturn.
      properties:
        itemReturnJobVersion:
          description: Version of the entity to be changed
          minimum: 0
          type: integer
        name:
          $ref: '#/components/schemas/StartItemReturnActionEnum'
      required:
        - name
        - itemReturnJobVersion
      title: StartItemReturnActionParameter
    StartItemReturnJobActionEnum:
      enum:
        - StartItemReturnJob
      type: string
      title: StartItemReturnJobActionEnum
      description: StartItemReturnJobActionEnum
    StartItemReturnJobActionParameter:
      additionalProperties: false
      description: Action to start a ItemReturnJob.
      properties:
        name:
          $ref: '#/components/schemas/StartItemReturnJobActionEnum'
        version:
          description: Version of the entity to be changed
          minimum: 0
          type: integer
      required:
        - name
        - version
      title: StartItemReturnJobActionParameter
    StartPickRun:
      allOf:
        - $ref: '#/components/schemas/AbstractModificationAction'
        - additionalProperties: false
          properties:
            action:
              description: Use value 'StartPickRun', because you want to start a pickrun
              enum:
                - StartPickRun
              type: string
          required:
            - action
          type: object
      deprecated: true
      description: >-
        This part of the API is deprecated. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />@deprecated Use api/pickruns/:id/actions instead
      title: StartPickRun
      xml:
        name: StartPickRun
    StartStowJobAction:
      description: Sets the status of the stowjob to IN_PROGRESS
      properties:
        name:
          description: The name of the action that should be performed
          enum:
            - START_STOW_JOB
          type: string
        version:
          description: The current version of the stow job that should be modified
          type: number
      required:
        - version
        - name
      title: StartStowJobAction
      type: object
    Status:
      additionalProperties: false
      properties:
        status:
          description: The current state of the API
          enum:
            - UP
            - DEGRADED
            - DOWN
          type: string
      required:
        - status
      type: object
      xml:
        name: Status
      title: Status
      description: Status
    StatusReason:
      additionalProperties: false
      properties:
        reasonLocalized:
          $ref: '#/components/schemas/LocaleString'
        reason:
          description: translated reason selected from reasonLocalized
          example: Broken Item
          type: string
      required:
        - reasonLocalized
      type: object
      title: StatusReason
      description: StatusReason
    StatusReasonInternal:
      additionalProperties: false
      properties:
        cancelReasonLocalized:
          $ref: '#/components/schemas/LocaleString'
      required:
        - cancelReasonLocalized
      type: object
      title: StatusReasonInternal
      description: StatusReasonInternal
    Sticker:
      additionalProperties: false
      properties:
        nameLocalized:
          $ref: '#/components/schemas/LocaleString'
          description: >-
            Dictionary of possible translations, min 1 entry, max 14 characters
            per description
          example: '{ en_US: ''SomeName'' }'
        color:
          description: optional color coding for the sticker
          example: '#19b6b5'
          type: string
        key:
          description: unique identifier
          example: LGMl2DuvPnfPoSHhYFOm
          type: string
        name:
          description: Translated display name
          example: SomeName
          type: string
        priority:
          description: priority of the given sticker
          example: 100
          format: int64
          maximum: 10000
          minimum: 1
          type: integer
      required:
        - key
        - nameLocalized
        - priority
      title: Sticker
      description: Sticker
    StickerConfiguration:
      additionalProperties: false
      properties:
        offeredStickersByTag:
          items:
            $ref: '#/components/schemas/OfferedStickersByTag'
          type: array
      title: StickerConfiguration
      description: StickerConfiguration
    Stock:
      properties:
        available:
          type: number
        availableUntil:
          description: >-
            defines until when a stock is included in the stock availability as
            available and used for routing
          format: date-time
          type: string
        conditions:
          description: |-
            Describes conditions of a stock
                *`DEFECTIVE` - stock is defective, not usable for customer orders
          items:
            enum:
              - DEFECTIVE
            type: string
          type: array
        created:
          format: date-time
          type: string
        customAttributes:
          description: >-
            Attributes that can be added to this entity. These attributes
            **cannot** be used within fulfillment processes, but enable you to
            attach custom data from your systems to fulfillmenttools entities.
          nullable: true
          type: object
        facility:
          $ref: '#/components/schemas/StockFacilityReferences'
        facilityRef:
          description: facility in which the stock is located
          type: string
        facilityWideReserved:
          deprecated: true
          type: number
        id:
          type: string
        lastModified:
          format: date-time
          type: string
        locationRef:
          description: location on which the stock is placed
          type: string
        properties:
          additionalProperties:
            type: string
          allOf:
            - $ref: '#/components/schemas/StockPropertyPreset'
          description: >-
            allow tracking of specific values such as expiry dates on a set of
            items. They should describe physical identifiable properties of the
            stock and are not meant to be used for metadata (see
            "customAttributes" for that).
        receiptDate:
          description: >-
            date-time when stock has entered the system, defaults to the
            creation date
          format: date-time
          type: string
        reserved:
          description: amount of this stock for customer orders
          type: number
        scannableCodes:
          description: scannableCodes such as barcodes that identify this stock
          items:
            type: string
          type: array
        scores:
          description: >-
            stock with a high score can used preferably over stock with a lower
            score in routing, depending on configuration. The score can
            represent different attributes of the stock like zone, storage
            location, expiry date or receipt date.
          items:
            type: string
          type: array
        serializedProperties:
          description: >-
            properties object serialized as JSON string, sorted alphabetically
            by key
          type: string
        tenantArticleId:
          description: tenantArticleId of the stock
          type: string
        tenantStockId:
          description: >-
            tenantStockId is an optional identifier for the stock in the tenant
            system.
          type: string
        traitConfig:
          description: >-
            defines the traits of the stock, overrules the storage location
            traits
          items:
            $ref: '#/components/schemas/StorageLocationTraitConfigEntry'
          type: array
        traits:
          description: >-
            provide information on how storage locations and stocks are to be
            handled in operational processes. Can only be set via
            storageLocation. 
          items:
            enum:
              - PICKABLE
              - ACCESSIBLE
              - KEEP_ON_ZERO
              - OUTBOUND
              - IN_MOTION
            type: string
          type: array
        value:
          format: int32
          minimum: 0
          type: integer
        version:
          type: number
      required:
        - tenantArticleId
        - value
        - reserved
        - facilityWideReserved
        - facilityRef
        - facility
        - available
        - id
        - version
        - created
        - lastModified
        - traits
        - serializedProperties
      title: Stock
      type: object
      description: Stock
    StockAction:
      properties:
        action:
          description: >-
            Action to be performed on the stock. If a user has specific facility
            context limitations, only stocks located in the referenced
            facilities will be affected
          oneOf:
            - $ref: '#/components/schemas/StockDeleteByLocations'
            - $ref: '#/components/schemas/StockDeleteByProducts'
            - $ref: '#/components/schemas/StockDeleteByIds'
            - $ref: '#/components/schemas/StockMoveToLocation'
        actions:
          deprecated: true
          description: Deprecated. Use 'action' with a single action input instead.
          items:
            oneOf:
              - $ref: '#/components/schemas/StockDeleteByLocations'
              - $ref: '#/components/schemas/StockDeleteByProducts'
              - $ref: '#/components/schemas/StockDeleteByIds'
          maxItems: 10
          type: array
      title: StockAction
      type: object
      description: StockAction
    StockActionResult:
      properties:
        name:
          enum:
            - DELETE_BY_LOCATIONS
            - DELETE_BY_PRODUCTS
            - DELETE_BY_IDS
            - MOVE_TO_LOCATION
          type: string
        result:
          oneOf:
            - $ref: '#/components/schemas/StockDeleteActionResult'
            - $ref: '#/components/schemas/StockMoveToLocationActionResult'
      required:
        - name
        - result
      title: StockActionResult
      type: object
      description: StockActionResult
    StockConditionEnumFilter:
      properties:
        eq:
          description: Search by conditions
          enum:
            - DEFECTIVE
          type: string
        in:
          description: Search by conditions
          items:
            enum:
              - DEFECTIVE
            type: string
          type: array
        notEq:
          description: Search by conditions
          enum:
            - DEFECTIVE
          type: string
      title: StockConditionEnumFilter
      type: object
      description: StockConditionEnumFilter
    StockConditionEnumListFilter:
      properties:
        contains:
          allOf:
            - $ref: '#/components/schemas/StockConditionEnumFilter'
          description: Search by conditions
      title: StockConditionEnumListFilter
      type: object
      description: StockConditionEnumListFilter
    StockConfiguration:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        id:
          type: string
        stockModificationEnabled:
          default: true
          deprecated: true
          description: >-
            This part of the API is deprecated. For details please check the <a
            href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
            target="_blank">api-release-life-cycle documentation</a>.<br /><br
            />@deprecated Indicates if manual stock modification is allowed -
            will be moved to remoteConfig
          example: true
          type: boolean
      required:
        - stockModificationEnabled
      type: object
      xml:
        name: StockConfiguration
      title: StockConfiguration
      description: StockConfiguration
    StockConfigurationPatchActions:
      properties:
        actions:
          items:
            anyOf:
              - $ref: '#/components/schemas/ModifyRetainedOfflineStock'
              - $ref: '#/components/schemas/ModifyListingReactivationAfter'
              - $ref: '#/components/schemas/ModifyShortpick'
          minItems: 1
          type: array
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          format: int64
          type: integer
      required:
        - version
        - actions
      type: object
      xml:
        name: FacilityPatchActions
      title: StockConfigurationPatchActions
      description: StockConfigurationPatchActions
    StockDeleteActionResult:
      properties:
        ids:
          items:
            type: string
          type: array
      required:
        - ids
      title: StockDeleteActionResult
      type: object
      description: StockDeleteActionResult
    StockDeleteByIds:
      properties:
        ids:
          items:
            type: string
          maxItems: 500
          type: array
        name:
          enum:
            - DELETE_BY_IDS
          type: string
      required:
        - name
        - ids
      title: StockDeleteByIds
      type: object
      description: StockDeleteByIds
    StockDeleteByLocations:
      properties:
        locationRefs:
          items:
            type: string
          maxItems: 500
          type: array
        name:
          enum:
            - DELETE_BY_LOCATIONS
          type: string
      required:
        - name
        - locationRefs
      title: StockDeleteByLocations
      type: object
      description: StockDeleteByLocations
    StockDeleteByProducts:
      properties:
        facilityRef:
          type: string
        name:
          enum:
            - DELETE_BY_PRODUCTS
          type: string
        tenantArticleIds:
          items:
            type: string
          maxItems: 500
          type: array
      required:
        - name
        - facilityRef
        - tenantArticleIds
      title: StockDeleteByProducts
      type: object
      description: StockDeleteByProducts
    StockDistribution:
      properties:
        facilityStocks:
          items:
            $ref: '#/components/schemas/FacilityStockDistribution'
          type: array
        summary:
          $ref: '#/components/schemas/StockSummaryDetails'
        tenantArticleId:
          type: string
      required:
        - tenantArticleId
        - summary
        - facilityStocks
      title: StockDistribution
      type: object
      description: StockDistribution
    StockFacilityReferences:
      properties:
        facilityRef:
          description: facility in which the stock is located
          type: string
        tenantFacilityId:
          description: tenantFacilityId in which the stock is located
          type: string
      required:
        - facilityRef
      title: StockFacilityReferences
      type: object
      description: StockFacilityReferences
    StockForCreation:
      properties:
        availableUntil:
          description: >-
            defines until when a stock is included in the stock availability as
            available and used for routing
          format: date-time
          type: string
        conditions:
          description: |-
            Describes conditions of a stock
                *`DEFECTIVE` - stock is defective, not usable for customer orders
          items:
            enum:
              - DEFECTIVE
            type: string
          type: array
        customAttributes:
          description: >-
            Attributes that can be added to this entity. These attributes
            **cannot** be used within fulfillment processes, but enable you to
            attach custom data from your systems to fulfillmenttools entities.
          nullable: true
          type: object
        facility:
          description: >-
            Selector for the facility. Either a facility reference or a tenant
            facility ID must be provided.
          oneOf:
            - $ref: '#/components/schemas/FacilityRefSelector'
            - $ref: '#/components/schemas/TenantFacilityIdSelector'
        facilityRef:
          deprecated: true
          description: >-
            facility in which the stock is located - fill with either
            facilityRef or tenantFacilityId - Deprecated: use facility object
            instead
          type: string
        locationRef:
          description: location on which the stock is placed
          type: string
        properties:
          allOf:
            - $ref: '#/components/schemas/StockPropertyPreset'
            - additionalProperties:
                type: string
              type: object
          description: >-
            allow tracking of specific values such as expiry dates on a set of
            items. They should describe physical identifiable properties of the
            stock and are not meant to be used for metadata (see
            "customAttributes" for that).
        receiptDate:
          description: >-
            date-time when stock has entered the system, defaults to the
            creation date
          format: date-time
          type: string
        tenantArticleId:
          description: tenantArticleId of the stock
          type: string
        tenantFacilityId:
          deprecated: true
          description: >-
            tenantFacilityId in which the stock is located - fill with either
            facilityRef or tenantFacilityId - Deprecated: use facility object
            instead
          type: string
        tenantStockId:
          description: >-
            tenantStockId is an optional identifier for the stock in the tenant
            system.
          type: string
        traitConfig:
          description: >-
            defines the traits of the stock, overrules the storage location
            traits
          items:
            $ref: '#/components/schemas/StorageLocationTraitConfigEntry'
          type: array
        value:
          format: int32
          minimum: 0
          type: integer
      required:
        - tenantArticleId
        - value
      title: StockForCreation
      type: object
      description: StockForCreation
    StockForUpdate:
      properties:
        conditions:
          description: |-
            Describes conditions of a stock
                *`DEFECTIVE` - stock is defective, not usable for customer orders
          items:
            enum:
              - DEFECTIVE
            type: string
          type: array
        customAttributes:
          description: >-
            Attributes that can be added to this entity. These attributes
            **cannot** be used within fulfillment processes, but enable you to
            attach custom data from your systems to fulfillmenttools entities.
          nullable: true
          type: object
        locationRef:
          nullable: true
          type: string
        tenantStockId:
          description: >-
            tenantStockId is an optional identifier for the stock in the tenant
            system.
          type: string
        traitConfig:
          description: >-
            defines the traits of the stock, overrules the storage location
            traits
          items:
            $ref: '#/components/schemas/StorageLocationTraitConfigEntry'
          type: array
        value:
          format: int32
          minimum: 0
          type: integer
        version:
          type: number
      required:
        - value
        - version
      title: StockForUpdate
      type: object
      description: StockForUpdate
    StockForUpsertUpdate:
      properties:
        conditions:
          description: |-
            Describes conditions of a stock
                *`DEFECTIVE` - stock is defective, not usable for customer orders
          items:
            enum:
              - DEFECTIVE
            type: string
          type: array
        customAttributes:
          description: >-
            Attributes that can be added to this entity. These attributes
            **cannot** be used within fulfillment processes, but enable you to
            attach custom data from your systems to fulfillmenttools entities.
          nullable: true
          type: object
        id:
          type: string
        locationRef:
          nullable: true
          type: string
        tenantStockId:
          description: >-
            tenantStockId is an optional identifier for the stock in the tenant
            system.
          type: string
        traitConfig:
          description: >-
            defines the traits of the stock, overrules the storage location
            traits
          items:
            $ref: '#/components/schemas/StorageLocationTraitConfigEntry'
          type: array
        value:
          format: int32
          minimum: 0
          type: integer
        version:
          type: number
      required:
        - value
        - id
        - version
      title: StockForUpsertUpdate
      type: object
      description: StockForUpsertUpdate
    StockInformation:
      allOf:
        - $ref: '#/components/schemas/StockInformationForCreation'
        - properties:
            available:
              description: The actual available amount for this stock
              example: 24
              minimum: 0
              multipleOf: 1
              type: number
            reserved:
              example: 24
              minimum: 0
              multipleOf: 1
              type: number
      description: '@deprecated This object is deprecated since 11th of September 2023.'
      required:
        - available
      type: object
      title: StockInformation
    StockInformationForCreation:
      deprecated: true
      description: >-
        @deprecated This object is deprecated since 30th of November 2023. This
        object carries information about the current stock of this listing.
      properties:
        reserved:
          deprecated: true
          description: >-
            This part of the API is deprecated. For details please check the <a
            href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
            target="_blank">api-release-life-cycle documentation</a>.<br /><br
            />@deprecated This field is deprecated since 8th of February 2023.

            Reserved can't be overridden by the API, because its internally now
            handled by open PickJobs (or other upcoming ways to reserve Stock)

            Any Value provided will be ignored upon arrival.
          example: 24
          minimum: 0
          multipleOf: 1
          type: number
        stock:
          description: >-
            This the amount of the given article that is in stock for the given
            facility
          example: 42
          minimum: 0
          multipleOf: 1
          type: number
      required:
        - stock
      type: object
      title: StockInformationForCreation
    StockMoveToLocation:
      properties:
        amount:
          type: number
        fromStockId:
          type: string
        name:
          enum:
            - MOVE_TO_LOCATION
          type: string
        options:
          $ref: '#/components/schemas/MoveStockToLocationOptions'
        toLocationRef:
          type: string
      required:
        - name
        - fromStockId
        - toLocationRef
        - amount
      title: StockMoveToLocation
      type: object
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br
        />StockMoveToLocation
      x-badges:
        - color: orange
          label: BETA
    StockMoveToLocationActionResult:
      properties:
        fromStock:
          $ref: '#/components/schemas/Stock'
        toStock:
          $ref: '#/components/schemas/Stock'
      required:
        - toStock
      title: StockMoveToLocationActionResult
      type: object
      description: StockMoveToLocationActionResult
    StockPaginatedResult:
      properties:
        pageInfo:
          allOf:
            - $ref: '#/components/schemas/PageInfo'
          description: Pagination information for the search result.
        stocks:
          items:
            $ref: '#/components/schemas/Stock'
          type: array
        total:
          description: >-
            The total number of items matching the search criteria. Only filled,
            if withTotal is set to true in the search options.
          minimum: 0
          type: number
      required:
        - pageInfo
        - stocks
      title: StockPaginatedResult
      type: object
      description: StockPaginatedResult
    StockPropertyDefinition:
      properties:
        defaultValue:
          description: >-
            This part of the API is in Alpha status. For details please check
            the <a
            href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#alpha"
            target="_blank">api-release-life-cycle documentation</a>.<br /><br
            />If {{NOW}} is provided, this will be replaced with a timestamp.
          type: string
          x-badges:
            - color: red
              label: ALPHA
        inputType:
          $ref: '#/components/schemas/StockPropertyInputType'
        required:
          description: Indicates if this property is required.
          type: boolean
      required:
        - inputType
        - required
      type: object
      title: StockPropertyDefinition
      description: StockPropertyDefinition
    StockPropertyInputType:
      description: Input Type for this property, used for clients.
      enum:
        - DATE
        - TEXT
      example: DATE
      type: string
      title: StockPropertyInputType
    StockPropertyPreset:
      properties:
        expiry:
          type: string
      title: StockPropertyPreset
      type: object
      description: StockPropertyPreset
    StockSearchPayload:
      properties:
        after:
          deprecated: false
          description: >-
            The cursor to start after. The value is provided in the
            `pageInfo.endCursor` field of the response.
          type: string
        options:
          $ref: '#/components/schemas/SearchOptions'
        query:
          $ref: '#/components/schemas/StockSearchQuery'
        size:
          default: 20
          description: Number of items to return.
          maximum: 250
          minimum: 1
          type: number
        sort:
          description: Use for sorting the result.
          items:
            $ref: '#/components/schemas/StockSort'
          maxItems: 1
          minItems: 1
          type: array
        startAfterId:
          deprecated: true
          description: >-
            The ID to start after. Deprecated, use `after` with the value
            provided in `pageInfo.endCursor` instead.
          type: string
      required:
        - query
      title: StockSearchPayload
      type: object
      description: StockSearchPayload
    StockSearchQuery:
      properties:
        and:
          items:
            $ref: '#/components/schemas/StockSearchQuery'
          type: array
        availableUntil:
          allOf:
            - $ref: '#/components/schemas/DateFilter'
          description: Search by availableUntil
        conditions:
          allOf:
            - $ref: '#/components/schemas/StockConditionEnumListFilter'
          description: Search by conditions
        customAttributes:
          additionalProperties:
            anyOf:
              - $ref: '#/components/schemas/BooleanFilter'
              - $ref: '#/components/schemas/StringEqFilter'
              - $ref: '#/components/schemas/NumberEqFilter'
              - $ref: '#/components/schemas/DateFilter'
          description: Search by custom attributes
          type: object
        facilityRef:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by facilityRef
        id:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by id
        locationRef:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by locationRef
        or:
          items:
            $ref: '#/components/schemas/StockSearchQuery'
          type: array
        properties:
          additionalProperties:
            anyOf:
              - $ref: '#/components/schemas/StringFilter'
              - $ref: '#/components/schemas/DateFilter'
              - $ref: '#/components/schemas/KeyExistsFilter'
          description: Search by properties
          type: object
        receiptDate:
          allOf:
            - $ref: '#/components/schemas/DateFilter'
          description: Search by receiptDate
        scannableCodes:
          allOf:
            - $ref: '#/components/schemas/StringListFilter'
          description: Search by scannableCodes
        tenantArticleId:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by tenantArticleId
        tenantFacilityId:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: >-
            tenantFacilityId is handled like facilityRef filter, if you want to
            search by both you should wrap that filter in an "or" filter
        tenantStockId:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by tenantStockId
        traits:
          allOf:
            - $ref: '#/components/schemas/StockStorageLocationTraitEnumListFilter'
          description: Search by traits
        value:
          allOf:
            - $ref: '#/components/schemas/NumberFilter'
          description: Search by value
      title: StockSearchQuery
      type: object
      description: StockSearchQuery
    StocksForUpsert:
      properties:
        stocks:
          description: >-
            Please be sure to include each stock (by ID) only once, when
            updating. Otherwise the whole batch is rejected with an error.
          items:
            oneOf:
              - $ref: '#/components/schemas/StockForCreation'
              - $ref: '#/components/schemas/StockForUpsertUpdate'
              - not:
                  required:
                    - version
                properties:
                  id:
                    type: string
                  locationRef:
                    nullable: true
                    type: string
                  value:
                    format: int32
                    minimum: 0
                    type: integer
                required:
                  - id
                  - value
                type: object
          maxItems: 500
          type: array
      required:
        - stocks
      title: StocksForUpsert
      type: object
      description: StocksForUpsert
    StockSort:
      properties:
        customAttributes:
          additionalProperties: true
          maxProperties: 1
          minProperties: 1
          type: object
        lastModified:
          enum:
            - ASC
            - DESC
          type: string
        locationName:
          enum:
            - ASC
            - DESC
          type: string
        tenantArticleId:
          enum:
            - ASC
            - DESC
          type: string
        value:
          enum:
            - ASC
            - DESC
          type: string
      title: StockSort
      type: object
      description: StockSort
    StockStorageLocationTraitEnumFilter:
      properties:
        eq:
          description: Search by traits
          enum:
            - PICKABLE
            - ACCESSIBLE
            - KEEP_ON_ZERO
            - OUTBOUND
            - IN_MOTION
          type: string
        in:
          description: Search by traits
          items:
            enum:
              - PICKABLE
              - ACCESSIBLE
              - KEEP_ON_ZERO
              - OUTBOUND
              - IN_MOTION
            type: string
          type: array
        notEq:
          description: Search by traits
          enum:
            - PICKABLE
            - ACCESSIBLE
            - KEEP_ON_ZERO
            - OUTBOUND
            - IN_MOTION
          type: string
      title: StockStorageLocationTraitEnumFilter
      type: object
      description: StockStorageLocationTraitEnumFilter
    StockStorageLocationTraitEnumListFilter:
      properties:
        contains:
          allOf:
            - $ref: '#/components/schemas/StockStorageLocationTraitEnumFilter'
          description: Search by traits
      title: StockStorageLocationTraitEnumListFilter
      type: object
      description: StockStorageLocationTraitEnumListFilter
    StockSummaries:
      properties:
        stockSummaries:
          items:
            $ref: '#/components/schemas/StockSummary'
          type: array
        total:
          minimum: 0
          type: number
      required:
        - total
        - stockSummaries
      title: StockSummaries
      type: object
      description: StockSummaries
    StockSummary:
      properties:
        article:
          $ref: '#/components/schemas/StockSummaryArticle'
        details:
          $ref: '#/components/schemas/StockSummaryDetails'
        includedFacilityRefs:
          description: >-
            ALPHA Status!. The facilityRefs that are included in the stock
            summary.
          items:
            type: string
          type: array
      required:
        - includedFacilityRefs
        - article
        - details
      title: StockSummary
      type: object
      description: StockSummary
    StockSummaryArticle:
      properties:
        imageUrl:
          type: string
        tenantArticleId:
          type: string
        title:
          type: string
      required:
        - tenantArticleId
        - title
      title: StockSummaryArticle
      type: object
      description: StockSummaryArticle
    StockSummaryDetails:
      properties:
        available:
          deprecated: true
          description: >-
            This field is deprecated and replaced by new availability concepts.
            Please see
            https://docs.fulfillmenttools.com/api-docs/use-cases/inventory-management/global-inventory/availability
            for more information.
          minimum: 0
          type: number
        availableForPicking:
          type: number
        availableOnStock:
          type: number
        availableToPromise:
          deprecated: true
          description: >-
            This field is deprecated and replaced by new availability concepts.
            Please see
            https://docs.fulfillmenttools.com/api-docs/use-cases/inventory-management/global-inventory/availability
            for more information.
          type: number
        byTrait:
          $ref: '#/components/schemas/ByTrait'
        channelAdjusted:
          items:
            $ref: '#/components/schemas/ChannelStockAvailability'
          type: array
        readyToPick:
          deprecated: true
          description: >-
            This field is deprecated and replaced by new availability concepts.
            Please see
            https://docs.fulfillmenttools.com/api-docs/use-cases/inventory-management/global-inventory/availability
            for more information.
          type: number
        reserved:
          minimum: 0
          type: number
        safetyStock:
          minimum: 0
          type: number
        stockOnHand:
          type: number
        totalAmount:
          minimum: 0
          type: number
      required:
        - reserved
        - totalAmount
        - available
        - safetyStock
        - byTrait
        - availableForPicking
        - availableToPromise
        - readyToPick
        - availableOnStock
        - stockOnHand
      title: StockSummaryDetails
      type: object
      description: StockSummaryDetails
    StockUpsertOperationResult:
      properties:
        status:
          enum:
            - UPDATED
            - CREATED
            - UNCHANGED
          type: string
        stock:
          $ref: '#/components/schemas/Stock'
      required:
        - stock
        - status
      title: StockUpsertOperationResult
      type: object
      description: StockUpsertOperationResult
    StorageLocation:
      allOf:
        - $ref: '#/components/schemas/StorageLocationForReplacement'
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        facilityRef:
          description: The id of the facility reference.
          example: Esb20gpHBL94X5NdMp3C
          type: string
        id:
          description: The id of this storage location
          type: string
        schemaVersion:
          type: number
        traitConfig:
          $ref: '#/components/schemas/StorageLocationTraitConfig'
        traits:
          description: The traits of this storage location
          items:
            $ref: '#/components/schemas/StorageLocationTrait'
          type: array
        zoneName:
          deprecated: true
          description: >-
            Deprecated! This field will not be filled in newly created storage
            locations. Resolve the zone name separately via the
            facilities/{id}/zones endpoint. The name of the Zone to which this
            storage location belongs
          type: string
      required:
        - id
        - facilityRef
        - traits
      type: object
      xml:
        name: StorageLocation
      title: StorageLocation
      description: StorageLocation
    StorageLocationAssignmentConfiguration:
      additionalProperties: false
      properties:
        storageLocationRequired:
          enum:
            - ALL
            - SOME
            - NONE
          type: string
      required:
        - storageLocationRequired
      type: object
      title: StorageLocationAssignmentConfiguration
      description: StorageLocationAssignmentConfiguration
    StorageLocationBulkEventPayload:
      properties:
        items:
          items:
            $ref: '#/components/schemas/StorageLocationEventPayload'
          type: array
      required:
        - items
      title: StorageLocationBulkEventPayload
      type: object
      description: StorageLocationBulkEventPayload
    StorageLocationBulkWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          $ref: '#/components/schemas/StorageLocationBulkEventPayload'
      required:
        - payload
      title: StorageLocationBulkWebHookEvent
      type: object
      description: StorageLocationBulkWebHookEvent
    StorageLocationEventPayload:
      properties:
        created:
          description: >-
            The date this entity was created at the platform. This value is
            generated by the service.
          example: 2020-02-03T08:45:51.525Z
          format: date-time
          type: string
        customAttributes:
          description: >-
            Attributes that can be added to this entity. These attributes
            **cannot** be used within fulfillment processes, but enable you to
            attach custom data from your systems to fulfillmenttools entities.
          nullable: true
          type: object
        facilityRef:
          type: string
        id:
          type: string
        information:
          type: string
        lastModified:
          description: >-
            The date this entity was modified last. This value is generated by
            the service.
          example: 2020-02-03T09:45:51.525Z
          format: date-time
          type: string
        name:
          type: string
        runningSequences:
          items:
            $ref: '#/components/schemas/StorageLocationEventSequenceItem'
          type: array
        scannableCodes:
          items:
            type: string
          type: array
        tenantLocationId:
          type: string
        traitConfig:
          items:
            $ref: '#/components/schemas/StorageLocationEventTraitConfigInner'
          type: array
        traits:
          items:
            $ref: '#/components/schemas/StorageLocationTrait'
          type: array
        type:
          $ref: '#/components/schemas/StorageLocationType'
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          format: int64
          type: integer
        zoneName:
          type: string
        zoneRef:
          type: string
      required:
        - version
        - id
        - facilityRef
        - traits
        - name
        - type
        - scannableCodes
        - runningSequences
      title: StorageLocationEventPayload
      type: object
      description: StorageLocationEventPayload
    StorageLocationEventSequenceItem:
      properties:
        nextStorageLocationRef:
          type: string
        previousStorageLocationRef:
          type: string
        score:
          type: number
        type:
          $ref: '#/components/schemas/StorageLocationSequenceType'
      required:
        - type
      title: StorageLocationEventSequenceItem
      type: object
      description: StorageLocationEventSequenceItem
    StorageLocationEventTraitConfigInner:
      properties:
        enabled:
          type: boolean
        trait:
          $ref: '#/components/schemas/StorageLocationTrait'
      required:
        - trait
        - enabled
      title: StorageLocationEventTraitConfigInner
      type: object
      description: StorageLocationEventTraitConfigInner
    StorageLocationForCreation:
      allOf:
        - $ref: '#/components/schemas/CustomAttributesResource'
      properties:
        information:
          description: A free text information about this storage location, max length 1024
          maxLength: 1024
          type: string
        name:
          description: The name of this storage location
          maxLength: 15
          type: string
        runningSequences:
          description: The Sequence item/s of this location
          items:
            $ref: '#/components/schemas/StorageLocationSequenceItem'
          maxItems: 10
          type: array
        scannableCodes:
          description: Barcodes representing this storage location
          items:
            type: string
          maxItems: 5
          type: array
        tenantLocationId:
          description: The internal tenant id for this location
          type: string
        traitConfig:
          $ref: '#/components/schemas/StorageLocationTraitConfig'
        traits:
          description: >-
            The traits of this storage location, includes both local config and
            and defaults. Do not use to write to traits, use traitConfig
            instead.
          items:
            $ref: '#/components/schemas/StorageLocationTrait'
          type: array
        type:
          $ref: '#/components/schemas/StorageLocationType'
        zoneName:
          description: The name of the Zone to which this storage location belongs
          type: string
        zoneRef:
          description: The id of the Zone to which this storage location belongs
          example: Esb20gpHBL94X5NdMp3C
          type: string
      required:
        - name
        - runningSequences
        - scannableCodes
        - type
      type: object
      xml:
        name: StorageLocationForCreation
      title: StorageLocationForCreation
      description: StorageLocationForCreation
    StorageLocationForReplacement:
      allOf:
        - $ref: '#/components/schemas/StorageLocationForCreation'
      properties:
        version:
          example: 42
          format: int64
          type: integer
      required:
        - version
      type: object
      xml:
        name: StorageLocationForReplacement
      title: StorageLocationForReplacement
      description: StorageLocationForReplacement
    StorageLocationPaginatedResult:
      properties:
        pageInfo:
          allOf:
            - $ref: '#/components/schemas/PageInfo'
          description: Pagination information for the search result.
        storageLocations:
          items:
            $ref: '#/components/schemas/StorageLocation'
          type: array
        total:
          description: >-
            The total number of items matching the search criteria. Only filled,
            if withTotal is set to true in the search options.
          minimum: 0
          type: number
      required:
        - pageInfo
        - storageLocations
      title: StorageLocationPaginatedResult
      type: object
      description: StorageLocationPaginatedResult
    StorageLocationPatchActions:
      properties:
        actions:
          items:
            $ref: '#/components/schemas/ModifyStorageLocationAction'
          minItems: 1
          type: array
        version:
          description: >-
            The version of the facility where we want to patch the storage
            locations to be used in optimistic locking mechanisms.
          example: 42
          format: int64
          type: integer
      required:
        - version
        - actions
      type: object
      xml:
        name: StorageLocationPatchActions
      title: StorageLocationPatchActions
      description: StorageLocationPatchActions
    StorageLocationRecommendation:
      properties:
        stockCount:
          type: number
        storageLocation:
          $ref: '#/components/schemas/StorageLocation'
      required:
        - storageLocation
        - stockCount
      title: StorageLocationRecommendation
      type: object
      description: StorageLocationRecommendation
    StorageLocationReferencedFilter:
      properties:
        stock:
          allOf:
            - $ref: '#/components/schemas/StorageLocationReferencedStockFilter'
          description: Nested search by stock
      title: StorageLocationReferencedFilter
      type: object
      description: StorageLocationReferencedFilter
    StorageLocationReferencedStockFilter:
      properties:
        hasStocks:
          allOf:
            - $ref: '#/components/schemas/BooleanFilter'
          description: Whether the storage locations has any stocks on it.
        sumOfValues:
          allOf:
            - $ref: '#/components/schemas/NumberFilter'
          description: >-
            The sum of all stock values in this storage location, i.e. how much
            stock is stored in this location.
      title: StorageLocationReferencedStockFilter
      type: object
      description: StorageLocationReferencedStockFilter
    StorageLocationSearchPayload:
      properties:
        after:
          deprecated: false
          description: >-
            The cursor to start after. The value is provided in the
            `pageInfo.endCursor` field of the response.
          type: string
        options:
          $ref: '#/components/schemas/SearchOptions'
        query:
          $ref: '#/components/schemas/StorageLocationSearchQuery'
        size:
          default: 20
          description: Number of items to return.
          maximum: 250
          minimum: 1
          type: number
        sort:
          description: Use for sorting the result.
          items:
            $ref: '#/components/schemas/StorageLocationSort'
          maxItems: 1
          minItems: 1
          type: array
        startAfterId:
          deprecated: true
          description: >-
            The ID to start after. Deprecated, use `after` with the value
            provided in `pageInfo.endCursor` instead.
          type: string
      required:
        - query
      title: StorageLocationSearchPayload
      type: object
      description: StorageLocationSearchPayload
    StorageLocationSearchQuery:
      properties:
        and:
          items:
            $ref: '#/components/schemas/StorageLocationSearchQuery'
          type: array
        created:
          allOf:
            - $ref: '#/components/schemas/DateFilter'
          description: >-
            Search entries by created. Applying a narrow and well-considered
            filter value is strongly recommended, as it can greatly improve
            response times, especially when working with large datasets.
        customAttributes:
          additionalProperties:
            anyOf:
              - $ref: '#/components/schemas/BooleanFilter'
              - $ref: '#/components/schemas/StringEqFilter'
              - $ref: '#/components/schemas/NumberEqFilter'
              - $ref: '#/components/schemas/DateFilter'
          description: Search by custom attributes
          type: object
        facilityRef:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by facilityRef
        id:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by id
        name:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by name
        or:
          items:
            $ref: '#/components/schemas/StorageLocationSearchQuery'
          type: array
        referenced:
          allOf:
            - $ref: '#/components/schemas/StorageLocationReferencedFilter'
          description: Nested search by referenced
        scannableCodes:
          allOf:
            - $ref: '#/components/schemas/StringListFilter'
          description: Search by scannableCodes
        tenantLocationId:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by tenantLocationId
        traits:
          allOf:
            - $ref: '#/components/schemas/StorageLocationTraitEnumListFilter'
          description: Search by traits
        type:
          allOf:
            - $ref: '#/components/schemas/StorageLocationTypeEnumFilter'
          description: Search by type
        zoneRef:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by zoneRef
      title: StorageLocationSearchQuery
      type: object
      description: StorageLocationSearchQuery
    StorageLocationSequenceItem:
      properties:
        nextStorageLocationRef:
          description: The next storage from which to pick up after this one
          type: string
        previousStorageLocationRef:
          description: The previous storage from which to pick up after this one
          type: string
        score:
          deprecated: true
          description: Running sequence score - read-only
          type: number
        type:
          $ref: '#/components/schemas/StorageLocationSequenceType'
      required:
        - type
      type: object
      xml:
        name: StorageLocationSequenceItem
      title: StorageLocationSequenceItem
      description: StorageLocationSequenceItem
    StorageLocationSequenceType:
      description: |-
        Describes the type of a storage location sequence type
          * `PICKING_SEQUENCE`- The sequence in wich the storage locations are picked.
          * `RESTOW_SEQUENCE`- The sequence in wich the storage locations are restowed.
      enum:
        - PICKING_SEQUENCE
        - RESTOW_SEQUENCE
      type: string
      xml:
        name: StorageLocationType
      title: StorageLocationSequenceType
    StorageLocationSort:
      properties:
        created:
          enum:
            - ASC
            - DESC
          type: string
        customAttributes:
          additionalProperties: true
          maxProperties: 1
          minProperties: 1
          type: object
        lastModified:
          enum:
            - ASC
            - DESC
          type: string
        name:
          enum:
            - ASC
            - DESC
          type: string
        tenantLocationId:
          enum:
            - ASC
            - DESC
          type: string
        zoneRef:
          enum:
            - ASC
            - DESC
          type: string
      title: StorageLocationSort
      type: object
      description: StorageLocationSort
    StorageLocationTrait:
      description: |-
        Describes what kind of actions this stock is available for
          * `PICKABLE`- The stock is available for picking
          * `ACCESSIBLE`- The stock is available for stock movements (stowing, inbound, etc)
          * `KEEP_ON_ZERO`- The stock will not be deleted when emptied
          * `OUTBOUND`- The stock is intended for outbound processes
          * `IN_MOTION`- The stock is in motion, used by StowJobs.
      enum:
        - PICKABLE
        - ACCESSIBLE
        - KEEP_ON_ZERO
        - OUTBOUND
        - IN_MOTION
      type: string
      xml:
        name: StorageLocationTrait
      title: StorageLocationTrait
    StorageLocationTraitConfig:
      description: The configuration of the traits of this storage location
      items:
        properties:
          enabled:
            type: boolean
          trait:
            $ref: '#/components/schemas/StorageLocationTrait'
        required:
          - trait
          - enabled
        type: object
      type: array
      title: StorageLocationTraitConfig
    StorageLocationTraitConfigEntry:
      properties:
        enabled:
          description: whether the trait is enabled or not
          type: boolean
        trait:
          description: |-
            Describes what kind of actions this stock is available for
                 * `PICKABLE`- The stock is available for picking
                 * `ACCESSIBLE`- The stock is available for stock movements (stowing, inbound, etc)
                 * `KEEP_ON_ZERO`- The stock will not be deleted when emptied
                 * `OUTBOUND`- The stock is intended for outbound processes
          type: string
      required:
        - enabled
        - trait
      title: StorageLocationTraitConfigEntry
      type: object
      description: StorageLocationTraitConfigEntry
    StorageLocationTraitEnumFilter:
      properties:
        eq:
          description: Search by traits
          enum:
            - PICKABLE
            - ACCESSIBLE
            - KEEP_ON_ZERO
            - OUTBOUND
            - IN_MOTION
          type: string
        in:
          description: Search by traits
          items:
            enum:
              - PICKABLE
              - ACCESSIBLE
              - KEEP_ON_ZERO
              - OUTBOUND
              - IN_MOTION
            type: string
          type: array
        notEq:
          description: Search by traits
          enum:
            - PICKABLE
            - ACCESSIBLE
            - KEEP_ON_ZERO
            - OUTBOUND
            - IN_MOTION
          type: string
      title: StorageLocationTraitEnumFilter
      type: object
      description: StorageLocationTraitEnumFilter
    StorageLocationTraitEnumListFilter:
      properties:
        contains:
          allOf:
            - $ref: '#/components/schemas/StorageLocationTraitEnumFilter'
          description: Search by traits
      title: StorageLocationTraitEnumListFilter
      type: object
      description: StorageLocationTraitEnumListFilter
    StorageLocationType:
      description: |-
        Describes the kind of a storage location:
          * `SINGLE_STORAGE`- it is only allowed to store stock with the same tenantArticleId here
          * `BULK_STORAGE`- stocks belonging to different tenantArticleIds can be stored here
      enum:
        - SINGLE_STORAGE
        - BULK_STORAGE
      type: string
      xml:
        name: StorageLocationType
      title: StorageLocationType
    StorageLocationTypeEnumFilter:
      properties:
        eq:
          description: Search by type
          enum:
            - SINGLE_STORAGE
            - BULK_STORAGE
          type: string
        in:
          description: Search by type
          items:
            enum:
              - SINGLE_STORAGE
              - BULK_STORAGE
            type: string
          type: array
        notEq:
          description: Search by type
          enum:
            - SINGLE_STORAGE
            - BULK_STORAGE
          type: string
      title: StorageLocationTypeEnumFilter
      type: object
      description: StorageLocationTypeEnumFilter
    StowedStowLineItemStowToForCreation:
      properties:
        stowedAt:
          description: >-
            Time and date on which the item was stowed. Will be set to the
            current time if not provided.
          format: date-time
          type: string
        stowedQuantity:
          description: Quantity that was stowed
          type: number
        stowedStockRef:
          description: >-
            Specifies the stock where the item will be stowed. Set this to null
            to explicitly create a new stock. 
             Exception: If stowTo.type is "DISCARD", a new stock will not be created when set to `null`. However, if a stock is specified, its quantity will be increased regardless of the type.
          nullable: true
          type: string
        stowedStorageLocationRef:
          description: >-
            If a new stock is created via stowedStockRef = null, this is used to
            set the storage location of the new stock. 
             If a stock is specified, this field will be ignored.
          type: string
      required:
        - stowedStockRef
        - stowedQuantity
      title: StowedStowLineItemStowToForCreation
      type: object
      description: StowedStowLineItemStowToForCreation
    StowJob:
      properties:
        assignedUsers:
          description: The users that are assigned to the stow job
          items:
            $ref: '#/components/schemas/AssignedUser'
          maxItems: 20
          type: array
        created:
          description: Creation date of the entity, auto-generated if not provided
          format: date-time
          type: string
        customAttributes:
          description: >-
            Attributes that can be added to this entity. These attributes
            **cannot** be used within fulfillment processes, but enable you to
            attach custom data from your systems to fulfillmenttools entities.
          nullable: true
          type: object
        facilityRef:
          description: >-
            Non-human-readable reference to the facility where the stow job is
            executed
          type: string
        id:
          description: Auto-generated, unique primary identifier of the stow job
          type: string
        lastModified:
          description: Service-generated last modification date of the entity
          format: date-time
          type: string
        priority:
          description: Priority level of the job
          type: number
        shortId:
          description: Readable identifier for display purposes, not unique.
          type: string
        status:
          description: The status of the stowJob
          enum:
            - OPEN
            - IN_PROGRESS
            - CLOSED
            - CANCELED
            - PAUSED
          type: string
        stowLineItems:
          description: The line items that should be stowed
          items:
            $ref: '#/components/schemas/StowLineItem'
          type: array
        targetTime:
          description: >-
            The time by which the job should be completed. Use for
            prioritization and scheduling
          format: date-time
          type: string
        version:
          description: The version of the entity, used for optimistic locking mechanisms
          type: number
      required:
        - facilityRef
        - status
        - stowLineItems
        - id
        - version
      title: StowJob
      type: object
      description: StowJob
    StowJobActionName:
      description: The name of the action that should be performed
      enum:
        - START_STOW_JOB
        - PAUSE_STOW_JOB
        - OPEN_STOW_JOB
        - CANCEL_STOW_JOB
        - CLOSE_STOW_JOB
        - MODIFY_STOW_LINE_ITEMS
        - REPLACE_ASSIGNED_USERS
      type: string
      xml:
        name: StowJobActionName
      title: StowJobActionName
    StowJobForCreation:
      properties:
        assignedUsers:
          description: The users that are assigned to the stow job
          items:
            anyOf:
              - $ref: '#/components/schemas/AssignedUserForCreationById'
              - $ref: '#/components/schemas/AssignedUserForCreationByName'
              - $ref: '#/components/schemas/AssignedUser'
          maxItems: 20
          type: array
        customAttributes:
          description: >-
            Attributes that can be added to this entity. These attributes
            **cannot** be used within fulfillment processes, but enable you to
            attach custom data from your systems to fulfillmenttools entities.
          nullable: true
          type: object
        facilityRef:
          description: >-
            Non-human-readable reference to the facility where the stow job is
            executed
          type: string
        priority:
          description: Priority level of the job
          type: number
        shortId:
          description: Readable identifier for display purposes, not unique.
          type: string
        status:
          description: The status of the stowJob
          enum:
            - OPEN
            - IN_PROGRESS
            - CLOSED
            - CANCELED
            - PAUSED
          type: string
        stowLineItems:
          description: The line items that should be stowed
          items:
            $ref: '#/components/schemas/StowLineItemForCreation'
          type: array
        targetTime:
          description: >-
            The time by which the job should be completed. Use for
            prioritization and scheduling
          format: date-time
          type: string
      required:
        - facilityRef
        - status
        - stowLineItems
      title: StowJobForCreation
      type: object
      description: StowJobForCreation
    StowJobForPatch:
      properties:
        assignedUsers:
          description: The users that are assigned to the stow job
          items:
            anyOf:
              - $ref: '#/components/schemas/AssignedUserForCreationById'
              - $ref: '#/components/schemas/AssignedUserForCreationByName'
              - $ref: '#/components/schemas/AssignedUser'
          maxItems: 20
          type: array
        customAttributes:
          description: >-
            Attributes that can be added to this entity. These attributes
            **cannot** be used within fulfillment processes, but enable you to
            attach custom data from your systems to fulfillmenttools entities.
          nullable: true
          type: object
        priority:
          description: Information for user about which job should be started first
          type: number
        targetTime:
          format: date-time
          type: string
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms
          type: number
      required:
        - version
      title: StowJobForPatch
      type: object
      description: StowJobForPatch
    StowJobPaginatedResult:
      properties:
        pageInfo:
          allOf:
            - $ref: '#/components/schemas/PageInfo'
          description: Pagination information for the search result.
        stowJobs:
          items:
            $ref: '#/components/schemas/StowJob'
          type: array
        total:
          description: >-
            The total number of items matching the search criteria. Only filled,
            if withTotal is set to true in the search options.
          minimum: 0
          type: number
      required:
        - pageInfo
        - stowJobs
      title: StowJobPaginatedResult
      type: object
      description: StowJobPaginatedResult
    StowJobReplaceAssignedUsersAction:
      description: REPLACE_ASSIGNED_USERS replaces the assigned users of the stow job
      properties:
        assignedUsers:
          description: The users are assigned to the stow job
          items:
            anyOf:
              - $ref: '#/components/schemas/AssignedUserForCreationById'
              - $ref: '#/components/schemas/AssignedUserForCreationByName'
              - $ref: '#/components/schemas/AssignedUser'
          maxItems: 20
          type: array
        name:
          description: The name of the action that should be performed
          enum:
            - REPLACE_ASSIGNED_USERS
          type: string
        version:
          description: The current version of the stow job that should be modified
          type: number
      required:
        - version
        - name
        - assignedUsers
      title: StowJobReplaceAssignedUsersAction
      type: object
    StowJobSearchPayload:
      properties:
        after:
          deprecated: false
          description: >-
            The cursor to start after. The value is provided in the
            `pageInfo.endCursor` field of the response.
          type: string
        options:
          $ref: '#/components/schemas/SearchOptions'
        query:
          $ref: '#/components/schemas/StowJobSearchQuery'
        size:
          default: 20
          description: Number of items to return.
          maximum: 250
          minimum: 1
          type: number
        sort:
          description: Use for sorting the result.
          items:
            $ref: '#/components/schemas/StowJobSort'
          maxItems: 1
          minItems: 1
          type: array
        startAfterId:
          deprecated: true
          description: >-
            The ID to start after. Deprecated, use `after` with the value
            provided in `pageInfo.endCursor` instead.
          type: string
      required:
        - query
      title: StowJobSearchPayload
      type: object
      description: StowJobSearchPayload
    StowJobSearchQuery:
      properties:
        and:
          items:
            $ref: '#/components/schemas/StowJobSearchQuery'
          type: array
        created:
          allOf:
            - $ref: '#/components/schemas/DateFilter'
          default:
            after: '-P1W'
          description: >-
            Search entries by created. Applying a narrow and well-considered
            filter value is strongly recommended, as it can greatly improve
            response times, especially when working with large datasets.
        customAttributes:
          additionalProperties:
            anyOf:
              - $ref: '#/components/schemas/BooleanFilter'
              - $ref: '#/components/schemas/StringEqFilter'
              - $ref: '#/components/schemas/NumberEqFilter'
              - $ref: '#/components/schemas/DateFilter'
          description: Search by custom attributes
          type: object
        facilityRef:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by facilityRef
        id:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by id
        or:
          items:
            $ref: '#/components/schemas/StowJobSearchQuery'
          type: array
        priority:
          allOf:
            - $ref: '#/components/schemas/NumberFilter'
          description: Search by priority
        shortId:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by shortId
        status:
          allOf:
            - $ref: '#/components/schemas/StowJobStatusTypeEnumFilter'
          description: Search by status
        stowLineItems:
          allOf:
            - $ref: '#/components/schemas/StowJobStowLineItemsListFilter'
          description: Nested list search by stowLineItems
        targetTime:
          allOf:
            - $ref: '#/components/schemas/DateFilter'
          description: Search by targetTime
      title: StowJobSearchQuery
      type: object
      description: StowJobSearchQuery
    StowJobSort:
      properties:
        created:
          enum:
            - ASC
            - DESC
          type: string
        customAttributes:
          additionalProperties: true
          maxProperties: 1
          minProperties: 1
          type: object
        lastModified:
          enum:
            - ASC
            - DESC
          type: string
        targetTime:
          enum:
            - ASC
            - DESC
          type: string
      title: StowJobSort
      type: object
      description: StowJobSort
    StowJobStatus:
      description: The status of the stowJob
      enum:
        - OPEN
        - IN_PROGRESS
        - CLOSED
        - CANCELED
        - PAUSED
      type: string
      xml:
        name: StowJobStatus
      title: StowJobStatus
    StowJobStatusTypeEnumFilter:
      properties:
        eq:
          description: Search by status
          enum:
            - OPEN
            - IN_PROGRESS
            - CLOSED
            - CANCELED
            - PAUSED
          type: string
        in:
          description: Search by status
          items:
            enum:
              - OPEN
              - IN_PROGRESS
              - CLOSED
              - CANCELED
              - PAUSED
            type: string
          type: array
        notEq:
          description: Search by status
          enum:
            - OPEN
            - IN_PROGRESS
            - CLOSED
            - CANCELED
            - PAUSED
          type: string
      title: StowJobStatusTypeEnumFilter
      type: object
      description: StowJobStatusTypeEnumFilter
    StowJobStockInformation:
      properties:
        properties:
          additionalProperties:
            type: string
          allOf:
            - $ref: '#/components/schemas/StockPropertyPreset'
          description: >-
            allow tracking of specific values such as expiry dates on a set of
            items. They should describe physical identifiable properties of the
            stock and are not meant to be used for metadata (see
            "customAttributes" for that).
        traitConfig:
          items:
            $ref: '#/components/schemas/StorageLocationTraitConfigEntry'
          type: array
      title: StowJobStockInformation
      type: object
      description: StowJobStockInformation
    StowJobStowLineItemsArticleFilter:
      properties:
        tenantArticleId:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by tenantArticleId
      title: StowJobStowLineItemsArticleFilter
      type: object
      description: StowJobStowLineItemsArticleFilter
    StowJobStowLineItemsFilter:
      properties:
        article:
          allOf:
            - $ref: '#/components/schemas/StowJobStowLineItemsArticleFilter'
          description: Nested search by article
        heldStockRef:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by heldStockRef
        id:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by id
        stowTo:
          allOf:
            - $ref: '#/components/schemas/StowJobStowLineItemsStowToListFilter'
          description: Nested list search by stowTo
        takeFrom:
          allOf:
            - $ref: '#/components/schemas/StowJobStowLineItemsTakeFromFilter'
          description: Nested search by takeFrom
      title: StowJobStowLineItemsFilter
      type: object
      description: StowJobStowLineItemsFilter
    StowJobStowLineItemsListFilter:
      properties:
        contains:
          allOf:
            - $ref: '#/components/schemas/StowJobStowLineItemsFilter'
          description: Contains returns if at least one entry matches
      title: StowJobStowLineItemsListFilter
      type: object
      description: StowJobStowLineItemsListFilter
    StowJobStowLineItemsStowToFilter:
      properties:
        storageLocationRef:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by storageLocationRef
        stowed:
          allOf:
            - $ref: '#/components/schemas/StowJobStowLineItemsStowToStowedFilter'
          description: Nested search by stowed
        type:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by type
      title: StowJobStowLineItemsStowToFilter
      type: object
      description: StowJobStowLineItemsStowToFilter
    StowJobStowLineItemsStowToListFilter:
      properties:
        contains:
          allOf:
            - $ref: '#/components/schemas/StowJobStowLineItemsStowToFilter'
          description: Contains returns if at least one entry matches
      title: StowJobStowLineItemsStowToListFilter
      type: object
      description: StowJobStowLineItemsStowToListFilter
    StowJobStowLineItemsStowToStowedFilter:
      properties:
        stowedStockRef:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by stowedStockRef
        stowedStorageLocationRef:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by stowedStorageLocationRef
      title: StowJobStowLineItemsStowToStowedFilter
      type: object
      description: StowJobStowLineItemsStowToStowedFilter
    StowJobStowLineItemsTakeFromFilter:
      properties:
        storageLocationRef:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by storageLocationRef
        taken:
          allOf:
            - $ref: '#/components/schemas/StowJobStowLineItemsTakeFromTakenFilter'
          description: Nested search by taken
        type:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by type
      title: StowJobStowLineItemsTakeFromFilter
      type: object
      description: StowJobStowLineItemsTakeFromFilter
    StowJobStowLineItemsTakeFromTakenFilter:
      properties:
        takenStockRef:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by takenStockRef
      title: StowJobStowLineItemsTakeFromTakenFilter
      type: object
      description: StowJobStowLineItemsTakeFromTakenFilter
    StowJobWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          $ref: '#/components/schemas/StowJob'
      required:
        - payload
      title: StowJobWebHookEvent
      type: object
      description: StowJobWebHookEvent
    StowLineItem:
      properties:
        article:
          $ref: '#/components/schemas/StowLineItemArticle'
        customAttributes:
          description: >-
            Attributes that can be added to this entity. These attributes
            **cannot** be used within fulfillment processes, but enable you to
            attach custom data from your systems to fulfillmenttools entities.
          nullable: true
          type: object
        heldStockRef:
          description: >-
            Reference to a stock holding the goods after a take and before a
            stow has taken place
          type: string
        id:
          description: >-
            The ID of the stowLineItem. It is generated automatically during
            creation and serves as primary identifier of the entity
          type: string
        reasons:
          description: The reasons for the stow operation
          items:
            $ref: '#/components/schemas/ExternalStockChangeReasonOutput'
          maxItems: 10
          type: array
        stowTo:
          description: Instructions on how and where to stow the item
          oneOf:
            - items:
                $ref: '#/components/schemas/StowLineItemStowToWithId'
              type: array
            - $ref: '#/components/schemas/StowLineItemStowTo'
        takeFrom:
          allOf:
            - $ref: '#/components/schemas/StowLineItemTakeFromForCreation'
          description: Instructions on how and where to take the item from
      required:
        - article
        - stowTo
        - takeFrom
        - id
      title: StowLineItem
      type: object
      description: StowLineItem
    StowLineItemArticle:
      properties:
        titleLocalized:
          description: The translations for the title of the item
          type: object
        customAttributes:
          description: >-
            Attributes that can be added to this entity. These attributes
            **cannot** be used within fulfillment processes, but enable you to
            attach custom data from your systems to fulfillmenttools entities.
          nullable: true
          type: object
        imageUrl:
          description: >-
            A web link to a picture of this item. Please make sure that no
            authentication is required to fetch the image!
          type: string
        measurementUnitKey:
          description: Identifier for the item's unit of measurement
          type: string
        scannableCodes:
          description: ScannableCodes such as barcodes related to the item
          items:
            type: string
          type: array
        tenantArticleId:
          description: Identifier for a certain product which the StowLineItem refers to
          type: string
        title:
          description: The title of the item
          type: string
      required:
        - tenantArticleId
      title: StowLineItemArticle
      type: object
      description: StowLineItemArticle
    StowLineItemForCreation:
      properties:
        article:
          $ref: '#/components/schemas/StowLineItemArticle'
        customAttributes:
          description: >-
            Attributes that can be added to this entity. These attributes
            **cannot** be used within fulfillment processes, but enable you to
            attach custom data from your systems to fulfillmenttools entities.
          nullable: true
          type: object
        reasons:
          description: >-
            The reasons for the stow operation. Each reason can either be a
            stand-alone reason, or a preconfigured reasons by specifying the
            tenantReasonId and/or the id of the reason. If tenantReasonId and id
            are specified, they have to match.
          items:
            $ref: '#/components/schemas/ExternalStockChangeReasonInput'
          maxItems: 10
          type: array
        stowTo:
          description: Instructions on how and where to stow the item
          oneOf:
            - items:
                $ref: '#/components/schemas/StowLineItemStowToForUpdate'
              type: array
            - $ref: '#/components/schemas/StowLineItemStowToForCreation'
        takeFrom:
          allOf:
            - $ref: '#/components/schemas/StowLineItemTakeFromForCreation'
          description: Instructions on how and where to take the item from
      required:
        - article
        - stowTo
        - takeFrom
      title: StowLineItemForCreation
      type: object
      description: StowLineItemForCreation
    StowLineItemForUpdate:
      properties:
        article:
          allOf:
            - $ref: '#/components/schemas/StowLineItemArticle'
          description: The article that should be stowed
        customAttributes:
          description: >-
            Attributes that can be added to this entity. These attributes
            **cannot** be used within fulfillment processes, but enable you to
            attach custom data from your systems to fulfillmenttools entities.
          nullable: true
          type: object
        id:
          description: The ID of the stowLineItem. Leave empty for creation
          type: string
        reasons:
          description: The reasons for the stow operation
          items:
            $ref: '#/components/schemas/ExternalStockChangeReasonInput'
          maxItems: 10
          type: array
        stowTo:
          description: Instructions on how and where to stow the item
          oneOf:
            - items:
                $ref: '#/components/schemas/StowLineItemStowToForUpdate'
              type: array
            - $ref: '#/components/schemas/StowLineItemStowToForCreation'
        takeFrom:
          allOf:
            - $ref: '#/components/schemas/StowLineItemTakeFromForCreation'
          description: Instructions on how and where to take the item from
      title: StowLineItemForUpdate
      type: object
      description: StowLineItemForUpdate
    StowLineItemStowTo:
      properties:
        quantity:
          description: Quantity that should be taken / stowed
          type: number
        scannableCodes:
          description: >-
            ScannableCodes such as barcodes relevant for taking or stowing the
            item
          items:
            type: string
          type: array
        stockRef:
          description: >-
            Stock from which the item should be taken / stowed to. Leave empty
            for type UNREGISTERED / DISCARD.
          type: string
        storageLocationRef:
          description: >-
            Storage location from which the item should be taken or to which the
            item should be stowed
          type: string
        stowed:
          allOf:
            - $ref: '#/components/schemas/StowedStowLineItemStowToForCreation'
          description: >-
            Operative data holding information about the stowing progress. **As
            for now stocks will *not* be updated even if the numbers indicate so
            because the stow job feature is still under development.**
        type:
          description: >-
            Define if items should be stowed on a specific stock or storage
            location. Use type DISCARD if the item should be booked out of the
            system
          enum:
            - STOCK
            - LOCATION
            - DISCARD
          type: string
      required:
        - quantity
        - type
      title: StowLineItemStowTo
      type: object
      description: StowLineItemStowTo
    StowLineItemStowToForCreation:
      properties:
        quantity:
          description: Quantity that should be taken / stowed
          type: number
        scannableCodes:
          description: >-
            ScannableCodes such as barcodes relevant for taking or stowing the
            item
          items:
            type: string
          type: array
        stockRef:
          description: >-
            Stock from which the item should be taken / stowed to. Leave empty
            for type UNREGISTERED / DISCARD.
          type: string
        storageLocationRef:
          description: >-
            Storage location from which the item should be taken or to which the
            item should be stowed
          type: string
        stowed:
          allOf:
            - $ref: '#/components/schemas/StowedStowLineItemStowToForCreation'
          description: >-
            Operative data holding information about the stowing progress. **As
            for now stocks will *not* be updated even if the numbers indicate so
            because the stow job feature is still under development.**
        type:
          description: >-
            Define if items should be stowed on a specific stock or storage
            location. Use type DISCARD if the item should be booked out of the
            system
          enum:
            - STOCK
            - LOCATION
            - DISCARD
          type: string
      required:
        - quantity
        - type
      title: StowLineItemStowToForCreation
      type: object
      description: StowLineItemStowToForCreation
    StowLineItemStowToForUpdate:
      properties:
        id:
          type: string
        quantity:
          description: Quantity that should be taken / stowed
          type: number
        scannableCodes:
          description: >-
            ScannableCodes such as barcodes relevant for taking or stowing the
            item
          items:
            type: string
          type: array
        stockRef:
          description: >-
            Stock from which the item should be taken / stowed to. Leave empty
            for type UNREGISTERED / DISCARD.
          type: string
        storageLocationRef:
          description: >-
            Storage location from which the item should be taken or to which the
            item should be stowed
          type: string
        stowed:
          allOf:
            - $ref: '#/components/schemas/StowedStowLineItemStowToForCreation'
          description: >-
            Operative data holding information about the stowing progress. **As
            for now stocks will *not* be updated even if the numbers indicate so
            because the stow job feature is still under development.**
        type:
          description: >-
            Define if items should be stowed on a specific stock or storage
            location. Use type DISCARD if the item should be booked out of the
            system
          enum:
            - STOCK
            - LOCATION
            - DISCARD
          type: string
      required:
        - quantity
        - type
      title: StowLineItemStowToForUpdate
      type: object
      description: StowLineItemStowToForUpdate
    StowLineItemStowToType:
      description: >-
        Define if items should be stowed on a specific stock or storage
        location. Use type DISCARD if the item should be booked out of the
        system
      enum:
        - STOCK
        - LOCATION
        - DISCARD
      type: string
      xml:
        name: StowLineItemStowToType
      title: StowLineItemStowToType
    StowLineItemStowToWithId:
      properties:
        id:
          description: The ID of the stowTo instruction
          type: string
        quantity:
          description: Quantity that should be taken / stowed
          type: number
        scannableCodes:
          description: >-
            ScannableCodes such as barcodes relevant for taking or stowing the
            item
          items:
            type: string
          type: array
        stockRef:
          description: >-
            Stock from which the item should be taken / stowed to. Leave empty
            for type UNREGISTERED / DISCARD.
          type: string
        storageLocationRef:
          description: >-
            Storage location from which the item should be taken or to which the
            item should be stowed
          type: string
        stowed:
          allOf:
            - $ref: '#/components/schemas/StowedStowLineItemStowToForCreation'
          description: >-
            Operative data holding information about the stowing progress. **As
            for now stocks will *not* be updated even if the numbers indicate so
            because the stow job feature is still under development.**
        type:
          description: >-
            Define if items should be stowed on a specific stock or storage
            location. Use type DISCARD if the item should be booked out of the
            system
          enum:
            - STOCK
            - LOCATION
            - DISCARD
          type: string
      required:
        - quantity
        - type
        - id
      title: StowLineItemStowToWithId
      type: object
      description: StowLineItemStowToWithId
    StowLineItemTakeFrom:
      properties:
        quantity:
          description: Quantity that should be taken / stowed
          type: number
        scannableCodes:
          description: >-
            ScannableCodes such as barcodes relevant for taking or stowing the
            item
          items:
            type: string
          type: array
        stockInformation:
          allOf:
            - $ref: '#/components/schemas/StowJobStockInformation'
          description: >-
            Additional information about the newly created stock. **Only allowed
            for type UNREGISTERED**
        stockRef:
          description: >-
            Stock from which the item should be taken / stowed to. Leave empty
            for type UNREGISTERED / DISCARD.
          type: string
        storageLocationRef:
          description: >-
            Storage location from which the item should be taken or to which the
            item should be stowed
          type: string
        taken:
          allOf:
            - $ref: '#/components/schemas/TakenStowLineItemTakeFromForCreation'
          description: >-
            Operative data holding information about the stowing progress. **As
            for now stocks will *not* be updated even if the numbers indicate so
            because the stow job feature is still under development.**
        type:
          description: >-
            Define if items should be taken from specific stock or storage
            location. Use type UNREGISTERED if a new item should be booked into
            the system
          enum:
            - STOCK
            - LOCATION
            - UNREGISTERED
          type: string
      required:
        - quantity
        - type
      title: StowLineItemTakeFrom
      type: object
      description: StowLineItemTakeFrom
    StowLineItemTakeFromForCreation:
      properties:
        quantity:
          description: Quantity that should be taken / stowed
          type: number
        scannableCodes:
          description: >-
            ScannableCodes such as barcodes relevant for taking or stowing the
            item
          items:
            type: string
          type: array
        stockInformation:
          allOf:
            - $ref: '#/components/schemas/StowJobStockInformation'
          description: >-
            Additional information about the newly created stock. **Only allowed
            for type UNREGISTERED**
        stockRef:
          description: >-
            Stock from which the item should be taken / stowed to. Leave empty
            for type UNREGISTERED / DISCARD.
          type: string
        storageLocationRef:
          description: >-
            Storage location from which the item should be taken or to which the
            item should be stowed
          type: string
        taken:
          allOf:
            - $ref: '#/components/schemas/TakenStowLineItemTakeFromForCreation'
          description: >-
            Operative data holding information about the stowing progress. **As
            for now stocks will *not* be updated even if the numbers indicate so
            because the stow job feature is still under development.**
        type:
          description: >-
            Define if items should be taken from specific stock or storage
            location. Use type UNREGISTERED if a new item should be booked into
            the system
          enum:
            - STOCK
            - LOCATION
            - UNREGISTERED
          type: string
      required:
        - quantity
        - type
      title: StowLineItemTakeFromForCreation
      type: object
      description: StowLineItemTakeFromForCreation
    StowLineItemTakeFromType:
      description: >-
        Define if items should be taken from specific stock or storage location.
        Use type UNREGISTERED if a new item should be booked into the system.
      enum:
        - STOCK
        - LOCATION
        - UNREGISTERED
      type: string
      xml:
        name: StowLineItemTakeFromType
      title: StowLineItemTakeFromType
    StringEqFilter:
      properties:
        eq:
          maxLength: 256
          type: string
        notEq:
          maxLength: 256
          type: string
      title: StringEqFilter
      type: object
      description: StringEqFilter
    StringFilter:
      properties:
        eq:
          maxLength: 256
          type: string
        in:
          items:
            maxLength: 256
            type: string
          maxItems: 25
          type: array
        notEq:
          maxLength: 256
          type: string
        notIn:
          items:
            maxLength: 256
            type: string
          maxItems: 25
          type: array
      title: StringFilter
      type: object
      description: StringFilter
    StringListExistsFilter:
      properties:
        contains:
          $ref: '#/components/schemas/StringEqFilter'
        exists:
          description: Search all entities which have or do not have this key defined
          type: boolean
      title: StringListExistsFilter
      type: object
      description: StringListExistsFilter
    StringListFilter:
      properties:
        contains:
          $ref: '#/components/schemas/StringEqFilter'
      title: StringListFilter
      type: object
      description: StringListFilter
    StringSearchFilter:
      properties:
        eq:
          maxLength: 256
          type: string
        in:
          items:
            maxLength: 256
            type: string
          maxItems: 25
          type: array
        like:
          description: Search by regex pattern
          maxLength: 256
          type: string
        notEq:
          maxLength: 256
          type: string
        notIn:
          items:
            maxLength: 256
            type: string
          maxItems: 25
          type: array
      title: StringSearchFilter
      type: object
      description: StringSearchFilter
    StringValidation:
      additionalProperties: false
      allOf:
        - $ref: '#/components/schemas/BaseValidation'
      description: Validate input as string.
      properties:
        maxLength:
          type: number
        minLength:
          type: number
      title: StringValidation
      type: object
    StrippedBrands:
      properties:
        brands:
          items:
            $ref: '#/components/schemas/Brand'
          type: array
        total:
          description: Total number of found entities for this query
          example: 42
          type: integer
      type: object
      title: StrippedBrands
      description: StrippedBrands
    StrippedCarrier:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
        - properties:
            deliveryType:
              $ref: '#/components/schemas/CarrierDeliveryType'
            id:
              description: >-
                The id of this carrier. It is generated during creation
                automatically and suits as the primary identifier of the
                described carrier.
              example: climk4dcQFiPdA5ULuhS
              type: string
            key:
              type: string
            lifecycle:
              $ref: '#/components/schemas/CarrierLifecycle'
            name:
              description: >-
                This is the well known name for a supported CEP partner. Can be
                adapted to the clients needs.
              example: DHL Köln
              type: string
            status:
              $ref: '#/components/schemas/CarrierStatus'
          required:
            - id
            - name
            - key
          type: object
      xml:
        name: StrippedCarrier
      title: StrippedCarrier
      description: StrippedCarrier
    StrippedCarriers:
      properties:
        carriers:
          items:
            $ref: '#/components/schemas/StrippedCarrier'
          type: array
        total:
          description: Total number of found entities for this query
          example: 42
          type: integer
      type: object
      title: StrippedCarriers
      description: StrippedCarriers
    StrippedCustomServices:
      properties:
        customServices:
          items:
            $ref: '#/components/schemas/CustomService'
          type: array
        total:
          description: Total number of found entities for this query
          example: 42
          type: integer
      type: object
      title: StrippedCustomServices
      description: StrippedCustomServices
    StrippedFacilities:
      properties:
        facilities:
          items:
            anyOf:
              - $ref: '#/components/schemas/StrippedManagedFacility'
              - $ref: '#/components/schemas/Supplier'
          type: array
        total:
          description: Total number of found entities for this query
          example: 42
          type: integer
      type: object
      title: StrippedFacilities
      description: StrippedFacilities
    StrippedFacilityCustomServiceConnections:
      additionalProperties: false
      properties:
        facilityCustomServiceConnections:
          items:
            $ref: '#/components/schemas/FacilityCustomServiceConnection'
          type: array
        total:
          description: Total number of found entities for this query
          example: 42
          type: integer
      type: object
      title: StrippedFacilityCustomServiceConnections
      description: StrippedFacilityCustomServiceConnections
    StrippedFilterEntities:
      properties:
        filterEntities:
          items:
            $ref: '#/components/schemas/FilterEntity'
          type: array
        total:
          description: Total number of found filter entities for this query
          example: 42
          type: integer
      type: object
      title: StrippedFilterEntities
      description: StrippedFilterEntities
    StrippedHandoverContainer:
      additionalProperties: false
      properties:
        handoverContainer:
          items:
            $ref: '#/components/schemas/HandoverContainer'
          type: array
        total:
          description: total number for the given filter
          type: integer
      required:
        - handoverContainer
        - total
      title: StrippedHandoverContainer
      description: StrippedHandoverContainer
    StrippedHandoverjob:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
        - properties:
            carrierKey:
              description: >-
                This part of the API is deprecated. For details please check the
                <a
                href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
                target="_blank">api-release-life-cycle documentation</a>.<br
                /><br />@deprecated This field is deprecated since 28 November
                2024. Use nested object handoverJobParcelInfo
              type: string
            carrierRef:
              description: >-
                This part of the API is deprecated. For details please check the
                <a
                href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
                target="_blank">api-release-life-cycle documentation</a>.<br
                /><br />@deprecated This field is deprecated since 28 November
                2024. Use nested object handoverJobParcelInfo
              type: string
            channel:
              enum:
                - DELIVERY
                - COLLECT
              type: string
            facilityRef:
              description: The id of the facility reference.
              example: Esb20gpHBL94X5NdMp3C
              type: string
            fullIdentifier:
              description: An information to identify the recipient
              type: string
            handoverJobParcelInfo:
              $ref: '#/components/schemas/HandoverJobParcelInfo'
            id:
              description: >-
                The id of this handoverjob. It is generated during creation
                automatically and suits as the primary identifier of the
                described entity.
              example: 95EWrieX09OmeriXIUbb
              type: string
            invoiceAddress:
              $ref: '#/components/schemas/ConsumerAddress'
            loadUnitRefs:
              description: Reference to array of load unit Refs
              items:
                type: string
              type: array
            orderDate:
              description: The date this order was created at the supplying system.
              example: 2020-02-03T08:45:50.525Z
              format: date-time
              type: string
            parcelRef:
              description: >-
                This part of the API is deprecated. For details please check the
                <a
                href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
                target="_blank">api-release-life-cycle documentation</a>.<br
                /><br />@deprecated This field is deprecated since 28 November
                2024. Use nested object handoverJobParcelInfo
              example: 2fOge2ZGW54K4TgvDTQw
              type: string
            pickJobRef:
              description: >-
                The reference to the pickjob for which the handoverjob is
                assigned to
              example: ca525716-7208-4a63-a2a6-11274eb37f67-0
              type: string
            recipientAddress:
              $ref: '#/components/schemas/ConsumerAddress'
            searchPaths:
              description: This is the search term that was used to find the handover job
              example: R456728546
              items:
                type: string
              minItems: 0
              type: array
            shipmentRef:
              description: >-
                This part of the API is deprecated. For details please check the
                <a
                href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
                target="_blank">api-release-life-cycle documentation</a>.<br
                /><br />@deprecated This field is deprecated since 28 November
                2024. Use nested object handoverJobParcelInfo
              example: Esb20gpHBL94X5NdMp3C
              type: string
            status:
              $ref: '#/components/schemas/HandoverjobStatus'
            tenantOrderId:
              description: >-
                Field can be used as a reference number in foreign systems, for
                example as a reference to the source system's identifier for
                this order.
              example: R456728546
              type: string
          required:
            - id
            - status
            - facilityRef
            - channel
          type: object
      title: StrippedHandoverjob
      description: StrippedHandoverjob
    StrippedHandoverjobs:
      properties:
        handoverjobs:
          items:
            $ref: '#/components/schemas/StrippedHandoverjob'
          type: array
        total:
          description: Total number of found entities for this query
          example: 42
          type: integer
      type: object
      title: StrippedHandoverjobs
      description: StrippedHandoverjobs
    StrippedInboundProcess:
      properties:
        anonymized:
          description: >-
            Indicates the inbound process was anonymized acording to configured
            GDPR retention time.
          type: boolean
        created:
          format: date-time
          type: string
        customAttributes:
          description: >-
            Attributes that can be added to this entity. These attributes
            **cannot** be used within fulfillment processes, but enable you to
            attach custom data from your systems to fulfillmenttools entities.
          nullable: true
          type: object
        facilityRef:
          type: string
        id:
          type: string
        inboundDate:
          description: >-
            Aggregated dates from sources which advise incoming stock. Currently
            that is "purchaseOrder"
          items:
            format: date-time
            type: string
          type: array
        lastModified:
          format: date-time
          type: string
        onHold:
          description: >-
            Indicates if the inbound process is on hold and will not be
            processed further
          type: boolean
        origin:
          description: >-
            Aggregated origin data from sources which advise incoming stock.
            Currently that is just  "purchaseOrder"
          items:
            $ref: '#/components/schemas/InboundProcessOrigin'
          type: array
        scannableCodes:
          description: >-
            scannableCodes such as barcodes that are relevant in the
            inboundProcess, e.g. , barcode of the delivery note
          items:
            type: string
          type: array
        status:
          enum:
            - OPEN
            - PARTIAL_DELIVERY
            - ON_HOLD
            - CLOSED
          type: string
        tenantInboundProcessId:
          type: string
        version:
          type: number
      required:
        - facilityRef
        - id
        - version
        - created
        - lastModified
        - inboundDate
        - origin
        - anonymized
        - status
        - onHold
        - scannableCodes
      title: StrippedInboundProcess
      type: object
      description: StrippedInboundProcess
    StrippedListing:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
        - properties:
            id:
              example: fsfdsf87fsd
              type: string
            status:
              enum:
                - ACTIVE
                - INACTIVE
              type: string
            tenantArticleId:
              description: This is a reference to an article Id
              example: '4711'
              type: string
          required:
            - status
            - facilityId
            - id
            - tenantArticleId
          type: object
      title: StrippedListing
      description: StrippedListing
    StrippedListings:
      properties:
        listings:
          items:
            $ref: '#/components/schemas/StrippedListing'
          type: array
        total:
          description: Total number of found entities for this query
          example: 42
          type: integer
      type: object
      title: StrippedListings
      description: StrippedListings
    StrippedManagedFacility:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
        - $ref: '#/components/schemas/Address'
        - properties:
            id:
              type: string
            name:
              description: name of the facility
              example: Köln store
              type: string
            status:
              $ref: '#/components/schemas/FacilityStatus'
            tenantFacilityId:
              description: The id of the facility in the tenants own system
              example: K12345
              type: string
            type:
              $ref: '#/components/schemas/FacilityType'
          required:
            - id
            - status
            - type
          type: object
      title: StrippedManagedFacility
      description: StrippedManagedFacility
    StrippedOidcProvider:
      properties:
        assignedGroups:
          description: The assigned groups of the OIDC provider
          items:
            $ref: '#/components/schemas/AssignedGroup'
          type: array
        clientId:
          description: The client id of the OIDC provider
          type: string
        customParameters:
          description: The custom parameters of the OIDC provider
          items:
            $ref: '#/components/schemas/OidcProviderCustomParameter'
          type: array
        id:
          description: The id of the OIDC provider
          type: string
        issuer:
          description: The issuer of the OIDC provider
          type: string
        name:
          description: The name of the OIDC provider
          type: string
        status:
          description: The status of the OIDC provider
          enum:
            - ACTIVE
            - INACTIVE
          type: string
        version:
          description: The version of the OIDC provider
          type: number
      required:
        - name
        - status
        - issuer
        - clientId
        - customParameters
        - assignedGroups
        - id
        - version
      title: StrippedOidcProvider
      type: object
      description: StrippedOidcProvider
    StrippedOrder:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
        - properties:
            id:
              description: >-
                The id of this order. It is generated during creation
                automatically and suits as the primary identifier of the
                described entity.
              example: LGMl2DuvPnfPoSHhYFOm
              type: string
            orderDate:
              description: The date this order was created at the supplying system.
              example: 2020-02-03T08:45:50.525Z
              format: date-time
              type: string
            orderLineItems:
              items:
                properties:
                  quantity:
                    description: quantity of the specific article that has been ordered
                    example: 21
                    format: int64
                    minimum: 1
                    type: integer
                  title:
                    example: Cologne Water
                    type: string
                required:
                  - quantity
                  - title
                type: object
              type: array
            processRef:
              type: string
            status:
              $ref: '#/components/schemas/OrderStatus'
            stickers:
              items:
                $ref: '#/components/schemas/Sticker'
              type: array
          required:
            - id
            - status
            - orderDate
          type: object
      title: StrippedOrder
      description: StrippedOrder
    StrippedOrders:
      properties:
        orders:
          items:
            $ref: '#/components/schemas/StrippedOrder'
          type: array
        total:
          description: Total number of found entities for this query
          example: 42
          type: integer
      type: object
      title: StrippedOrders
      description: StrippedOrders
    StrippedPackingSourceContainer:
      additionalProperties: false
      properties:
        codes:
          items:
            description: Codes, that identify the container
            type: string
          minItems: 1
          type: array
        id:
          example: c7467ba8-c28a-4473-8748-a4e54e675e4c
          type: string
        loadUnitRef:
          example: 2357914c-d965-421e-b6cf-330501bccaab
          type: string
      type: object
      title: StrippedPackingSourceContainer
      description: StrippedPackingSourceContainer
    StrippedParcel:
      properties:
        carrierRef:
          description: The reference to the carrier for which the parcel is assigned to
          example: ca525716-7208-4a63-a2a6-11274eb37f67-0
          type: string
        carrierTrackingNumber:
          example: '84168117830018'
          type: string
        parcelRef:
          example: 15EZrieW09OmeriXIUbc
          type: string
        status:
          $ref: '#/components/schemas/ParcelStatus'
      required:
        - parcelRef
        - carrierRef
        - status
      type: object
      title: StrippedParcel
      description: StrippedParcel
    StrippedParcels:
      properties:
        parcels:
          items:
            $ref: '#/components/schemas/StrippedParcel'
          type: array
        total:
          description: Total number of found entities for this query
          example: 42
          type: integer
      type: object
      title: StrippedParcels
      description: StrippedParcels
    StrippedPickJob:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
        - properties:
            carrierKey:
              example: DPD
              type: string
            facilityRef:
              description: >-
                The id of the facility reference. The given ID has to be present
                in the system.
              example: Esb20gpHBL94X5NdMp3C
              type: string
            id:
              type: string
            orderRef:
              description: >-
                The id of the order that lead to the creation of this pickjob.
                Can be empty / not present when the pickjob was created without
                having an order.
              example: LGMl2DuvPnfPoSHhYFOm
              type: string
            searchPaths:
              items:
                type: string
              minItems: 0
              type: array
            status:
              $ref: '#/components/schemas/PickJobStatus'
            targetTime:
              description: At which time the result is expected.
              example: 2020-02-03T09:45:51.525Z
              format: date-time
              type: string
          required:
            - id
            - status
            - created
            - lastModified
            - version
          type: object
      title: StrippedPickJob
      description: StrippedPickJob
    StrippedPickJobs:
      properties:
        pickjobs:
          items:
            $ref: '#/components/schemas/StrippedPickJob'
          type: array
        total:
          description: Total number of found entities for this query
          example: 42
          type: integer
      type: object
      title: StrippedPickJobs
      description: StrippedPickJobs
    StrippedReservation:
      properties:
        id:
          type: string
      required:
        - id
      title: StrippedReservation
      type: object
      description: StrippedReservation
    StrippedShipments:
      properties:
        shipments:
          items:
            $ref: '#/components/schemas/ShipmentWithSearchPath'
          type: array
        total:
          description: Total number of found entities for this query
          example: 42
          type: integer
      type: object
      title: StrippedShipments
      description: StrippedShipments
    StrippedShippingTargetAddress:
      properties:
        country:
          description: A two-digit country code as per ISO 3166-1 alpha-2
          example: DE
          pattern: ^[A-Z]{2}$
          type: string
        postalCode:
          example: '40764'
          pattern: ^.+
          type: string
      type: object
      title: StrippedShippingTargetAddress
      description: StrippedShippingTargetAddress
    StrippedTags:
      properties:
        total:
          description: Total number of found entities for this query
          example: 42
          type: integer
        tags:
          items:
            $ref: '#/components/schemas/Tag'
          type: array
      type: object
      title: StrippedTags
      description: StrippedTags
    Subscription:
      allOf:
        - $ref: '#/components/schemas/SubscriptionForCreation'
      properties:
        created:
          description: >-
            The date this subscription was created at the platform. This value
            is generated by the service.
          example: 2020-02-03T08:45:51.525Z
          format: date-time
          type: string
        id:
          type: string
      required:
        - id
        - created
      type: object
      title: Subscription
      description: Subscription
    SubscriptionContext:
      description: >-
        Context filter for subscriptions to limit events based on facility
        relationships.
      properties:
        type:
          $ref: '#/components/schemas/SubscriptionContextType'
        values:
          description: Array of facility IDs or facility group names to filter by.
          items:
            type: string
          minItems: 1
          type: array
      required:
        - type
        - values
      title: SubscriptionContext
      type: object
    SubscriptionContextType:
      description: Types of context filters for subscriptions.
      enum:
        - FACILITY
        - FACILITY_GROUP
      title: SubscriptionContextType
      type: string
    SubscriptionForCreation:
      additionalProperties: false
      properties:
        callbackUrl:
          deprecated: true
          description: >-
            This part of the API is deprecated. For details please check the <a
            href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
            target="_blank">api-release-life-cycle documentation</a>.<br /><br
            />Deprecated: Use new 'target' object instead.
          type: string
        contexts:
          description: >-
            Optional context filters to limit which events trigger the
            subscription based on facility relationships. Multiple contexts are
            evaluated with logical AND. FACILITY context can only appear once,
            FACILITY_GROUP contexts can appear multiple times.
          items:
            $ref: '#/components/schemas/SubscriptionContext'
          type: array
        event:
          description: Name of the event in the fulfillmenttools platform.
          type: string
        headers:
          deprecated: true
          description: >-
            This part of the API is deprecated. For details please check the <a
            href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#deprecated"
            target="_blank">api-release-life-cycle documentation</a>.<br /><br
            />Deprecated: Use new 'target' object instead.
          items:
            $ref: '#/components/schemas/CallbackHeader'
          minItems: 1
          type: array
        name:
          description: Name of the event, this is freely selectable.
          type: string
        target:
          anyOf:
            - $ref: '#/components/schemas/SubscriptionTargetWebhook'
            - $ref: '#/components/schemas/SubscriptionTargetMicrosoftAzureServiceBus'
            - $ref: '#/components/schemas/SubscriptionTargetGoogleCloudPubSub'
      required:
        - name
        - event
      type: object
      title: SubscriptionForCreation
      description: SubscriptionForCreation
    Subscriptions:
      properties:
        subscriptions:
          items:
            $ref: '#/components/schemas/Subscription'
          type: array
        total:
          description: Total number of found entities for this query
          example: 42
          type: integer
      type: object
      title: Subscriptions
      description: Subscriptions
    SubscriptionTargetGoogleCloudPubSub:
      additionalProperties: false
      description: Subscriptions model for a Google Cloud Pub/Sub target.
      properties:
        projectId:
          description: Id of the Google Cloud project.
          minLength: 1
          type: string
        topicId:
          description: Id of the Google Cloud Pub/Sub topic.
          minLength: 1
          type: string
        type:
          $ref: '#/components/schemas/SubscriptionTargetGoogleCloudPubSubEnum'
      required:
        - type
        - projectId
        - topicId
      title: SubscriptionTargetGoogleCloudPubSub
      type: object
    SubscriptionTargetGoogleCloudPubSubEnum:
      description: Type of subscription target Google Cloud Pub/Sub.
      enum:
        - GOOGLE_CLOUD_PUB_SUB
      title: SubscriptionTargetGoogleCloudPubSubEnum
      type: string
    SubscriptionTargetMicrosoftAzureServiceBus:
      additionalProperties: false
      description: Subscriptions model for a Microsoft Azure Service Bus target.
      properties:
        clientId:
          description: >-
            'Application (Client) ID' from the app registration in 'Microsoft
            Entra ID' (formerly 'Azure AD').
          minLength: 1
          type: string
        clientSecret:
          description: Client secret from the used Azure application.
          minLength: 1
          type: string
        namespace:
          description: The Azure Service Bus namespace.
          minLength: 1
          type: string
        queueOrTopicName:
          description: Name of the queue or topic in the Service Bus namespace.
          minLength: 1
          type: string
        tenantId:
          description: >-
            'Directory (Tenant) ID' from the app registration in 'Microsoft
            Entra ID' (formerly 'Azure AD').
          minLength: 1
          type: string
        type:
          $ref: '#/components/schemas/SubscriptionTargetMicrosoftAzureServiceBusEnum'
      required:
        - type
        - tenantId
        - clientId
        - clientSecret
        - namespace
        - queueOrTopicName
      title: SubscriptionTargetMicrosoftAzureServiceBus
      type: object
    SubscriptionTargetMicrosoftAzureServiceBusEnum:
      description: Type of subscription target Microsoft Azure Service Bus.
      enum:
        - MICROSOFT_AZURE_SERVICE_BUS
      title: SubscriptionTargetMicrosoftAzureServiceBusEnum
      type: string
    SubscriptionTargetWebhook:
      additionalProperties: false
      description: Subscriptions model for a Webhook target.
      properties:
        callbackUrl:
          type: string
        headers:
          items:
            $ref: '#/components/schemas/CallbackHeader'
          minItems: 1
          type: array
        type:
          $ref: '#/components/schemas/SubscriptionTargetWebhookEnum'
      required:
        - type
        - callbackUrl
      title: SubscriptionTargetWebhook
      type: object
    SubscriptionTargetWebhookEnum:
      description: Type of subscription target webhook.
      enum:
        - WEBHOOK
      title: SubscriptionTargetWebhookEnum
      type: string
    Substitute:
      properties:
        attributes:
          items:
            $ref: '#/components/schemas/SubstituteAttributeItem'
          maxItems: 40
          type: array
        imageUrl:
          type: string
        priority:
          description: >-
            This field allows you to rank substitutes against each other. The
            lowest number is the most preferrable substitute.
          minimum: 0
          type: number
        scannableCodes:
          items:
            description: Strings, that identify the substitute article
            type: string
          type: array
        tenantArticleId:
          type: string
        title:
          type: string
      required:
        - title
        - tenantArticleId
      type: object
      xml:
        name: Substitute
      title: Substitute
      description: Substitute
    SubstituteAttributeItem:
      allOf:
        - $ref: '#/components/schemas/ArticleAttributeItem'
      title: SubstituteAttributeItem
      description: SubstituteAttributeItem
    SubstituteLineItem:
      properties:
        article:
          $ref: '#/components/schemas/SubstituteLineItemArticle'
        id:
          type: string
        partialStockLocations:
          items:
            $ref: '#/components/schemas/SubstituteLineItemPartialStockLocation'
        pickedAt:
          description: Date when the line has been picked.
          example: 2024-02-03T08:45:51.525Z
          format: date-time
          type: string
        priority:
          description: >-
            This field allows you to rank substitutes against each other. The
            lowest number is the most preferrable substitute.
          minimum: 0
          type: number
        quantity:
          description: >-
            quantity of the specific article that has been picked to substitute
            the ordered line item
          example: 21
          format: int64
          minimum: 1
          type: integer
        refused:
          items:
            $ref: '#/components/schemas/RefusedItem'
          type: array
        scannableCodes:
          items:
            description: Codes, that identify the article
            type: string
          type: array
      required:
        - quantity
        - article
      type: object
      title: SubstituteLineItem
      description: SubstituteLineItem
    SubstituteLineItemArticle:
      allOf:
        - $ref: '#/components/schemas/AbstractArticle'
        - properties:
            attributes:
              items:
                $ref: '#/components/schemas/ArticleAttributeItem'
              maxItems: 40
              type: array
          type: object
      xml:
        name: SubstituteLineItemArticle
      title: SubstituteLineItemArticle
      description: SubstituteLineItemArticle
    SubstituteLineItemForCreation:
      properties:
        pickedAt:
          description: Date when the line has been picked.
          example: 2024-02-03T08:45:51.525Z
          format: date-time
          type: string
        quantity:
          description: >-
            quantity of the specific article that has been picked to substitute
            the ordered line item
          example: 21
          format: int64
          minimum: 1
          type: integer
        tenantArticleId:
          description: TenantArticleId of the substitute article
          type: string
      required:
        - quantity
        - tenantArticleId
      type: object
      title: SubstituteLineItemForCreation
      description: SubstituteLineItemForCreation
    SubstituteLineItemPartialStockLocation:
      properties:
        location:
          $ref: '#/components/schemas/Location'
        quantity:
          example: 21
          format: int64
          minimum: 0
          type: number
      required:
        - location
        - quantity
      type: object
      title: SubstituteLineItemPartialStockLocation
      description: SubstituteLineItemPartialStockLocation
    Substitutes:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - $ref: '#/components/schemas/SubstitutesForUpsert'
      required:
        - tenantArticleId
        - substitutes
      type: object
      xml:
        name: Substitutes
      title: Substitutes
      description: Substitutes
    SubstitutesForUpsert:
      properties:
        substitutes:
          items:
            $ref: '#/components/schemas/Substitute'
          type: array
        tenantArticleId:
          type: string
        version:
          description: >-
            Version field is used in the optimistic locking process. If the
            Substitute is for the tenantArticleId is not set yet, this field is
            ignored.
          example: 1
          type: number
      required:
        - substitutes
        - version
        - tenantArticleId
      type: object
      xml:
        name: SubstitutesForUpsert
      title: SubstitutesForUpsert
      description: SubstitutesForUpsert
    SubstitutionConfiguration:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      description: Substitution Configuration
      properties:
        active:
          default: true
          description: Toggle for substitution articles.
          example: false
          type: boolean
      required:
        - active
      title: SubstitutionConfiguration
      type: object
    Supplier:
      allOf:
        - $ref: '#/components/schemas/Facility'
        - $ref: '#/components/schemas/SupplierForCreation'
      properties:
        address:
          $ref: '#/components/schemas/SupplierAddress'
      type: object
      xml:
        name: Supplier
      title: Supplier
      description: Supplier
    SupplierAddress:
      allOf:
        - $ref: '#/components/schemas/SupplierAddressForCreation'
        - properties:
            resolvedTimeZone:
              $ref: '#/components/schemas/TimeZone'
          type: object
      type: object
      title: SupplierAddress
      description: SupplierAddress
    SupplierAddressEmailAddress:
      properties:
        recipient:
          description: >-
            Human readable information who is the recipient for emails sent to
            this address.
          example: >-
            'Mailinglist reaching all the employees', 'Marc Fulton, Manager',
            etc.
          type: string
        value:
          format: email
          type: string
      required:
        - value
      type: object
      title: SupplierAddressEmailAddress
      description: SupplierAddressEmailAddress
    SupplierAddressForCreation:
      properties:
        additionalAddressInfo:
          example: 'to care of: Mrs. Müller'
          type: string
        city:
          example: Langenfeld
          pattern: ^.+$
          type: string
        companyName:
          example: Speedy Boxales Ltd.
          type: string
        country:
          description: A two-digit country code as per ISO 3166-1 alpha-2
          example: DE
          pattern: ^[A-Z]{2}$
          type: string
        customAttributes:
          description: >-
            Attributes that can be added to the address. These attributes cannot
            be used within fulfillment processes, but it could be useful to have
            the informations carried here.
          type: object
        emailAddresses:
          items:
            $ref: '#/components/schemas/SupplierAddressEmailAddress'
          type: array
        houseNumber:
          example: 42a
          pattern: ^.+$
          type: string
        phoneNumbers:
          items:
            $ref: '#/components/schemas/SupplierAddressPhoneNumber'
          type: array
        postalCode:
          example: '40764'
          pattern: ^.+$
          type: string
        province:
          example: NRW
          pattern: ^.+$
          type: string
        resolvedCoordinates:
          $ref: '#/components/schemas/Coordinates'
        resolvedTimeZone:
          $ref: '#/components/schemas/TimeZoneForCreation'
          description: >-
            User-specified time zone in identifier format (e.g.,
            "America/Los_Angeles"). Used to determine local time. Relevant only
            if the country spans multiple time zones; otherwise, the time zone
            is automatically determined from the country or via Google if
            unspecified.
          example: America/Los_Angeles
        street:
          example: Hauptstr.
          pattern: ^.+$
          type: string
      required:
        - country
        - companyName
      type: object
      title: SupplierAddressForCreation
      description: SupplierAddressForCreation
    SupplierAddressPhoneNumber:
      properties:
        customAttributes:
          description: >-
            Attributes that can be added to the phonenumber. These attributes
            cannot be used within fulfillment processes, but it could be useful
            to have the informations carried here.
          type: object
        label:
          description: >-
            Can be used to give a description for the number, like "private",
            "business number", etc.
          type: string
        type:
          enum:
            - MOBILE
            - PHONE
          type: string
        value:
          description: The number itself. We do not enforce any format (yet).
          type: string
      required:
        - value
        - type
      type: object
      title: SupplierAddressPhoneNumber
      description: SupplierAddressPhoneNumber
    SupplierForCreation:
      allOf:
        - $ref: '#/components/schemas/FacilityForCreation'
      properties:
        address:
          $ref: '#/components/schemas/SupplierAddressForCreation'
      type: object
      xml:
        name: SupplierForCreation
      title: SupplierForCreation
      description: SupplierForCreation
    SupplierForModification:
      additionalProperties: false
      properties:
        address:
          allOf:
            - $ref: '#/components/schemas/SupplierAddressForCreation'
          nullable: true
          type: object
        customAttributes:
          description: >-
            Attributes that can be added to the facility. These attributes
            cannot be used within fulfillment processes, but it could be useful
            to have the informations carried here.
          nullable: true
          type: object
        name:
          example: Hamburg NW2
          type: string
        status:
          $ref: '#/components/schemas/FacilityStatus'
        tenantFacilityId:
          description: The id of the facility in the tenants own system
          example: K12345
          nullable: true
          type: string
        type:
          $ref: '#/components/schemas/FacilityType'
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          format: int64
          type: integer
        tags:
          items:
            $ref: '#/components/schemas/TagReference'
          minItems: 1
          nullable: true
          type: array
      required:
        - type
        - version
      type: object
      title: SupplierForModification
      description: SupplierForModification
    SupplierForReplacement:
      additionalProperties: false
      properties:
        address:
          $ref: '#/components/schemas/SupplierAddressForCreation'
        customAttributes:
          description: >-
            Attributes that can be added to the facility. These attributes
            cannot be used within fulfillment processes, but it could be useful
            to have the informations carried here.
          type: object
        name:
          example: Hamburg NW2
          type: string
        status:
          $ref: '#/components/schemas/FacilityStatus'
        tenantFacilityId:
          description: The id of the facility in the tenants own system
          example: K12345
          type: string
        type:
          $ref: '#/components/schemas/FacilityType'
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          format: int64
          type: integer
        tags:
          items:
            $ref: '#/components/schemas/TagReference'
          minItems: 1
          type: array
      required:
        - version
        - name
        - status
        - type
      type: object
      discriminator:
        propertyName: type
      xml:
        name: SupplierForReplacement
      title: SupplierForReplacement
      description: SupplierForReplacement
    SupplyingFacilityConfiguration:
      anyOf:
        - required:
            - facilityRef
        - required:
            - tenantFacilityId
      properties:
        deliveryEvents:
          items:
            $ref: '#/components/schemas/DeliveryEvent'
          type: array
        facilityRef:
          description: ID of the facility.
          type: string
        tenantFacilityId:
          description: Reference to the facility.
          type: string
      required:
        - deliveryEvents
      title: SupplyingFacilityConfiguration
      description: SupplyingFacilityConfiguration
    SupportedEvent:
      properties:
        description:
          type: string
        event:
          type: string
      type: object
      title: SupportedEvent
      description: SupportedEvent
    SupportedEvents:
      properties:
        supportedEvents:
          items:
            $ref: '#/components/schemas/SupportedEvent'
          type: array
      type: object
      title: SupportedEvents
      description: SupportedEvents
    SupportedFilterEntityTypesEnum:
      description: Entity types supported as filter entities
      enum:
        - STICKER
      example: STICKER
      type: string
      title: SupportedFilterEntityTypesEnum
    SupportedLocale:
      description: >-
        This part of the API is in Beta status. For details please check the <a
        href="https://docs.fulfillmenttools.com/documentation/developer-docs/api/core-concepts/api-release-life-cycle#beta"
        target="_blank">api-release-life-cycle documentation</a>.<br /><br />ISO
        3166 conform country code and ISO 639-1 conform language code (de_DE,
        en_US, ch_FR, etc.)
      enum:
        - de_DE
        - en_US
        - pl_PL
        - ru_RU
        - nl_NL
        - fr_FR
        - it_IT
        - nb_NO
        - es_ES
        - cs_CZ
        - sk_SK
        - pt_PT
        - sl_SI
        - ro_RO
        - bg_BG
        - hr_HR
        - hu_HU
      example: de_DE
      type: string
      title: SupportedLocale
      x-badges:
        - color: orange
          label: BETA
    SupportedLocales:
      items:
        $ref: '#/components/schemas/SupportedLocale'
      type: array
      title: SupportedLocales
      description: SupportedLocales
    Tag:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
        - $ref: '#/components/schemas/TagForCreation'
      properties:
        id:
          type: string
      required:
        - id
      xml:
        name: Tag
      title: Tag
      description: Tag
    TagConfiguration:
      properties:
        offeredDocumentsByDefault:
          description: >-
            This configuration is a fallback and applies only if none of the
            entries in offeredDocumentsPerTag can be applied
          items:
            $ref: '#/components/schemas/OfferedDocument'
          type: array
        offeredDocumentsPerTag:
          description: >-
            All entries with a match in their matchingValues will be combined
            when determining what documents belong to an entity
          items:
            $ref: '#/components/schemas/OfferedDocumentPerTag'
          type: array
      required:
        - offeredDocumentsPerTag
        - offeredDocumentsByDefault
      title: TagConfiguration
      description: TagConfiguration
    TagForCreation:
      additionalProperties: false
      properties:
        allowedValues:
          items:
            type: string
          minItems: 1
          type: array
        id:
          type: string
      required:
        - id
        - allowedValues
      title: TagForCreation
      description: TagForCreation
    TagPatchActions:
      properties:
        actions:
          items:
            anyOf:
              - $ref: '#/components/schemas/AddAllowedValueToTag'
          minItems: 1
          type: array
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          format: int64
          type: integer
      required:
        - version
        - actions
      type: object
      xml:
        name: TagPatchActions
      title: TagPatchActions
      description: TagPatchActions
    TagReference:
      properties:
        id:
          type: string
        value:
          type: string
      required:
        - value
        - id
      title: TagReference
      description: TagReference
    TagScanningConfiguration:
      additionalProperties: false
      properties:
        offeredScanningRuleByTag:
          items:
            $ref: '#/components/schemas/OfferedScanningRuleByTag'
          type: array
      title: TagScanningConfiguration
      description: TagScanningConfiguration
    TakenStowLineItemTakeFromForCreation:
      properties:
        takenAt:
          description: Time and date on which the item was taken
          format: date-time
          type: string
        takenQuantity:
          description: Quantity that was taken
          type: number
        takenStockRef:
          description: |-
            Specifies the stock from which the goods will be taken. 
             Exception: If stowTo.type is "UNREGISTERED", this field may be null. If a stock is specified, its quantity will be reduced regardless of the type.
          nullable: true
          type: string
      required:
        - takenQuantity
        - takenStockRef
      title: TakenStowLineItemTakeFromForCreation
      type: object
      description: TakenStowLineItemTakeFromForCreation
    TakeOverPickJobConfiguration:
      properties:
        active:
          default: false
          description: Enable or disable returns
          type: boolean
      required:
        - active
      type: object
      title: TakeOverPickJobConfiguration
      description: TakeOverPickJobConfiguration
    TargetAddress:
      allOf:
        - $ref: '#/components/schemas/ConsumerAddress'
        - properties:
            facilityRef:
              description: >-
                The id of the facility reference. The given ID has to be present
                in the system.
              example: Esb20gpHBL94X5NdMp3C
              type: string
            tenantFacilityId:
              description: >-
                The tenantFacilityId of the facility. The given ID has to be
                present in the system.
              example: Esb20gpHBL94X5NdMp3C
              type: string
          type: object
      type: object
      title: TargetAddress
      description: TargetAddress
    TenantConfiguration:
      additionalProperties: false
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        clearName:
          type: string
      required:
        - clearName
      type: object
      title: TenantConfiguration
      description: TenantConfiguration
    TenantConfigurationForUpsert:
      additionalProperties: false
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        clearName:
          type: string
        version:
          type: number
      required:
        - clearName
        - version
      type: object
      title: TenantConfigurationForUpsert
      description: TenantConfigurationForUpsert
    TenantConnectorConfiguration:
      additionalProperties: false
      properties:
        apiUrl:
          example: https://some-name.api.fulfillmenttools.com
          type: string
        app:
          $ref: '#/components/schemas/ConnectAppTypeEnum'
        firebaseAppId:
          example: 1:180217824890:android:f1fbf11eb8a613cbda9ee4
          type: string
        firebaseAppIdDebug:
          example: 1:180217824890:android:c861c7b58d938e05da9ee4
          type: string
        firebaseProjectId:
          example: some-name
          type: string
        firebaseWebApiKey:
          example: GTasGTHJZ_ku_gaad_P2A4KRDQW_MM_-AS-Lglk
          type: string
      required:
        - app
        - firebaseProjectId
        - apiUrl
        - firebaseWebApiKey
        - firebaseAppId
        - firebaseAppIdDebug
      title: TenantConnectorConfiguration
      description: TenantConnectorConfiguration
    TenantConnectorConfigurations:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        connectApps:
          description: All possible apps
          items:
            $ref: '#/components/schemas/TenantConnectorConfiguration'
          minItems: 1
          type: array
      required:
        - version
        - connectApps
      type: object
      title: TenantConnectorConfigurations
      description: TenantConnectorConfigurations
    TenantFacilityIdSelector:
      properties:
        tenantFacilityId:
          description: Resolves a facility by its tenantFacilityId.
          minLength: 1
          type: string
      required:
        - tenantFacilityId
      title: TenantFacilityIdSelector
      type: object
      description: TenantFacilityIdSelector
    ThresholdPriceValue:
      additionalProperties: false
      properties:
        priceRange:
          $ref: '#/components/schemas/PriceRange'
        priority:
          description: >-
            The lower the value the higher is the priority, e.g. priority 1 is
            higher than priority 10. The priority is used when comparing
            multiple carriers.
          minimum: 1
          type: integer
      required:
        - priority
        - priceRange
      type: object
      title: ThresholdPriceValue
      description: ThresholdPriceValue
    TimeRange:
      properties:
        capacity:
          minimum: 0
          type: number
        end:
          $ref: '#/components/schemas/TimeStamp'
        start:
          $ref: '#/components/schemas/TimeStamp'
      required:
        - start
        - end
      type: object
      title: TimeRange
      description: TimeRange
    TimeStamp:
      properties:
        hour:
          maximum: 23
          minimum: 0
          type: number
        minute:
          maximum: 59
          minimum: 0
          type: number
      required:
        - hour
        - minute
      type: object
      title: TimeStamp
      description: TimeStamp
    TimeZone:
      description: Timezone for information retrieved e.g. by the Google Maps API
      properties:
        offsetInSeconds:
          description: >-
            offset in seconds to standard time. Does not account for daylight
            saving time.
          example: 28800
          type: number
        source:
          description: source of the timezone information
          example: Google Maps API
          type: string
        timeZoneId:
          description: official id of the timezone
          example: America/Los_Angeles
          type: string
        timeZoneName:
          description: descriptive name of the timezone
          example: Pacific Standard Time
          type: string
      required:
        - timeZoneId
        - timeZoneName
        - offsetInSeconds
      type: object
      title: TimeZone
    TimeZoneForCreation:
      description: Self-provided timezone for determining the local time of a facility
      properties:
        timeZoneId:
          description: official id of the timezone
          example: America/Los_Angeles
          type: string
      required:
        - timeZoneId
      type: object
      title: TimeZoneForCreation
    ToolkitAllowedEntities:
      description: |-
        The entities that can be compared by the toolkit fence or rating
          * `ORDER`
          * `FACILITY`
          * `CARRIERCONNECTION`
          * `LISTING`
          * `ORDERING_FACILITY` - left side only
          * `ORDERING_FACILITY_GROUPS` - left side only
      enum:
        - ORDER
        - FACILITY
        - CARRIERCONNECTION
        - LISTING
        - ORDERING_FACILITY
        - ORDERING_FACILITY_GROUPS
      type: string
      xml:
        name: ToolkitAllowedEntities
      title: ToolkitAllowedEntities
    ToolkitComparisonDecisionDetail:
      allOf:
        - $ref: '#/components/schemas/BaseDecisionDetail'
      description: Toolkit Comparison Decision Detail.
      properties:
        description:
          type: string
        explanation:
          $ref: >-
            #/components/schemas/ToolkitRuleComparePropertiesOperatorResultExplanation
        predicateConnector:
          $ref: '#/components/schemas/ToolkitPredicateConnector'
        predicates:
          items:
            $ref: '#/components/schemas/ToolKitComparisonDetails'
          type: array
      required:
        - predicates
        - result
        - predicateConnector
        - description
      title: ToolkitComparisonDecisionDetail
    ToolKitComparisonDetails:
      properties:
        evaluationResult:
          type: boolean
        leftPart:
          $ref: '#/components/schemas/ToolKitComparisonPart'
        predicate:
          $ref: '#/components/schemas/ToolkitComparisonPredicate'
        rightPart:
          $ref: '#/components/schemas/ToolKitComparisonPart'
      required:
        - leftPart
        - rightPart
        - evaluationResult
        - predicate
      title: ToolKitComparisonDetails
      description: ToolKitComparisonDetails
    ToolKitComparisonPart:
      properties:
        originalValue:
          items:
            type: string
          type: array
        transformedValue:
          items:
            type: string
          type: array
      required:
        - originalValue
        - transformedValue
      title: ToolKitComparisonPart
      description: ToolKitComparisonPart
    ToolkitComparisonPredicate:
      description: >-
        The predicate for a Toolkit V2 Fence that defines how conditions are
        constructed
      properties:
        entityOperator:
          $ref: '#/components/schemas/ToolkitRuleComparisonOperatorType'
        leftEntity:
          $ref: '#/components/schemas/ToolkitAllowedEntities'
          description: >-
            The entity that is used for the right side of the comparison -
            overrides the entity2 property
        leftPropertyPath:
          minLength: 1
          type: string
        leftTransformation:
          $ref: '#/components/schemas/ToolkitTransformationType'
        leftTransformationArgs:
          items:
            oneOf:
              - type: string
              - type: number
              - type: boolean
          type: array
        rightEntity:
          $ref: '#/components/schemas/ToolkitAllowedEntities'
          description: >-
            The entity that is used for the right side of the comparison -
            overrides the entity1 property
        rightPropertyPath:
          minLength: 1
          type: string
        rightTransformation:
          $ref: '#/components/schemas/ToolkitTransformationType'
        rightTransformationArgs:
          items:
            oneOf:
              - type: string
              - type: number
              - type: boolean
          type: array
      required:
        - rightPropertyPath
        - leftPropertyPath
        - entityOperator
        - leftEntity
        - rightEntity
      type: object
      xml:
        name: ToolkitComparisonPredicate
      title: ToolkitComparisonPredicate
    ToolkitComparisonRule:
      description: >-
        The rule, comparing the left and right path values, that will be
        evaluated applying a RuleOperator
      properties:
        evaluationScope:
          $ref: '#/components/schemas/ToolkitRuleScope'
        predicateConnector:
          $ref: '#/components/schemas/ToolkitPredicateConnector'
        predicates:
          items:
            $ref: '#/components/schemas/ToolkitComparisonPredicate'
          minItems: 1
          type: array
      required:
        - predicates
        - evaluationScope
      type: object
      xml:
        name: ToolkitRule
      title: ToolkitComparisonRule
    ToolkitDecisionDetail:
      allOf:
        - $ref: '#/components/schemas/BaseDecisionDetail'
      description: Toolkit Decision Detail.
      properties:
        comparisonOperator:
          $ref: '#/components/schemas/ToolkitRuleComparisonOperatorType'
        description:
          type: string
        explanation:
          $ref: '#/components/schemas/ToolkitRuleOperatorResultExplanation'
        leftPredicatesDetail:
          $ref: '#/components/schemas/ToolkitPredicatesDecisionDetail'
        leftSideEvaluation:
          type: boolean
        rightPredicatesDetail:
          $ref: '#/components/schemas/ToolkitPredicatesDecisionDetail'
        rightSideEvaluation:
          type: boolean
      required:
        - decisionType
        - result
        - leftSideEvaluation
        - description
      title: ToolkitDecisionDetail
    ToolkitEntityOperatorType:
      description: The possible operator types that can be used on given entities
      enum:
        - VALUE_EQUALS
        - VALUE_NOT_EQUALS
        - ANY_VALUE_EQUALS
        - ANY_VALUE_GREATER_EQUALS
        - ANY_VALUE_GREATER_THAN
        - ANY_VALUE_LESS_EQUALS
        - ANY_VALUE_LESS_THAN
        - ANY_VALUE_CONTAINS
        - ANY_VALUE_NOT_CONTAINS
        - EVERY_VALUE_EQUALS
        - EVERY_VALUE_GREATER_EQUALS
        - EVERY_VALUE_GREATER_THAN
        - EVERY_VALUE_LESS_EQUALS
        - EVERY_VALUE_LESS_THAN
        - EVERY_VALUE_CONTAINS
        - EVERY_VALUE_NOT_CONTAINS
        - NO_VALUE_EQUALS
        - NO_VALUE_GREATER_EQUALS
        - NO_VALUE_GREATER_THAN
        - NO_VALUE_LESS_EQUALS
        - NO_VALUE_LESS_THAN
        - NO_VALUE_CONTAINS
        - NO_VALUE_NOT_CONTAINS
        - VALUE_CONTAINS
        - VALUE_NOT_CONTAINS
        - GREATER_THAN
        - GREATER_EQUALS
        - LESS_THAN
        - LESS_EQUALS
      type: string
      xml:
        name: ToolkitEntityOperatorType
      title: ToolkitEntityOperatorType
    ToolkitFence:
      allOf:
        - $ref: '#/components/schemas/ToolkitFenceForModification'
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        id:
          description: The id of the toolkit fence
          example: LGMl2DuvPnfPoSHhYFOm
          type: string
      required:
        - id
      type: object
      xml:
        name: ToolkitFence
      title: ToolkitFence
      description: ToolkitFence
    ToolkitFenceForCreation:
      properties:
        descriptionLocalized:
          $ref: '#/components/schemas/LocaleString'
        nameLocalized:
          $ref: '#/components/schemas/LocaleString'
        active:
          default: false
          description: Indicates whether this fence is active or not.
          type: boolean
        comparisonRule:
          $ref: '#/components/schemas/ToolkitComparisonRule'
        description:
          description: The description of this fence.
          example: Some text that describes what the fence does.
          type: string
        entity1:
          $ref: '#/components/schemas/ToolkitAllowedEntities'
          deprecated: true
          description: >-
            This field is obsolete, was replaced by the entity fields at
            predicate level.
        entity2:
          $ref: '#/components/schemas/ToolkitAllowedEntities'
          deprecated: true
          description: >-
            This field is obsolete, was replaced by the entity fields at
            predicate level.
        name:
          description: The name of the fence.
          example: CustomFence
          type: string
        order:
          description: Order in which this fence is executed
          example: 1
          type: integer
        rule:
          $ref: '#/components/schemas/ToolkitRule'
      required:
        - name
        - nameLocalized
        - active
        - order
      type: object
      xml:
        name: ToolkitFenceForCreation
      title: ToolkitFenceForCreation
      description: ToolkitFenceForCreation
    ToolkitFenceForModification:
      allOf:
        - $ref: '#/components/schemas/ToolkitFenceForCreation'
      properties:
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          format: int64
          type: integer
      required:
        - version
      type: object
      xml:
        name: ToolkitFenceForModification
      title: ToolkitFenceForModification
      description: ToolkitFenceForModification
    ToolkitFencesTransporter:
      properties:
        fences:
          items:
            $ref: '#/components/schemas/ToolkitFence'
          type: array
        total:
          description: Total number of found entities for this query
          example: 42
          type: integer
      required:
        - fences
        - total
      type: object
      xml:
        name: ToolkitFenceTransporter
      title: ToolkitFencesTransporter
      description: ToolkitFencesTransporter
    ToolkitOperatorType:
      description: |-
        Type of operator used for a toolkit fence or rating:
          * `TAG_EQUALS`- the entity2 should have a tag with the same id as the entity1 and the value is dynamically matched
          * `VALUE_EQUALS`- compares the tag of entity1 with the tag of entity2 attending to the configured rule and returns true if it does match
          * `VALUE_NOT_EQUALS`- compares the tag of entity1 with the tag of entity2 attending to the configured rule and returns true if it does not match
      enum:
        - TAG_EQUALS
        - VALUE_EQUALS
        - VALUE_NOT_EQUALS
      type: string
      xml:
        name: ToolkitOperatorType
      title: ToolkitOperatorType
    ToolkitPredicate:
      description: >-
        The predicate for a Toolkit V2 Fence that defines how conditions are
        constructed
      properties:
        entity:
          $ref: '#/components/schemas/ToolkitAllowedEntities'
        entityOperator:
          $ref: '#/components/schemas/ToolkitEntityOperatorType'
        expectedValue:
          oneOf:
            - type: string
            - type: number
            - type: boolean
        propertyPath:
          minLength: 1
          type: string
        transformation:
          $ref: '#/components/schemas/ToolkitTransformationType'
        transformationArgs:
          items:
            oneOf:
              - type: string
              - type: number
              - type: boolean
          type: array
      required:
        - propertyPath
        - entityOperator
        - entity
      type: object
      xml:
        name: ToolkitPredicate
      title: ToolkitPredicate
    ToolkitPredicateConnector:
      description: The allowed operators for connecting multiple predicates
      enum:
        - OR
        - AND
      type: string
      xml:
        name: ToolkitPredicateConnector
      title: ToolkitPredicateConnector
    ToolkitPredicateDecisionDetail:
      properties:
        evaluationResult:
          type: boolean
        originalValue:
          items:
            type: string
          type: array
        predicate:
          $ref: '#/components/schemas/ToolkitPredicate'
        transformedValue:
          items:
            type: string
          type: array
      required:
        - originalValue
        - transformedValue
        - evaluationResult
        - predicate
      title: ToolkitPredicateDecisionDetail
      description: ToolkitPredicateDecisionDetail
    ToolkitPredicatesDecisionDetail:
      properties:
        connector:
          $ref: '#/components/schemas/ToolkitPredicateConnector'
        predicates:
          items:
            $ref: '#/components/schemas/ToolkitPredicateDecisionDetail'
          type: array
      required:
        - connector
        - predicates
      title: ToolkitPredicatesDecisionDetail
      description: ToolkitPredicatesDecisionDetail
    ToolkitRating:
      allOf:
        - $ref: '#/components/schemas/ToolkitRatingForModification'
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        id:
          description: The id of the toolkit rating
          example: LGMl2DuvPnfPoSHhYFOm
          type: string
      required:
        - id
      type: object
      xml:
        name: ToolkitRating
      title: ToolkitRating
      description: ToolkitRating
    ToolkitRatingForCreation:
      properties:
        descriptionLocalized:
          $ref: '#/components/schemas/LocaleString'
        nameLocalized:
          $ref: '#/components/schemas/LocaleString'
        active:
          default: false
          description: Indicates whether this fence is active or not
          type: boolean
        comparisonRule:
          $ref: '#/components/schemas/ToolkitComparisonRule'
        description:
          description: The description of this rating
          example: Some text that describes what the rating does.
          type: string
        entity1:
          $ref: '#/components/schemas/ToolkitAllowedEntities'
          deprecated: true
          description: >-
            This field is obsolete, was replaced by the entity fields at
            predicate level.
        entity2:
          $ref: '#/components/schemas/ToolkitAllowedEntities'
          deprecated: true
          description: >-
            This field is obsolete, was replaced by the entity fields at
            predicate level.
        maxPenalty:
          description: The maximum penalty this rating can have
          example: 100
          type: integer
        name:
          description: The name of the rating
          example: CustomRating
          type: string
        rule:
          $ref: '#/components/schemas/ToolkitRule'
      required:
        - name
        - nameLocalized
        - active
        - maxPenalty
      type: object
      xml:
        name: ToolkitRatingForCreation
      title: ToolkitRatingForCreation
      description: ToolkitRatingForCreation
    ToolkitRatingForModification:
      allOf:
        - $ref: '#/components/schemas/ToolkitRatingForCreation'
      properties:
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          format: int64
          type: integer
      required:
        - version
      type: object
      xml:
        name: ToolkitRatingForModification
      title: ToolkitRatingForModification
      description: ToolkitRatingForModification
    ToolkitRatingTransporter:
      properties:
        ratings:
          items:
            $ref: '#/components/schemas/ToolkitRating'
          type: array
        total:
          description: Total number of entities found for this query
          example: 42
          type: integer
      required:
        - ratings
        - total
      type: object
      xml:
        name: ToolkitRatingTransporter
      title: ToolkitRatingTransporter
      description: ToolkitRatingTransporter
    ToolkitRule:
      description: >-
        The rule, containing the left predicates and the right predicates, that
        will be evaluated applying a RuleOperator
      properties:
        evaluationScope:
          $ref: '#/components/schemas/ToolkitRuleScope'
        leftPart:
          $ref: '#/components/schemas/ToolkitRulePart'
        operator:
          $ref: '#/components/schemas/ToolkitRuleOperatorType'
        rightPart:
          $ref: '#/components/schemas/ToolkitRulePart'
      required:
        - operator
        - leftPart
        - rightPart
        - evaluationScope
      type: object
      xml:
        name: ToolkitRule
      title: ToolkitRule
    ToolkitRuleComparePropertiesOperatorResultExplanation:
      enum:
        - ALL_PREDICATES_MET
        - NOT_ALL_PREDICATES_MET
        - SKIPPED_BECAUSE_OF_ERROR
      title: ToolkitRuleComparePropertiesOperatorResultExplanation
      description: ToolkitRuleComparePropertiesOperatorResultExplanation
    ToolkitRuleComparisonOperatorType:
      description: >-
        The type of the rule operator applied to the results of evaluating the
        left predicates and the right predicates
      enum:
        - NO_MATCHES
        - ALL_MATCHES
        - LEFT_CONTAINS_RIGHT
        - RIGHT_CONTAINS_LEFT
      type: string
      xml:
        name: ToolkitTransformationType
      title: ToolkitRuleComparisonOperatorType
    ToolkitRuleOperatorResultExplanation:
      enum:
        - SKIPPED
        - BOTH_CONDITIONS_MET
        - ONLY_FIRST_CONDITION_MET
        - ONLY_SECOND_CONDITION_MET
        - SKIPPED_BECAUSE_OF_ERROR
      title: ToolkitRuleOperatorResultExplanation
      description: ToolkitRuleOperatorResultExplanation
    ToolkitRuleOperatorType:
      description: >-
        The type of the rule operator applied to the results of evaluating the
        left predicates and the right predicates
      enum:
        - EQUALS
      type: string
      xml:
        name: ToolkitTransformationType
      title: ToolkitRuleOperatorType
    ToolkitRulePart:
      additionalProperties: false
      description: >-
        One half of the rule, containing either the left or right predicates and
        booleanOperator.
      properties:
        predicateConnector:
          $ref: '#/components/schemas/ToolkitPredicateConnector'
        predicates:
          items:
            $ref: '#/components/schemas/ToolkitPredicate'
          minItems: 1
          type: array
      required:
        - predicates
      type: object
      xml:
        name: ToolkitRulePart
      title: ToolkitRulePart
    ToolkitRuleScope:
      enum:
        - WHOLE_ENTITY
        - LINE_ITEM
      type: string
      xml:
        name: ToolkitRuleScope
      title: ToolkitRuleScope
      description: ToolkitRuleScope
    ToolkitTransformationType:
      description: >-
        The transformations available to apply on the entity property value
        before a predicate is evaluated
      enum:
        - SUBSTRING
        - COUNT
        - SUM
        - LAST
      type: string
      xml:
        name: ToolkitTransformationType
      title: ToolkitTransformationType
    TrackingStatus:
      description: The state of the KEP
      enum:
        - registered
        - picked_up
        - delivered
        - not_delivered
        - transit
        - exception
        - out_for_delivery
        - destroyed
        - unknown
        - canceled
        - awaits_pickup_by_receiver
        - delayed
        - notification
      title: TrackingStatus
      type: string
    Transfer:
      properties:
        transferId:
          type: string
        transferType:
          enum:
            - SUPPLIER
            - RECEIVER
          type: string
      required:
        - transferId
        - transferType
      title: Transfer
      description: Transfer
    TransferTimeLine:
      properties:
        calculationStartPoint:
          description: >-
            The date and time from which all time-related calculations for the
            corresponding items are based.
          example: 2020-02-03T08:45:50.525Z
          format: date-time
          type: string
        earliestPickingStart:
          description: >-
            The earliest date and time when picking for the corresponding items
            can begin.
          example: 2020-02-03T08:45:50.525Z
          format: date-time
          type: string
        earliestPossibleDeliveryTime:
          description: >-
            The earliest date at which the corresponding items can be delivered
            to the recipient.
          example: 2020-02-03T00:00:00.000Z
          format: date-time
          type: string
        latestPickingStart:
          description: >-
            The latest date and time when picking for the corresponding items
            can begin.
          example: 2020-02-03T08:45:50.525Z
          format: date-time
          type: string
        targetTime:
          description: >-
            The desired date and time by which the corresponding items should be
            fulfilled.
          example: 2020-02-03T08:45:50.525Z
          format: date-time
          type: string
      required:
        - calculationStartPoint
        - earliestPickingStart
        - latestPickingStart
        - targetTime
      type: object
      xml:
        name: TransferTimeLine
      title: TransferTimeLine
      description: TransferTimeLine
    TransitTimeConfiguration:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        calculationStrategy:
          enum:
            - EARLIEST
            - LATEST
          type: string
        id:
          type: string
      required:
        - id
        - calculationStrategy
      type: object
      title: TransitTimeConfiguration
      description: TransitTimeConfiguration
    TransitTimeConfigurationForUpsert:
      allOf:
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        calculationStrategy:
          enum:
            - EARLIEST
            - LATEST
          type: string
      required:
        - calculationStrategy
      type: object
      title: TransitTimeConfigurationForUpsert
      description: TransitTimeConfigurationForUpsert
    UBSendCarrierConfiguration:
      allOf:
        - $ref: '#/components/schemas/CarrierConfiguration'
      description: Configuration of UBSend Carrier
      title: UBSendCarrierConfiguration
    UBSendCredentials:
      allOf:
        - $ref: '#/components/schemas/AbstractCarrierCredentials'
        - properties:
            clientId:
              description: Id provided by UBSend
              type: string
            password:
              description: Password to communicate with the UBSend Api
              type: string
            username:
              description: User name to communicate with the UBSend Api
              type: string
          required:
            - username
            - password
            - clientId
          type: object
      description: UBSend Credentials.
      title: UBSendCredentials
      xml:
        name: UBSendCredentials
    UpcomingTimeTriggeredRerouteWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          $ref: '#/components/schemas/UpcomingTimeTriggeredRerouteWebHookEventPayload'
      required:
        - payload
      type: object
      title: UpcomingTimeTriggeredRerouteWebHookEvent
      description: UpcomingTimeTriggeredRerouteWebHookEvent
    UpcomingTimeTriggeredRerouteWebHookEventPayload:
      properties:
        facilityData:
          properties:
            facilityRef:
              type: string
            name:
              type: string
            timeZone:
              type: string
          required:
            - name
            - facilityRef
            - timeZone
        pickJobData:
          properties:
            created:
              example: 2020-02-03T08:45:51.525Z
              format: date-time
              type: string
            pickJobRef:
              type: string
            shortId:
              type: string
            tenantOrderId:
              type: string
          required:
            - pickJobRef
            - tenantOrderId
            - shortId
            - created
        rerouteDate:
          example: 2020-02-03T08:45:51.525Z
          format: date-time
          type: string
      required:
        - pickJobData
        - facilityData
        - rerouteDate
      title: UpcomingTimeTriggeredRerouteWebHookEventPayload
      description: UpcomingTimeTriggeredRerouteWebHookEventPayload
    UpdateChannelByIdAction:
      properties:
        channel:
          oneOf:
            - $ref: '#/components/schemas/EmailNotificationChannel'
            - $ref: '#/components/schemas/ClientNotificationChannel'
        name:
          enum:
            - UPDATE_CHANNEL
          type: string
        version:
          type: number
      required:
        - name
        - channel
        - version
      title: UpdateChannelByIdAction
      type: object
      description: UpdateChannelByIdAction
    UpdateFacilityCoordinatesActionParameter:
      allOf:
        - $ref: '#/components/schemas/AbstractFacilityActionsParameter'
      description: Update facility Coordinates.
      properties:
        coordinates:
          $ref: '#/components/schemas/Coordinates'
        name:
          enum:
            - UPDATE_FACILITY_COORDINATES
          type: string
      required:
        - name
        - coordinates
        - version
      title: UpdateFacilityCoordinatesActionParameter
    UpdateGdprCleanupDateAction:
      allOf:
        - $ref: '#/components/schemas/AbstractModificationAction'
        - additionalProperties: false
          properties:
            action:
              description: >-
                Use value 'UpdateGdprCleanupDateAction' to update the GDPR
                cleanup date of a process.
              enum:
                - UpdateGdprCleanupDateAction
              type: string
            gdprCleanupDate:
              description: >-
                The date when the process and all connected entities should be
                cleaned up / anonymized.
              format: date
              type: string
          required:
            - action
            - gdprCleanupDate
          type: object
      description: Action to set the GDPR cleanup date of a process.
      title: UpdateGdprCleanupDateAction
      xml:
        name: UpdateGdprCleanupDateAction
    UpdateHandoverLineItemRecordableAttributesActionEnum:
      enum:
        - UPDATE_HANDOVER_LINE_ITEM_RECORDABLE_ATTRIBUTES
      type: string
      title: UpdateHandoverLineItemRecordableAttributesActionEnum
      description: UpdateHandoverLineItemRecordableAttributesActionEnum
    UpdateHandoverLineItemRecordableAttributesActionParameter:
      additionalProperties: false
      properties:
        name:
          $ref: >-
            #/components/schemas/UpdateHandoverLineItemRecordableAttributesActionEnum
        recordableAttributeUpdates:
          items:
            $ref: '#/components/schemas/RecordableAttributeForUpdate'
          type: array
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          type: integer
      required:
        - name
        - version
        - recordableAttributeUpdates
      title: UpdateHandoverLineItemRecordableAttributesActionParameter
      type: object
      description: UpdateHandoverLineItemRecordableAttributesActionParameter
    UpdateLineItemOnPackingTargetContainer:
      allOf:
        - $ref: '#/components/schemas/AbstractModificationAction'
        - additionalProperties: false
          properties:
            action:
              description: >-
                Use UpdateLineItemOnPackingTargetContainer to change a line item
                on an existing packing container
              enum:
                - UpdateLineItemOnPackingTargetContainer
              type: string
            lineItem:
              $ref: '#/components/schemas/PackingTargetContainerLineItem'
          required:
            - action
            - lineItem
          type: object
      description: Action to a update a line item of a packing target container.
      title: UpdateLineItemOnPackingTargetContainer
      xml:
        name: UpdateLineItemOnPackingTargetContainer
    UpdatePackingTargetContainerLineItemAction:
      additionalProperties: false
      description: Action to update a packing target container of a line item.
      properties:
        name:
          $ref: '#/components/schemas/UpdatePackingTargetContainerLineItemEnum'
        payload:
          additionalProperties: false
          properties:
            lineItem:
              $ref: '#/components/schemas/PackingTargetContainerLineItem'
          required:
            - lineItem
        version:
          description: Version of the entity to be changed
          minimum: 0
          type: integer
      required:
        - version
        - payload
        - name
      title: UpdatePackingTargetContainerLineItemAction
    UpdatePackingTargetContainerLineItemEnum:
      enum:
        - UpdateLineItem
      type: string
      title: UpdatePackingTargetContainerLineItemEnum
      description: UpdatePackingTargetContainerLineItemEnum
    UpdatePackingTargetContainerLineItemRecordableAttributes:
      allOf:
        - $ref: '#/components/schemas/AbstractModificationAction'
        - additionalProperties: false
          properties:
            action:
              description: >-
                Use this action to update the recordable attributes of the line
                items of a packing target container
              enum:
                - UpdatePackingTargetContainerLineItemRecordableAttributes
              type: string
            recordableAttributeUpdates:
              items:
                $ref: '#/components/schemas/RecordableAttributeForUpdate'
              type: array
          required:
            - action
            - recordableAttributeUpdates
          type: object
      description: >-
        Action to a update the recordable attributes of the line items of a
        packing target container.
      title: UpdatePackingTargetContainerLineItemRecordableAttributes
      xml:
        name: UpdatePackingTargetContainerLineItemRecordableAttributes
    UpdatePackLineItemRecordableAttributesActionEnum:
      enum:
        - UPDATE_PACK_LINE_ITEM_RECORDABLE_ATTRIBUTES
      type: string
      title: UpdatePackLineItemRecordableAttributesActionEnum
      description: UpdatePackLineItemRecordableAttributesActionEnum
    UpdatePackLineItemRecordableAttributesActionParameter:
      additionalProperties: false
      properties:
        name:
          $ref: >-
            #/components/schemas/UpdatePackLineItemRecordableAttributesActionEnum
        recordableAttributeUpdates:
          items:
            $ref: '#/components/schemas/RecordableAttributeForUpdate'
          type: array
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          type: integer
      required:
        - name
        - version
        - recordableAttributeUpdates
      title: UpdatePackLineItemRecordableAttributesActionParameter
      type: object
      description: UpdatePackLineItemRecordableAttributesActionParameter
    UpdateParcelItemRecordableAttributesActionEnum:
      enum:
        - UPDATE_PARCEL_ITEM_RECORDABLE_ATTRIBUTES
      type: string
      title: UpdateParcelItemRecordableAttributesActionEnum
      description: UpdateParcelItemRecordableAttributesActionEnum
    UpdateParcelItemRecordableAttributesActionParameter:
      additionalProperties: false
      properties:
        name:
          $ref: '#/components/schemas/UpdateParcelItemRecordableAttributesActionEnum'
        recordableAttributeUpdates:
          items:
            $ref: '#/components/schemas/RecordableAttributeForUpdate'
          type: array
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          type: integer
      required:
        - name
        - version
        - recordableAttributeUpdates
      title: UpdateParcelItemRecordableAttributesActionParameter
      type: object
      description: UpdateParcelItemRecordableAttributesActionParameter
    UpdatePickLineItemRecordableAttributesActionEnum:
      enum:
        - UPDATE_PICK_LINE_ITEM_RECORDABLE_ATTRIBUTES
      type: string
      title: UpdatePickLineItemRecordableAttributesActionEnum
      description: UpdatePickLineItemRecordableAttributesActionEnum
    UpdatePickLineItemRecordableAttributesActionParameter:
      additionalProperties: false
      properties:
        name:
          $ref: >-
            #/components/schemas/UpdatePickLineItemRecordableAttributesActionEnum
        recordableAttributeUpdates:
          items:
            $ref: '#/components/schemas/RecordableAttributeForUpdate'
          type: array
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          type: integer
      required:
        - name
        - version
        - recordableAttributeUpdates
      title: UpdatePickLineItemRecordableAttributesActionParameter
      type: object
      description: UpdatePickLineItemRecordableAttributesActionParameter
    UpdateRefuseReasonParameter:
      additionalProperties: false
      properties:
        availableRefuseReasonForUpdate:
          $ref: '#/components/schemas/AvailableRefuseReasonForUpdate'
        handoverConfigurationVersion:
          type: number
      required:
        - handoverConfigurationVersion
        - availableRefuseReasonForUpdate
      title: UpdateRefuseReasonParameter
      description: UpdateRefuseReasonParameter
    UpdateServiceDataAvailableLineItemsActionEnum:
      enum:
        - UPDATE_SERVICE_DATA_AVAILABLE_LINE_ITEMS
      type: string
      title: UpdateServiceDataAvailableLineItemsActionEnum
      description: UpdateServiceDataAvailableLineItemsActionEnum
    UpdateServiceDataAvailableLineItemsActionParameter:
      additionalProperties: false
      properties:
        name:
          $ref: '#/components/schemas/UpdateServiceDataAvailableLineItemsActionEnum'
        serviceDataAvailableLineItemsUpdates:
          description: availableLineItem Updates
          items:
            $ref: '#/components/schemas/ServiceDataAvailableLineItemForUpdate'
          minItems: 1
          type: array
        serviceDataVersion:
          description: Version of the service data
          minimum: 0
          type: integer
      required:
        - name
        - serviceDataAvailableLineItemsUpdates
        - serviceDataVersion
      title: UpdateServiceDataAvailableLineItemsActionParameter
      description: UpdateServiceDataAvailableLineItemsActionParameter
    UpdateServiceJobLineItemRecordableAttributesActionEnum:
      enum:
        - UPDATE_SERVICE_JOB_LINE_ITEM_RECORDABLE_ATTRIBUTES
      type: string
      title: UpdateServiceJobLineItemRecordableAttributesActionEnum
      description: UpdateServiceJobLineItemRecordableAttributesActionEnum
    UpdateServiceJobLineItemRecordableAttributesActionParameter:
      additionalProperties: false
      properties:
        name:
          $ref: >-
            #/components/schemas/UpdateServiceJobLineItemRecordableAttributesActionEnum
        recordableAttributeUpdates:
          items:
            $ref: '#/components/schemas/RecordableAttributeForUpdate'
          type: array
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          type: integer
      required:
        - name
        - version
        - recordableAttributeUpdates
      title: UpdateServiceJobLineItemRecordableAttributesActionParameter
      type: object
      description: UpdateServiceJobLineItemRecordableAttributesActionParameter
    UpdateShipmentLineItemRecordableAttributesActionEnum:
      enum:
        - UPDATE_SHIPMENT_LINE_ITEM_RECORDABLE_ATTRIBUTES
      type: string
      title: UpdateShipmentLineItemRecordableAttributesActionEnum
      description: UpdateShipmentLineItemRecordableAttributesActionEnum
    UpdateShipmentLineItemRecordableAttributesActionParameter:
      additionalProperties: false
      properties:
        name:
          $ref: >-
            #/components/schemas/UpdateShipmentLineItemRecordableAttributesActionEnum
        recordableAttributeUpdates:
          items:
            $ref: '#/components/schemas/RecordableAttributeForUpdate'
          type: array
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          type: integer
      required:
        - name
        - version
        - recordableAttributeUpdates
      title: UpdateShipmentLineItemRecordableAttributesActionParameter
      type: object
      description: UpdateShipmentLineItemRecordableAttributesActionParameter
    User:
      properties:
        assignedFacilities:
          deprecated: true
          description: 'Deprecated: Find all relevant information in assignedRoles instead'
          items:
            $ref: '#/components/schemas/UserAssignedFacility'
          type: array
        assignedRoles:
          description: The assigned roles of a user
          items:
            $ref: '#/components/schemas/AssignedRoles'
          type: array
        authenticationProvider:
          allOf:
            - $ref: '#/components/schemas/AuthenticationProvider'
          description: The authentication provider of the user
        authenticationProviderType:
          $ref: '#/components/schemas/SupportedLocale'
        created:
          description: Creation date of the user
          format: date-time
          type: string
        customClaims:
          allOf:
            - $ref: '#/components/schemas/CustomClaims'
          deprecated: true
          description: 'Deprecated: Find all relevant information in assignedRoles instead'
        email:
          description: The email of the user
          example: john.doe@example.com
          type: string
        facilityLimitations:
          description: >-
            Facilities where at least one role of the user has access to. Not
            present if the user has at least one role which is unrestricted
          items:
            type: string
          type: array
        firstname:
          description: The first name of the user
          example: John
          type: string
        id:
          description: The id of the user
          type: string
        lastModified:
          description: Last modification date of the user
          format: date-time
          type: string
        lastname:
          description: The last name of the user
          example: Doe
          type: string
        locale:
          $ref: '#/components/schemas/SupportedLocale'
        username:
          description: The username of the user
          example: johndoe
          type: string
        version:
          description: Version of the user
          example: 1
          type: number
      required:
        - firstname
        - lastname
        - username
        - id
        - authenticationProvider
        - version
        - assignedRoles
      title: User
      type: object
      description: User
    UserActionEnum:
      description: The type of action to perform
      enum:
        - ModifyUser
      title: UserActionEnum
      type: string
    UserAssignedFacilitiesFilter:
      properties:
        facilityRef:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by facilityRef
      title: UserAssignedFacilitiesFilter
      type: object
      description: UserAssignedFacilitiesFilter
    UserAssignedFacilitiesListFilter:
      properties:
        contains:
          allOf:
            - $ref: '#/components/schemas/UserAssignedFacilitiesFilter'
          description: Contains returns if at least one entry matches
      title: UserAssignedFacilitiesListFilter
      type: object
      description: UserAssignedFacilitiesListFilter
    UserAssignedFacility:
      properties:
        assignedZones:
          description: The assigned zones of the user
          items:
            $ref: '#/components/schemas/UserAssignedZone'
          type: array
        facilityRef:
          description: The id of the assigned facility
          type: string
        id:
          description: The id of the assigned facility
          type: string
      required:
        - facilityRef
        - id
      title: UserAssignedFacility
      type: object
      description: UserAssignedFacility
    UserAssignedFacilityForCreation:
      properties:
        assignedZones:
          description: The assigned zones of the user
          items:
            $ref: '#/components/schemas/UserAssignedZone'
          type: array
        facilityRef:
          description: The id of the assigned facility
          type: string
      required:
        - facilityRef
      title: UserAssignedFacilityForCreation
      type: object
      description: UserAssignedFacilityForCreation
    UserAssignedRolesContextLimitationsContextTypesEnumFilter:
      properties:
        eq:
          description: Search by type
          enum:
            - FACILITY
            - FACILITY_GROUP
            - ROLE
            - ZONE
          type: string
        in:
          description: Search by type
          items:
            enum:
              - FACILITY
              - FACILITY_GROUP
              - ROLE
              - ZONE
            type: string
          type: array
        notEq:
          description: Search by type
          enum:
            - FACILITY
            - FACILITY_GROUP
            - ROLE
            - ZONE
          type: string
      title: UserAssignedRolesContextLimitationsContextTypesEnumFilter
      type: object
      description: UserAssignedRolesContextLimitationsContextTypesEnumFilter
    UserAssignedRolesContextLimitationsFilter:
      properties:
        type:
          allOf:
            - $ref: >-
                #/components/schemas/UserAssignedRolesContextLimitationsContextTypesEnumFilter
          description: Search by type
        values:
          allOf:
            - $ref: '#/components/schemas/StringListFilter'
          description: Search by values
      title: UserAssignedRolesContextLimitationsFilter
      type: object
      description: UserAssignedRolesContextLimitationsFilter
    UserAssignedRolesContextLimitationsListFilter:
      properties:
        contains:
          allOf:
            - $ref: '#/components/schemas/UserAssignedRolesContextLimitationsFilter'
          description: Contains returns if at least one entry matches
      title: UserAssignedRolesContextLimitationsListFilter
      type: object
      description: UserAssignedRolesContextLimitationsListFilter
    UserAssignedRolesFilter:
      properties:
        contextLimitations:
          allOf:
            - $ref: >-
                #/components/schemas/UserAssignedRolesContextLimitationsListFilter
          description: Nested list search by contextLimitations
        ref:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by ref
      title: UserAssignedRolesFilter
      type: object
      description: UserAssignedRolesFilter
    UserAssignedRolesListFilter:
      properties:
        contains:
          allOf:
            - $ref: '#/components/schemas/UserAssignedRolesFilter'
          description: Contains returns if at least one entry matches
      title: UserAssignedRolesListFilter
      type: object
      description: UserAssignedRolesListFilter
    UserAssignedZone:
      properties:
        zoneRef:
          description: The id of the assigned zone
          type: string
      required:
        - zoneRef
      title: UserAssignedZone
      type: object
      description: UserAssignedZone
    UserAuthAuthenticationProviderTypeEnumFilter:
      properties:
        eq:
          description: Search by type
          enum:
            - EMAIL_PASSWORD
            - OIDC
          type: string
        in:
          description: Search by type
          items:
            enum:
              - EMAIL_PASSWORD
              - OIDC
            type: string
          type: array
        notEq:
          description: Search by type
          enum:
            - EMAIL_PASSWORD
            - OIDC
          type: string
      title: UserAuthAuthenticationProviderTypeEnumFilter
      type: object
      description: UserAuthAuthenticationProviderTypeEnumFilter
    UserAuthFilter:
      properties:
        type:
          allOf:
            - $ref: >-
                #/components/schemas/UserAuthAuthenticationProviderTypeEnumFilter
          description: Search by type
      title: UserAuthFilter
      type: object
      description: UserAuthFilter
    UserCreatedWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          $ref: '#/components/schemas/User'
      required:
        - payload
      type: object
      title: UserCreatedWebHookEvent
      description: UserCreatedWebHookEvent
    UserCustomClaimsFilter:
      properties:
        roles:
          allOf:
            - $ref: '#/components/schemas/UserCustomClaimsRolesListFilter'
          description: Nested list search by roles
      title: UserCustomClaimsFilter
      type: object
      description: UserCustomClaimsFilter
    UserCustomClaimsRolesFilter:
      properties:
        facilities:
          allOf:
            - $ref: '#/components/schemas/StringListFilter'
          description: Search by facilities
        name:
          allOf:
            - $ref: >-
                #/components/schemas/UserCustomClaimsRolesUserRoleNamesEnumFilter
          description: Search by name
      title: UserCustomClaimsRolesFilter
      type: object
      description: UserCustomClaimsRolesFilter
    UserCustomClaimsRolesListFilter:
      properties:
        contains:
          allOf:
            - $ref: '#/components/schemas/UserCustomClaimsRolesFilter'
          description: Contains returns if at least one entry matches
      title: UserCustomClaimsRolesListFilter
      type: object
      description: UserCustomClaimsRolesListFilter
    UserCustomClaimsRolesUserRoleNamesEnumFilter:
      properties:
        eq:
          description: Search by name
          enum:
            - FULFILLER
            - SUPERVISOR
            - ADMINISTRATOR
          type: string
        in:
          description: Search by name
          items:
            enum:
              - FULFILLER
              - SUPERVISOR
              - ADMINISTRATOR
            type: string
          type: array
        notEq:
          description: Search by name
          enum:
            - FULFILLER
            - SUPERVISOR
            - ADMINISTRATOR
          type: string
      title: UserCustomClaimsRolesUserRoleNamesEnumFilter
      type: object
      description: UserCustomClaimsRolesUserRoleNamesEnumFilter
    UserDeletedWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          $ref: '#/components/schemas/User'
      required:
        - payload
      type: object
      title: UserDeletedWebHookEvent
      description: UserDeletedWebHookEvent
    UserForCreation:
      properties:
        assignedFacilities:
          description: The assigned facilities of the user
          items:
            $ref: '#/components/schemas/UserAssignedFacilityForCreation'
          type: array
        assignedRoles:
          description: The roles which are assigned to the user
          items:
            $ref: '#/components/schemas/AssignedRoles'
          maxItems: 10
          minItems: 1
          type: array
        email:
          description: The email of the user
          example: john.doe@example.com
          type: string
        firstname:
          description: The first name of the user
          example: John
          type: string
        lastname:
          description: The last name of the user
          example: Doe
          type: string
        locale:
          $ref: '#/components/schemas/SupportedLocale'
        password:
          description: The password of the user
          example: elephantMangoDance123
          type: string
        roles:
          deprecated: true
          description: 'Deprecated: Use assignedRoles instead'
          items:
            $ref: '#/components/schemas/UserRole'
          maxItems: 1
          minItems: 1
          type: array
        username:
          description: The username of the user
          example: johndoe
          type: string
      required:
        - firstname
        - lastname
        - username
        - password
      title: UserForCreation
      type: object
      description: UserForCreation
    UserModificationHistory:
      additionalProperties: false
      properties:
        modificationDate:
          format: date-time
          type: string
        userId:
          description: ID of the user who commited this modification
          type: string
        username:
          description: Username of the user who commited this modification
          type: string
      required:
        - modificationDate
        - username
      type: object
      title: UserModificationHistory
      description: UserModificationHistory
    UserPaginatedResult:
      properties:
        pageInfo:
          allOf:
            - $ref: '#/components/schemas/PageInfo'
          description: Pagination information for the search result.
        total:
          description: >-
            The total number of items matching the search criteria. Only filled,
            if withTotal is set to true in the search options.
          minimum: 0
          type: number
        users:
          items:
            $ref: '#/components/schemas/User'
          type: array
      required:
        - pageInfo
        - users
      title: UserPaginatedResult
      type: object
      description: UserPaginatedResult
    UserPasswordResetAction:
      properties:
        name:
          $ref: '#/components/schemas/UserPublicActionEnum'
        username:
          description: The username to request password reset for
          example: johndoe
          type: string
      required:
        - name
        - username
      title: UserPasswordResetAction
      type: object
      description: UserPasswordResetAction
    UserPatchActions:
      properties:
        actions:
          description: The actions to perform
          items:
            $ref: '#/components/schemas/ModifyUserAction'
          type: array
        version:
          description: The version of the user to modify
          type: number
      required:
        - actions
        - version
      title: UserPatchActions
      type: object
      description: UserPatchActions
    UserPublicActionEnum:
      description: The action to perform
      enum:
        - REQUEST_PASSWORD_RESET
      title: UserPublicActionEnum
      type: string
    UserRole:
      properties:
        contextLimitations:
          description: The context limitations for this role
          items:
            $ref: '#/components/schemas/ContextLimitation'
          type: array
        facilities:
          description: The facilities the user has access to
          items:
            type: string
          maxItems: 23
          type: array
        name:
          description: The name of the role
          type: string
      required:
        - name
      title: UserRole
      type: object
      description: UserRole
    UserRoleNames:
      description: All available user roles
      enum:
        - FULFILLER
        - SUPERVISOR
        - ADMINISTRATOR
      type: string
      xml:
        name: UserRoleNames
      title: UserRoleNames
    UserSearchPayload:
      properties:
        after:
          deprecated: false
          description: >-
            The cursor to start after. The value is provided in the
            `pageInfo.endCursor` field of the response.
          type: string
        options:
          $ref: '#/components/schemas/SearchOptions'
        query:
          $ref: '#/components/schemas/UserSearchQuery'
        size:
          default: 20
          description: Number of items to return.
          maximum: 250
          minimum: 1
          type: number
        sort:
          description: Use for sorting the result.
          items:
            $ref: '#/components/schemas/UserSort'
          maxItems: 1
          minItems: 1
          type: array
        startAfterId:
          deprecated: true
          description: >-
            The ID to start after. Deprecated, use `after` with the value
            provided in `pageInfo.endCursor` instead.
          type: string
      required:
        - query
      title: UserSearchPayload
      type: object
      description: UserSearchPayload
    UserSearchQuery:
      properties:
        and:
          items:
            $ref: '#/components/schemas/UserSearchQuery'
          type: array
        assignedFacilities:
          allOf:
            - $ref: '#/components/schemas/UserAssignedFacilitiesListFilter'
          description: Nested list search by assignedFacilities
        assignedRoles:
          allOf:
            - $ref: '#/components/schemas/UserAssignedRolesListFilter'
          description: Nested list search by assignedRoles
        auth:
          allOf:
            - $ref: '#/components/schemas/UserAuthFilter'
          description: Nested search by auth
        customAttributes:
          additionalProperties:
            anyOf:
              - $ref: '#/components/schemas/BooleanFilter'
              - $ref: '#/components/schemas/StringEqFilter'
              - $ref: '#/components/schemas/NumberEqFilter'
              - $ref: '#/components/schemas/DateFilter'
          description: Search by custom attributes
          type: object
        customClaims:
          allOf:
            - $ref: '#/components/schemas/UserCustomClaimsFilter'
          description: Nested search by customClaims
        facilityLimitations:
          allOf:
            - $ref: '#/components/schemas/StringListExistsFilter'
          description: Search by facilityLimitations
        firstname:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by firstname
        lastModified:
          allOf:
            - $ref: '#/components/schemas/DateFilter'
          description: Search by lastModified
        lastname:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by lastname
        or:
          items:
            $ref: '#/components/schemas/UserSearchQuery'
          type: array
        username:
          allOf:
            - $ref: '#/components/schemas/StringSearchFilter'
          description: Search by username
      title: UserSearchQuery
      type: object
      description: UserSearchQuery
    UserSort:
      properties:
        customAttributes:
          additionalProperties: true
          maxProperties: 1
          minProperties: 1
          type: object
        firstname:
          enum:
            - ASC
            - DESC
          type: string
        lastname:
          enum:
            - ASC
            - DESC
          type: string
        username:
          enum:
            - ASC
            - DESC
          type: string
      title: UserSort
      type: object
      description: UserSort
    UserUpdatedWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          $ref: '#/components/schemas/User'
      required:
        - payload
      type: object
      title: UserUpdatedWebHookEvent
      description: UserUpdatedWebHookEvent
    VceCarrierConfiguration:
      allOf:
        - $ref: '#/components/schemas/CarrierConfiguration'
      description: Configuration of VCE Carrier
      title: VceCarrierConfiguration
    VceCarrierCredentials:
      allOf:
        - $ref: '#/components/schemas/AbstractCarrierCredentials'
        - properties:
            password:
              description: Password to authenticate with the VCE Api
              type: string
            user:
              description: Internal user to identify with the VCE Api
              type: string
          required:
            - user
            - password
          type: object
      description: VCE Credentials.
      title: VceCarrierCredentials
      xml:
        name: VceCarrierCredentials
    VersionedResource:
      properties:
        created:
          description: >-
            The date this entity was created at the platform. This value is
            generated by the service.
          example: 2020-02-03T08:45:51.525Z
          format: date-time
          type: string
        lastModified:
          description: >-
            The date this entity was modified last. This value is generated by
            the service.
          example: 2020-02-03T09:45:51.525Z
          format: date-time
          type: string
        version:
          description: >-
            The version of the document to be used in optimistic locking
            mechanisms.
          example: 42
          format: int64
          type: integer
      required:
        - version
      type: object
      title: VersionedResource
      description: VersionedResource
    WaitForInputItemReturnActionEnum:
      enum:
        - WaitForInputItemReturn
      type: string
      title: WaitForInputItemReturnActionEnum
      description: WaitForInputItemReturnActionEnum
    WaitForInputItemReturnActionParameter:
      additionalProperties: false
      properties:
        itemReturnJobVersion:
          description: Version of the entity to be changed
          minimum: 0
          type: integer
        name:
          $ref: '#/components/schemas/WaitForInputItemReturnActionEnum'
      required:
        - name
        - itemReturnJobVersion
      title: WaitForInputItemReturnActionParameter
      description: WaitForInputItemReturnActionParameter
    WebHookEvent:
      properties:
        event:
          description: The type of the send event
          type: string
        eventId:
          description: The id of the event
          type: string
      required:
        - event
        - eventId
      type: object
      title: WebHookEvent
      description: WebHookEvent
    WeekDay:
      description: A weekday
      enum:
        - MONDAY
        - TUESDAY
        - WEDNESDAY
        - THURSDAY
        - FRIDAY
        - SATURDAY
        - SUNDAY
      type: string
      xml:
        name: WeekDay
      title: WeekDay
    Zone:
      allOf:
        - $ref: '#/components/schemas/ZoneForReplacement'
        - $ref: '#/components/schemas/VersionedResource'
      properties:
        facilityRef:
          description: >-
            The id of the facility reference. The given ID has to be present in
            the system.
          example: Esb20gpHBL94X5NdMp3C
          type: string
        id:
          description: The id of this zone
          type: string
      required:
        - id
        - facilityRef
      type: object
      xml:
        name: Zone
      title: Zone
      description: Zone
    ZoneForCreation:
      allOf:
        - $ref: '#/components/schemas/CustomAttributesResource'
      properties:
        name:
          description: The name of this zone
          type: string
        score:
          description: The score of this zone
          type: number
      required:
        - name
        - score
      type: object
      xml:
        name: ZoneForCreation
      title: ZoneForCreation
      description: ZoneForCreation
    ZoneForReplacement:
      allOf:
        - $ref: '#/components/schemas/ZoneForCreation'
      properties:
        version:
          example: 42
          format: int64
          type: integer
      required:
        - version
      type: object
      xml:
        name: ZoneForReplacement
      title: ZoneForReplacement
      description: ZoneForReplacement
    ZonePaginatedResult:
      properties:
        pageInfo:
          allOf:
            - $ref: '#/components/schemas/PageInfo'
          description: Pagination information for the search result.
        total:
          description: >-
            The total number of items matching the search criteria. Only filled,
            if withTotal is set to true in the search options.
          minimum: 0
          type: number
        zones:
          items:
            $ref: '#/components/schemas/Zone'
          type: array
      required:
        - pageInfo
        - zones
      title: ZonePaginatedResult
      type: object
      description: ZonePaginatedResult
    ZoneSearchPayload:
      properties:
        after:
          deprecated: false
          description: >-
            The cursor to start after. The value is provided in the
            `pageInfo.endCursor` field of the response.
          type: string
        options:
          $ref: '#/components/schemas/SearchOptions'
        query:
          $ref: '#/components/schemas/ZoneSearchQuery'
        size:
          default: 20
          description: Number of items to return.
          maximum: 250
          minimum: 1
          type: number
        sort:
          description: Use for sorting the result.
          items:
            $ref: '#/components/schemas/ZoneSort'
          maxItems: 1
          minItems: 1
          type: array
        startAfterId:
          deprecated: true
          description: >-
            The ID to start after. Deprecated, use `after` with the value
            provided in `pageInfo.endCursor` instead.
          type: string
      required:
        - query
      title: ZoneSearchPayload
      type: object
      description: ZoneSearchPayload
    ZoneSearchQuery:
      properties:
        and:
          items:
            $ref: '#/components/schemas/ZoneSearchQuery'
          type: array
        customAttributes:
          additionalProperties:
            anyOf:
              - $ref: '#/components/schemas/BooleanFilter'
              - $ref: '#/components/schemas/StringEqFilter'
              - $ref: '#/components/schemas/NumberEqFilter'
              - $ref: '#/components/schemas/DateFilter'
          description: Search by custom attributes
          type: object
        facilityRef:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by facilityRef
        id:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by id
        name:
          allOf:
            - $ref: '#/components/schemas/StringFilter'
          description: Search by name
        or:
          items:
            $ref: '#/components/schemas/ZoneSearchQuery'
          type: array
      title: ZoneSearchQuery
      type: object
      description: ZoneSearchQuery
    ZoneSort:
      properties:
        lastModified:
          enum:
            - ASC
            - DESC
          type: string
      title: ZoneSort
      type: object
      description: ZoneSort
    ZoneWebHookEventPayload:
      properties:
        created:
          description: The date when the zone was created
          format: date-time
          type: string
        customAttributes:
          description: >-
            Attributes that can be added to this entity. These attributes
            **cannot** be used within fulfillment processes, but enable you to
            attach custom data from your systems to fulfillmenttools entities.
          nullable: true
          type: object
        facilityRef:
          description: The reference to the facility associated with the zone
          type: string
        id:
          description: The unique identifier of the zone
          type: string
        lastModified:
          description: The date when the zone was last modified
          format: date-time
          type: string
        name:
          description: The name of the zone
          type: string
        score:
          description: The score of the zone
          type: number
        version:
          description: The version of the zone
          type: number
      required:
        - version
        - id
        - facilityRef
        - name
        - score
      title: ZoneWebHookEventPayload
      type: object
      description: ZoneWebHookEventPayload
    ZoneWebHookEventPayloadWebHookEvent:
      allOf:
        - $ref: '#/components/schemas/WebHookEvent'
      properties:
        payload:
          $ref: '#/components/schemas/ZoneWebHookEventPayload'
      required:
        - payload
      title: ZoneWebHookEventPayloadWebHookEvent
      type: object
      description: ZoneWebHookEventPayloadWebHookEvent
  securitySchemes:
    BearerToken:
      type: http
      scheme: bearer
      bearerFormat: JWT
tags:
  - description: DOMS endpoints to create, retrieve, update, and manage customer orders.
    name: Orders (DOMS)
  - description: >-
      DOMS endpoints to define and manage configuration settings related to
      order processing, such as defaults, business rules, and operational
      parameters that influence how orders are handled.
    name: Orders Configuration (DOMS)
  - description: >-
      Endpoints to get information out of the brain of our Distributed Order
      Management System (DOMS).
    name: Routing Plans (DOMS)
  - description: Endpoints for configuring routing plan handling.
    name: Routing Plans Configuration (DOMS)
  - description: Endpoints to configure the routing strategy of the DOMS.
    name: Routing Strategy (DOMS)
  - description: >-
      Endpoints used by shops to get the current available pickup stores and
      available service levels like Same-Day delivery.
    name: Checkout Options (DOMS)
  - description: Endpoints for processing the routing decision logs.
    name: Sourcing Options (DOMS)
  - description: Get operative processes.
    name: Operative Process (Operations)
  - description: These endpoints support the management of the picking process.
    name: Picking (Operations)
  - description: Endpoints to create, update and read pick jobs.
    name: Picking Configuration (Operations)
  - description: Endpoints to create, update and read operative service jobs.
    name: Services (Operations)
  - description: Endpoints to create, update and read operative service jobs configuration.
    name: Services Configuration (Operations)
  - description: Endpoints to manipulate restowing items.
    name: Restowing (Operations)
  - description: Endpoints to manipulate restowing configuration.
    name: Restowing Configuration (Operations)
  - description: Endpoints to manipulate operative containers.
    name: Operative Container (Operations)
  - description: These endpoints facilitate the packing process.
    name: Packing (Operations)
  - description: Endpoints to create, update and read packing configuration.
    name: Packing Configuration (Operations)
  - description: These endpoints manage the handover process.
    name: Handovers (Operations)
  - description: Endpoints to create, update and read handover configuration.
    name: Handovers Configuration (Operations)
  - description: Endpoints to create, update and read shipments and parcels.
    name: Shipments (Operations)
  - description: Endpoints to create, update and read shipping configuration.
    name: Shipments Configuration (Operations)
  - description: Endpoints to create, update and read returns.
    name: Returns (Operations)
  - description: Endpoints to create, update and read returns configuration.
    name: Returns Configuration (Operations)
  - description: Endpoints to operate with stacks.
    name: Stacks (Operations)
  - description: Endpoints to create, update and read carriers.
    name: Carriers (Operations)
  - description: Endpoints to create, update and read carriers configuration.
    name: Carriers Configuration (Operations)
  - description: Endpoints to create, update and read inbound processes and receipts.
    name: Inbound (Inventory)
  - description: Endpoints to create, update and read stow jobs.
    name: Stowing (Inventory)
  - description: Endpoints to configure and get channel availability.
    name: Channel Availability (Inventory)
  - description: Endpoints to create, update and read stocks.
    name: Stocks (Inventory)
  - description: Endpoints to create, update and read stocks configuration.
    name: Stocks Configuration (Inventory)
  - description: These endpoints handle the reservations.
    name: Reservations (Inventory)
  - description: Endpoints to create, update and read storage locations and zones.
    name: Storage Locations (Inventory)
  - description: Endpoints to create, update and read categories.
    name: Categories (Inventory)
  - description: A process groups all entities of an order.
    name: Processes (Core)
  - description: >-
      Endpoints to attach external actions to processes and append logs to
      external actions.
    name: External Actions (Core)
  - description: >-
      Endpoints to read and modify expires, e.g. by extending the provisioning
      time.
    name: Expiries (Core)
  - description: Endpoints to read and modify expires configuration.
    name: Expiries Configuration (Core)
  - description: Endpoints to create, update and read document sets and files.
    name: Document Sets (Core)
  - description: Endpoints to create, update and read custom services.
    name: Custom Services (Core)
  - description: Endpoints to configure the notification center.
    name: Notification Center Configuration (Core)
  - description: >-
      Facilities represent various locations that form part of the fulfillment
      network.
    name: Facilities (Core)
  - description: Facility groups combine one or multiple facilities into logical groups.
    name: Facility Groups (Core)
  - description: Endpoints to create, update and read facility listings.
    name: Listings (Core)
  - description: Endpoints to create, update and read measurement units.
    name: Measurement Units (Core)
  - description: Endpoints to create, update and read subscriptions.
    name: Eventing (Core)
  - description: >-
      These endpoints enable the administration of user accounts, including
      creation, updating, read and deletion of user accounts.
    name: User Management (Core)
  - description: Validate properties accepted by the fulfillmenttools platform.
    name: Validations (Core)
  - description: Endpoints to create, update and read tags.
    name: Tags (Core)
  - description: Endpoints to create, update and read remote configs.
    name: Remote Configs (Core)
  - description: >-
      Endpoints to update and read general configuration of the fulfillmenttools
      platform.
    name: Configurations (Core)
  - description: Auditing helps determine who did what when.
    name: Audits (Core)
  - description: Obtain artifact information provided by platform.
    name: Artifacts (Infrastructure)
  - description: Access to fulfillmenttools platform GraphQL API.
    name: GraphQL (Infrastructure)
  - description: Configure features of the fulfillmenttools platform.
    name: Features (Infrastructure)
  - description: Endpoints to get health status about the fulfillmenttools platform.
    name: Health (Infrastructure)
  - description: Endpoints to configure external IDPs.
    name: OIDC Configuration (Infrastructure)
security:
  - BearerToken: []
